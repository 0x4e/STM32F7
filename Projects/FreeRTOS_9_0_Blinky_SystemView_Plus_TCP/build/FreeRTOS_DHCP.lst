ARM GAS  /tmp/ccja5tMw.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"FreeRTOS_DHCP.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.bss.xDHCPData,"aw",%nobits
  21              		.align	2
  24              	xDHCPData:
  25 0000 00000000 		.space	36
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.text.xIsDHCPSocket,"ax",%progbits
  27              		.align	2
  28              		.global	xIsDHCPSocket
  29              		.thumb
  30              		.thumb_func
  32              	xIsDHCPSocket:
  33              	.LFB29:
  34              		.file 1 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c"
   1:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
   2:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * FreeRTOS+TCP Labs Build 160919 (C) 2016 Real Time Engineers ltd.
   3:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Authors include Hein Tibosch and Richard Barry
   4:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
   5:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *******************************************************************************
   6:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
   7:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***                                                                         ***
   8:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***                                                                         ***
   9:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   FREERTOS+TCP IS STILL IN THE LAB (mainly because the FTP and HTTP     ***
  10:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   demos have a dependency on FreeRTOS+FAT, which is only in the Labs    ***
  11:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   download):                                                            ***
  12:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***                                                                         ***
  13:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   FreeRTOS+TCP is functional and has been used in commercial products   ***
  14:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   for some time.  Be aware however that we are still refining its       ***
  15:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   design, the source code does not yet quite conform to the strict      ***
  16:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   coding and style standards mandated by Real Time Engineers ltd., and  ***
  17:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   the documentation and testing is not necessarily complete.            ***
  18:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***                                                                         ***
  19:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   PLEASE REPORT EXPERIENCES USING THE SUPPORT RESOURCES FOUND ON THE    ***
  20:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   URL: http://www.FreeRTOS.org/contact  Active early adopters may, at   ***
  21:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   the sole discretion of Real Time Engineers Ltd., be offered versions  ***
  22:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***   under a license other than that described below.                      ***
ARM GAS  /tmp/ccja5tMw.s 			page 2


  23:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***                                                                         ***
  24:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***                                                                         ***
  25:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
  26:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *******************************************************************************
  27:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  28:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * FreeRTOS+TCP can be used under two different free open source licenses.  The
  29:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * license that applies is dependent on the processor on which FreeRTOS+TCP is
  30:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * executed, as follows:
  31:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  32:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * If FreeRTOS+TCP is executed on one of the processors listed under the Special
  33:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * License Arrangements heading of the FreeRTOS+TCP license information web
  34:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * page, then it can be used under the terms of the FreeRTOS Open Source
  35:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * License.  If FreeRTOS+TCP is used on any other processor, then it can be used
  36:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * under the terms of the GNU General Public License V2.  Links to the relevant
  37:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * licenses follow:
  38:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  39:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * The FreeRTOS+TCP License Information Page: http://www.FreeRTOS.org/tcp_license
  40:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * The FreeRTOS Open Source License: http://www.FreeRTOS.org/license
  41:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * The GNU General Public License Version 2: http://www.FreeRTOS.org/gpl-2.0.txt
  42:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  43:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * FreeRTOS+TCP is distributed in the hope that it will be useful.  You cannot
  44:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * use FreeRTOS+TCP unless you agree that you use the software 'as is'.
  45:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * FreeRTOS+TCP is provided WITHOUT ANY WARRANTY; without even the implied
  46:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR
  47:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * PURPOSE. Real Time Engineers Ltd. disclaims all conditions and terms, be they
  48:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * implied, expressed, or statutory.
  49:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  50:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * 1 tab == 4 spaces!
  51:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  52:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * http://www.FreeRTOS.org
  53:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * http://www.FreeRTOS.org/plus
  54:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * http://www.FreeRTOS.org/labs
  55:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  *
  56:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
  57:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  58:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Standard includes. */
  59:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include <stdint.h>
  60:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  61:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* FreeRTOS includes. */
  62:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS.h"
  63:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "task.h"
  64:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "semphr.h"
  65:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  66:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* FreeRTOS+TCP includes. */
  67:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_IP.h"
  68:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_Sockets.h"
  69:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_IP_Private.h"
  70:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_UDP_IP.h"
  71:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_TCP_IP.h"
  72:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_DHCP.h"
  73:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "FreeRTOS_ARP.h"
  74:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "NetworkInterface.h"
  75:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "NetworkBufferManagement.h"
  76:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  77:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Exclude the entire file if DHCP is not enabled. */
  78:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if( ipconfigUSE_DHCP != 0 )
  79:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
ARM GAS  /tmp/ccja5tMw.s 			page 3


  80:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if ( ipconfigUSE_DHCP != 0 ) && ( ipconfigNETWORK_MTU < 586u )
  81:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* DHCP must be able to receive an options field of 312 bytes, the fixed
  82:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	part of the DHCP packet is 240 bytes, and the IP/UDP headers take 28 bytes. */
  83:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#error ipconfigNETWORK_MTU needs to be at least 586 to use DHCP
  84:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif
  85:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  86:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Parameter widths in the DHCP packet. */
  87:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpCLIENT_HARDWARE_ADDRESS_LENGTH		16
  88:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpSERVER_HOST_NAME_LENGTH				64
  89:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpBOOT_FILE_NAME_LENGTH 				128
  90:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  91:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Timer parameters */
  92:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #ifndef dhcpINITIAL_DHCP_TX_PERIOD
  93:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpINITIAL_TIMER_PERIOD			( pdMS_TO_TICKS( 250 ) )
  94:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpINITIAL_DHCP_TX_PERIOD			( pdMS_TO_TICKS( 5000 ) )
  95:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif
  96:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
  97:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Codes of interest found in the DHCP options field. */
  98:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpZERO_PAD_OPTION_CODE				( 0u )
  99:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpSUBNET_MASK_OPTION_CODE				( 1u )
 100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpGATEWAY_OPTION_CODE					( 3u )
 101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpDNS_SERVER_OPTIONS_CODE				( 6u )
 102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpDNS_HOSTNAME_OPTIONS_CODE			( 12u )
 103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpREQUEST_IP_ADDRESS_OPTION_CODE		( 50u )
 104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpLEASE_TIME_OPTION_CODE				( 51u )
 105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMESSAGE_TYPE_OPTION_CODE			( 53u )
 106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpSERVER_IP_ADDRESS_OPTION_CODE		( 54u )
 107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpPARAMETER_REQUEST_OPTION_CODE		( 55u )
 108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpCLIENT_IDENTIFIER_OPTION_CODE		( 61u )
 109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* The four DHCP message types of interest. */
 111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMESSAGE_TYPE_DISCOVER				( 1 )
 112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMESSAGE_TYPE_OFFER					( 2 )
 113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMESSAGE_TYPE_REQUEST				( 3 )
 114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMESSAGE_TYPE_ACK					( 5 )
 115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMESSAGE_TYPE_NACK					( 6 )
 116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Offsets into the transmitted DHCP options fields at which various parameters
 118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** are located. */
 119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpCLIENT_IDENTIFIER_OFFSET			( 5 )
 120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpREQUESTED_IP_ADDRESS_OFFSET			( 13 )
 121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpDHCP_SERVER_IP_ADDRESS_OFFSET		( 19 )
 122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Values used in the DHCP packets. */
 124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpREQUEST_OPCODE						( 1 )
 125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpREPLY_OPCODE						( 2 )
 126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpADDRESS_TYPE_ETHERNET				( 1 )
 127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpETHERNET_ADDRESS_LENGTH				( 6 )
 128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* If a lease time is not received, use the default of two days. */
 130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* 48 hours in ticks.  Can not use pdMS_TO_TICKS() as integer overflow can occur. */
 131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpDEFAULT_LEASE_TIME					( ( 48UL * 60UL * 60UL ) * configTICK_RATE_HZ )
 132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Don't allow the lease time to be too short. */
 134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMINIMUM_LEASE_TIME					( pdMS_TO_TICKS( 60000UL ) )	/* 60 seconds in ticks. */
 135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Marks the end of the variable length options field in the DHCP packet. */
ARM GAS  /tmp/ccja5tMw.s 			page 4


 137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpOPTION_END_BYTE 0xffu
 138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Offset into a DHCP message at which the first byte of the options is
 140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** located. */
 141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpFIRST_OPTION_BYTE_OFFSET			( 0xf0 )
 142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* When walking the variable length options field, the following value is used
 144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** to ensure the walk has not gone past the end of the valid options.  2 bytes is
 145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** made up of the length byte, and minimum one byte value. */
 146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #define dhcpMAX_OPTION_LENGTH_OF_INTEREST		( 2L )
 147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Standard DHCP port numbers and magic cookie value. */
 149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if( ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN )
 150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpCLIENT_PORT 0x4400u
 151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpSERVER_PORT 0x4300u
 152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpCOOKIE		0x63538263ul
 153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpBROADCAST	0x0080u
 154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #else
 155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpCLIENT_PORT 0x0044u
 156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpSERVER_PORT 0x0043u
 157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpCOOKIE		0x63825363ul
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define dhcpBROADCAST	0x8000u
 159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif /* ipconfigBYTE_ORDER */
 160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "pack_struct_start.h"
 162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** struct xDHCPMessage
 163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucOpcode;
 165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucAddressType;
 166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucAddressLength;
 167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucHops;
 168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulTransactionID;
 169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint16_t usElapsedTime;
 170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint16_t usFlags;
 171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulClientIPAddress_ciaddr;
 172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulYourIPAddress_yiaddr;
 173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulServerIPAddress_siaddr;
 174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulRelayAgentIPAddress_giaddr;
 175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucClientHardwareAddress[ dhcpCLIENT_HARDWARE_ADDRESS_LENGTH ];
 176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucServerHostName[ dhcpSERVER_HOST_NAME_LENGTH ];
 177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucBootFileName[ dhcpBOOT_FILE_NAME_LENGTH ];
 178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulDHCPCookie;
 179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t ucFirstOptionByte;
 180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #include "pack_struct_end.h"
 182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** typedef struct xDHCPMessage DHCPMessage_t;
 183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* DHCP state machine states. */
 185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** typedef enum
 186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eWaitingSendFirstDiscover = 0,	/* Initial state.  Send a discover the first time it is called, and
 188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eWaitingOffer,					/* Either resend the discover, or, if the offer is forthcoming, send a request.
 189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eWaitingAcknowledge,			/* Either resend the request. */
 190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#if( ipconfigDHCP_FALL_BACK_AUTO_IP != 0 )
 191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		eGetLinkLayerAddress,		/* When DHCP didn't respond, try to obtain a LinkLayer address 168.254.x.x
 192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#endif
 193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eLeasedAddress,					/* Resend the request at the appropriate time to renew the lease. */
ARM GAS  /tmp/ccja5tMw.s 			page 5


 194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eNotUsingLeasedAddress			/* DHCP failed, and a default IP address is being used. */
 195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** } eDHCPState_t;
 196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* Hold information in between steps in the DHCP state machine. */
 198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** struct xDHCP_DATA
 199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulTransactionId;
 201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulOfferedIPAddress;
 202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulDHCPServerAddress;
 203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint32_t ulLeaseTime;
 204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Hold information on the current timer state. */
 205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	TickType_t xDHCPTxTime;
 206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	TickType_t xDHCPTxPeriod;
 207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Try both without and with the broadcast flag */
 208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	BaseType_t xUseBroadcast;
 209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Maintains the DHCP state machine state. */
 210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eDHCPState_t eDHCPState;
 211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* The UDP socket used for all incoming and outgoing DHCP traffic. */
 212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	Socket_t xDHCPSocket;
 213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** };
 214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** typedef struct xDHCP_DATA DHCPData_t;
 216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if( ipconfigDHCP_FALL_BACK_AUTO_IP != 0 )
 218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Define the Link Layer IP address: 169.254.x.x */
 219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define LINK_LAYER_ADDRESS_0	169
 220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define LINK_LAYER_ADDRESS_1	254
 221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Define the netmask used: 255.255.0.0 */
 223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define LINK_LAYER_NETMASK_0	255
 224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define LINK_LAYER_NETMASK_1	255
 225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define LINK_LAYER_NETMASK_2	0
 226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#define LINK_LAYER_NETMASK_3	0
 227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif
 228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Generate a DHCP discover message and send it on the DHCP socket.
 232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvSendDHCPDiscover( void );
 234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Interpret message received on the DHCP socket.
 237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static BaseType_t prvProcessDHCPReplies( BaseType_t xExpectedMessageType );
 239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Generate a DHCP request packet, and send it on the DHCP socket.
 242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvSendDHCPRequest( void );
 244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Prepare to start a DHCP transaction.  This initialises some state variables
 247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * and creates the DHCP socket if necessary.
 248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvInitialiseDHCP( void );
 250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
ARM GAS  /tmp/ccja5tMw.s 			page 6


 251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Creates the part of outgoing DHCP messages that are common to all outgoing
 253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * DHCP messages.
 254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static uint8_t *prvCreatePartDHCPMessage( struct freertos_sockaddr *pxAddress, BaseType_t xOpcode, 
 256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * Create the DHCP socket, if it has not been created already.
 259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvCreateDHCPSocket( void );
 261:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 262:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*
 263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * After DHCP has failed to answer, prepare everything to start searching
 264:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * for (trying-out) LinkLayer IP-addresses, using the random method: Send
 265:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  * a gratuitous ARP request and wait if another device responds to it.
 266:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c ****  */
 267:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if( ipconfigDHCP_FALL_BACK_AUTO_IP != 0 )
 268:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	static void prvPrepareLinkLayerIPLookUp( void );
 269:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif
 270:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 271:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 272:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 273:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /* The next DHCP transaction Id to be used. */
 274:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static DHCPData_t xDHCPData;
 275:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 276:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 277:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 278:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** BaseType_t xIsDHCPSocket( Socket_t xSocket )
 279:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
  35              		.loc 1 279 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 16
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39              		@ link register save eliminated.
  40 0000 80B4     		push	{r7}
  41              	.LCFI0:
  42              		.cfi_def_cfa_offset 4
  43              		.cfi_offset 7, -4
  44 0002 85B0     		sub	sp, sp, #20
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 24
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  50 0006 7860     		str	r0, [r7, #4]
 280:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** BaseType_t xReturn;
 281:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 282:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( xDHCPData.xDHCPSocket == xSocket )
  51              		.loc 1 282 0
  52 0008 084B     		ldr	r3, .L5
  53 000a 1A6A     		ldr	r2, [r3, #32]
  54 000c 7B68     		ldr	r3, [r7, #4]
  55 000e 9A42     		cmp	r2, r3
  56 0010 02D1     		bne	.L2
 283:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 284:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xReturn = pdTRUE;
  57              		.loc 1 284 0
ARM GAS  /tmp/ccja5tMw.s 			page 7


  58 0012 0123     		movs	r3, #1
  59 0014 FB60     		str	r3, [r7, #12]
  60 0016 01E0     		b	.L3
  61              	.L2:
 285:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 286:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	else
 287:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 288:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xReturn = pdFALSE;
  62              		.loc 1 288 0
  63 0018 0023     		movs	r3, #0
  64 001a FB60     		str	r3, [r7, #12]
  65              	.L3:
 289:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 290:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 291:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	return xReturn;
  66              		.loc 1 291 0
  67 001c FB68     		ldr	r3, [r7, #12]
 292:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
  68              		.loc 1 292 0
  69 001e 1846     		mov	r0, r3
  70 0020 1437     		adds	r7, r7, #20
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 4
  73 0022 BD46     		mov	sp, r7
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 13
  76              		@ sp needed
  77 0024 5DF8047B 		ldr	r7, [sp], #4
  78              	.LCFI5:
  79              		.cfi_restore 7
  80              		.cfi_def_cfa_offset 0
  81 0028 7047     		bx	lr
  82              	.L6:
  83 002a 00BF     		.align	2
  84              	.L5:
  85 002c 00000000 		.word	xDHCPData
  86              		.cfi_endproc
  87              	.LFE29:
  89              		.section	.text.vDHCPProcess,"ax",%progbits
  90              		.align	2
  91              		.global	vDHCPProcess
  92              		.thumb
  93              		.thumb_func
  95              	vDHCPProcess:
  96              	.LFB30:
 293:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 294:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 295:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** void vDHCPProcess( BaseType_t xReset )
 296:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
  97              		.loc 1 296 0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 16
 100              		@ frame_needed = 1, uses_anonymous_args = 0
 101 0000 80B5     		push	{r7, lr}
 102              	.LCFI6:
 103              		.cfi_def_cfa_offset 8
 104              		.cfi_offset 7, -8
ARM GAS  /tmp/ccja5tMw.s 			page 8


 105              		.cfi_offset 14, -4
 106 0002 84B0     		sub	sp, sp, #16
 107              	.LCFI7:
 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              	.LCFI8:
 111              		.cfi_def_cfa_register 7
 112 0006 7860     		str	r0, [r7, #4]
 297:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** BaseType_t xGivingUp = pdFALSE;
 113              		.loc 1 297 0
 114 0008 0023     		movs	r3, #0
 115 000a FB60     		str	r3, [r7, #12]
 298:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if( ipconfigUSE_DHCP_HOOK != 0 )
 299:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	eDHCPCallbackAnswer_t eAnswer;
 300:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif	/* ipconfigUSE_DHCP_HOOK */
 301:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 302:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Is DHCP starting over? */
 303:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( xReset != pdFALSE )
 116              		.loc 1 303 0
 117 000c 7B68     		ldr	r3, [r7, #4]
 118 000e 002B     		cmp	r3, #0
 119 0010 02D0     		beq	.L8
 304:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 305:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xDHCPData.eDHCPState = eWaitingSendFirstDiscover;
 120              		.loc 1 305 0
 121 0012 8B4B     		ldr	r3, .L30
 122 0014 0022     		movs	r2, #0
 123 0016 1A77     		strb	r2, [r3, #28]
 124              	.L8:
 306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 307:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	switch( xDHCPData.eDHCPState )
 125              		.loc 1 308 0
 126 0018 894B     		ldr	r3, .L30
 127 001a 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 128 001c 042B     		cmp	r3, #4
 129 001e 00F2EB80 		bhi	.L29
 130 0022 01A2     		adr	r2, .L11
 131 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 132              		.p2align 2
 133              	.L11:
 134 0028 3D000000 		.word	.L10+1
 135 002c 75000000 		.word	.L12+1
 136 0030 03010000 		.word	.L13+1
 137 0034 BF010000 		.word	.L14+1
 138 0038 F1010000 		.word	.L15+1
 139              		.p2align 1
 140              	.L10:
 309:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 310:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		case eWaitingSendFirstDiscover :
 311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Ask the user if a DHCP discovery is required. */
 312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		#if( ipconfigUSE_DHCP_HOOK != 0 )
 313:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			eAnswer = xApplicationDHCPHook( eDHCPPhasePreDiscover, xNetworkAddressing.ulDefaultIPAddress );
 314:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( eAnswer == eDHCPContinue )
 315:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		#endif	/* ipconfigUSE_DHCP_HOOK */
 316:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 317:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Initial state.  Create the DHCP socket, timer, etc. if they
ARM GAS  /tmp/ccja5tMw.s 			page 9


 318:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				have not already been created. */
 319:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				prvInitialiseDHCP();
 141              		.loc 1 319 0
 142 003c FFF7FEFF 		bl	prvInitialiseDHCP
 320:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 321:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* See if prvInitialiseDHCP() has creates a socket. */
 322:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( xDHCPData.xDHCPSocket == NULL )
 143              		.loc 1 322 0
 144 0040 7F4B     		ldr	r3, .L30
 145 0042 1B6A     		ldr	r3, [r3, #32]
 146 0044 002B     		cmp	r3, #0
 147 0046 02D1     		bne	.L16
 323:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 324:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xGivingUp = pdTRUE;
 148              		.loc 1 324 0
 149 0048 0123     		movs	r3, #1
 150 004a FB60     		str	r3, [r7, #12]
 325:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					break;
 151              		.loc 1 325 0
 152 004c D5E0     		b	.L17
 153              	.L16:
 326:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 327:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 328:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				*ipLOCAL_IP_ADDRESS_POINTER = 0UL;
 154              		.loc 1 328 0
 155 004e 7D4B     		ldr	r3, .L30+4
 156 0050 0022     		movs	r2, #0
 157 0052 5A61     		str	r2, [r3, #20]
 329:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 330:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Send the first discover request. */
 331:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( xDHCPData.xDHCPSocket != NULL )
 158              		.loc 1 331 0
 159 0054 7A4B     		ldr	r3, .L30
 160 0056 1B6A     		ldr	r3, [r3, #32]
 161 0058 002B     		cmp	r3, #0
 162 005a 0AD0     		beq	.L18
 332:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 333:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.xDHCPTxTime = xTaskGetTickCount();
 163              		.loc 1 333 0
 164 005c FFF7FEFF 		bl	xTaskGetTickCount
 165 0060 0246     		mov	r2, r0
 166 0062 774B     		ldr	r3, .L30
 167 0064 1A61     		str	r2, [r3, #16]
 334:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					prvSendDHCPDiscover( );
 168              		.loc 1 334 0
 169 0066 FFF7FEFF 		bl	prvSendDHCPDiscover
 335:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.eDHCPState = eWaitingOffer;
 170              		.loc 1 335 0
 171 006a 754B     		ldr	r3, .L30
 172 006c 0122     		movs	r2, #1
 173 006e 1A77     		strb	r2, [r3, #28]
 336:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 337:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 338:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		#if( ipconfigUSE_DHCP_HOOK != 0 )
 339:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			else
 340:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 341:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( eAnswer == eDHCPUseDefaults )
ARM GAS  /tmp/ccja5tMw.s 			page 10


 342:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 343:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					memcpy( &xNetworkAddressing, &xDefaultAddressing, sizeof( xNetworkAddressing ) );
 344:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 345:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 346:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* The user indicates that the DHCP process does not continue. */
 347:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xGivingUp = pdTRUE;
 348:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 349:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		#endif	/* ipconfigUSE_DHCP_HOOK */
 350:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 174              		.loc 1 350 0
 175 0070 C3E0     		b	.L17
 176              	.L18:
 177 0072 C2E0     		b	.L17
 178              	.L12:
 351:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		case eWaitingOffer :
 353:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			xGivingUp = pdFALSE;
 179              		.loc 1 354 0
 180 0074 0023     		movs	r3, #0
 181 0076 FB60     		str	r3, [r7, #12]
 355:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 356:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Look for offers coming in. */
 357:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( prvProcessDHCPReplies( dhcpMESSAGE_TYPE_OFFER ) == pdPASS )
 182              		.loc 1 357 0
 183 0078 0220     		movs	r0, #2
 184 007a FFF7FEFF 		bl	prvProcessDHCPReplies
 185 007e 0346     		mov	r3, r0
 186 0080 012B     		cmp	r3, #1
 187 0082 0ED1     		bne	.L19
 358:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 359:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			#if( ipconfigUSE_DHCP_HOOK != 0 )
 360:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Ask the user if a DHCP request is required. */
 361:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				eAnswer = xApplicationDHCPHook( eDHCPPhasePreRequest, xDHCPData.ulOfferedIPAddress );
 362:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 363:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( eAnswer == eDHCPContinue )
 364:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			#endif	/* ipconfigUSE_DHCP_HOOK */
 365:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 366:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* An offer has been made, the user wants to continue,
 367:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					generate the request. */
 368:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.xDHCPTxTime = xTaskGetTickCount();
 188              		.loc 1 368 0
 189 0084 FFF7FEFF 		bl	xTaskGetTickCount
 190 0088 0246     		mov	r2, r0
 191 008a 6D4B     		ldr	r3, .L30
 192 008c 1A61     		str	r2, [r3, #16]
 369:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.xDHCPTxPeriod = dhcpINITIAL_DHCP_TX_PERIOD;
 193              		.loc 1 369 0
 194 008e 6C4B     		ldr	r3, .L30
 195 0090 41F28832 		movw	r2, #5000
 196 0094 5A61     		str	r2, [r3, #20]
 370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					prvSendDHCPRequest( );
 197              		.loc 1 370 0
 198 0096 FFF7FEFF 		bl	prvSendDHCPRequest
 371:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.eDHCPState = eWaitingAcknowledge;
 199              		.loc 1 371 0
 200 009a 694B     		ldr	r3, .L30
ARM GAS  /tmp/ccja5tMw.s 			page 11


 201 009c 0222     		movs	r2, #2
 202 009e 1A77     		strb	r2, [r3, #28]
 372:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					break;
 203              		.loc 1 372 0
 204 00a0 ABE0     		b	.L17
 205              	.L19:
 373:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 374:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 375:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			#if( ipconfigUSE_DHCP_HOOK != 0 )
 376:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( eAnswer == eDHCPUseDefaults )
 377:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 378:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					memcpy( &xNetworkAddressing, &xDefaultAddressing, sizeof( xNetworkAddressing ) );
 379:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 380:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 381:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* The user indicates that the DHCP process does not continue. */
 382:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xGivingUp = pdTRUE;
 383:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			#endif	/* ipconfigUSE_DHCP_HOOK */
 384:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 385:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			else if( ( xTaskGetTickCount() - xDHCPData.xDHCPTxTime ) > xDHCPData.xDHCPTxPeriod )
 206              		.loc 1 385 0
 207 00a2 FFF7FEFF 		bl	xTaskGetTickCount
 208 00a6 0246     		mov	r2, r0
 209 00a8 654B     		ldr	r3, .L30
 210 00aa 1B69     		ldr	r3, [r3, #16]
 211 00ac D21A     		subs	r2, r2, r3
 212 00ae 644B     		ldr	r3, .L30
 213 00b0 5B69     		ldr	r3, [r3, #20]
 214 00b2 9A42     		cmp	r2, r3
 215 00b4 24D9     		bls	.L20
 386:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 387:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* It is time to send another Discover.  Increase the time
 388:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				period, and if it has not got to the point of giving up - send
 389:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				another discovery. */
 390:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.xDHCPTxPeriod <<= 1;
 216              		.loc 1 390 0
 217 00b6 624B     		ldr	r3, .L30
 218 00b8 5B69     		ldr	r3, [r3, #20]
 219 00ba 5B00     		lsls	r3, r3, #1
 220 00bc 604A     		ldr	r2, .L30
 221 00be 5361     		str	r3, [r2, #20]
 391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 392:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( xDHCPData.xDHCPTxPeriod <= ipconfigMAXIMUM_DISCOVER_TX_PERIOD )
 222              		.loc 1 392 0
 223 00c0 5F4B     		ldr	r3, .L30
 224 00c2 5B69     		ldr	r3, [r3, #20]
 225 00c4 47F23052 		movw	r2, #30000
 226 00c8 9342     		cmp	r3, r2
 227 00ca 16D8     		bhi	.L21
 393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 394:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.ulTransactionId++;
 228              		.loc 1 394 0
 229 00cc 5C4B     		ldr	r3, .L30
 230 00ce 1B68     		ldr	r3, [r3]
 231 00d0 0133     		adds	r3, r3, #1
 232 00d2 5B4A     		ldr	r2, .L30
 233 00d4 1360     		str	r3, [r2]
 395:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.xDHCPTxTime = xTaskGetTickCount();
ARM GAS  /tmp/ccja5tMw.s 			page 12


 234              		.loc 1 395 0
 235 00d6 FFF7FEFF 		bl	xTaskGetTickCount
 236 00da 0246     		mov	r2, r0
 237 00dc 584B     		ldr	r3, .L30
 238 00de 1A61     		str	r2, [r3, #16]
 396:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.xUseBroadcast = !xDHCPData.xUseBroadcast;
 239              		.loc 1 396 0
 240 00e0 574B     		ldr	r3, .L30
 241 00e2 9B69     		ldr	r3, [r3, #24]
 242 00e4 002B     		cmp	r3, #0
 243 00e6 0CBF     		ite	eq
 244 00e8 0123     		moveq	r3, #1
 245 00ea 0023     		movne	r3, #0
 246 00ec DBB2     		uxtb	r3, r3
 247 00ee 1A46     		mov	r2, r3
 248 00f0 534B     		ldr	r3, .L30
 249 00f2 9A61     		str	r2, [r3, #24]
 397:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					prvSendDHCPDiscover( );
 250              		.loc 1 397 0
 251 00f4 FFF7FEFF 		bl	prvSendDHCPDiscover
 252 00f8 02E0     		b	.L20
 253              	.L21:
 398:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					FreeRTOS_debug_printf( ( "vDHCPProcess: timeout %lu ticks\n", xDHCPData.xDHCPTxPeriod ) );
 399:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 400:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				else
 401:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 402:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					FreeRTOS_debug_printf( ( "vDHCPProcess: giving up %lu > %lu ticks\n", xDHCPData.xDHCPTxPeriod,
 403:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 404:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					#if( ipconfigDHCP_FALL_BACK_AUTO_IP != 0 )
 405:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 406:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						/* Only use a fake Ack if the default IP address == 0x00
 407:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						and the link local addressing is used.  Start searching
 408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						a free LinkLayer IP-address.  Next state will be
 409:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						'eGetLinkLayerAddress'. */
 410:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						prvPrepareLinkLayerIPLookUp();
 411:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 412:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						/* Setting an IP address manually so set to not using
 413:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						leased address mode. */
 414:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						xDHCPData.eDHCPState = eGetLinkLayerAddress;
 415:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 416:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					#else
 417:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 418:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						xGivingUp = pdTRUE;
 254              		.loc 1 418 0
 255 00fa 0123     		movs	r3, #1
 256 00fc FB60     		str	r3, [r7, #12]
 419:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 420:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					#endif /* ipconfigDHCP_FALL_BACK_AUTO_IP */
 421:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 422:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 423:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 257              		.loc 1 423 0
 258 00fe 7CE0     		b	.L17
 259              	.L20:
 260 0100 7BE0     		b	.L17
 261              	.L13:
 424:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
ARM GAS  /tmp/ccja5tMw.s 			page 13


 425:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		case eWaitingAcknowledge :
 426:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 427:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Look for acks coming in. */
 428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( prvProcessDHCPReplies( dhcpMESSAGE_TYPE_ACK ) == pdPASS )
 262              		.loc 1 428 0
 263 0102 0520     		movs	r0, #5
 264 0104 FFF7FEFF 		bl	prvProcessDHCPReplies
 265 0108 0346     		mov	r3, r0
 266 010a 012B     		cmp	r3, #1
 267 010c 35D1     		bne	.L22
 429:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 430:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				FreeRTOS_debug_printf( ( "vDHCPProcess: acked %lxip\n", FreeRTOS_ntohl( xDHCPData.ulOfferedIPAd
 431:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 432:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* DHCP completed.  The IP address can now be used, and the
 433:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				timer set to the lease timeout time. */
 434:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				*ipLOCAL_IP_ADDRESS_POINTER = xDHCPData.ulOfferedIPAddress;
 268              		.loc 1 434 0
 269 010e 4C4B     		ldr	r3, .L30
 270 0110 5B68     		ldr	r3, [r3, #4]
 271 0112 4C4A     		ldr	r2, .L30+4
 272 0114 5361     		str	r3, [r2, #20]
 435:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 436:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Setting the 'local' broadcast address, something like
 437:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				'192.168.1.255'. */
 438:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xNetworkAddressing.ulBroadcastAddress = ( xDHCPData.ulOfferedIPAddress & xNetworkAddressing.ulN
 273              		.loc 1 438 0
 274 0116 4A4B     		ldr	r3, .L30
 275 0118 5A68     		ldr	r2, [r3, #4]
 276 011a 4B4B     		ldr	r3, .L30+8
 277 011c 5B68     		ldr	r3, [r3, #4]
 278 011e 1A40     		ands	r2, r2, r3
 279 0120 494B     		ldr	r3, .L30+8
 280 0122 5B68     		ldr	r3, [r3, #4]
 281 0124 DB43     		mvns	r3, r3
 282 0126 1343     		orrs	r3, r3, r2
 283 0128 474A     		ldr	r2, .L30+8
 284 012a 1361     		str	r3, [r2, #16]
 439:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.eDHCPState = eLeasedAddress;
 285              		.loc 1 439 0
 286 012c 444B     		ldr	r3, .L30
 287 012e 0322     		movs	r2, #3
 288 0130 1A77     		strb	r2, [r3, #28]
 440:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 441:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				iptraceDHCP_SUCCEDEED( xDHCPData.ulOfferedIPAddress );
 442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 443:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* DHCP failed, the default configured IP-address will be used
 444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				Now call vIPNetworkUpCalls() to send the network-up event and
 445:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				start the ARP timer. */
 446:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				vIPNetworkUpCalls( );
 289              		.loc 1 446 0
 290 0132 FFF7FEFF 		bl	vIPNetworkUpCalls
 447:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 448:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Close socket to ensure packets don't queue on it. */
 449:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				vSocketClose( xDHCPData.xDHCPSocket );
 291              		.loc 1 449 0
 292 0136 424B     		ldr	r3, .L30
 293 0138 1B6A     		ldr	r3, [r3, #32]
ARM GAS  /tmp/ccja5tMw.s 			page 14


 294 013a 1846     		mov	r0, r3
 295 013c FFF7FEFF 		bl	vSocketClose
 450:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.xDHCPSocket = NULL;
 296              		.loc 1 450 0
 297 0140 3F4B     		ldr	r3, .L30
 298 0142 0022     		movs	r2, #0
 299 0144 1A62     		str	r2, [r3, #32]
 451:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 452:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( xDHCPData.ulLeaseTime == 0UL )
 300              		.loc 1 452 0
 301 0146 3E4B     		ldr	r3, .L30
 302 0148 DB68     		ldr	r3, [r3, #12]
 303 014a 002B     		cmp	r3, #0
 304 014c 03D1     		bne	.L23
 453:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 454:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.ulLeaseTime = dhcpDEFAULT_LEASE_TIME;
 305              		.loc 1 454 0
 306 014e 3C4B     		ldr	r3, .L30
 307 0150 3E4A     		ldr	r2, .L30+12
 308 0152 DA60     		str	r2, [r3, #12]
 309 0154 09E0     		b	.L24
 310              	.L23:
 455:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 456:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				else if( xDHCPData.ulLeaseTime < dhcpMINIMUM_LEASE_TIME )
 311              		.loc 1 456 0
 312 0156 3A4B     		ldr	r3, .L30
 313 0158 DB68     		ldr	r3, [r3, #12]
 314 015a 4EF65F22 		movw	r2, #59999
 315 015e 9342     		cmp	r3, r2
 316 0160 03D8     		bhi	.L24
 457:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 458:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.ulLeaseTime = dhcpMINIMUM_LEASE_TIME;
 317              		.loc 1 458 0
 318 0162 374B     		ldr	r3, .L30
 319 0164 4EF66022 		movw	r2, #60000
 320 0168 DA60     		str	r2, [r3, #12]
 321              	.L24:
 459:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 460:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				else
 461:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 462:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* The lease time is already valid. */
 463:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 464:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 465:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Check for clashes. */
 466:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				vARPSendGratuitous();
 322              		.loc 1 466 0
 323 016a FFF7FEFF 		bl	vARPSendGratuitous
 467:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				vIPReloadDHCPTimer( xDHCPData.ulLeaseTime );
 324              		.loc 1 467 0
 325 016e 344B     		ldr	r3, .L30
 326 0170 DB68     		ldr	r3, [r3, #12]
 327 0172 1846     		mov	r0, r3
 328 0174 FFF7FEFF 		bl	vIPReloadDHCPTimer
 329 0178 20E0     		b	.L25
 330              	.L22:
 468:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 469:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			else
ARM GAS  /tmp/ccja5tMw.s 			page 15


 470:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 471:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Is it time to send another Discover? */
 472:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( ( xTaskGetTickCount() - xDHCPData.xDHCPTxTime ) > xDHCPData.xDHCPTxPeriod )
 331              		.loc 1 472 0
 332 017a FFF7FEFF 		bl	xTaskGetTickCount
 333 017e 0246     		mov	r2, r0
 334 0180 2F4B     		ldr	r3, .L30
 335 0182 1B69     		ldr	r3, [r3, #16]
 336 0184 D21A     		subs	r2, r2, r3
 337 0186 2E4B     		ldr	r3, .L30
 338 0188 5B69     		ldr	r3, [r3, #20]
 339 018a 9A42     		cmp	r2, r3
 340 018c 16D9     		bls	.L25
 473:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 474:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* Increase the time period, and if it has not got to the
 475:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					point of giving up - send another request. */
 476:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.xDHCPTxPeriod <<= 1;
 341              		.loc 1 476 0
 342 018e 2C4B     		ldr	r3, .L30
 343 0190 5B69     		ldr	r3, [r3, #20]
 344 0192 5B00     		lsls	r3, r3, #1
 345 0194 2A4A     		ldr	r2, .L30
 346 0196 5361     		str	r3, [r2, #20]
 477:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 478:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					if( xDHCPData.xDHCPTxPeriod <= ipconfigMAXIMUM_DISCOVER_TX_PERIOD )
 347              		.loc 1 478 0
 348 0198 294B     		ldr	r3, .L30
 349 019a 5B69     		ldr	r3, [r3, #20]
 350 019c 47F23052 		movw	r2, #30000
 351 01a0 9342     		cmp	r3, r2
 352 01a2 07D8     		bhi	.L26
 479:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						xDHCPData.xDHCPTxTime = xTaskGetTickCount();
 353              		.loc 1 480 0
 354 01a4 FFF7FEFF 		bl	xTaskGetTickCount
 355 01a8 0246     		mov	r2, r0
 356 01aa 254B     		ldr	r3, .L30
 357 01ac 1A61     		str	r2, [r3, #16]
 481:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						prvSendDHCPRequest( );
 358              		.loc 1 481 0
 359 01ae FFF7FEFF 		bl	prvSendDHCPRequest
 360 01b2 03E0     		b	.L25
 361              	.L26:
 482:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					else
 484:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 485:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						/* Give up, start again. */
 486:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						xDHCPData.eDHCPState = eWaitingSendFirstDiscover;
 362              		.loc 1 486 0
 363 01b4 224B     		ldr	r3, .L30
 364 01b6 0022     		movs	r2, #0
 365 01b8 1A77     		strb	r2, [r3, #28]
 487:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 488:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 489:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 490:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 366              		.loc 1 490 0
ARM GAS  /tmp/ccja5tMw.s 			page 16


 367 01ba 1EE0     		b	.L17
 368              	.L25:
 369 01bc 1DE0     		b	.L17
 370              	.L14:
 491:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 492:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#if( ipconfigDHCP_FALL_BACK_AUTO_IP != 0 )
 493:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		case eGetLinkLayerAddress:
 494:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( ( xTaskGetTickCount() - xDHCPData.xDHCPTxTime ) > xDHCPData.xDHCPTxPeriod )
 495:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 496:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( xARPHadIPClash == pdFALSE )
 497:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* ARP OK. proceed. */
 499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					iptraceDHCP_SUCCEDEED( xDHCPData.ulOfferedIPAddress );
 500:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 501:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* Auto-IP succeeded, the default configured IP-address will
 502:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					be used.  Now call vIPNetworkUpCalls() to send the
 503:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					network-up event and start the ARP timer. */
 504:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					vIPNetworkUpCalls( );
 505:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.eDHCPState = eNotUsingLeasedAddress;
 506:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 507:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				else
 508:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* ARP clashed - try another IP address. */
 510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					prvPrepareLinkLayerIPLookUp();
 511:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 512:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* Setting an IP address manually so set to not using leased
 513:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					address mode. */
 514:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.eDHCPState = eGetLinkLayerAddress;
 515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 516:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 517:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 518:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#endif	/* ipconfigDHCP_FALL_BACK_AUTO_IP */
 519:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 520:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		case eLeasedAddress :
 521:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 522:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Resend the request at the appropriate time to renew the lease. */
 523:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			prvCreateDHCPSocket();
 371              		.loc 1 523 0
 372 01be FFF7FEFF 		bl	prvCreateDHCPSocket
 524:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 525:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( xDHCPData.xDHCPSocket != NULL )
 373              		.loc 1 525 0
 374 01c2 1F4B     		ldr	r3, .L30
 375 01c4 1B6A     		ldr	r3, [r3, #32]
 376 01c6 002B     		cmp	r3, #0
 377 01c8 11D0     		beq	.L27
 526:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 527:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.xDHCPTxTime = xTaskGetTickCount();
 378              		.loc 1 527 0
 379 01ca FFF7FEFF 		bl	xTaskGetTickCount
 380 01ce 0246     		mov	r2, r0
 381 01d0 1B4B     		ldr	r3, .L30
 382 01d2 1A61     		str	r2, [r3, #16]
 528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.xDHCPTxPeriod = dhcpINITIAL_DHCP_TX_PERIOD;
 383              		.loc 1 528 0
 384 01d4 1A4B     		ldr	r3, .L30
 385 01d6 41F28832 		movw	r2, #5000
ARM GAS  /tmp/ccja5tMw.s 			page 17


 386 01da 5A61     		str	r2, [r3, #20]
 529:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				prvSendDHCPRequest( );
 387              		.loc 1 529 0
 388 01dc FFF7FEFF 		bl	prvSendDHCPRequest
 530:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.eDHCPState = eWaitingAcknowledge;
 389              		.loc 1 530 0
 390 01e0 174B     		ldr	r3, .L30
 391 01e2 0222     		movs	r2, #2
 392 01e4 1A77     		strb	r2, [r3, #28]
 531:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 532:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* From now on, we should be called more often */
 533:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				vIPReloadDHCPTimer( dhcpINITIAL_TIMER_PERIOD );
 393              		.loc 1 533 0
 394 01e6 FA20     		movs	r0, #250
 395 01e8 FFF7FEFF 		bl	vIPReloadDHCPTimer
 534:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 535:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 396              		.loc 1 535 0
 397 01ec 05E0     		b	.L17
 398              	.L27:
 399 01ee 04E0     		b	.L17
 400              	.L15:
 536:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 537:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		case eNotUsingLeasedAddress:
 538:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 539:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			vIPSetDHCPTimerEnableState( pdFALSE );
 401              		.loc 1 539 0
 402 01f0 0020     		movs	r0, #0
 403 01f2 FFF7FEFF 		bl	vIPSetDHCPTimerEnableState
 540:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 404              		.loc 1 540 0
 405 01f6 00E0     		b	.L17
 406              	.L29:
 541:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 542:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		default:
 543:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			break;
 407              		.loc 1 543 0
 408 01f8 00BF     		nop
 409              	.L17:
 544:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 545:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 546:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( xGivingUp != pdFALSE )
 410              		.loc 1 546 0
 411 01fa FB68     		ldr	r3, [r7, #12]
 412 01fc 002B     		cmp	r3, #0
 413 01fe 1BD0     		beq	.L7
 547:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 548:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* xGivingUp became true either because of a time-out, or because
 549:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xApplicationDHCPHook() returned another value than 'eDHCPContinue',
 550:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		meaning that the conversion is canceled from here. */
 551:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 552:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* Revert to static IP address. */
 553:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		taskENTER_CRITICAL();
 414              		.loc 1 553 0
 415 0200 FFF7FEFF 		bl	vPortEnterCritical
 554:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		{
 555:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			*ipLOCAL_IP_ADDRESS_POINTER = xNetworkAddressing.ulDefaultIPAddress;
ARM GAS  /tmp/ccja5tMw.s 			page 18


 416              		.loc 1 555 0
 417 0204 104B     		ldr	r3, .L30+8
 418 0206 1B68     		ldr	r3, [r3]
 419 0208 0E4A     		ldr	r2, .L30+4
 420 020a 5361     		str	r3, [r2, #20]
 556:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			iptraceDHCP_REQUESTS_FAILED_USING_DEFAULT_IP_ADDRESS( xNetworkAddressing.ulDefaultIPAddress );
 557:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		}
 558:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		taskEXIT_CRITICAL();
 421              		.loc 1 558 0
 422 020c FFF7FEFF 		bl	vPortExitCritical
 559:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 560:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xDHCPData.eDHCPState = eNotUsingLeasedAddress;
 423              		.loc 1 560 0
 424 0210 0B4B     		ldr	r3, .L30
 425 0212 0422     		movs	r2, #4
 426 0214 1A77     		strb	r2, [r3, #28]
 561:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		vIPSetDHCPTimerEnableState( pdFALSE );
 427              		.loc 1 561 0
 428 0216 0020     		movs	r0, #0
 429 0218 FFF7FEFF 		bl	vIPSetDHCPTimerEnableState
 562:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 563:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* DHCP failed, the default configured IP-address will be used.  Now
 564:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		call vIPNetworkUpCalls() to send the network-up event and start the ARP
 565:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		timer. */
 566:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		vIPNetworkUpCalls( );
 430              		.loc 1 566 0
 431 021c FFF7FEFF 		bl	vIPNetworkUpCalls
 567:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 568:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* Test if socket was indeed created. */
 569:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		if( xDHCPData.xDHCPSocket != NULL )
 432              		.loc 1 569 0
 433 0220 074B     		ldr	r3, .L30
 434 0222 1B6A     		ldr	r3, [r3, #32]
 435 0224 002B     		cmp	r3, #0
 436 0226 07D0     		beq	.L7
 570:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		{
 571:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Close socket to ensure packets don't queue on it. */
 572:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			vSocketClose( xDHCPData.xDHCPSocket );
 437              		.loc 1 572 0
 438 0228 054B     		ldr	r3, .L30
 439 022a 1B6A     		ldr	r3, [r3, #32]
 440 022c 1846     		mov	r0, r3
 441 022e FFF7FEFF 		bl	vSocketClose
 573:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			xDHCPData.xDHCPSocket = NULL;
 442              		.loc 1 573 0
 443 0232 034B     		ldr	r3, .L30
 444 0234 0022     		movs	r2, #0
 445 0236 1A62     		str	r2, [r3, #32]
 446              	.L7:
 574:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		}
 575:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 576:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 447              		.loc 1 576 0
 448 0238 1037     		adds	r7, r7, #16
 449              	.LCFI9:
 450              		.cfi_def_cfa_offset 8
 451 023a BD46     		mov	sp, r7
ARM GAS  /tmp/ccja5tMw.s 			page 19


 452              	.LCFI10:
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 023c 80BD     		pop	{r7, pc}
 456              	.L31:
 457 023e 00BF     		.align	2
 458              	.L30:
 459 0240 00000000 		.word	xDHCPData
 460 0244 00000000 		.word	xDefaultPartUDPPacketHeader
 461 0248 00000000 		.word	xNetworkAddressing
 462 024c 00B84C0A 		.word	172800000
 463              		.cfi_endproc
 464              	.LFE30:
 466              		.section	.text.prvCreateDHCPSocket,"ax",%progbits
 467              		.align	2
 468              		.thumb
 469              		.thumb_func
 471              	prvCreateDHCPSocket:
 472              	.LFB31:
 577:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 578:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 579:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvCreateDHCPSocket( void )
 580:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 473              		.loc 1 580 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 16
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477 0000 90B5     		push	{r4, r7, lr}
 478              	.LCFI11:
 479              		.cfi_def_cfa_offset 12
 480              		.cfi_offset 4, -12
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 87B0     		sub	sp, sp, #28
 484              	.LCFI12:
 485              		.cfi_def_cfa_offset 40
 486 0004 02AF     		add	r7, sp, #8
 487              	.LCFI13:
 488              		.cfi_def_cfa 7, 32
 581:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** struct freertos_sockaddr xAddress;
 582:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** BaseType_t xReturn;
 583:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** TickType_t xTimeoutTime = ( TickType_t ) 0;
 489              		.loc 1 583 0
 490 0006 0023     		movs	r3, #0
 491 0008 3B60     		str	r3, [r7]
 584:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 585:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Create the socket, if it has not already been created. */
 586:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( xDHCPData.xDHCPSocket == NULL )
 492              		.loc 1 586 0
 493 000a 234B     		ldr	r3, .L36
 494 000c 1B6A     		ldr	r3, [r3, #32]
 495 000e 002B     		cmp	r3, #0
 496 0010 3ED1     		bne	.L32
 587:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 588:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xDHCPData.xDHCPSocket = FreeRTOS_socket( FREERTOS_AF_INET, FREERTOS_SOCK_DGRAM, FREERTOS_IPPROTO_
 497              		.loc 1 588 0
 498 0012 0220     		movs	r0, #2
ARM GAS  /tmp/ccja5tMw.s 			page 20


 499 0014 0221     		movs	r1, #2
 500 0016 1122     		movs	r2, #17
 501 0018 FFF7FEFF 		bl	FreeRTOS_socket
 502 001c 0246     		mov	r2, r0
 503 001e 1E4B     		ldr	r3, .L36
 504 0020 1A62     		str	r2, [r3, #32]
 589:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		if( xDHCPData.xDHCPSocket != FREERTOS_INVALID_SOCKET )
 505              		.loc 1 589 0
 506 0022 1D4B     		ldr	r3, .L36
 507 0024 1B6A     		ldr	r3, [r3, #32]
 508 0026 B3F1FF3F 		cmp	r3, #-1
 509 002a 2ED0     		beq	.L34
 590:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		{
 591:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 592:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Ensure the Rx and Tx timeouts are zero as the DHCP executes in the
 593:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			context of the IP task. */
 594:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			FreeRTOS_setsockopt( xDHCPData.xDHCPSocket, 0, FREERTOS_SO_RCVTIMEO, ( void * ) &xTimeoutTime, s
 510              		.loc 1 594 0
 511 002c 1A4B     		ldr	r3, .L36
 512 002e 1A6A     		ldr	r2, [r3, #32]
 513 0030 3C46     		mov	r4, r7
 514 0032 0423     		movs	r3, #4
 515 0034 0093     		str	r3, [sp]
 516 0036 1046     		mov	r0, r2
 517 0038 0021     		movs	r1, #0
 518 003a 0022     		movs	r2, #0
 519 003c 2346     		mov	r3, r4
 520 003e FFF7FEFF 		bl	FreeRTOS_setsockopt
 595:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			FreeRTOS_setsockopt( xDHCPData.xDHCPSocket, 0, FREERTOS_SO_SNDTIMEO, ( void * ) &xTimeoutTime, s
 521              		.loc 1 595 0
 522 0042 154B     		ldr	r3, .L36
 523 0044 1A6A     		ldr	r2, [r3, #32]
 524 0046 3C46     		mov	r4, r7
 525 0048 0423     		movs	r3, #4
 526 004a 0093     		str	r3, [sp]
 527 004c 1046     		mov	r0, r2
 528 004e 0021     		movs	r1, #0
 529 0050 0122     		movs	r2, #1
 530 0052 2346     		mov	r3, r4
 531 0054 FFF7FEFF 		bl	FreeRTOS_setsockopt
 596:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 597:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Bind to the standard DHCP client port. */
 598:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			xAddress.sin_port = ( uint16_t ) dhcpCLIENT_PORT;
 532              		.loc 1 598 0
 533 0058 4FF48843 		mov	r3, #17408
 534 005c FB80     		strh	r3, [r7, #6]	@ movhi
 599:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			xReturn = vSocketBind( xDHCPData.xDHCPSocket, &xAddress, sizeof( xAddress ), pdFALSE );
 535              		.loc 1 599 0
 536 005e 0E4B     		ldr	r3, .L36
 537 0060 1A6A     		ldr	r2, [r3, #32]
 538 0062 3B1D     		adds	r3, r7, #4
 539 0064 1046     		mov	r0, r2
 540 0066 1946     		mov	r1, r3
 541 0068 0822     		movs	r2, #8
 542 006a 0023     		movs	r3, #0
 543 006c FFF7FEFF 		bl	vSocketBind
 544 0070 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccja5tMw.s 			page 21


 600:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( xReturn != 0 )
 545              		.loc 1 600 0
 546 0072 FB68     		ldr	r3, [r7, #12]
 547 0074 002B     		cmp	r3, #0
 548 0076 0BD0     		beq	.L32
 601:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 602:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Binding failed, close the socket again. */
 603:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				vSocketClose( xDHCPData.xDHCPSocket );
 549              		.loc 1 603 0
 550 0078 074B     		ldr	r3, .L36
 551 007a 1B6A     		ldr	r3, [r3, #32]
 552 007c 1846     		mov	r0, r3
 553 007e FFF7FEFF 		bl	vSocketClose
 604:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				xDHCPData.xDHCPSocket = NULL;
 554              		.loc 1 604 0
 555 0082 054B     		ldr	r3, .L36
 556 0084 0022     		movs	r2, #0
 557 0086 1A62     		str	r2, [r3, #32]
 558 0088 02E0     		b	.L32
 559              	.L34:
 605:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
 606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		}
 607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		else
 608:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		{
 609:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			/* Change to NULL for easier testing. */
 610:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			xDHCPData.xDHCPSocket = NULL;
 560              		.loc 1 610 0
 561 008a 034B     		ldr	r3, .L36
 562 008c 0022     		movs	r2, #0
 563 008e 1A62     		str	r2, [r3, #32]
 564              	.L32:
 611:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		}
 612:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 613:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 565              		.loc 1 613 0
 566 0090 1437     		adds	r7, r7, #20
 567              	.LCFI14:
 568              		.cfi_def_cfa_offset 12
 569 0092 BD46     		mov	sp, r7
 570              	.LCFI15:
 571              		.cfi_def_cfa_register 13
 572              		@ sp needed
 573 0094 90BD     		pop	{r4, r7, pc}
 574              	.L37:
 575 0096 00BF     		.align	2
 576              	.L36:
 577 0098 00000000 		.word	xDHCPData
 578              		.cfi_endproc
 579              	.LFE31:
 581              		.section	.text.prvInitialiseDHCP,"ax",%progbits
 582              		.align	2
 583              		.thumb
 584              		.thumb_func
 586              	prvInitialiseDHCP:
 587              	.LFB32:
 614:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 615:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
ARM GAS  /tmp/ccja5tMw.s 			page 22


 616:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvInitialiseDHCP( void )
 617:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 588              		.loc 1 617 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592 0000 80B5     		push	{r7, lr}
 593              	.LCFI16:
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 00AF     		add	r7, sp, #0
 598              	.LCFI17:
 599              		.cfi_def_cfa_register 7
 618:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Initialise the parameters that will be set by the DHCP process. */
 619:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( xDHCPData.ulTransactionId == 0ul )
 600              		.loc 1 619 0
 601 0004 104B     		ldr	r3, .L41
 602 0006 1B68     		ldr	r3, [r3]
 603 0008 002B     		cmp	r3, #0
 604 000a 05D1     		bne	.L39
 620:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 621:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xDHCPData.ulTransactionId = ipconfigRAND32();
 605              		.loc 1 621 0
 606 000c FFF7FEFF 		bl	uxRand
 607 0010 0246     		mov	r2, r0
 608 0012 0D4B     		ldr	r3, .L41
 609 0014 1A60     		str	r2, [r3]
 610 0016 04E0     		b	.L40
 611              	.L39:
 622:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 623:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	else
 624:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 625:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		xDHCPData.ulTransactionId++;
 612              		.loc 1 625 0
 613 0018 0B4B     		ldr	r3, .L41
 614 001a 1B68     		ldr	r3, [r3]
 615 001c 0133     		adds	r3, r3, #1
 616 001e 0A4A     		ldr	r2, .L41
 617 0020 1360     		str	r3, [r2]
 618              	.L40:
 626:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 627:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 628:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	xDHCPData.xUseBroadcast = 0;
 619              		.loc 1 628 0
 620 0022 094B     		ldr	r3, .L41
 621 0024 0022     		movs	r2, #0
 622 0026 9A61     		str	r2, [r3, #24]
 629:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	xDHCPData.ulOfferedIPAddress = 0UL;
 623              		.loc 1 629 0
 624 0028 074B     		ldr	r3, .L41
 625 002a 0022     		movs	r2, #0
 626 002c 5A60     		str	r2, [r3, #4]
 630:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	xDHCPData.ulDHCPServerAddress = 0UL;
 627              		.loc 1 630 0
 628 002e 064B     		ldr	r3, .L41
 629 0030 0022     		movs	r2, #0
ARM GAS  /tmp/ccja5tMw.s 			page 23


 630 0032 9A60     		str	r2, [r3, #8]
 631:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	xDHCPData.xDHCPTxPeriod = dhcpINITIAL_DHCP_TX_PERIOD;
 631              		.loc 1 631 0
 632 0034 044B     		ldr	r3, .L41
 633 0036 41F28832 		movw	r2, #5000
 634 003a 5A61     		str	r2, [r3, #20]
 632:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 633:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Create the DHCP socket if it has not already been created. */
 634:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	prvCreateDHCPSocket();
 635              		.loc 1 634 0
 636 003c FFF7FEFF 		bl	prvCreateDHCPSocket
 635:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	FreeRTOS_debug_printf( ( "prvInitialiseDHCP: start after %lu ticks\n", dhcpINITIAL_TIMER_PERIOD ) 
 636:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	vIPReloadDHCPTimer( dhcpINITIAL_TIMER_PERIOD );
 637              		.loc 1 636 0
 638 0040 FA20     		movs	r0, #250
 639 0042 FFF7FEFF 		bl	vIPReloadDHCPTimer
 637:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 640              		.loc 1 637 0
 641 0046 80BD     		pop	{r7, pc}
 642              	.L42:
 643              		.align	2
 644              	.L41:
 645 0048 00000000 		.word	xDHCPData
 646              		.cfi_endproc
 647              	.LFE32:
 649              		.section	.rodata
 650              		.align	2
 651              	.LC0:
 652 0000 76444843 		.ascii	"vDHCPProcess: offer %lxip\012\000"
 652      5050726F 
 652      63657373 
 652      3A206F66 
 652      66657220 
 653              		.section	.text.prvProcessDHCPReplies,"ax",%progbits
 654              		.align	2
 655              		.thumb
 656              		.thumb_func
 658              	prvProcessDHCPReplies:
 659              	.LFB33:
 638:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 639:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 640:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static BaseType_t prvProcessDHCPReplies( BaseType_t xExpectedMessageType )
 641:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 660              		.loc 1 641 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 64
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              	.LCFI18:
 666              		.cfi_def_cfa_offset 8
 667              		.cfi_offset 7, -8
 668              		.cfi_offset 14, -4
 669 0002 92B0     		sub	sp, sp, #72
 670              	.LCFI19:
 671              		.cfi_def_cfa_offset 80
 672 0004 02AF     		add	r7, sp, #8
 673              	.LCFI20:
ARM GAS  /tmp/ccja5tMw.s 			page 24


 674              		.cfi_def_cfa 7, 72
 675 0006 7860     		str	r0, [r7, #4]
 642:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint8_t *pucUDPPayload, *pucLastByte;
 643:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** struct freertos_sockaddr xClient;
 644:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint32_t xClientLength = sizeof( xClient );
 676              		.loc 1 644 0
 677 0008 0823     		movs	r3, #8
 678 000a 3B61     		str	r3, [r7, #16]
 645:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** int32_t lBytes;
 646:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** DHCPMessage_t *pxDHCPMessage;
 647:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint8_t *pucByte, ucOptionCode, ucLength;
 648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint32_t ulProcessed, ulParameter;
 649:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** BaseType_t xReturn = pdFALSE;
 679              		.loc 1 649 0
 680 000c 0023     		movs	r3, #0
 681 000e 7B63     		str	r3, [r7, #52]
 650:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** const uint32_t ulMandatoryOptions = 2ul; /* DHCP server address, and the correct DHCP message type 
 682              		.loc 1 650 0
 683 0010 0223     		movs	r3, #2
 684 0012 3B63     		str	r3, [r7, #48]
 651:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 652:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	lBytes = FreeRTOS_recvfrom( xDHCPData.xDHCPSocket, ( void * ) &pucUDPPayload, 0ul, FREERTOS_ZERO_C
 685              		.loc 1 652 0
 686 0014 A94B     		ldr	r3, .L71
 687 0016 196A     		ldr	r1, [r3, #32]
 688 0018 07F11C02 		add	r2, r7, #28
 689 001c 07F11403 		add	r3, r7, #20
 690 0020 0093     		str	r3, [sp]
 691 0022 07F11003 		add	r3, r7, #16
 692 0026 0193     		str	r3, [sp, #4]
 693 0028 0846     		mov	r0, r1
 694 002a 1146     		mov	r1, r2
 695 002c 0022     		movs	r2, #0
 696 002e 0123     		movs	r3, #1
 697 0030 FFF7FEFF 		bl	FreeRTOS_recvfrom
 698 0034 F862     		str	r0, [r7, #44]
 653:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 654:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( lBytes > 0 )
 699              		.loc 1 654 0
 700 0036 FB6A     		ldr	r3, [r7, #44]
 701 0038 002B     		cmp	r3, #0
 702 003a 40F37681 		ble	.L44
 655:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 656:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* Map a DHCP structure onto the received data. */
 657:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pxDHCPMessage = ( DHCPMessage_t * ) ( pucUDPPayload );
 703              		.loc 1 657 0
 704 003e FB69     		ldr	r3, [r7, #28]
 705 0040 BB62     		str	r3, [r7, #40]
 658:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 659:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* Sanity check. */
 660:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		if( ( pxDHCPMessage->ulDHCPCookie == ( uint32_t ) dhcpCOOKIE ) &&
 706              		.loc 1 660 0
 707 0042 BB6A     		ldr	r3, [r7, #40]
 708 0044 D3F8EC30 		ldr	r3, [r3, #236]	@ unaligned
 709 0048 9D4A     		ldr	r2, .L71+4
 710 004a 9342     		cmp	r3, r2
 711 004c 40F06981 		bne	.L45
ARM GAS  /tmp/ccja5tMw.s 			page 25


 661:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			( pxDHCPMessage->ucOpcode == ( uint8_t ) dhcpREPLY_OPCODE ) &&
 712              		.loc 1 661 0 discriminator 1
 713 0050 BB6A     		ldr	r3, [r7, #40]
 714 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 660:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			( pxDHCPMessage->ucOpcode == ( uint8_t ) dhcpREPLY_OPCODE ) &&
 715              		.loc 1 660 0 discriminator 1
 716 0054 022B     		cmp	r3, #2
 717 0056 40F06481 		bne	.L45
 662:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			( pxDHCPMessage->ulTransactionID == FreeRTOS_htonl( xDHCPData.ulTransactionId ) ) )
 718              		.loc 1 662 0
 719 005a BB6A     		ldr	r3, [r7, #40]
 720 005c 5A68     		ldr	r2, [r3, #4]	@ unaligned
 721 005e 974B     		ldr	r3, .L71
 722 0060 1B68     		ldr	r3, [r3]
 723 0062 1906     		lsls	r1, r3, #24
 724 0064 954B     		ldr	r3, .L71
 725 0066 1B68     		ldr	r3, [r3]
 726 0068 03F47F43 		and	r3, r3, #65280
 727 006c 1B02     		lsls	r3, r3, #8
 728 006e 1943     		orrs	r1, r1, r3
 729 0070 924B     		ldr	r3, .L71
 730 0072 1B68     		ldr	r3, [r3]
 731 0074 03F47F03 		and	r3, r3, #16711680
 732 0078 1B0A     		lsrs	r3, r3, #8
 733 007a 1943     		orrs	r1, r1, r3
 734 007c 8F4B     		ldr	r3, .L71
 735 007e 1B68     		ldr	r3, [r3]
 736 0080 1B0E     		lsrs	r3, r3, #24
 737 0082 0B43     		orrs	r3, r3, r1
 661:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			( pxDHCPMessage->ucOpcode == ( uint8_t ) dhcpREPLY_OPCODE ) &&
 738              		.loc 1 661 0
 739 0084 9A42     		cmp	r2, r3
 740 0086 40F04C81 		bne	.L45
 663:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		{
 664:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			if( memcmp( ( void * ) &( pxDHCPMessage->ucClientHardwareAddress ), ( void * ) ipLOCAL_MAC_ADDRE
 741              		.loc 1 664 0
 742 008a BB6A     		ldr	r3, [r7, #40]
 743 008c 1C33     		adds	r3, r3, #28
 744 008e 1846     		mov	r0, r3
 745 0090 8C49     		ldr	r1, .L71+8
 746 0092 0622     		movs	r2, #6
 747 0094 FFF7FEFF 		bl	memcmp
 748 0098 0346     		mov	r3, r0
 749 009a 002B     		cmp	r3, #0
 750 009c 40F04181 		bne	.L45
 665:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			{
 666:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* None of the essential options have been processed yet. */
 667:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				ulProcessed = 0ul;
 751              		.loc 1 667 0
 752 00a0 0023     		movs	r3, #0
 753 00a2 BB63     		str	r3, [r7, #56]
 668:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 669:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Walk through the options until the dhcpOPTION_END_BYTE byte
 670:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				is found, taking care not to walk off the end of the options. */
 671:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				pucByte = &( pxDHCPMessage->ucFirstOptionByte );
 754              		.loc 1 671 0
 755 00a4 BB6A     		ldr	r3, [r7, #40]
ARM GAS  /tmp/ccja5tMw.s 			page 26


 756 00a6 F033     		adds	r3, r3, #240
 757 00a8 FB63     		str	r3, [r7, #60]
 672:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				pucLastByte = &( pucUDPPayload[ lBytes - dhcpMAX_OPTION_LENGTH_OF_INTEREST ] );
 758              		.loc 1 672 0
 759 00aa FA69     		ldr	r2, [r7, #28]
 760 00ac FB6A     		ldr	r3, [r7, #44]
 761 00ae 023B     		subs	r3, r3, #2
 762 00b0 1344     		add	r3, r3, r2
 763 00b2 7B62     		str	r3, [r7, #36]
 673:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 674:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				while( pucByte < pucLastByte )
 764              		.loc 1 674 0
 765 00b4 0FE1     		b	.L46
 766              	.L68:
 675:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 676:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					ucOptionCode = pucByte[ 0 ];
 767              		.loc 1 676 0
 768 00b6 FB6B     		ldr	r3, [r7, #60]
 769 00b8 1B78     		ldrb	r3, [r3]
 770 00ba 87F82330 		strb	r3, [r7, #35]
 677:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					if( ucOptionCode == dhcpOPTION_END_BYTE )
 771              		.loc 1 677 0
 772 00be 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 773 00c2 FF2B     		cmp	r3, #255
 774 00c4 00D1     		bne	.L47
 678:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 679:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						/* Ready, the last byte has been seen. */
 680:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						break;
 775              		.loc 1 680 0
 776 00c6 0BE1     		b	.L48
 777              	.L47:
 681:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 682:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					if( ucOptionCode == dhcpZERO_PAD_OPTION_CODE )
 778              		.loc 1 682 0
 779 00c8 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 780 00cc 002B     		cmp	r3, #0
 781 00ce 03D1     		bne	.L49
 683:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 684:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						/* The value zero is used as a pad byte,
 685:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						it is not followed by a length byte. */
 686:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						pucByte += 1;
 782              		.loc 1 686 0
 783 00d0 FB6B     		ldr	r3, [r7, #60]
 784 00d2 0133     		adds	r3, r3, #1
 785 00d4 FB63     		str	r3, [r7, #60]
 687:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						continue;
 786              		.loc 1 687 0
 787 00d6 FEE0     		b	.L46
 788              	.L49:
 688:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 689:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					ucLength = pucByte[ 1 ];
 789              		.loc 1 689 0
 790 00d8 FB6B     		ldr	r3, [r7, #60]
 791 00da 5B78     		ldrb	r3, [r3, #1]
 792 00dc 87F82230 		strb	r3, [r7, #34]
 690:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					pucByte += 2;
 793              		.loc 1 690 0
ARM GAS  /tmp/ccja5tMw.s 			page 27


 794 00e0 FB6B     		ldr	r3, [r7, #60]
 795 00e2 0233     		adds	r3, r3, #2
 796 00e4 FB63     		str	r3, [r7, #60]
 691:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 692:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* In most cases, a 4-byte network-endian parameter follows,
 693:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					just get it once here and use later */
 694:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					memcpy( ( void * ) &( ulParameter ), ( void * ) pucByte, ( size_t ) sizeof( ulParameter ) );
 797              		.loc 1 694 0
 798 00e6 07F10C03 		add	r3, r7, #12
 799 00ea 1846     		mov	r0, r3
 800 00ec F96B     		ldr	r1, [r7, #60]
 801 00ee 0422     		movs	r2, #4
 802 00f0 FFF7FEFF 		bl	memcpy
 695:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 696:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					switch( ucOptionCode )
 803              		.loc 1 696 0
 804 00f4 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 805 00f8 013B     		subs	r3, r3, #1
 806 00fa 352B     		cmp	r3, #53
 807 00fc 00F2D880 		bhi	.L70
 808 0100 01A2     		adr	r2, .L52
 809 0102 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 810 0106 00BF     		.p2align 2
 811              	.L52:
 812 0108 0D020000 		.word	.L51+1
 813 010c B1020000 		.word	.L70+1
 814 0110 1F020000 		.word	.L53+1
 815 0114 B1020000 		.word	.L70+1
 816 0118 B1020000 		.word	.L70+1
 817 011c 31020000 		.word	.L54+1
 818 0120 B1020000 		.word	.L70+1
 819 0124 B1020000 		.word	.L70+1
 820 0128 B1020000 		.word	.L70+1
 821 012c B1020000 		.word	.L70+1
 822 0130 B1020000 		.word	.L70+1
 823 0134 B1020000 		.word	.L70+1
 824 0138 B1020000 		.word	.L70+1
 825 013c B1020000 		.word	.L70+1
 826 0140 B1020000 		.word	.L70+1
 827 0144 B1020000 		.word	.L70+1
 828 0148 B1020000 		.word	.L70+1
 829 014c B1020000 		.word	.L70+1
 830 0150 B1020000 		.word	.L70+1
 831 0154 B1020000 		.word	.L70+1
 832 0158 B1020000 		.word	.L70+1
 833 015c B1020000 		.word	.L70+1
 834 0160 B1020000 		.word	.L70+1
 835 0164 B1020000 		.word	.L70+1
 836 0168 B1020000 		.word	.L70+1
 837 016c B1020000 		.word	.L70+1
 838 0170 B1020000 		.word	.L70+1
 839 0174 B1020000 		.word	.L70+1
 840 0178 B1020000 		.word	.L70+1
 841 017c B1020000 		.word	.L70+1
 842 0180 B1020000 		.word	.L70+1
 843 0184 B1020000 		.word	.L70+1
 844 0188 B1020000 		.word	.L70+1
ARM GAS  /tmp/ccja5tMw.s 			page 28


 845 018c B1020000 		.word	.L70+1
 846 0190 B1020000 		.word	.L70+1
 847 0194 B1020000 		.word	.L70+1
 848 0198 B1020000 		.word	.L70+1
 849 019c B1020000 		.word	.L70+1
 850 01a0 B1020000 		.word	.L70+1
 851 01a4 B1020000 		.word	.L70+1
 852 01a8 B1020000 		.word	.L70+1
 853 01ac B1020000 		.word	.L70+1
 854 01b0 B1020000 		.word	.L70+1
 855 01b4 B1020000 		.word	.L70+1
 856 01b8 B1020000 		.word	.L70+1
 857 01bc B1020000 		.word	.L70+1
 858 01c0 B1020000 		.word	.L70+1
 859 01c4 B1020000 		.word	.L70+1
 860 01c8 B1020000 		.word	.L70+1
 861 01cc B1020000 		.word	.L70+1
 862 01d0 69020000 		.word	.L55+1
 863 01d4 B1020000 		.word	.L70+1
 864 01d8 E1010000 		.word	.L56+1
 865 01dc 39020000 		.word	.L57+1
 866              		.p2align 1
 867              	.L56:
 697:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 698:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						case dhcpMESSAGE_TYPE_OPTION_CODE	:
 699:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 700:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							if( *pucByte == ( uint8_t ) xExpectedMessageType )
 868              		.loc 1 700 0
 869 01e0 FB6B     		ldr	r3, [r7, #60]
 870 01e2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 871 01e4 7B68     		ldr	r3, [r7, #4]
 872 01e6 DBB2     		uxtb	r3, r3
 873 01e8 9A42     		cmp	r2, r3
 874 01ea 03D1     		bne	.L58
 701:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 702:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* The message type is the message type the
 703:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								state machine is expecting. */
 704:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								ulProcessed++;
 875              		.loc 1 704 0
 876 01ec BB6B     		ldr	r3, [r7, #56]
 877 01ee 0133     		adds	r3, r3, #1
 878 01f0 BB63     		str	r3, [r7, #56]
 879 01f2 0AE0     		b	.L59
 880              	.L58:
 705:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 706:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							else if( *pucByte == ( uint8_t ) dhcpMESSAGE_TYPE_NACK )
 881              		.loc 1 706 0
 882 01f4 FB6B     		ldr	r3, [r7, #60]
 883 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 01f8 062B     		cmp	r3, #6
 885 01fa 06D1     		bne	.L59
 707:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 708:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								if( xExpectedMessageType == ( BaseType_t ) dhcpMESSAGE_TYPE_ACK )
 886              		.loc 1 708 0
 887 01fc 7B68     		ldr	r3, [r7, #4]
 888 01fe 052B     		cmp	r3, #5
 889 0200 03D1     		bne	.L59
ARM GAS  /tmp/ccja5tMw.s 			page 29


 709:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								{
 710:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									/* Start again. */
 711:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									xDHCPData.eDHCPState = eWaitingSendFirstDiscover;
 890              		.loc 1 711 0
 891 0202 2E4B     		ldr	r3, .L71
 892 0204 0022     		movs	r2, #0
 893 0206 1A77     		strb	r2, [r3, #28]
 712:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								}
 713:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 714:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							else
 715:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 716:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* Don't process other message types. */
 717:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 718:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 894              		.loc 1 718 0
 895 0208 53E0     		b	.L61
 896              	.L59:
 897              		.loc 1 718 0 is_stmt 0 discriminator 1
 898 020a 52E0     		b	.L61
 899              	.L51:
 719:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 720:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						case dhcpSUBNET_MASK_OPTION_CODE :
 721:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 722:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							if( ucLength == sizeof( uint32_t ) )
 900              		.loc 1 722 0 is_stmt 1
 901 020c 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 902 0210 042B     		cmp	r3, #4
 903 0212 03D1     		bne	.L62
 723:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 724:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								xNetworkAddressing.ulNetMask = ulParameter;
 904              		.loc 1 724 0
 905 0214 FB68     		ldr	r3, [r7, #12]
 906 0216 2C4A     		ldr	r2, .L71+12
 907 0218 5360     		str	r3, [r2, #4]
 725:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 726:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 908              		.loc 1 726 0
 909 021a 4AE0     		b	.L61
 910              	.L62:
 911 021c 49E0     		b	.L61
 912              	.L53:
 727:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 728:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						case dhcpGATEWAY_OPTION_CODE :
 729:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 730:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							if( ucLength == sizeof( uint32_t ) )
 913              		.loc 1 730 0
 914 021e 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 915 0222 042B     		cmp	r3, #4
 916 0224 03D1     		bne	.L63
 731:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 732:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* ulProcessed is not incremented in this case
 733:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								because the gateway is not essential. */
 734:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								xNetworkAddressing.ulGatewayAddress = ulParameter;
 917              		.loc 1 734 0
 918 0226 FB68     		ldr	r3, [r7, #12]
 919 0228 274A     		ldr	r2, .L71+12
 920 022a 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccja5tMw.s 			page 30


 735:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 736:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 921              		.loc 1 736 0
 922 022c 41E0     		b	.L61
 923              	.L63:
 924 022e 40E0     		b	.L61
 925              	.L54:
 737:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 738:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						case dhcpDNS_SERVER_OPTIONS_CODE :
 739:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 740:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							/* ulProcessed is not incremented in this case
 741:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							because the DNS server is not essential.  Only the
 742:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							first DNS server address is taken. */
 743:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							xNetworkAddressing.ulDNSServerAddress = ulParameter;
 926              		.loc 1 743 0
 927 0230 FB68     		ldr	r3, [r7, #12]
 928 0232 254A     		ldr	r2, .L71+12
 929 0234 D360     		str	r3, [r2, #12]
 744:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 930              		.loc 1 744 0
 931 0236 3CE0     		b	.L61
 932              	.L57:
 745:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 746:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						case dhcpSERVER_IP_ADDRESS_OPTION_CODE :
 747:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 748:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							if( ucLength == sizeof( uint32_t ) )
 933              		.loc 1 748 0
 934 0238 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 935 023c 042B     		cmp	r3, #4
 936 023e 12D1     		bne	.L64
 749:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 750:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								if( xExpectedMessageType == ( BaseType_t ) dhcpMESSAGE_TYPE_OFFER )
 937              		.loc 1 750 0
 938 0240 7B68     		ldr	r3, [r7, #4]
 939 0242 022B     		cmp	r3, #2
 940 0244 06D1     		bne	.L65
 751:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								{
 752:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									/* Offers state the replying server. */
 753:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									ulProcessed++;
 941              		.loc 1 753 0
 942 0246 BB6B     		ldr	r3, [r7, #56]
 943 0248 0133     		adds	r3, r3, #1
 944 024a BB63     		str	r3, [r7, #56]
 754:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									xDHCPData.ulDHCPServerAddress = ulParameter;
 945              		.loc 1 754 0
 946 024c FB68     		ldr	r3, [r7, #12]
 947 024e 1B4A     		ldr	r2, .L71
 948 0250 9360     		str	r3, [r2, #8]
 949 0252 08E0     		b	.L64
 950              	.L65:
 755:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								}
 756:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								else
 757:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								{
 758:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									/* The ack must come from the expected server. */
 759:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									if( xDHCPData.ulDHCPServerAddress == ulParameter )
 951              		.loc 1 759 0
 952 0254 194B     		ldr	r3, .L71
ARM GAS  /tmp/ccja5tMw.s 			page 31


 953 0256 9A68     		ldr	r2, [r3, #8]
 954 0258 FB68     		ldr	r3, [r7, #12]
 955 025a 9A42     		cmp	r2, r3
 956 025c 03D1     		bne	.L64
 760:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									{
 761:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 										ulProcessed++;
 957              		.loc 1 761 0
 958 025e BB6B     		ldr	r3, [r7, #56]
 959 0260 0133     		adds	r3, r3, #1
 960 0262 BB63     		str	r3, [r7, #56]
 762:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 									}
 763:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								}
 764:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 765:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 961              		.loc 1 765 0
 962 0264 25E0     		b	.L61
 963              	.L64:
 964 0266 24E0     		b	.L61
 965              	.L55:
 766:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 767:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						case dhcpLEASE_TIME_OPTION_CODE :
 768:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 769:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							if( ucLength == sizeof( &( xDHCPData.ulLeaseTime ) ) )
 966              		.loc 1 769 0
 967 0268 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 968 026c 042B     		cmp	r3, #4
 969 026e 1ED1     		bne	.L66
 770:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							{
 771:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* ulProcessed is not incremented in this case
 772:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								because the lease time is not essential. */
 773:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* The DHCP parameter is in seconds, convert
 774:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								to host-endian format. */
 775:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								xDHCPData.ulLeaseTime = FreeRTOS_ntohl( ulParameter );
 970              		.loc 1 775 0
 971 0270 FB68     		ldr	r3, [r7, #12]
 972 0272 1A06     		lsls	r2, r3, #24
 973 0274 FB68     		ldr	r3, [r7, #12]
 974 0276 03F47F43 		and	r3, r3, #65280
 975 027a 1B02     		lsls	r3, r3, #8
 976 027c 1A43     		orrs	r2, r2, r3
 977 027e FB68     		ldr	r3, [r7, #12]
 978 0280 03F47F03 		and	r3, r3, #16711680
 979 0284 1B0A     		lsrs	r3, r3, #8
 980 0286 1A43     		orrs	r2, r2, r3
 981 0288 FB68     		ldr	r3, [r7, #12]
 982 028a 1B0E     		lsrs	r3, r3, #24
 983 028c 1343     		orrs	r3, r3, r2
 984 028e 0B4A     		ldr	r2, .L71
 985 0290 D360     		str	r3, [r2, #12]
 776:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 777:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* Divide the lease time by two to ensure a
 778:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								renew request is sent before the lease actually
 779:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								expires. */
 780:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								xDHCPData.ulLeaseTime >>= 1UL;
 986              		.loc 1 780 0
 987 0292 0A4B     		ldr	r3, .L71
 988 0294 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccja5tMw.s 			page 32


 989 0296 5B08     		lsrs	r3, r3, #1
 990 0298 084A     		ldr	r2, .L71
 991 029a D360     		str	r3, [r2, #12]
 781:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 782:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								/* Multiply with configTICK_RATE_HZ to get clock
 783:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								ticks. */
 784:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 								xDHCPData.ulLeaseTime = configTICK_RATE_HZ * xDHCPData.ulLeaseTime;
 992              		.loc 1 784 0
 993 029c 074B     		ldr	r3, .L71
 994 029e DB68     		ldr	r3, [r3, #12]
 995 02a0 4FF47A72 		mov	r2, #1000
 996 02a4 02FB03F3 		mul	r3, r2, r3
 997 02a8 044A     		ldr	r2, .L71
 998 02aa D360     		str	r3, [r2, #12]
 785:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							}
 786:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 999              		.loc 1 786 0
 1000 02ac 01E0     		b	.L61
 1001              	.L66:
 1002 02ae 00E0     		b	.L61
 1003              	.L70:
 787:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 788:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						default :
 789:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 790:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							/* Not interested in this field. */
 791:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 792:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 							break;
 1004              		.loc 1 792 0
 1005 02b0 00BF     		nop
 1006              	.L61:
 793:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 794:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 795:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* Jump over the data to find the next option code. */
 796:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					if( ucLength == 0u )
 1007              		.loc 1 796 0
 1008 02b2 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 1009 02b6 002B     		cmp	r3, #0
 1010 02b8 08D1     		bne	.L67
 797:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 798:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						break;
 1011              		.loc 1 798 0
 1012 02ba 11E0     		b	.L48
 1013              	.L72:
 1014              		.align	2
 1015              	.L71:
 1016 02bc 00000000 		.word	xDHCPData
 1017 02c0 63825363 		.word	1666417251
 1018 02c4 00000000 		.word	xDefaultPartUDPPacketHeader
 1019 02c8 00000000 		.word	xNetworkAddressing
 1020              	.L67:
 799:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 800:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					else
 801:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					{
 802:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 						pucByte += ucLength;
 1021              		.loc 1 802 0
 1022 02cc 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 1023 02d0 FA6B     		ldr	r2, [r7, #60]
ARM GAS  /tmp/ccja5tMw.s 			page 33


 1024 02d2 1344     		add	r3, r3, r2
 1025 02d4 FB63     		str	r3, [r7, #60]
 1026              	.L46:
 674:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 1027              		.loc 1 674 0
 1028 02d6 FA6B     		ldr	r2, [r7, #60]
 1029 02d8 7B6A     		ldr	r3, [r7, #36]
 1030 02da 9A42     		cmp	r2, r3
 1031 02dc FFF4EBAE 		bcc	.L68
 1032              	.L48:
 803:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					}
 804:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 805:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 806:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				/* Were all the mandatory options received? */
 807:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				if( ulProcessed >= ulMandatoryOptions )
 1033              		.loc 1 807 0
 1034 02e0 BA6B     		ldr	r2, [r7, #56]
 1035 02e2 3B6B     		ldr	r3, [r7, #48]
 1036 02e4 9A42     		cmp	r2, r3
 1037 02e6 1CD3     		bcc	.L45
 808:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				{
 809:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					/* HT:endian: used to be network order */
 810:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xDHCPData.ulOfferedIPAddress = pxDHCPMessage->ulYourIPAddress_yiaddr;
 1038              		.loc 1 810 0
 1039 02e8 BB6A     		ldr	r3, [r7, #40]
 1040 02ea 1B69     		ldr	r3, [r3, #16]	@ unaligned
 1041 02ec 114A     		ldr	r2, .L73
 1042 02ee 5360     		str	r3, [r2, #4]
 811:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					FreeRTOS_printf( ( "vDHCPProcess: offer %lxip\n", FreeRTOS_ntohl( xDHCPData.ulOfferedIPAddress
 1043              		.loc 1 811 0
 1044 02f0 104B     		ldr	r3, .L73
 1045 02f2 5B68     		ldr	r3, [r3, #4]
 1046 02f4 1A06     		lsls	r2, r3, #24
 1047 02f6 0F4B     		ldr	r3, .L73
 1048 02f8 5B68     		ldr	r3, [r3, #4]
 1049 02fa 03F47F43 		and	r3, r3, #65280
 1050 02fe 1B02     		lsls	r3, r3, #8
 1051 0300 1A43     		orrs	r2, r2, r3
 1052 0302 0C4B     		ldr	r3, .L73
 1053 0304 5B68     		ldr	r3, [r3, #4]
 1054 0306 03F47F03 		and	r3, r3, #16711680
 1055 030a 1B0A     		lsrs	r3, r3, #8
 1056 030c 1A43     		orrs	r2, r2, r3
 1057 030e 094B     		ldr	r3, .L73
 1058 0310 5B68     		ldr	r3, [r3, #4]
 1059 0312 1B0E     		lsrs	r3, r3, #24
 1060 0314 1343     		orrs	r3, r3, r2
 1061 0316 0848     		ldr	r0, .L73+4
 1062 0318 1946     		mov	r1, r3
 1063 031a FFF7FEFF 		bl	lUDPLoggingPrintf
 812:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 					xReturn = pdPASS;
 1064              		.loc 1 812 0
 1065 031e 0123     		movs	r3, #1
 1066 0320 7B63     		str	r3, [r7, #52]
 1067              	.L45:
 813:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 				}
 814:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 			}
ARM GAS  /tmp/ccja5tMw.s 			page 34


 815:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		}
 816:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 817:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		FreeRTOS_ReleaseUDPPayloadBuffer( ( void * ) pucUDPPayload );
 1068              		.loc 1 817 0
 1069 0322 FB69     		ldr	r3, [r7, #28]
 1070 0324 1846     		mov	r0, r3
 1071 0326 FFF7FEFF 		bl	FreeRTOS_ReleaseUDPPayloadBuffer
 1072              	.L44:
 818:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 819:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 820:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	return xReturn;
 1073              		.loc 1 820 0
 1074 032a 7B6B     		ldr	r3, [r7, #52]
 821:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 1075              		.loc 1 821 0
 1076 032c 1846     		mov	r0, r3
 1077 032e 4037     		adds	r7, r7, #64
 1078              	.LCFI21:
 1079              		.cfi_def_cfa_offset 8
 1080 0330 BD46     		mov	sp, r7
 1081              	.LCFI22:
 1082              		.cfi_def_cfa_register 13
 1083              		@ sp needed
 1084 0332 80BD     		pop	{r7, pc}
 1085              	.L74:
 1086              		.align	2
 1087              	.L73:
 1088 0334 00000000 		.word	xDHCPData
 1089 0338 00000000 		.word	.LC0
 1090              		.cfi_endproc
 1091              	.LFE33:
 1093              		.section	.text.prvCreatePartDHCPMessage,"ax",%progbits
 1094              		.align	2
 1095              		.thumb
 1096              		.thumb_func
 1098              	prvCreatePartDHCPMessage:
 1099              	.LFB34:
 822:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 823:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 824:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static uint8_t *prvCreatePartDHCPMessage( struct freertos_sockaddr *pxAddress, BaseType_t xOpcode, 
 825:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 1100              		.loc 1 825 0
 1101              		.cfi_startproc
 1102              		@ args = 0, pretend = 0, frame = 40
 1103              		@ frame_needed = 1, uses_anonymous_args = 0
 1104 0000 80B5     		push	{r7, lr}
 1105              	.LCFI23:
 1106              		.cfi_def_cfa_offset 8
 1107              		.cfi_offset 7, -8
 1108              		.cfi_offset 14, -4
 1109 0002 8AB0     		sub	sp, sp, #40
 1110              	.LCFI24:
 1111              		.cfi_def_cfa_offset 48
 1112 0004 00AF     		add	r7, sp, #0
 1113              	.LCFI25:
 1114              		.cfi_def_cfa_register 7
 1115 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccja5tMw.s 			page 35


 1116 0008 B960     		str	r1, [r7, #8]
 1117 000a 7A60     		str	r2, [r7, #4]
 1118 000c 3B60     		str	r3, [r7]
 826:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** DHCPMessage_t *pxDHCPMessage;
 827:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** size_t xRequiredBufferSize = sizeof( DHCPMessage_t ) + *pxOptionsArraySize;
 1119              		.loc 1 827 0
 1120 000e 3B68     		ldr	r3, [r7]
 1121 0010 1B68     		ldr	r3, [r3]
 1122 0012 F133     		adds	r3, r3, #241
 1123 0014 7B62     		str	r3, [r7, #36]
 828:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint8_t *pucUDPPayloadBuffer;
 829:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 830:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #if( ipconfigDHCP_REGISTER_HOSTNAME == 1 )
 831:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	const char *pucHostName = pcApplicationHostnameHook ();
 1124              		.loc 1 831 0
 1125 0016 FFF7FEFF 		bl	pcApplicationHostnameHook
 1126 001a 3862     		str	r0, [r7, #32]
 832:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	size_t xNameLength = strlen( pucHostName );
 1127              		.loc 1 832 0
 1128 001c 386A     		ldr	r0, [r7, #32]
 1129 001e FFF7FEFF 		bl	strlen
 1130 0022 F861     		str	r0, [r7, #28]
 833:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	uint8_t *pucPtr;
 834:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 835:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	xRequiredBufferSize += ( 2 + xNameLength );
 1131              		.loc 1 835 0
 1132 0024 FA69     		ldr	r2, [r7, #28]
 1133 0026 7B6A     		ldr	r3, [r7, #36]
 1134 0028 1344     		add	r3, r3, r2
 1135 002a 0233     		adds	r3, r3, #2
 1136 002c 7B62     		str	r3, [r7, #36]
 1137              	.L76:
 836:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** #endif
 837:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 838:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Get a buffer.  This uses a maximum delay, but the delay will be capped
 839:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	to ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS so the return value still needs to
 840:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	be test. */
 841:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	do
 842:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 843:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	} while( ( pucUDPPayloadBuffer = ( uint8_t * ) FreeRTOS_GetUDPPayloadBuffer( xRequiredBufferSize, 
 1138              		.loc 1 843 0 discriminator 1
 1139 002e 786A     		ldr	r0, [r7, #36]
 1140 0030 4FF0FF31 		mov	r1, #-1
 1141 0034 FFF7FEFF 		bl	FreeRTOS_GetUDPPayloadBuffer
 1142 0038 B861     		str	r0, [r7, #24]
 1143 003a BB69     		ldr	r3, [r7, #24]
 1144 003c 002B     		cmp	r3, #0
 1145 003e F6D0     		beq	.L76
 844:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 845:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxDHCPMessage = ( DHCPMessage_t * ) pucUDPPayloadBuffer;
 1146              		.loc 1 845 0
 1147 0040 BB69     		ldr	r3, [r7, #24]
 1148 0042 7B61     		str	r3, [r7, #20]
 846:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 847:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Most fields need to be zero. */
 848:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	memset( ( void * ) pxDHCPMessage, 0x00, sizeof( DHCPMessage_t ) );
 1149              		.loc 1 848 0
ARM GAS  /tmp/ccja5tMw.s 			page 36


 1150 0044 7869     		ldr	r0, [r7, #20]
 1151 0046 0021     		movs	r1, #0
 1152 0048 F122     		movs	r2, #241
 1153 004a FFF7FEFF 		bl	memset
 849:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 850:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Create the message. */
 851:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxDHCPMessage->ucOpcode = ( uint8_t ) xOpcode;
 1154              		.loc 1 851 0
 1155 004e BB68     		ldr	r3, [r7, #8]
 1156 0050 DAB2     		uxtb	r2, r3
 1157 0052 7B69     		ldr	r3, [r7, #20]
 1158 0054 1A70     		strb	r2, [r3]
 852:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxDHCPMessage->ucAddressType = ( uint8_t ) dhcpADDRESS_TYPE_ETHERNET;
 1159              		.loc 1 852 0
 1160 0056 7B69     		ldr	r3, [r7, #20]
 1161 0058 0122     		movs	r2, #1
 1162 005a 5A70     		strb	r2, [r3, #1]
 853:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxDHCPMessage->ucAddressLength = ( uint8_t ) dhcpETHERNET_ADDRESS_LENGTH;
 1163              		.loc 1 853 0
 1164 005c 7B69     		ldr	r3, [r7, #20]
 1165 005e 0622     		movs	r2, #6
 1166 0060 9A70     		strb	r2, [r3, #2]
 854:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 855:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* ulTransactionID doesn't really need a htonl() translation, but when DHCP
 856:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	times out, it is nicer to see an increasing number in this ID field */
 857:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxDHCPMessage->ulTransactionID = FreeRTOS_htonl( xDHCPData.ulTransactionId );
 1167              		.loc 1 857 0
 1168 0062 414B     		ldr	r3, .L80
 1169 0064 1B68     		ldr	r3, [r3]
 1170 0066 1A06     		lsls	r2, r3, #24
 1171 0068 3F4B     		ldr	r3, .L80
 1172 006a 1B68     		ldr	r3, [r3]
 1173 006c 03F47F43 		and	r3, r3, #65280
 1174 0070 1B02     		lsls	r3, r3, #8
 1175 0072 1A43     		orrs	r2, r2, r3
 1176 0074 3C4B     		ldr	r3, .L80
 1177 0076 1B68     		ldr	r3, [r3]
 1178 0078 03F47F03 		and	r3, r3, #16711680
 1179 007c 1B0A     		lsrs	r3, r3, #8
 1180 007e 1A43     		orrs	r2, r2, r3
 1181 0080 394B     		ldr	r3, .L80
 1182 0082 1B68     		ldr	r3, [r3]
 1183 0084 1B0E     		lsrs	r3, r3, #24
 1184 0086 1A43     		orrs	r2, r2, r3
 1185 0088 7B69     		ldr	r3, [r7, #20]
 1186 008a 5A60     		str	r2, [r3, #4]	@ unaligned
 858:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxDHCPMessage->ulDHCPCookie = ( uint32_t ) dhcpCOOKIE;
 1187              		.loc 1 858 0
 1188 008c 7B69     		ldr	r3, [r7, #20]
 1189 008e 0022     		movs	r2, #0
 1190 0090 42F06302 		orr	r2, r2, #99
 1191 0094 83F8EC20 		strb	r2, [r3, #236]
 1192 0098 0022     		movs	r2, #0
 1193 009a 62F07D02 		orn	r2, r2, #125
 1194 009e 83F8ED20 		strb	r2, [r3, #237]
 1195 00a2 0022     		movs	r2, #0
 1196 00a4 42F05302 		orr	r2, r2, #83
ARM GAS  /tmp/ccja5tMw.s 			page 37


 1197 00a8 83F8EE20 		strb	r2, [r3, #238]
 1198 00ac 0022     		movs	r2, #0
 1199 00ae 42F06302 		orr	r2, r2, #99
 1200 00b2 83F8EF20 		strb	r2, [r3, #239]
 859:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( xDHCPData.xUseBroadcast != pdFALSE )
 1201              		.loc 1 859 0
 1202 00b6 2C4B     		ldr	r3, .L80
 1203 00b8 9B69     		ldr	r3, [r3, #24]
 1204 00ba 002B     		cmp	r3, #0
 1205 00bc 07D0     		beq	.L77
 860:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 861:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pxDHCPMessage->usFlags = ( uint16_t ) dhcpBROADCAST;
 1206              		.loc 1 861 0
 1207 00be 7B69     		ldr	r3, [r7, #20]
 1208 00c0 0022     		movs	r2, #0
 1209 00c2 62F07F02 		orn	r2, r2, #127
 1210 00c6 9A72     		strb	r2, [r3, #10]
 1211 00c8 0022     		movs	r2, #0
 1212 00ca DA72     		strb	r2, [r3, #11]
 1213 00cc 04E0     		b	.L78
 1214              	.L77:
 862:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 863:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	else
 864:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 865:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pxDHCPMessage->usFlags = 0u;
 1215              		.loc 1 865 0
 1216 00ce 7B69     		ldr	r3, [r7, #20]
 1217 00d0 0022     		movs	r2, #0
 1218 00d2 9A72     		strb	r2, [r3, #10]
 1219 00d4 0022     		movs	r2, #0
 1220 00d6 DA72     		strb	r2, [r3, #11]
 1221              	.L78:
 866:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 867:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 868:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	memcpy( ( void * ) &( pxDHCPMessage->ucClientHardwareAddress[ 0 ] ), ( void * ) ipLOCAL_MAC_ADDRES
 1222              		.loc 1 868 0
 1223 00d8 7B69     		ldr	r3, [r7, #20]
 1224 00da 1C33     		adds	r3, r3, #28
 1225 00dc 1846     		mov	r0, r3
 1226 00de 2349     		ldr	r1, .L80+4
 1227 00e0 0622     		movs	r2, #6
 1228 00e2 FFF7FEFF 		bl	memcpy
 869:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 870:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Copy in the const part of the options options. */
 871:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	memcpy( ( void * ) &( pucUDPPayloadBuffer[ dhcpFIRST_OPTION_BYTE_OFFSET ] ), ( void * ) pucOptions
 1229              		.loc 1 871 0
 1230 00e6 BB69     		ldr	r3, [r7, #24]
 1231 00e8 03F1F002 		add	r2, r3, #240
 1232 00ec 3B68     		ldr	r3, [r7]
 1233 00ee 1B68     		ldr	r3, [r3]
 1234 00f0 1046     		mov	r0, r2
 1235 00f2 7968     		ldr	r1, [r7, #4]
 1236 00f4 1A46     		mov	r2, r3
 1237 00f6 FFF7FEFF 		bl	memcpy
 872:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 873:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#if( ipconfigDHCP_REGISTER_HOSTNAME == 1 )
 874:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
ARM GAS  /tmp/ccja5tMw.s 			page 38


 875:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* With this option, the hostname can be registered as well which makes
 876:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		it easier to lookup a device in a router's list of DHCP clients. */
 877:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 878:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* Point to where the OPTION_END was stored to add data. */
 879:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pucPtr = &( pucUDPPayloadBuffer[ dhcpFIRST_OPTION_BYTE_OFFSET + ( *pxOptionsArraySize - 1 ) ] );
 1238              		.loc 1 879 0
 1239 00fa 3B68     		ldr	r3, [r7]
 1240 00fc 1B68     		ldr	r3, [r3]
 1241 00fe EF33     		adds	r3, r3, #239
 1242 0100 BA69     		ldr	r2, [r7, #24]
 1243 0102 1344     		add	r3, r3, r2
 1244 0104 3B61     		str	r3, [r7, #16]
 880:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pucPtr[ 0 ] = dhcpDNS_HOSTNAME_OPTIONS_CODE;
 1245              		.loc 1 880 0
 1246 0106 3B69     		ldr	r3, [r7, #16]
 1247 0108 0C22     		movs	r2, #12
 1248 010a 1A70     		strb	r2, [r3]
 881:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pucPtr[ 1 ] = ( uint8_t ) xNameLength;
 1249              		.loc 1 881 0
 1250 010c 3B69     		ldr	r3, [r7, #16]
 1251 010e 0133     		adds	r3, r3, #1
 1252 0110 FA69     		ldr	r2, [r7, #28]
 1253 0112 D2B2     		uxtb	r2, r2
 1254 0114 1A70     		strb	r2, [r3]
 882:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		memcpy( ( void *) ( pucPtr + 2 ), pucHostName, xNameLength );
 1255              		.loc 1 882 0
 1256 0116 3B69     		ldr	r3, [r7, #16]
 1257 0118 0233     		adds	r3, r3, #2
 1258 011a 1846     		mov	r0, r3
 1259 011c 396A     		ldr	r1, [r7, #32]
 1260 011e FA69     		ldr	r2, [r7, #28]
 1261 0120 FFF7FEFF 		bl	memcpy
 883:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		pucPtr[ 2 + xNameLength ] = dhcpOPTION_END_BYTE;
 1262              		.loc 1 883 0
 1263 0124 FB69     		ldr	r3, [r7, #28]
 1264 0126 0233     		adds	r3, r3, #2
 1265 0128 3A69     		ldr	r2, [r7, #16]
 1266 012a 1344     		add	r3, r3, r2
 1267 012c FF22     		movs	r2, #255
 1268 012e 1A70     		strb	r2, [r3]
 884:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		*pxOptionsArraySize += ( 2 + xNameLength );
 1269              		.loc 1 884 0
 1270 0130 3B68     		ldr	r3, [r7]
 1271 0132 1A68     		ldr	r2, [r3]
 1272 0134 FB69     		ldr	r3, [r7, #28]
 1273 0136 1344     		add	r3, r3, r2
 1274 0138 9A1C     		adds	r2, r3, #2
 1275 013a 3B68     		ldr	r3, [r7]
 1276 013c 1A60     		str	r2, [r3]
 885:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 886:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	#endif
 887:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 888:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Map in the client identifier. */
 889:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	memcpy( ( void * ) &( pucUDPPayloadBuffer[ dhcpFIRST_OPTION_BYTE_OFFSET + dhcpCLIENT_IDENTIFIER_OF
 1277              		.loc 1 889 0
 1278 013e BB69     		ldr	r3, [r7, #24]
 1279 0140 F533     		adds	r3, r3, #245
ARM GAS  /tmp/ccja5tMw.s 			page 39


 1280 0142 1846     		mov	r0, r3
 1281 0144 0949     		ldr	r1, .L80+4
 1282 0146 0622     		movs	r2, #6
 1283 0148 FFF7FEFF 		bl	memcpy
 890:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		( void * ) ipLOCAL_MAC_ADDRESS, sizeof( MACAddress_t ) );
 891:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 892:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Set the addressing. */
 893:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxAddress->sin_addr = ipBROADCAST_IP_ADDRESS;
 1284              		.loc 1 893 0
 1285 014c FB68     		ldr	r3, [r7, #12]
 1286 014e 4FF0FF32 		mov	r2, #-1
 1287 0152 5A60     		str	r2, [r3, #4]
 894:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pxAddress->sin_port = ( uint16_t ) dhcpSERVER_PORT;
 1288              		.loc 1 894 0
 1289 0154 FB68     		ldr	r3, [r7, #12]
 1290 0156 4FF48642 		mov	r2, #17152
 1291 015a 5A80     		strh	r2, [r3, #2]	@ movhi
 895:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 896:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	return pucUDPPayloadBuffer;
 1292              		.loc 1 896 0
 1293 015c BB69     		ldr	r3, [r7, #24]
 897:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 1294              		.loc 1 897 0
 1295 015e 1846     		mov	r0, r3
 1296 0160 2837     		adds	r7, r7, #40
 1297              	.LCFI26:
 1298              		.cfi_def_cfa_offset 8
 1299 0162 BD46     		mov	sp, r7
 1300              	.LCFI27:
 1301              		.cfi_def_cfa_register 13
 1302              		@ sp needed
 1303 0164 80BD     		pop	{r7, pc}
 1304              	.L81:
 1305 0166 00BF     		.align	2
 1306              	.L80:
 1307 0168 00000000 		.word	xDHCPData
 1308 016c 00000000 		.word	xDefaultPartUDPPacketHeader
 1309              		.cfi_endproc
 1310              	.LFE34:
 1312              		.section	.text.prvSendDHCPRequest,"ax",%progbits
 1313              		.align	2
 1314              		.thumb
 1315              		.thumb_func
 1317              	prvSendDHCPRequest:
 1318              	.LFB35:
 898:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 899:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 900:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvSendDHCPRequest( void )
 901:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 1319              		.loc 1 901 0
 1320              		.cfi_startproc
 1321              		@ args = 0, pretend = 0, frame = 16
 1322              		@ frame_needed = 1, uses_anonymous_args = 0
 1323 0000 80B5     		push	{r7, lr}
 1324              	.LCFI28:
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 7, -8
ARM GAS  /tmp/ccja5tMw.s 			page 40


 1327              		.cfi_offset 14, -4
 1328 0002 86B0     		sub	sp, sp, #24
 1329              	.LCFI29:
 1330              		.cfi_def_cfa_offset 32
 1331 0004 02AF     		add	r7, sp, #8
 1332              	.LCFI30:
 1333              		.cfi_def_cfa 7, 24
 902:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint8_t *pucUDPPayloadBuffer;
 903:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** struct freertos_sockaddr xAddress;
 904:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static const uint8_t ucDHCPRequestOptions[] =
 905:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 906:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Do not change the ordering without also changing
 907:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpCLIENT_IDENTIFIER_OFFSET, dhcpREQUESTED_IP_ADDRESS_OFFSET and
 908:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpDHCP_SERVER_IP_ADDRESS_OFFSET. */
 909:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpMESSAGE_TYPE_OPTION_CODE, 1, dhcpMESSAGE_TYPE_REQUEST,		/* Message type option. */
 910:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpCLIENT_IDENTIFIER_OPTION_CODE, 6, 0, 0, 0, 0, 0, 0,			/* Client identifier. */
 911:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpREQUEST_IP_ADDRESS_OPTION_CODE, 4, 0, 0, 0, 0,				/* The IP address being requested. */
 912:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpSERVER_IP_ADDRESS_OPTION_CODE, 4, 0, 0, 0, 0,				/* The IP address of the DHCP server. */
 913:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpOPTION_END_BYTE
 914:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** };
 915:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** size_t xOptionsLength = sizeof( ucDHCPRequestOptions );
 1334              		.loc 1 915 0
 1335 0006 1823     		movs	r3, #24
 1336 0008 3B60     		str	r3, [r7]
 916:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 917:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pucUDPPayloadBuffer = prvCreatePartDHCPMessage( &xAddress, dhcpREQUEST_OPCODE, ucDHCPRequestOption
 1337              		.loc 1 917 0
 1338 000a 3A1D     		adds	r2, r7, #4
 1339 000c 3B46     		mov	r3, r7
 1340 000e 1046     		mov	r0, r2
 1341 0010 0121     		movs	r1, #1
 1342 0012 154A     		ldr	r2, .L84
 1343 0014 FFF7FEFF 		bl	prvCreatePartDHCPMessage
 1344 0018 F860     		str	r0, [r7, #12]
 918:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 919:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Copy in the IP address being requested. */
 920:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	memcpy( ( void * ) &( pucUDPPayloadBuffer[ dhcpFIRST_OPTION_BYTE_OFFSET + dhcpREQUESTED_IP_ADDRESS
 1345              		.loc 1 920 0
 1346 001a FB68     		ldr	r3, [r7, #12]
 1347 001c FD33     		adds	r3, r3, #253
 1348 001e 1846     		mov	r0, r3
 1349 0020 1249     		ldr	r1, .L84+4
 1350 0022 0422     		movs	r2, #4
 1351 0024 FFF7FEFF 		bl	memcpy
 921:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		( void * ) &( xDHCPData.ulOfferedIPAddress ), sizeof( xDHCPData.ulOfferedIPAddress ) );
 922:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 923:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Copy in the address of the DHCP server being used. */
 924:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	memcpy( ( void * ) &( pucUDPPayloadBuffer[ dhcpFIRST_OPTION_BYTE_OFFSET + dhcpDHCP_SERVER_IP_ADDRE
 1352              		.loc 1 924 0
 1353 0028 FB68     		ldr	r3, [r7, #12]
 1354 002a 03F20313 		addw	r3, r3, #259
 1355 002e 1846     		mov	r0, r3
 1356 0030 0F49     		ldr	r1, .L84+8
 1357 0032 0422     		movs	r2, #4
 1358 0034 FFF7FEFF 		bl	memcpy
 925:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		( void * ) &( xDHCPData.ulDHCPServerAddress ), sizeof( xDHCPData.ulDHCPServerAddress ) );
 926:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
ARM GAS  /tmp/ccja5tMw.s 			page 41


 927:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	FreeRTOS_debug_printf( ( "vDHCPProcess: reply %lxip\n", FreeRTOS_ntohl( xDHCPData.ulOfferedIPAddre
 928:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	iptraceSENDING_DHCP_REQUEST();
 929:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 930:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( FreeRTOS_sendto( xDHCPData.xDHCPSocket, pucUDPPayloadBuffer, ( sizeof( DHCPMessage_t ) + xOpti
 1359              		.loc 1 930 0
 1360 0038 0E4B     		ldr	r3, .L84+12
 1361 003a 196A     		ldr	r1, [r3, #32]
 1362 003c 3B68     		ldr	r3, [r7]
 1363 003e 03F1F102 		add	r2, r3, #241
 1364 0042 3B1D     		adds	r3, r7, #4
 1365 0044 0093     		str	r3, [sp]
 1366 0046 0823     		movs	r3, #8
 1367 0048 0193     		str	r3, [sp, #4]
 1368 004a 0846     		mov	r0, r1
 1369 004c F968     		ldr	r1, [r7, #12]
 1370 004e 0123     		movs	r3, #1
 1371 0050 FFF7FEFF 		bl	FreeRTOS_sendto
 1372 0054 0346     		mov	r3, r0
 1373 0056 002B     		cmp	r3, #0
 1374 0058 02D1     		bne	.L82
 931:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 932:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* The packet was not successfully queued for sending and must be
 933:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		returned to the stack. */
 934:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		FreeRTOS_ReleaseUDPPayloadBuffer( pucUDPPayloadBuffer );
 1375              		.loc 1 934 0
 1376 005a F868     		ldr	r0, [r7, #12]
 1377 005c FFF7FEFF 		bl	FreeRTOS_ReleaseUDPPayloadBuffer
 1378              	.L82:
 935:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 936:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 1379              		.loc 1 936 0
 1380 0060 1037     		adds	r7, r7, #16
 1381              	.LCFI31:
 1382              		.cfi_def_cfa_offset 8
 1383 0062 BD46     		mov	sp, r7
 1384              	.LCFI32:
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 0064 80BD     		pop	{r7, pc}
 1388              	.L85:
 1389 0066 00BF     		.align	2
 1390              	.L84:
 1391 0068 00000000 		.word	ucDHCPRequestOptions.6456
 1392 006c 04000000 		.word	xDHCPData+4
 1393 0070 08000000 		.word	xDHCPData+8
 1394 0074 00000000 		.word	xDHCPData
 1395              		.cfi_endproc
 1396              	.LFE35:
 1398              		.section	.text.prvSendDHCPDiscover,"ax",%progbits
 1399              		.align	2
 1400              		.thumb
 1401              		.thumb_func
 1403              	prvSendDHCPDiscover:
 1404              	.LFB36:
 937:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** /*-----------------------------------------------------------*/
 938:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 939:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static void prvSendDHCPDiscover( void )
ARM GAS  /tmp/ccja5tMw.s 			page 42


 940:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 1405              		.loc 1 940 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 16
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              	.LCFI33:
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 86B0     		sub	sp, sp, #24
 1415              	.LCFI34:
 1416              		.cfi_def_cfa_offset 32
 1417 0004 02AF     		add	r7, sp, #8
 1418              	.LCFI35:
 1419              		.cfi_def_cfa 7, 24
 941:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** uint8_t *pucUDPPayloadBuffer;
 942:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** struct freertos_sockaddr xAddress;
 943:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** static const uint8_t ucDHCPDiscoverOptions[] =
 944:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** {
 945:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	/* Do not change the ordering without also changing dhcpCLIENT_IDENTIFIER_OFFSET. */
 946:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpMESSAGE_TYPE_OPTION_CODE, 1, dhcpMESSAGE_TYPE_DISCOVER,					/* Message type option. */
 947:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpCLIENT_IDENTIFIER_OPTION_CODE, 6, 0, 0, 0, 0, 0, 0,						/* Client identifier. */
 948:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpPARAMETER_REQUEST_OPTION_CODE, 3, dhcpSUBNET_MASK_OPTION_CODE, dhcpGATEWAY_OPTION_CODE, dhcpDN
 949:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	dhcpOPTION_END_BYTE
 950:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** };
 951:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** size_t xOptionsLength = sizeof( ucDHCPDiscoverOptions );
 1420              		.loc 1 951 0
 1421 0006 1123     		movs	r3, #17
 1422 0008 3B60     		str	r3, [r7]
 952:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 953:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	pucUDPPayloadBuffer = prvCreatePartDHCPMessage( &xAddress, dhcpREQUEST_OPCODE, ucDHCPDiscoverOptio
 1423              		.loc 1 953 0
 1424 000a 3A1D     		adds	r2, r7, #4
 1425 000c 3B46     		mov	r3, r7
 1426 000e 1046     		mov	r0, r2
 1427 0010 0121     		movs	r1, #1
 1428 0012 0D4A     		ldr	r2, .L88
 1429 0014 FFF7FEFF 		bl	prvCreatePartDHCPMessage
 1430 0018 F860     		str	r0, [r7, #12]
 954:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 955:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	FreeRTOS_debug_printf( ( "vDHCPProcess: discover\n" ) );
 956:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	iptraceSENDING_DHCP_DISCOVER();
 957:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 
 958:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	if( FreeRTOS_sendto( xDHCPData.xDHCPSocket, pucUDPPayloadBuffer, ( sizeof( DHCPMessage_t ) + xOpti
 1431              		.loc 1 958 0
 1432 001a 0C4B     		ldr	r3, .L88+4
 1433 001c 196A     		ldr	r1, [r3, #32]
 1434 001e 3B68     		ldr	r3, [r7]
 1435 0020 03F1F102 		add	r2, r3, #241
 1436 0024 3B1D     		adds	r3, r7, #4
 1437 0026 0093     		str	r3, [sp]
 1438 0028 0823     		movs	r3, #8
 1439 002a 0193     		str	r3, [sp, #4]
 1440 002c 0846     		mov	r0, r1
 1441 002e F968     		ldr	r1, [r7, #12]
 1442 0030 0123     		movs	r3, #1
ARM GAS  /tmp/ccja5tMw.s 			page 43


 1443 0032 FFF7FEFF 		bl	FreeRTOS_sendto
 1444 0036 0346     		mov	r3, r0
 1445 0038 002B     		cmp	r3, #0
 1446 003a 02D1     		bne	.L86
 959:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	{
 960:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		/* The packet was not successfully queued for sending and must be
 961:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		returned to the stack. */
 962:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 		FreeRTOS_ReleaseUDPPayloadBuffer( pucUDPPayloadBuffer );
 1447              		.loc 1 962 0
 1448 003c F868     		ldr	r0, [r7, #12]
 1449 003e FFF7FEFF 		bl	FreeRTOS_ReleaseUDPPayloadBuffer
 1450              	.L86:
 963:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** 	}
 964:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_DHCP.c **** }
 1451              		.loc 1 964 0
 1452 0042 1037     		adds	r7, r7, #16
 1453              	.LCFI36:
 1454              		.cfi_def_cfa_offset 8
 1455 0044 BD46     		mov	sp, r7
 1456              	.LCFI37:
 1457              		.cfi_def_cfa_register 13
 1458              		@ sp needed
 1459 0046 80BD     		pop	{r7, pc}
 1460              	.L89:
 1461              		.align	2
 1462              	.L88:
 1463 0048 00000000 		.word	ucDHCPDiscoverOptions.6463
 1464 004c 00000000 		.word	xDHCPData
 1465              		.cfi_endproc
 1466              	.LFE36:
 1468              		.section	.rodata.ucDHCPRequestOptions.6456,"a",%progbits
 1469              		.align	2
 1472              	ucDHCPRequestOptions.6456:
 1473 0000 35       		.byte	53
 1474 0001 01       		.byte	1
 1475 0002 03       		.byte	3
 1476 0003 3D       		.byte	61
 1477 0004 06       		.byte	6
 1478 0005 00       		.byte	0
 1479 0006 00       		.byte	0
 1480 0007 00       		.byte	0
 1481 0008 00       		.byte	0
 1482 0009 00       		.byte	0
 1483 000a 00       		.byte	0
 1484 000b 32       		.byte	50
 1485 000c 04       		.byte	4
 1486 000d 00       		.byte	0
 1487 000e 00       		.byte	0
 1488 000f 00       		.byte	0
 1489 0010 00       		.byte	0
 1490 0011 36       		.byte	54
 1491 0012 04       		.byte	4
 1492 0013 00       		.byte	0
 1493 0014 00       		.byte	0
 1494 0015 00       		.byte	0
 1495 0016 00       		.byte	0
 1496 0017 FF       		.byte	-1
ARM GAS  /tmp/ccja5tMw.s 			page 44


 1497              		.section	.rodata.ucDHCPDiscoverOptions.6463,"a",%progbits
 1498              		.align	2
 1501              	ucDHCPDiscoverOptions.6463:
 1502 0000 35       		.byte	53
 1503 0001 01       		.byte	1
 1504 0002 01       		.byte	1
 1505 0003 3D       		.byte	61
 1506 0004 06       		.byte	6
 1507 0005 00       		.byte	0
 1508 0006 00       		.byte	0
 1509 0007 00       		.byte	0
 1510 0008 00       		.byte	0
 1511 0009 00       		.byte	0
 1512 000a 00       		.byte	0
 1513 000b 37       		.byte	55
 1514 000c 03       		.byte	3
 1515 000d 01       		.byte	1
 1516 000e 03       		.byte	3
 1517 000f 06       		.byte	6
 1518 0010 FF       		.byte	-1
 1519              		.text
 1520              	.Letext0:
 1521              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1522              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1523              		.file 4 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 1524              		.file 5 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1525              		.file 6 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Sockets.h"
 1526              		.file 7 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP_Private.h"
ARM GAS  /tmp/ccja5tMw.s 			page 45


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FreeRTOS_DHCP.c
     /tmp/ccja5tMw.s:21     .bss.xDHCPData:0000000000000000 $d
     /tmp/ccja5tMw.s:24     .bss.xDHCPData:0000000000000000 xDHCPData
     /tmp/ccja5tMw.s:27     .text.xIsDHCPSocket:0000000000000000 $t
     /tmp/ccja5tMw.s:32     .text.xIsDHCPSocket:0000000000000000 xIsDHCPSocket
     /tmp/ccja5tMw.s:85     .text.xIsDHCPSocket:000000000000002c $d
     /tmp/ccja5tMw.s:90     .text.vDHCPProcess:0000000000000000 $t
     /tmp/ccja5tMw.s:95     .text.vDHCPProcess:0000000000000000 vDHCPProcess
     /tmp/ccja5tMw.s:134    .text.vDHCPProcess:0000000000000028 $d
     /tmp/ccja5tMw.s:139    .text.vDHCPProcess:000000000000003c $t
     /tmp/ccja5tMw.s:586    .text.prvInitialiseDHCP:0000000000000000 prvInitialiseDHCP
     /tmp/ccja5tMw.s:1403   .text.prvSendDHCPDiscover:0000000000000000 prvSendDHCPDiscover
     /tmp/ccja5tMw.s:658    .text.prvProcessDHCPReplies:0000000000000000 prvProcessDHCPReplies
     /tmp/ccja5tMw.s:1317   .text.prvSendDHCPRequest:0000000000000000 prvSendDHCPRequest
     /tmp/ccja5tMw.s:471    .text.prvCreateDHCPSocket:0000000000000000 prvCreateDHCPSocket
     /tmp/ccja5tMw.s:459    .text.vDHCPProcess:0000000000000240 $d
     /tmp/ccja5tMw.s:467    .text.prvCreateDHCPSocket:0000000000000000 $t
     /tmp/ccja5tMw.s:577    .text.prvCreateDHCPSocket:0000000000000098 $d
     /tmp/ccja5tMw.s:582    .text.prvInitialiseDHCP:0000000000000000 $t
     /tmp/ccja5tMw.s:645    .text.prvInitialiseDHCP:0000000000000048 $d
     /tmp/ccja5tMw.s:650    .rodata:0000000000000000 $d
     /tmp/ccja5tMw.s:654    .text.prvProcessDHCPReplies:0000000000000000 $t
     /tmp/ccja5tMw.s:812    .text.prvProcessDHCPReplies:0000000000000108 $d
     /tmp/ccja5tMw.s:866    .text.prvProcessDHCPReplies:00000000000001e0 $t
     /tmp/ccja5tMw.s:1016   .text.prvProcessDHCPReplies:00000000000002bc $d
     /tmp/ccja5tMw.s:1022   .text.prvProcessDHCPReplies:00000000000002cc $t
     /tmp/ccja5tMw.s:1088   .text.prvProcessDHCPReplies:0000000000000334 $d
     /tmp/ccja5tMw.s:1094   .text.prvCreatePartDHCPMessage:0000000000000000 $t
     /tmp/ccja5tMw.s:1098   .text.prvCreatePartDHCPMessage:0000000000000000 prvCreatePartDHCPMessage
     /tmp/ccja5tMw.s:1307   .text.prvCreatePartDHCPMessage:0000000000000168 $d
     /tmp/ccja5tMw.s:1313   .text.prvSendDHCPRequest:0000000000000000 $t
     /tmp/ccja5tMw.s:1391   .text.prvSendDHCPRequest:0000000000000068 $d
     /tmp/ccja5tMw.s:1472   .rodata.ucDHCPRequestOptions.6456:0000000000000000 ucDHCPRequestOptions.6456
     /tmp/ccja5tMw.s:1399   .text.prvSendDHCPDiscover:0000000000000000 $t
     /tmp/ccja5tMw.s:1463   .text.prvSendDHCPDiscover:0000000000000048 $d
     /tmp/ccja5tMw.s:1501   .rodata.ucDHCPDiscoverOptions.6463:0000000000000000 ucDHCPDiscoverOptions.6463
     /tmp/ccja5tMw.s:1469   .rodata.ucDHCPRequestOptions.6456:0000000000000000 $d
     /tmp/ccja5tMw.s:1498   .rodata.ucDHCPDiscoverOptions.6463:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
xTaskGetTickCount
vIPNetworkUpCalls
vSocketClose
vARPSendGratuitous
vIPReloadDHCPTimer
vIPSetDHCPTimerEnableState
vPortEnterCritical
vPortExitCritical
xDefaultPartUDPPacketHeader
xNetworkAddressing
FreeRTOS_socket
FreeRTOS_setsockopt
vSocketBind
uxRand
FreeRTOS_recvfrom
ARM GAS  /tmp/ccja5tMw.s 			page 46


memcmp
memcpy
lUDPLoggingPrintf
FreeRTOS_ReleaseUDPPayloadBuffer
pcApplicationHostnameHook
strlen
FreeRTOS_GetUDPPayloadBuffer
memset
FreeRTOS_sendto
