ARM GAS  /tmp/ccE1NIbz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f7xx_hal_dma.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_DMA_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_DMA_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_DMA_Init:
  27              	.LFB135:
  28              		.file 1 "../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c"
   1:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
   2:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
   3:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @file    stm32f7xx_hal_dma.c
   4:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @version V1.1.2
   6:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @date    23-September-2016 
   7:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief   DMA HAL module driver.
   8:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *    
   9:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          This file provides firmware functions to manage the following 
  10:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *          functionalities of the Direct Memory Access (DMA) peripheral:
  11:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Initialization and de-initialization functions
  12:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + IO operation functions
  13:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *           + Peripheral State and errors functions
  14:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @verbatim     
  15:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ==============================================================================      
  16:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                         ##### How to use this driver #####
  17:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ============================================================================== 
  18:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   [..]
  19:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) Enable and configure the peripheral to be connected to the DMA Stream
  20:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        (except for internal SRAM/FLASH memories: no initialization is 
  21:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        necessary) please refer to Reference manual for connection between peripherals
  22:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        and DMA requests. 
  23:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           
  24:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    (#) For a given Stream, program the required configuration through the following parameters:   
  25:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Transfer Direction, Source and Destination data formats, 
  26:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Circular, Normal or peripheral flow control mode, Stream Priority level, 
  27:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Source and Destination Increment mode, FIFO mode and its Threshold (if needed), 
  28:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Burst mode for Source and/or Destination (if needed) using HAL_DMA_Init() function.
  29:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    
  30:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    -@-   Prior to HAL_DMA_Init() the clock must be enabled for DMA through the following macros:
ARM GAS  /tmp/ccE1NIbz.s 			page 2


  31:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          __HAL_RCC_DMA1_CLK_ENABLE() or __HAL_RCC_DMA2_CLK_ENABLE().
  32:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                      
  33:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Polling mode IO operation ***
  34:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================   
  35:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..] 
  36:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start() to start DMA transfer after the configuration of Source 
  37:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               address and destination address and the Length of data to be transferred.
  38:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_PollForTransfer() to poll for the end of current transfer, in this  
  39:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case a fixed Timeout can be configured by User depending from his application.
  40:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Abort() function to abort the current transfer.
  41:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                
  42:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** Interrupt mode IO operation ***    
  43:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      =================================== 
  44:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]     
  45:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Configure the DMA interrupt priority using HAL_NVIC_SetPriority()
  46:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Enable the DMA IRQ handler using HAL_NVIC_EnableIRQ() 
  47:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_Start_IT() to start DMA transfer after the configuration of  
  48:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               Source address and destination address and the Length of data to be transferred. In t
  49:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               case the DMA interrupt is configured 
  50:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) Use HAL_DMA_IRQHandler() called under DMA_IRQHandler() Interrupt subroutine
  51:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           (+) At the end of data transfer HAL_DMA_IRQHandler() function is executed and user can 
  52:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               add his own function by customization of function pointer XferCpltCallback and 
  53:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****               XferErrorCallback (i.e a member of DMA handle structure). 
  54:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]                
  55:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_GetState() function to return the DMA state and HAL_DMA_GetError() in case of 
  56:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          detection.
  57:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          
  58:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      (#) Use HAL_DMA_Abort_IT() function to abort the current transfer
  59:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      
  60:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   In Memory-to-Memory transfer mode, Circular mode is not allowed.
  61:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
  62:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   The FIFO is used mainly to reduce bus usage and to allow data packing/unpacking: it is
  63:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            possible to set different Data Sizes for the Peripheral and the Memory (ie. you can set
  64:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            Half-Word data size for the peripheral to access its data register and set Word data siz
  65:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            for the Memory to gain in access time. Each two half words will be packed and written in
  66:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            a single access to a Word in the Memory).
  67:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
  68:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      -@-   When FIFO is disabled, it is not allowed to configure different Data Sizes for Source
  69:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination. In this case the Peripheral Data Size will be applied to both Source
  70:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****            and Destination.               
  71:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
  72:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      *** DMA HAL driver macros list ***
  73:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      ============================================= 
  74:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..]
  75:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        Below the list of most used macros in DMA HAL driver.
  76:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****        
  77:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_ENABLE: Enable the specified DMA Stream.
  78:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_DISABLE: Disable the specified DMA Stream.
  79:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) __HAL_DMA_GET_IT_SOURCE: Check whether the specified DMA Stream interrupt has occurred or
  80:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      
  81:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      [..] 
  82:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (@) You can refer to the DMA HAL driver header file for more useful macros  
  83:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
  84:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   @endverbatim
  85:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
  86:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @attention
  87:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
ARM GAS  /tmp/ccE1NIbz.s 			page 3


  88:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  89:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
  90:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * Redistribution and use in source and binary forms, with or without modification,
  91:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * are permitted provided that the following conditions are met:
  92:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  93:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer.
  94:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  95:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      this list of conditions and the following disclaimer in the documentation
  96:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      and/or other materials provided with the distribution.
  97:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  98:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      may be used to endorse or promote products derived from this software
  99:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *      without specific prior written permission.
 100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   ******************************************************************************
 113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */ 
 114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Includes ------------------------------------------------------------------*/
 116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #include "stm32f7xx_hal.h"
 117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup STM32F7xx_HAL_Driver
 119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @defgroup DMA DMA
 123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief DMA HAL module driver
 124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** #ifdef HAL_DMA_MODULE_ENABLED
 128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private types -------------------------------------------------------------*/
 130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** typedef struct
 131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t ISR;   /*!< DMA interrupt status register */
 133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t Reserved0;
 134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t IFCR;  /*!< DMA interrupt flag clear register */
 135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** } DMA_Base_Registers;
 136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private variables ---------------------------------------------------------*/
 138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private constants ---------------------------------------------------------*/
 139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Constants
 140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  * @{
 141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  */
 142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  #define HAL_TIMEOUT_DMA_ABORT    ((uint32_t)5)  /* 5 ms */
 143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
ARM GAS  /tmp/ccE1NIbz.s 			page 4


 145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private macros ------------------------------------------------------------*/
 147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Private functions ---------------------------------------------------------*/
 148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
 149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
 152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma);
 153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma);
 154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */  
 158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /* Exported functions ---------------------------------------------------------*/
 160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions
 161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group1
 165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****              ##### Initialization and de-initialization functions  #####
 169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================  
 170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This section provides functions allowing to initialize the DMA Stream source
 172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     and destination addresses, incrementation and data sizes, transfer direction, 
 173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     circular/normal mode selection, memory-to-memory mode selection and Stream priority value.
 174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
 175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     The HAL_DMA_Init() function follows the DMA configuration procedures as described in
 176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     reference manual.  
 177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Initialize the DMA according to the specified
 184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         parameters in the DMA_InitTypeDef and create the associated handle.
 185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma: Pointer to a DMA_HandleTypeDef structure that contains
 186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
 190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
  29              		.loc 1 190 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
ARM GAS  /tmp/ccE1NIbz.s 			page 5


  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = 0U;
  45              		.loc 1 191 0
  46 0008 0023     		movs	r3, #0
  47 000a 7B61     		str	r3, [r7, #20]
 192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
  48              		.loc 1 192 0
  49 000c FFF7FEFF 		bl	HAL_GetTick
  50 0010 3861     		str	r0, [r7, #16]
 193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
  51              		.loc 1 196 0
  52 0012 7B68     		ldr	r3, [r7, #4]
  53 0014 002B     		cmp	r3, #0
  54 0016 01D1     		bne	.L2
 197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
  55              		.loc 1 198 0
  56 0018 0123     		movs	r3, #1
  57 001a 97E0     		b	.L3
  58              	.L2:
 199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_MODE(hdma->Init.Mode));
 210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the memory burst, peripheral burst and FIFO threshold parameters only
 213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      when FIFO mode is enabled */
 214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode != DMA_FIFOMODE_DISABLE)
 215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Allocate lock resource */
 222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
  59              		.loc 1 222 0
  60 001c 7B68     		ldr	r3, [r7, #4]
  61 001e 0022     		movs	r2, #0
  62 0020 83F83420 		strb	r2, [r3, #52]
 223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Change DMA peripheral state */
ARM GAS  /tmp/ccE1NIbz.s 			page 6


 225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_BUSY;
  63              		.loc 1 225 0
  64 0024 7B68     		ldr	r3, [r7, #4]
  65 0026 0222     		movs	r2, #2
  66 0028 83F83520 		strb	r2, [r3, #53]
 226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the peripheral */
 228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
  67              		.loc 1 228 0
  68 002c 7B68     		ldr	r3, [r7, #4]
  69 002e 1B68     		ldr	r3, [r3]
  70 0030 7A68     		ldr	r2, [r7, #4]
  71 0032 1268     		ldr	r2, [r2]
  72 0034 1268     		ldr	r2, [r2]
  73 0036 22F00102 		bic	r2, r2, #1
  74 003a 1A60     		str	r2, [r3]
 229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check if the DMA Stream is effectively disabled */
 231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
  75              		.loc 1 231 0
  76 003c 0FE0     		b	.L4
  77              	.L5:
 232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout */
 234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
  78              		.loc 1 234 0
  79 003e FFF7FEFF 		bl	HAL_GetTick
  80 0042 0246     		mov	r2, r0
  81 0044 3B69     		ldr	r3, [r7, #16]
  82 0046 D31A     		subs	r3, r2, r3
  83 0048 052B     		cmp	r3, #5
  84 004a 08D9     		bls	.L4
 235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
  85              		.loc 1 237 0
  86 004c 7B68     		ldr	r3, [r7, #4]
  87 004e 2022     		movs	r2, #32
  88 0050 5A65     		str	r2, [r3, #84]
 238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_TIMEOUT;
  89              		.loc 1 240 0
  90 0052 7B68     		ldr	r3, [r7, #4]
  91 0054 0322     		movs	r2, #3
  92 0056 83F83520 		strb	r2, [r3, #53]
 241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_TIMEOUT;
  93              		.loc 1 242 0
  94 005a 0323     		movs	r3, #3
  95 005c 76E0     		b	.L3
  96              	.L4:
 231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
  97              		.loc 1 231 0
  98 005e 7B68     		ldr	r3, [r7, #4]
  99 0060 1B68     		ldr	r3, [r3]
 100 0062 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccE1NIbz.s 			page 7


 101 0064 03F00103 		and	r3, r3, #1
 102 0068 002B     		cmp	r3, #0
 103 006a E8D1     		bne	.L5
 243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the CR register value */
 247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->CR;
 104              		.loc 1 247 0
 105 006c 7B68     		ldr	r3, [r7, #4]
 106 006e 1B68     		ldr	r3, [r3]
 107 0070 1B68     		ldr	r3, [r3]
 108 0072 7B61     		str	r3, [r7, #20]
 248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
 250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 109              		.loc 1 250 0
 110 0074 7A69     		ldr	r2, [r7, #20]
 111 0076 374B     		ldr	r3, .L8
 112 0078 1340     		ands	r3, r3, r2
 113 007a 7B61     		str	r3, [r7, #20]
 251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
 252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
 253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));
 254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream configuration */
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 114              		.loc 1 256 0
 115 007c 7B68     		ldr	r3, [r7, #4]
 116 007e 5A68     		ldr	r2, [r3, #4]
 117 0080 7B68     		ldr	r3, [r7, #4]
 118 0082 9B68     		ldr	r3, [r3, #8]
 119 0084 1A43     		orrs	r2, r2, r3
 257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 120              		.loc 1 257 0
 121 0086 7B68     		ldr	r3, [r7, #4]
 122 0088 DB68     		ldr	r3, [r3, #12]
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 123              		.loc 1 256 0
 124 008a 1A43     		orrs	r2, r2, r3
 125              		.loc 1 257 0
 126 008c 7B68     		ldr	r3, [r7, #4]
 127 008e 1B69     		ldr	r3, [r3, #16]
 128 0090 1A43     		orrs	r2, r2, r3
 258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 129              		.loc 1 258 0
 130 0092 7B68     		ldr	r3, [r7, #4]
 131 0094 5B69     		ldr	r3, [r3, #20]
 257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 132              		.loc 1 257 0
 133 0096 1A43     		orrs	r2, r2, r3
 134              		.loc 1 258 0
 135 0098 7B68     		ldr	r3, [r7, #4]
 136 009a 9B69     		ldr	r3, [r3, #24]
 137 009c 1A43     		orrs	r2, r2, r3
 259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.Mode                | hdma->Init.Priority;
 138              		.loc 1 259 0
ARM GAS  /tmp/ccE1NIbz.s 			page 8


 139 009e 7B68     		ldr	r3, [r7, #4]
 140 00a0 DB69     		ldr	r3, [r3, #28]
 258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 141              		.loc 1 258 0
 142 00a2 1A43     		orrs	r2, r2, r3
 143              		.loc 1 259 0
 144 00a4 7B68     		ldr	r3, [r7, #4]
 145 00a6 1B6A     		ldr	r3, [r3, #32]
 146 00a8 1343     		orrs	r3, r3, r2
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 147              		.loc 1 256 0
 148 00aa 7A69     		ldr	r2, [r7, #20]
 149 00ac 1343     		orrs	r3, r3, r2
 150 00ae 7B61     		str	r3, [r7, #20]
 260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
 262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 151              		.loc 1 262 0
 152 00b0 7B68     		ldr	r3, [r7, #4]
 153 00b2 5B6A     		ldr	r3, [r3, #36]
 154 00b4 042B     		cmp	r3, #4
 155 00b6 07D1     		bne	.L6
 263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get memory burst and peripheral burst */
 265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 156              		.loc 1 265 0
 157 00b8 7B68     		ldr	r3, [r7, #4]
 158 00ba DA6A     		ldr	r2, [r3, #44]
 159 00bc 7B68     		ldr	r3, [r7, #4]
 160 00be 1B6B     		ldr	r3, [r3, #48]
 161 00c0 1343     		orrs	r3, r3, r2
 162 00c2 7A69     		ldr	r2, [r7, #20]
 163 00c4 1343     		orrs	r3, r3, r2
 164 00c6 7B61     		str	r3, [r7, #20]
 165              	.L6:
 266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream CR register */
 269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR = tmp;  
 166              		.loc 1 269 0
 167 00c8 7B68     		ldr	r3, [r7, #4]
 168 00ca 1B68     		ldr	r3, [r3]
 169 00cc 7A69     		ldr	r2, [r7, #20]
 170 00ce 1A60     		str	r2, [r3]
 270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the FCR register value */
 272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp = hdma->Instance->FCR;
 171              		.loc 1 272 0
 172 00d0 7B68     		ldr	r3, [r7, #4]
 173 00d2 1B68     		ldr	r3, [r3]
 174 00d4 5B69     		ldr	r3, [r3, #20]
 175 00d6 7B61     		str	r3, [r7, #20]
 273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear Direct mode and FIFO threshold bits */
 275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 176              		.loc 1 275 0
 177 00d8 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccE1NIbz.s 			page 9


 178 00da 23F00703 		bic	r3, r3, #7
 179 00de 7B61     		str	r3, [r7, #20]
 276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Prepare the DMA Stream FIFO configuration */
 278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmp |= hdma->Init.FIFOMode;
 180              		.loc 1 278 0
 181 00e0 7B68     		ldr	r3, [r7, #4]
 182 00e2 5B6A     		ldr	r3, [r3, #36]
 183 00e4 7A69     		ldr	r2, [r7, #20]
 184 00e6 1343     		orrs	r3, r3, r2
 185 00e8 7B61     		str	r3, [r7, #20]
 279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* the FIFO threshold is not used when the FIFO mode is disabled */
 281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 186              		.loc 1 281 0
 187 00ea 7B68     		ldr	r3, [r7, #4]
 188 00ec 5B6A     		ldr	r3, [r3, #36]
 189 00ee 042B     		cmp	r3, #4
 190 00f0 13D1     		bne	.L7
 282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the FIFO threshold */
 284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmp |= hdma->Init.FIFOThreshold;
 191              		.loc 1 284 0
 192 00f2 7B68     		ldr	r3, [r7, #4]
 193 00f4 9B6A     		ldr	r3, [r3, #40]
 194 00f6 7A69     		ldr	r2, [r7, #20]
 195 00f8 1343     		orrs	r3, r3, r2
 196 00fa 7B61     		str	r3, [r7, #20]
 285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if (DMA_CheckFifoParam(hdma) != HAL_OK)
 197              		.loc 1 286 0
 198 00fc 7868     		ldr	r0, [r7, #4]
 199 00fe FFF7FEFF 		bl	DMA_CheckFifoParam
 200 0102 0346     		mov	r3, r0
 201 0104 002B     		cmp	r3, #0
 202 0106 08D0     		beq	.L7
 287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 203              		.loc 1 289 0
 204 0108 7B68     		ldr	r3, [r7, #4]
 205 010a 4022     		movs	r2, #64
 206 010c 5A65     		str	r2, [r3, #84]
 290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 207              		.loc 1 292 0
 208 010e 7B68     		ldr	r3, [r7, #4]
 209 0110 0122     		movs	r2, #1
 210 0112 83F83520 		strb	r2, [r3, #53]
 293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR; 
 211              		.loc 1 294 0
 212 0116 0123     		movs	r3, #1
 213 0118 18E0     		b	.L3
 214              	.L7:
 295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
ARM GAS  /tmp/ccE1NIbz.s 			page 10


 296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Write to DMA Stream FCR */
 299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR = tmp;
 215              		.loc 1 299 0
 216 011a 7B68     		ldr	r3, [r7, #4]
 217 011c 1B68     		ldr	r3, [r3]
 218 011e 7A69     		ldr	r2, [r7, #20]
 219 0120 5A61     		str	r2, [r3, #20]
 300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
 302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****      DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
 303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 220              		.loc 1 303 0
 221 0122 7868     		ldr	r0, [r7, #4]
 222 0124 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 223 0128 0346     		mov	r3, r0
 224 012a FB60     		str	r3, [r7, #12]
 304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags */
 306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 225              		.loc 1 306 0
 226 012c 7B68     		ldr	r3, [r7, #4]
 227 012e DB6D     		ldr	r3, [r3, #92]
 228 0130 1A46     		mov	r2, r3
 229 0132 3F23     		movs	r3, #63
 230 0134 03FA02F2 		lsl	r2, r3, r2
 231 0138 FB68     		ldr	r3, [r7, #12]
 232 013a 9A60     		str	r2, [r3, #8]
 307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 233              		.loc 1 309 0
 234 013c 7B68     		ldr	r3, [r7, #4]
 235 013e 0022     		movs	r2, #0
 236 0140 5A65     		str	r2, [r3, #84]
 310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                                                                                      
 311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_READY;
 237              		.loc 1 312 0
 238 0142 7B68     		ldr	r3, [r7, #4]
 239 0144 0122     		movs	r2, #1
 240 0146 83F83520 		strb	r2, [r3, #53]
 313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 241              		.loc 1 314 0
 242 014a 0023     		movs	r3, #0
 243              	.L3:
 315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 244              		.loc 1 315 0
 245 014c 1846     		mov	r0, r3
 246 014e 1837     		adds	r7, r7, #24
 247              	.LCFI3:
 248              		.cfi_def_cfa_offset 8
 249 0150 BD46     		mov	sp, r7
 250              	.LCFI4:
 251              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccE1NIbz.s 			page 11


 252              		@ sp needed
 253 0152 80BD     		pop	{r7, pc}
 254              	.L9:
 255              		.align	2
 256              	.L8:
 257 0154 3F8010E0 		.word	-535789505
 258              		.cfi_endproc
 259              	.LFE135:
 261              		.section	.text.HAL_DMA_DeInit,"ax",%progbits
 262              		.align	2
 263              		.global	HAL_DMA_DeInit
 264              		.thumb
 265              		.thumb_func
 267              	HAL_DMA_DeInit:
 268              	.LFB136:
 316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  DeInitializes the DMA peripheral 
 319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_DeInit(DMA_HandleTypeDef *hdma)
 324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 269              		.loc 1 324 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 16
 272              		@ frame_needed = 1, uses_anonymous_args = 0
 273 0000 80B5     		push	{r7, lr}
 274              	.LCFI5:
 275              		.cfi_def_cfa_offset 8
 276              		.cfi_offset 7, -8
 277              		.cfi_offset 14, -4
 278 0002 84B0     		sub	sp, sp, #16
 279              	.LCFI6:
 280              		.cfi_def_cfa_offset 24
 281 0004 00AF     		add	r7, sp, #0
 282              	.LCFI7:
 283              		.cfi_def_cfa_register 7
 284 0006 7860     		str	r0, [r7, #4]
 325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma == NULL)
 285              		.loc 1 328 0
 286 0008 7B68     		ldr	r3, [r7, #4]
 287 000a 002B     		cmp	r3, #0
 288 000c 01D1     		bne	.L11
 329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 289              		.loc 1 330 0
 290 000e 0123     		movs	r3, #1
 291 0010 40E0     		b	.L12
 292              	.L11:
 331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the DMA peripheral state */
ARM GAS  /tmp/ccE1NIbz.s 			page 12


 334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State == HAL_DMA_STATE_BUSY)
 293              		.loc 1 334 0
 294 0012 7B68     		ldr	r3, [r7, #4]
 295 0014 93F83530 		ldrb	r3, [r3, #53]
 296 0018 DBB2     		uxtb	r3, r3
 297 001a 022B     		cmp	r3, #2
 298 001c 01D1     		bne	.L13
 335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_BUSY;
 299              		.loc 1 337 0
 300 001e 0223     		movs	r3, #2
 301 0020 38E0     		b	.L12
 302              	.L13:
 338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_STREAM_ALL_INSTANCE(hdma->Instance));
 342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Disable the selected DMA Streamx */
 344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_DMA_DISABLE(hdma);
 303              		.loc 1 344 0
 304 0022 7B68     		ldr	r3, [r7, #4]
 305 0024 1B68     		ldr	r3, [r3]
 306 0026 7A68     		ldr	r2, [r7, #4]
 307 0028 1268     		ldr	r2, [r2]
 308 002a 1268     		ldr	r2, [r2]
 309 002c 22F00102 		bic	r2, r2, #1
 310 0030 1A60     		str	r2, [r3]
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx control register */
 347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR   = 0U;
 311              		.loc 1 347 0
 312 0032 7B68     		ldr	r3, [r7, #4]
 313 0034 1B68     		ldr	r3, [r3]
 314 0036 0022     		movs	r2, #0
 315 0038 1A60     		str	r2, [r3]
 348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx number of data to transfer register */
 350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = 0U;
 316              		.loc 1 350 0
 317 003a 7B68     		ldr	r3, [r7, #4]
 318 003c 1B68     		ldr	r3, [r3]
 319 003e 0022     		movs	r2, #0
 320 0040 5A60     		str	r2, [r3, #4]
 351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx peripheral address register */
 353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->PAR  = 0U;
 321              		.loc 1 353 0
 322 0042 7B68     		ldr	r3, [r7, #4]
 323 0044 1B68     		ldr	r3, [r3]
 324 0046 0022     		movs	r2, #0
 325 0048 9A60     		str	r2, [r3, #8]
 354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 0 address register */
 356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M0AR = 0U;
 326              		.loc 1 356 0
ARM GAS  /tmp/ccE1NIbz.s 			page 13


 327 004a 7B68     		ldr	r3, [r7, #4]
 328 004c 1B68     		ldr	r3, [r3]
 329 004e 0022     		movs	r2, #0
 330 0050 DA60     		str	r2, [r3, #12]
 357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx memory 1 address register */
 359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->M1AR = 0U;
 331              		.loc 1 359 0
 332 0052 7B68     		ldr	r3, [r7, #4]
 333 0054 1B68     		ldr	r3, [r3]
 334 0056 0022     		movs	r2, #0
 335 0058 1A61     		str	r2, [r3, #16]
 360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Reset DMA Streamx FIFO control register */
 362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->FCR  = (uint32_t)0x00000021U;
 336              		.loc 1 362 0
 337 005a 7B68     		ldr	r3, [r7, #4]
 338 005c 1B68     		ldr	r3, [r3]
 339 005e 2122     		movs	r2, #33
 340 0060 5A61     		str	r2, [r3, #20]
 363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get DMA steam Base Address */  
 365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 341              		.loc 1 365 0
 342 0062 7868     		ldr	r0, [r7, #4]
 343 0064 FFF7FEFF 		bl	DMA_CalcBaseAndBitshift
 344 0068 0346     		mov	r3, r0
 345 006a FB60     		str	r3, [r7, #12]
 366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear all interrupt flags at correct offset within the register */
 368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs->IFCR = 0x3FU << hdma->StreamIndex;
 346              		.loc 1 368 0
 347 006c 7B68     		ldr	r3, [r7, #4]
 348 006e DB6D     		ldr	r3, [r3, #92]
 349 0070 1A46     		mov	r2, r3
 350 0072 3F23     		movs	r3, #63
 351 0074 03FA02F2 		lsl	r2, r3, r2
 352 0078 FB68     		ldr	r3, [r7, #12]
 353 007a 9A60     		str	r2, [r3, #8]
 369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the error code */
 371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 354              		.loc 1 371 0
 355 007c 7B68     		ldr	r3, [r7, #4]
 356 007e 0022     		movs	r2, #0
 357 0080 5A65     		str	r2, [r3, #84]
 372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Initialize the DMA state */
 374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->State = HAL_DMA_STATE_RESET;
 358              		.loc 1 374 0
 359 0082 7B68     		ldr	r3, [r7, #4]
 360 0084 0022     		movs	r2, #0
 361 0086 83F83520 		strb	r2, [r3, #53]
 375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
 377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 362              		.loc 1 377 0
ARM GAS  /tmp/ccE1NIbz.s 			page 14


 363 008a 7B68     		ldr	r3, [r7, #4]
 364 008c 0022     		movs	r2, #0
 365 008e 83F83420 		strb	r2, [r3, #52]
 378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 366              		.loc 1 379 0
 367 0092 0023     		movs	r3, #0
 368              	.L12:
 380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 369              		.loc 1 380 0
 370 0094 1846     		mov	r0, r3
 371 0096 1037     		adds	r7, r7, #16
 372              	.LCFI8:
 373              		.cfi_def_cfa_offset 8
 374 0098 BD46     		mov	sp, r7
 375              	.LCFI9:
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 009a 80BD     		pop	{r7, pc}
 379              		.cfi_endproc
 380              	.LFE136:
 382              		.section	.text.HAL_DMA_Start,"ax",%progbits
 383              		.align	2
 384              		.global	HAL_DMA_Start
 385              		.thumb
 386              		.thumb_func
 388              	HAL_DMA_Start:
 389              	.LFB137:
 381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
 384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group2
 387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
 388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim   
 389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                       #####  IO operation functions  #####
 391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
 392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]  This section provides functions allowing to:
 393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and Start DMA transfer
 394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Configure the source, destination address and data length and 
 395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           Start DMA transfer with interrupt
 396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Abort DMA transfer
 397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Poll for transfer complete
 398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Handle DMA interrupt request  
 399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
 401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
 402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Starts the DMA Transfer.
 406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma      : pointer to a DMA_HandleTypeDef structure that contains
 407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
 409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
ARM GAS  /tmp/ccE1NIbz.s 			page 15


 410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, 
 414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 390              		.loc 1 414 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 24
 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394 0000 80B5     		push	{r7, lr}
 395              	.LCFI10:
 396              		.cfi_def_cfa_offset 8
 397              		.cfi_offset 7, -8
 398              		.cfi_offset 14, -4
 399 0002 86B0     		sub	sp, sp, #24
 400              	.LCFI11:
 401              		.cfi_def_cfa_offset 32
 402 0004 00AF     		add	r7, sp, #0
 403              	.LCFI12:
 404              		.cfi_def_cfa_register 7
 405 0006 F860     		str	r0, [r7, #12]
 406 0008 B960     		str	r1, [r7, #8]
 407 000a 7A60     		str	r2, [r7, #4]
 408 000c 3B60     		str	r3, [r7]
 415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 409              		.loc 1 415 0
 410 000e 0023     		movs	r3, #0
 411 0010 FB75     		strb	r3, [r7, #23]
 416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 412              		.loc 1 421 0
 413 0012 FB68     		ldr	r3, [r7, #12]
 414 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 415 0018 012B     		cmp	r3, #1
 416 001a 01D1     		bne	.L15
 417              		.loc 1 421 0 is_stmt 0 discriminator 1
 418 001c 0223     		movs	r3, #2
 419 001e 26E0     		b	.L16
 420              	.L15:
 421              		.loc 1 421 0 discriminator 2
 422 0020 FB68     		ldr	r3, [r7, #12]
 423 0022 0122     		movs	r2, #1
 424 0024 83F83420 		strb	r2, [r3, #52]
 422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 425              		.loc 1 423 0 is_stmt 1 discriminator 2
 426 0028 FB68     		ldr	r3, [r7, #12]
 427 002a 93F83530 		ldrb	r3, [r3, #53]
 428 002e DBB2     		uxtb	r3, r3
 429 0030 012B     		cmp	r3, #1
 430 0032 15D1     		bne	.L17
 424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
ARM GAS  /tmp/ccE1NIbz.s 			page 16


 426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 431              		.loc 1 426 0
 432 0034 FB68     		ldr	r3, [r7, #12]
 433 0036 0222     		movs	r2, #2
 434 0038 83F83520 		strb	r2, [r3, #53]
 427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;    
 435              		.loc 1 429 0
 436 003c FB68     		ldr	r3, [r7, #12]
 437 003e 0022     		movs	r2, #0
 438 0040 5A65     		str	r2, [r3, #84]
 430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 439              		.loc 1 432 0
 440 0042 F868     		ldr	r0, [r7, #12]
 441 0044 B968     		ldr	r1, [r7, #8]
 442 0046 7A68     		ldr	r2, [r7, #4]
 443 0048 3B68     		ldr	r3, [r7]
 444 004a FFF7FEFF 		bl	DMA_SetConfig
 433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 445              		.loc 1 435 0
 446 004e FB68     		ldr	r3, [r7, #12]
 447 0050 1B68     		ldr	r3, [r3]
 448 0052 FA68     		ldr	r2, [r7, #12]
 449 0054 1268     		ldr	r2, [r2]
 450 0056 1268     		ldr	r2, [r2]
 451 0058 42F00102 		orr	r2, r2, #1
 452 005c 1A60     		str	r2, [r3]
 453 005e 05E0     		b	.L18
 454              	.L17:
 436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 455              		.loc 1 440 0
 456 0060 FB68     		ldr	r3, [r7, #12]
 457 0062 0022     		movs	r2, #0
 458 0064 83F83420 		strb	r2, [r3, #52]
 441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 459              		.loc 1 443 0
 460 0068 0223     		movs	r3, #2
 461 006a FB75     		strb	r3, [r7, #23]
 462              	.L18:
 444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
 445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 463              		.loc 1 445 0
 464 006c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 465              	.L16:
 446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 466              		.loc 1 446 0
ARM GAS  /tmp/ccE1NIbz.s 			page 17


 467 006e 1846     		mov	r0, r3
 468 0070 1837     		adds	r7, r7, #24
 469              	.LCFI13:
 470              		.cfi_def_cfa_offset 8
 471 0072 BD46     		mov	sp, r7
 472              	.LCFI14:
 473              		.cfi_def_cfa_register 13
 474              		@ sp needed
 475 0074 80BD     		pop	{r7, pc}
 476              		.cfi_endproc
 477              	.LFE137:
 479 0076 00BF     		.section	.text.HAL_DMA_Start_IT,"ax",%progbits
 480              		.align	2
 481              		.global	HAL_DMA_Start_IT
 482              		.thumb
 483              		.thumb_func
 485              	HAL_DMA_Start_IT:
 486              	.LFB138:
 447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Start the DMA Transfer with interrupt enabled.
 450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
 451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.  
 452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
 453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
 454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
 455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddres
 458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 487              		.loc 1 458 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 24
 490              		@ frame_needed = 1, uses_anonymous_args = 0
 491 0000 80B5     		push	{r7, lr}
 492              	.LCFI15:
 493              		.cfi_def_cfa_offset 8
 494              		.cfi_offset 7, -8
 495              		.cfi_offset 14, -4
 496 0002 86B0     		sub	sp, sp, #24
 497              	.LCFI16:
 498              		.cfi_def_cfa_offset 32
 499 0004 00AF     		add	r7, sp, #0
 500              	.LCFI17:
 501              		.cfi_def_cfa_register 7
 502 0006 F860     		str	r0, [r7, #12]
 503 0008 B960     		str	r1, [r7, #8]
 504 000a 7A60     		str	r2, [r7, #4]
 505 000c 3B60     		str	r3, [r7]
 459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 506              		.loc 1 459 0
 507 000e 0023     		movs	r3, #0
 508 0010 FB75     		strb	r3, [r7, #23]
 460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 509              		.loc 1 462 0
ARM GAS  /tmp/ccE1NIbz.s 			page 18


 510 0012 FB68     		ldr	r3, [r7, #12]
 511 0014 9B6D     		ldr	r3, [r3, #88]
 512 0016 3B61     		str	r3, [r7, #16]
 463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Check the parameters */
 465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  
 467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 513              		.loc 1 468 0
 514 0018 FB68     		ldr	r3, [r7, #12]
 515 001a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 516 001e 012B     		cmp	r3, #1
 517 0020 01D1     		bne	.L20
 518              		.loc 1 468 0 is_stmt 0 discriminator 1
 519 0022 0223     		movs	r3, #2
 520 0024 4AE0     		b	.L21
 521              	.L20:
 522              		.loc 1 468 0 discriminator 2
 523 0026 FB68     		ldr	r3, [r7, #12]
 524 0028 0122     		movs	r2, #1
 525 002a 83F83420 		strb	r2, [r3, #52]
 469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 526              		.loc 1 470 0 is_stmt 1 discriminator 2
 527 002e FB68     		ldr	r3, [r7, #12]
 528 0030 93F83530 		ldrb	r3, [r3, #53]
 529 0034 DBB2     		uxtb	r3, r3
 530 0036 012B     		cmp	r3, #1
 531 0038 39D1     		bne	.L22
 471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change DMA peripheral state */
 473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_BUSY;
 532              		.loc 1 473 0
 533 003a FB68     		ldr	r3, [r7, #12]
 534 003c 0222     		movs	r2, #2
 535 003e 83F83520 		strb	r2, [r3, #53]
 474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Initialize the error code */
 476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 536              		.loc 1 476 0
 537 0042 FB68     		ldr	r3, [r7, #12]
 538 0044 0022     		movs	r2, #0
 539 0046 5A65     		str	r2, [r3, #84]
 477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure the source, destination address and the data length */
 479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 540              		.loc 1 479 0
 541 0048 F868     		ldr	r0, [r7, #12]
 542 004a B968     		ldr	r1, [r7, #8]
 543 004c 7A68     		ldr	r2, [r7, #4]
 544 004e 3B68     		ldr	r3, [r7]
 545 0050 FFF7FEFF 		bl	DMA_SetConfig
 480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 546              		.loc 1 482 0
ARM GAS  /tmp/ccE1NIbz.s 			page 19


 547 0054 FB68     		ldr	r3, [r7, #12]
 548 0056 DB6D     		ldr	r3, [r3, #92]
 549 0058 1A46     		mov	r2, r3
 550 005a 3F23     		movs	r3, #63
 551 005c 03FA02F2 		lsl	r2, r3, r2
 552 0060 3B69     		ldr	r3, [r7, #16]
 553 0062 9A60     		str	r2, [r3, #8]
 483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable Common interrupts*/
 485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 554              		.loc 1 485 0
 555 0064 FB68     		ldr	r3, [r7, #12]
 556 0066 1B68     		ldr	r3, [r3]
 557 0068 FA68     		ldr	r2, [r7, #12]
 558 006a 1268     		ldr	r2, [r2]
 559 006c 1268     		ldr	r2, [r2]
 560 006e 42F01602 		orr	r2, r2, #22
 561 0072 1A60     		str	r2, [r3]
 486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR |= DMA_IT_FE;
 562              		.loc 1 486 0
 563 0074 FB68     		ldr	r3, [r7, #12]
 564 0076 1B68     		ldr	r3, [r3]
 565 0078 FA68     		ldr	r2, [r7, #12]
 566 007a 1268     		ldr	r2, [r2]
 567 007c 5269     		ldr	r2, [r2, #20]
 568 007e 42F08002 		orr	r2, r2, #128
 569 0082 5A61     		str	r2, [r3, #20]
 487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferHalfCpltCallback != NULL)
 570              		.loc 1 488 0
 571 0084 FB68     		ldr	r3, [r7, #12]
 572 0086 1B6C     		ldr	r3, [r3, #64]
 573 0088 002B     		cmp	r3, #0
 574 008a 07D0     		beq	.L23
 489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  |= DMA_IT_HT;
 575              		.loc 1 490 0
 576 008c FB68     		ldr	r3, [r7, #12]
 577 008e 1B68     		ldr	r3, [r3]
 578 0090 FA68     		ldr	r2, [r7, #12]
 579 0092 1268     		ldr	r2, [r2]
 580 0094 1268     		ldr	r2, [r2]
 581 0096 42F00802 		orr	r2, r2, #8
 582 009a 1A60     		str	r2, [r3]
 583              	.L23:
 491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Enable the Peripheral */
 494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_ENABLE(hdma);
 584              		.loc 1 494 0
 585 009c FB68     		ldr	r3, [r7, #12]
 586 009e 1B68     		ldr	r3, [r3]
 587 00a0 FA68     		ldr	r2, [r7, #12]
 588 00a2 1268     		ldr	r2, [r2]
 589 00a4 1268     		ldr	r2, [r2]
 590 00a6 42F00102 		orr	r2, r2, #1
 591 00aa 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccE1NIbz.s 			page 20


 592 00ac 05E0     		b	.L24
 593              	.L22:
 495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process unlocked */
 499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);	  
 594              		.loc 1 499 0
 595 00ae FB68     		ldr	r3, [r7, #12]
 596 00b0 0022     		movs	r2, #0
 597 00b2 83F83420 		strb	r2, [r3, #52]
 500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
 502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_BUSY;
 598              		.loc 1 502 0
 599 00b6 0223     		movs	r3, #2
 600 00b8 FB75     		strb	r3, [r7, #23]
 601              	.L24:
 503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 505:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 602              		.loc 1 505 0
 603 00ba FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 604              	.L21:
 506:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 605              		.loc 1 506 0
 606 00bc 1846     		mov	r0, r3
 607 00be 1837     		adds	r7, r7, #24
 608              	.LCFI18:
 609              		.cfi_def_cfa_offset 8
 610 00c0 BD46     		mov	sp, r7
 611              	.LCFI19:
 612              		.cfi_def_cfa_register 13
 613              		@ sp needed
 614 00c2 80BD     		pop	{r7, pc}
 615              		.cfi_endproc
 616              	.LFE138:
 618              		.section	.text.HAL_DMA_Abort,"ax",%progbits
 619              		.align	2
 620              		.global	HAL_DMA_Abort
 621              		.thumb
 622              		.thumb_func
 624              	HAL_DMA_Abort:
 625              	.LFB139:
 507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer.
 510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
 511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                   
 513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note  After disabling a DMA Stream, a check for wait until the DMA Stream is 
 514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        effectively disabled is added. If a Stream is disabled 
 515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        while a data transfer is ongoing, the current data will be transferred
 516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        and the Stream will be effectively disabled only after the transfer of
 517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *        this single data is finished.  
 518:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 519:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
ARM GAS  /tmp/ccE1NIbz.s 			page 21


 520:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
 521:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 626              		.loc 1 521 0
 627              		.cfi_startproc
 628              		@ args = 0, pretend = 0, frame = 16
 629              		@ frame_needed = 1, uses_anonymous_args = 0
 630 0000 80B5     		push	{r7, lr}
 631              	.LCFI20:
 632              		.cfi_def_cfa_offset 8
 633              		.cfi_offset 7, -8
 634              		.cfi_offset 14, -4
 635 0002 84B0     		sub	sp, sp, #16
 636              	.LCFI21:
 637              		.cfi_def_cfa_offset 24
 638 0004 00AF     		add	r7, sp, #0
 639              	.LCFI22:
 640              		.cfi_def_cfa_register 7
 641 0006 7860     		str	r0, [r7, #4]
 522:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 523:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 642              		.loc 1 523 0
 643 0008 7B68     		ldr	r3, [r7, #4]
 644 000a 9B6D     		ldr	r3, [r3, #88]
 645 000c FB60     		str	r3, [r7, #12]
 524:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 525:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick();
 646              		.loc 1 525 0
 647 000e FFF7FEFF 		bl	HAL_GetTick
 648 0012 B860     		str	r0, [r7, #8]
 526:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 527:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 649              		.loc 1 527 0
 650 0014 7B68     		ldr	r3, [r7, #4]
 651 0016 93F83530 		ldrb	r3, [r3, #53]
 652 001a DBB2     		uxtb	r3, r3
 653 001c 022B     		cmp	r3, #2
 654 001e 08D0     		beq	.L26
 528:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 529:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 655              		.loc 1 529 0
 656 0020 7B68     		ldr	r3, [r7, #4]
 657 0022 8022     		movs	r2, #128
 658 0024 5A65     		str	r2, [r3, #84]
 530:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 531:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 532:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 659              		.loc 1 532 0
 660 0026 7B68     		ldr	r3, [r7, #4]
 661 0028 0022     		movs	r2, #0
 662 002a 83F83420 		strb	r2, [r3, #52]
 533:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 663              		.loc 1 534 0
 664 002e 0123     		movs	r3, #1
 665 0030 54E0     		b	.L27
 666              	.L26:
 535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
ARM GAS  /tmp/ccE1NIbz.s 			page 22


 536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable all the transfer interrupts */
 539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 667              		.loc 1 539 0
 668 0032 7B68     		ldr	r3, [r7, #4]
 669 0034 1B68     		ldr	r3, [r3]
 670 0036 7A68     		ldr	r2, [r7, #4]
 671 0038 1268     		ldr	r2, [r2]
 672 003a 1268     		ldr	r2, [r2]
 673 003c 22F01602 		bic	r2, r2, #22
 674 0040 1A60     		str	r2, [r3]
 540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->FCR &= ~(DMA_IT_FE);
 675              		.loc 1 540 0
 676 0042 7B68     		ldr	r3, [r7, #4]
 677 0044 1B68     		ldr	r3, [r3]
 678 0046 7A68     		ldr	r2, [r7, #4]
 679 0048 1268     		ldr	r2, [r2]
 680 004a 5269     		ldr	r2, [r2, #20]
 681 004c 22F08002 		bic	r2, r2, #128
 682 0050 5A61     		str	r2, [r3, #20]
 541:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 542:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 683              		.loc 1 542 0
 684 0052 7B68     		ldr	r3, [r7, #4]
 685 0054 1B6C     		ldr	r3, [r3, #64]
 686 0056 002B     		cmp	r3, #0
 687 0058 03D1     		bne	.L28
 688              		.loc 1 542 0 is_stmt 0 discriminator 1
 689 005a 7B68     		ldr	r3, [r7, #4]
 690 005c 9B6C     		ldr	r3, [r3, #72]
 691 005e 002B     		cmp	r3, #0
 692 0060 07D0     		beq	.L29
 693              	.L28:
 543:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 544:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_HT);
 694              		.loc 1 544 0 is_stmt 1
 695 0062 7B68     		ldr	r3, [r7, #4]
 696 0064 1B68     		ldr	r3, [r3]
 697 0066 7A68     		ldr	r2, [r7, #4]
 698 0068 1268     		ldr	r2, [r2]
 699 006a 1268     		ldr	r2, [r2]
 700 006c 22F00802 		bic	r2, r2, #8
 701 0070 1A60     		str	r2, [r3]
 702              	.L29:
 545:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 546:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 547:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 548:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 703              		.loc 1 548 0
 704 0072 7B68     		ldr	r3, [r7, #4]
 705 0074 1B68     		ldr	r3, [r3]
 706 0076 7A68     		ldr	r2, [r7, #4]
 707 0078 1268     		ldr	r2, [r2]
 708 007a 1268     		ldr	r2, [r2]
 709 007c 22F00102 		bic	r2, r2, #1
 710 0080 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccE1NIbz.s 			page 23


 549:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 550:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check if the DMA Stream is effectively disabled */
 551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 711              		.loc 1 551 0
 712 0082 13E0     		b	.L30
 713              	.L31:
 552:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 553:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Check for the Timeout */
 554:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 714              		.loc 1 554 0
 715 0084 FFF7FEFF 		bl	HAL_GetTick
 716 0088 0246     		mov	r2, r0
 717 008a BB68     		ldr	r3, [r7, #8]
 718 008c D31A     		subs	r3, r2, r3
 719 008e 052B     		cmp	r3, #5
 720 0090 0CD9     		bls	.L30
 555:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 556:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 557:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 721              		.loc 1 557 0
 722 0092 7B68     		ldr	r3, [r7, #4]
 723 0094 2022     		movs	r2, #32
 724 0096 5A65     		str	r2, [r3, #84]
 558:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 559:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 560:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 725              		.loc 1 560 0
 726 0098 7B68     		ldr	r3, [r7, #4]
 727 009a 0022     		movs	r2, #0
 728 009c 83F83420 		strb	r2, [r3, #52]
 561:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 562:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 563:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_TIMEOUT;
 729              		.loc 1 563 0
 730 00a0 7B68     		ldr	r3, [r7, #4]
 731 00a2 0322     		movs	r2, #3
 732 00a4 83F83520 		strb	r2, [r3, #53]
 564:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 565:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 733              		.loc 1 565 0
 734 00a8 0323     		movs	r3, #3
 735 00aa 17E0     		b	.L27
 736              	.L30:
 551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 737              		.loc 1 551 0
 738 00ac 7B68     		ldr	r3, [r7, #4]
 739 00ae 1B68     		ldr	r3, [r3]
 740 00b0 1B68     		ldr	r3, [r3]
 741 00b2 03F00103 		and	r3, r3, #1
 742 00b6 002B     		cmp	r3, #0
 743 00b8 E4D1     		bne	.L31
 566:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 567:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear all interrupt flags at correct offset within the register */
 570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = 0x3FU << hdma->StreamIndex;
 744              		.loc 1 570 0
ARM GAS  /tmp/ccE1NIbz.s 			page 24


 745 00ba 7B68     		ldr	r3, [r7, #4]
 746 00bc DB6D     		ldr	r3, [r3, #92]
 747 00be 1A46     		mov	r2, r3
 748 00c0 3F23     		movs	r3, #63
 749 00c2 03FA02F2 		lsl	r2, r3, r2
 750 00c6 FB68     		ldr	r3, [r7, #12]
 751 00c8 9A60     		str	r2, [r3, #8]
 571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 572:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 573:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 752              		.loc 1 573 0
 753 00ca 7B68     		ldr	r3, [r7, #4]
 754 00cc 0022     		movs	r2, #0
 755 00ce 83F83420 		strb	r2, [r3, #52]
 574:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 575:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Change the DMA state*/
 576:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 756              		.loc 1 576 0
 757 00d2 7B68     		ldr	r3, [r7, #4]
 758 00d4 0122     		movs	r2, #1
 759 00d6 83F83520 		strb	r2, [r3, #53]
 577:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 578:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 760              		.loc 1 578 0
 761 00da 0023     		movs	r3, #0
 762              	.L27:
 579:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 763              		.loc 1 579 0
 764 00dc 1846     		mov	r0, r3
 765 00de 1037     		adds	r7, r7, #16
 766              	.LCFI23:
 767              		.cfi_def_cfa_offset 8
 768 00e0 BD46     		mov	sp, r7
 769              	.LCFI24:
 770              		.cfi_def_cfa_register 13
 771              		@ sp needed
 772 00e2 80BD     		pop	{r7, pc}
 773              		.cfi_endproc
 774              	.LFE139:
 776              		.section	.text.HAL_DMA_Abort_IT,"ax",%progbits
 777              		.align	2
 778              		.global	HAL_DMA_Abort_IT
 779              		.thumb
 780              		.thumb_func
 782              	HAL_DMA_Abort_IT:
 783              	.LFB140:
 580:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 582:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Aborts the DMA Transfer in Interrupt mode.
 583:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma  : pointer to a DMA_HandleTypeDef structure that contains
 584:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                 the configuration information for the specified DMA Stream.
 585:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 586:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 587:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
 588:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 784              		.loc 1 588 0
 785              		.cfi_startproc
ARM GAS  /tmp/ccE1NIbz.s 			page 25


 786              		@ args = 0, pretend = 0, frame = 8
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 0000 80B4     		push	{r7}
 790              	.LCFI25:
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 0002 83B0     		sub	sp, sp, #12
 794              	.LCFI26:
 795              		.cfi_def_cfa_offset 16
 796 0004 00AF     		add	r7, sp, #0
 797              	.LCFI27:
 798              		.cfi_def_cfa_register 7
 799 0006 7860     		str	r0, [r7, #4]
 589:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->State != HAL_DMA_STATE_BUSY)
 800              		.loc 1 589 0
 801 0008 7B68     		ldr	r3, [r7, #4]
 802 000a 93F83530 		ldrb	r3, [r3, #53]
 803 000e DBB2     		uxtb	r3, r3
 804 0010 022B     		cmp	r3, #2
 805 0012 04D0     		beq	.L33
 590:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 591:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 806              		.loc 1 591 0
 807 0014 7B68     		ldr	r3, [r7, #4]
 808 0016 8022     		movs	r2, #128
 809 0018 5A65     		str	r2, [r3, #84]
 592:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 810              		.loc 1 592 0
 811 001a 0123     		movs	r3, #1
 812 001c 0CE0     		b	.L34
 813              	.L33:
 593:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 594:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 595:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 596:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Set Abort State  */
 597:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_ABORT;
 814              		.loc 1 597 0
 815 001e 7B68     		ldr	r3, [r7, #4]
 816 0020 0522     		movs	r2, #5
 817 0022 83F83520 		strb	r2, [r3, #53]
 598:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 599:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Disable the stream */
 600:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_DMA_DISABLE(hdma);
 818              		.loc 1 600 0
 819 0026 7B68     		ldr	r3, [r7, #4]
 820 0028 1B68     		ldr	r3, [r3]
 821 002a 7A68     		ldr	r2, [r7, #4]
 822 002c 1268     		ldr	r2, [r2]
 823 002e 1268     		ldr	r2, [r2]
 824 0030 22F00102 		bic	r2, r2, #1
 825 0034 1A60     		str	r2, [r3]
 601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 602:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 603:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return HAL_OK;
 826              		.loc 1 603 0
 827 0036 0023     		movs	r3, #0
ARM GAS  /tmp/ccE1NIbz.s 			page 26


 828              	.L34:
 604:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 829              		.loc 1 604 0
 830 0038 1846     		mov	r0, r3
 831 003a 0C37     		adds	r7, r7, #12
 832              	.LCFI28:
 833              		.cfi_def_cfa_offset 4
 834 003c BD46     		mov	sp, r7
 835              	.LCFI29:
 836              		.cfi_def_cfa_register 13
 837              		@ sp needed
 838 003e 5DF8047B 		ldr	r7, [sp], #4
 839              	.LCFI30:
 840              		.cfi_restore 7
 841              		.cfi_def_cfa_offset 0
 842 0042 7047     		bx	lr
 843              		.cfi_endproc
 844              	.LFE140:
 846              		.section	.text.HAL_DMA_PollForTransfer,"ax",%progbits
 847              		.align	2
 848              		.global	HAL_DMA_PollForTransfer
 849              		.thumb
 850              		.thumb_func
 852              	HAL_DMA_PollForTransfer:
 853              	.LFB141:
 605:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 606:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 607:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Polling for transfer complete.
 608:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:          pointer to a DMA_HandleTypeDef structure that contains
 609:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                        the configuration information for the specified DMA Stream.
 610:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CompleteLevel: Specifies the DMA level complete.
 611:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The polling mode is kept in this version for legacy. it is recommanded to use the IT mo
 612:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *         This model could be used for debug purpose.
 613:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @note   The HAL_DMA_PollForTransfer API cannot be used in circular and double buffering mode (a
 614:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  Timeout:       Timeout duration.
 615:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 616:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 617:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_PollForTransfer(DMA_HandleTypeDef *hdma, HAL_DMA_LevelCompleteTypeDef Com
 618:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 854              		.loc 1 618 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 40
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858 0000 80B5     		push	{r7, lr}
 859              	.LCFI31:
 860              		.cfi_def_cfa_offset 8
 861              		.cfi_offset 7, -8
 862              		.cfi_offset 14, -4
 863 0002 8AB0     		sub	sp, sp, #40
 864              	.LCFI32:
 865              		.cfi_def_cfa_offset 48
 866 0004 00AF     		add	r7, sp, #0
 867              	.LCFI33:
 868              		.cfi_def_cfa_register 7
 869 0006 F860     		str	r0, [r7, #12]
 870 0008 0B46     		mov	r3, r1
 871 000a 7A60     		str	r2, [r7, #4]
ARM GAS  /tmp/ccE1NIbz.s 			page 27


 872 000c FB72     		strb	r3, [r7, #11]
 619:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK; 
 873              		.loc 1 619 0
 874 000e 0023     		movs	r3, #0
 875 0010 FB77     		strb	r3, [r7, #31]
 620:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t mask_cpltlevel;
 621:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tickstart = HAL_GetTick(); 
 876              		.loc 1 621 0
 877 0012 FFF7FEFF 		bl	HAL_GetTick
 878 0016 B861     		str	r0, [r7, #24]
 622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs;
 626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_BUSY != hdma->State)
 879              		.loc 1 627 0
 880 0018 FB68     		ldr	r3, [r7, #12]
 881 001a 93F83530 		ldrb	r3, [r3, #53]
 882 001e DBB2     		uxtb	r3, r3
 883 0020 022B     		cmp	r3, #2
 884 0022 08D0     		beq	.L36
 628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 629:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* No transfer ongoing */
 630:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 885              		.loc 1 630 0
 886 0024 FB68     		ldr	r3, [r7, #12]
 887 0026 8022     		movs	r2, #128
 888 0028 5A65     		str	r2, [r3, #84]
 631:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 889              		.loc 1 631 0
 890 002a FB68     		ldr	r3, [r7, #12]
 891 002c 0022     		movs	r2, #0
 892 002e 83F83420 		strb	r2, [r3, #52]
 632:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
 893              		.loc 1 632 0
 894 0032 0123     		movs	r3, #1
 895 0034 D1E0     		b	.L37
 896              	.L36:
 633:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 634:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 635:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Polling mode not supported in circular mode and double buffering mode */
 636:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) != RESET)
 897              		.loc 1 636 0
 898 0036 FB68     		ldr	r3, [r7, #12]
 899 0038 1B68     		ldr	r3, [r3]
 900 003a 1B68     		ldr	r3, [r3]
 901 003c 03F48073 		and	r3, r3, #256
 902 0040 002B     		cmp	r3, #0
 903 0042 05D0     		beq	.L38
 637:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 638:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->ErrorCode = HAL_DMA_ERROR_NOT_SUPPORTED;
 904              		.loc 1 638 0
 905 0044 FB68     		ldr	r3, [r7, #12]
 906 0046 4FF48072 		mov	r2, #256
 907 004a 5A65     		str	r2, [r3, #84]
 639:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     return HAL_ERROR;
ARM GAS  /tmp/ccE1NIbz.s 			page 28


 908              		.loc 1 639 0
 909 004c 0123     		movs	r3, #1
 910 004e C4E0     		b	.L37
 911              	.L38:
 640:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 641:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 642:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
 643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 912              		.loc 1 643 0
 913 0050 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 914 0052 002B     		cmp	r3, #0
 915 0054 06D1     		bne	.L39
 644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Transfer Complete flag */
 646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 916              		.loc 1 646 0
 917 0056 FB68     		ldr	r3, [r7, #12]
 918 0058 DB6D     		ldr	r3, [r3, #92]
 919 005a 1A46     		mov	r2, r3
 920 005c 2023     		movs	r3, #32
 921 005e 9340     		lsls	r3, r3, r2
 922 0060 7B62     		str	r3, [r7, #36]
 923 0062 05E0     		b	.L40
 924              	.L39:
 647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 649:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Half Transfer Complete flag */
 651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     mask_cpltlevel = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 925              		.loc 1 651 0
 926 0064 FB68     		ldr	r3, [r7, #12]
 927 0066 DB6D     		ldr	r3, [r3, #92]
 928 0068 1A46     		mov	r2, r3
 929 006a 1023     		movs	r3, #16
 930 006c 9340     		lsls	r3, r3, r2
 931 006e 7B62     		str	r3, [r7, #36]
 932              	.L40:
 652:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 653:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 654:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 933              		.loc 1 654 0
 934 0070 FB68     		ldr	r3, [r7, #12]
 935 0072 9B6D     		ldr	r3, [r3, #88]
 936 0074 7B61     		str	r3, [r7, #20]
 655:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 937              		.loc 1 655 0
 938 0076 7B69     		ldr	r3, [r7, #20]
 939 0078 1B68     		ldr	r3, [r3]
 940 007a 3B62     		str	r3, [r7, #32]
 656:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   while(((tmpisr & mask_cpltlevel) == RESET) && ((hdma->ErrorCode & HAL_DMA_ERROR_TE) == RESET))
 941              		.loc 1 657 0
 942 007c 66E0     		b	.L41
 943              	.L47:
 658:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 659:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Check for the Timeout (Not applicable in circular mode)*/
 660:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(Timeout != HAL_MAX_DELAY)
ARM GAS  /tmp/ccE1NIbz.s 			page 29


 944              		.loc 1 660 0
 945 007e 7B68     		ldr	r3, [r7, #4]
 946 0080 B3F1FF3F 		cmp	r3, #-1
 947 0084 17D0     		beq	.L42
 661:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 662:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 948              		.loc 1 662 0
 949 0086 7B68     		ldr	r3, [r7, #4]
 950 0088 002B     		cmp	r3, #0
 951 008a 07D0     		beq	.L43
 952              		.loc 1 662 0 is_stmt 0 discriminator 1
 953 008c FFF7FEFF 		bl	HAL_GetTick
 954 0090 0246     		mov	r2, r0
 955 0092 BB69     		ldr	r3, [r7, #24]
 956 0094 D21A     		subs	r2, r2, r3
 957 0096 7B68     		ldr	r3, [r7, #4]
 958 0098 9A42     		cmp	r2, r3
 959 009a 0CD9     		bls	.L42
 960              	.L43:
 663:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 664:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Update error code */
 665:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 961              		.loc 1 665 0 is_stmt 1
 962 009c FB68     		ldr	r3, [r7, #12]
 963 009e 2022     		movs	r2, #32
 964 00a0 5A65     		str	r2, [r3, #84]
 666:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 667:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 668:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 965              		.loc 1 668 0
 966 00a2 FB68     		ldr	r3, [r7, #12]
 967 00a4 0022     		movs	r2, #0
 968 00a6 83F83420 		strb	r2, [r3, #52]
 669:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 670:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
 671:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 969              		.loc 1 671 0
 970 00aa FB68     		ldr	r3, [r7, #12]
 971 00ac 0122     		movs	r2, #1
 972 00ae 83F83520 		strb	r2, [r3, #53]
 672:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 673:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return HAL_TIMEOUT;
 973              		.loc 1 673 0
 974 00b2 0323     		movs	r3, #3
 975 00b4 91E0     		b	.L37
 976              	.L42:
 674:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 675:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 676:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 677:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Get the ISR register value */
 678:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     tmpisr = regs->ISR;
 977              		.loc 1 678 0
 978 00b6 7B69     		ldr	r3, [r7, #20]
 979 00b8 1B68     		ldr	r3, [r3]
 980 00ba 3B62     		str	r3, [r7, #32]
 679:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 680:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
ARM GAS  /tmp/ccE1NIbz.s 			page 30


 981              		.loc 1 680 0
 982 00bc FB68     		ldr	r3, [r7, #12]
 983 00be DB6D     		ldr	r3, [r3, #92]
 984 00c0 1A46     		mov	r2, r3
 985 00c2 0823     		movs	r3, #8
 986 00c4 03FA02F2 		lsl	r2, r3, r2
 987 00c8 3B6A     		ldr	r3, [r7, #32]
 988 00ca 1340     		ands	r3, r3, r2
 989 00cc 002B     		cmp	r3, #0
 990 00ce 0DD0     		beq	.L44
 681:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 682:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 683:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 991              		.loc 1 683 0
 992 00d0 FB68     		ldr	r3, [r7, #12]
 993 00d2 5B6D     		ldr	r3, [r3, #84]
 994 00d4 43F00102 		orr	r2, r3, #1
 995 00d8 FB68     		ldr	r3, [r7, #12]
 996 00da 5A65     		str	r2, [r3, #84]
 684:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 685:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 686:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 997              		.loc 1 686 0
 998 00dc FB68     		ldr	r3, [r7, #12]
 999 00de DB6D     		ldr	r3, [r3, #92]
 1000 00e0 1A46     		mov	r2, r3
 1001 00e2 0823     		movs	r3, #8
 1002 00e4 03FA02F2 		lsl	r2, r3, r2
 1003 00e8 7B69     		ldr	r3, [r7, #20]
 1004 00ea 9A60     		str	r2, [r3, #8]
 1005              	.L44:
 687:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 688:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 689:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1006              		.loc 1 689 0
 1007 00ec FB68     		ldr	r3, [r7, #12]
 1008 00ee DB6D     		ldr	r3, [r3, #92]
 1009 00f0 1A46     		mov	r2, r3
 1010 00f2 3C4B     		ldr	r3, .L51
 1011 00f4 03FA02F2 		lsl	r2, r3, r2
 1012 00f8 3B6A     		ldr	r3, [r7, #32]
 1013 00fa 1340     		ands	r3, r3, r2
 1014 00fc 002B     		cmp	r3, #0
 1015 00fe 0DD0     		beq	.L45
 690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 691:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 692:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1016              		.loc 1 692 0
 1017 0100 FB68     		ldr	r3, [r7, #12]
 1018 0102 5B6D     		ldr	r3, [r3, #84]
 1019 0104 43F00202 		orr	r2, r3, #2
 1020 0108 FB68     		ldr	r3, [r7, #12]
 1021 010a 5A65     		str	r2, [r3, #84]
 693:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 694:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 695:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1022              		.loc 1 695 0
ARM GAS  /tmp/ccE1NIbz.s 			page 31


 1023 010c FB68     		ldr	r3, [r7, #12]
 1024 010e DB6D     		ldr	r3, [r3, #92]
 1025 0110 1A46     		mov	r2, r3
 1026 0112 344B     		ldr	r3, .L51
 1027 0114 03FA02F2 		lsl	r2, r3, r2
 1028 0118 7B69     		ldr	r3, [r7, #20]
 1029 011a 9A60     		str	r2, [r3, #8]
 1030              	.L45:
 696:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 697:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 698:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1031              		.loc 1 698 0
 1032 011c FB68     		ldr	r3, [r7, #12]
 1033 011e DB6D     		ldr	r3, [r3, #92]
 1034 0120 1A46     		mov	r2, r3
 1035 0122 314B     		ldr	r3, .L51+4
 1036 0124 03FA02F2 		lsl	r2, r3, r2
 1037 0128 3B6A     		ldr	r3, [r7, #32]
 1038 012a 1340     		ands	r3, r3, r2
 1039 012c 002B     		cmp	r3, #0
 1040 012e 0DD0     		beq	.L41
 699:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 700:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 701:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1041              		.loc 1 701 0
 1042 0130 FB68     		ldr	r3, [r7, #12]
 1043 0132 5B6D     		ldr	r3, [r3, #84]
 1044 0134 43F00402 		orr	r2, r3, #4
 1045 0138 FB68     		ldr	r3, [r7, #12]
 1046 013a 5A65     		str	r2, [r3, #84]
 702:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 703:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the Direct Mode error flag */
 704:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1047              		.loc 1 704 0
 1048 013c FB68     		ldr	r3, [r7, #12]
 1049 013e DB6D     		ldr	r3, [r3, #92]
 1050 0140 1A46     		mov	r2, r3
 1051 0142 294B     		ldr	r3, .L51+4
 1052 0144 03FA02F2 		lsl	r2, r3, r2
 1053 0148 7B69     		ldr	r3, [r7, #20]
 1054 014a 9A60     		str	r2, [r3, #8]
 1055              	.L41:
 657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1056              		.loc 1 657 0
 1057 014c 3A6A     		ldr	r2, [r7, #32]
 1058 014e 7B6A     		ldr	r3, [r7, #36]
 1059 0150 1340     		ands	r3, r3, r2
 1060 0152 002B     		cmp	r3, #0
 1061 0154 05D1     		bne	.L46
 657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 1062              		.loc 1 657 0 is_stmt 0 discriminator 1
 1063 0156 FB68     		ldr	r3, [r7, #12]
 1064 0158 5B6D     		ldr	r3, [r3, #84]
 1065 015a 03F00103 		and	r3, r3, #1
 1066 015e 002B     		cmp	r3, #0
 1067 0160 8DD0     		beq	.L47
 1068              	.L46:
ARM GAS  /tmp/ccE1NIbz.s 			page 32


 705:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 706:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 707:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 708:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1069              		.loc 1 708 0 is_stmt 1
 1070 0162 FB68     		ldr	r3, [r7, #12]
 1071 0164 5B6D     		ldr	r3, [r3, #84]
 1072 0166 002B     		cmp	r3, #0
 1073 0168 1AD0     		beq	.L48
 709:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 710:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1074              		.loc 1 710 0
 1075 016a FB68     		ldr	r3, [r7, #12]
 1076 016c 5B6D     		ldr	r3, [r3, #84]
 1077 016e 03F00103 		and	r3, r3, #1
 1078 0172 002B     		cmp	r3, #0
 1079 0174 14D0     		beq	.L48
 711:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 712:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       HAL_DMA_Abort(hdma);
 1080              		.loc 1 712 0
 1081 0176 F868     		ldr	r0, [r7, #12]
 1082 0178 FFF7FEFF 		bl	HAL_DMA_Abort
 713:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 714:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer and transfer complete flags */
 715:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1083              		.loc 1 715 0
 1084 017c FB68     		ldr	r3, [r7, #12]
 1085 017e DB6D     		ldr	r3, [r3, #92]
 1086 0180 1A46     		mov	r2, r3
 1087 0182 3023     		movs	r3, #48
 1088 0184 03FA02F2 		lsl	r2, r3, r2
 1089 0188 7B69     		ldr	r3, [r7, #20]
 1090 018a 9A60     		str	r2, [r3, #8]
 716:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 717:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 718:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1091              		.loc 1 718 0
 1092 018c FB68     		ldr	r3, [r7, #12]
 1093 018e 0022     		movs	r2, #0
 1094 0190 83F83420 		strb	r2, [r3, #52]
 719:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 720:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 721:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State= HAL_DMA_STATE_READY;
 1095              		.loc 1 721 0
 1096 0194 FB68     		ldr	r3, [r7, #12]
 1097 0196 0122     		movs	r2, #1
 1098 0198 83F83520 		strb	r2, [r3, #53]
 722:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 723:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       return HAL_ERROR;
 1099              		.loc 1 723 0
 1100 019c 0123     		movs	r3, #1
 1101 019e 1CE0     		b	.L37
 1102              	.L48:
 724:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****    }
 725:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 726:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 727:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Get the level transfer complete flag */
ARM GAS  /tmp/ccE1NIbz.s 			page 33


 728:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(CompleteLevel == HAL_DMA_FULL_TRANSFER)
 1103              		.loc 1 728 0
 1104 01a0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1105 01a2 002B     		cmp	r3, #0
 1106 01a4 10D1     		bne	.L49
 729:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 730:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 731:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4 | DMA_FLAG_TCIF0_4) << hdma->StreamIndex;
 1107              		.loc 1 731 0
 1108 01a6 FB68     		ldr	r3, [r7, #12]
 1109 01a8 DB6D     		ldr	r3, [r3, #92]
 1110 01aa 1A46     		mov	r2, r3
 1111 01ac 3023     		movs	r3, #48
 1112 01ae 03FA02F2 		lsl	r2, r3, r2
 1113 01b2 7B69     		ldr	r3, [r7, #20]
 1114 01b4 9A60     		str	r2, [r3, #8]
 732:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 733:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Process Unlocked */
 734:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     __HAL_UNLOCK(hdma);
 1115              		.loc 1 734 0
 1116 01b6 FB68     		ldr	r3, [r7, #12]
 1117 01b8 0022     		movs	r2, #0
 1118 01ba 83F83420 		strb	r2, [r3, #52]
 735:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 736:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->State = HAL_DMA_STATE_READY;
 1119              		.loc 1 736 0
 1120 01be FB68     		ldr	r3, [r7, #12]
 1121 01c0 0122     		movs	r2, #1
 1122 01c2 83F83520 		strb	r2, [r3, #53]
 1123 01c6 07E0     		b	.L50
 1124              	.L49:
 737:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 738:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
 739:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 740:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Clear the half transfer and transfer complete flags */
 741:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     regs->IFCR = (DMA_FLAG_HTIF0_4) << hdma->StreamIndex;
 1125              		.loc 1 741 0
 1126 01c8 FB68     		ldr	r3, [r7, #12]
 1127 01ca DB6D     		ldr	r3, [r3, #92]
 1128 01cc 1A46     		mov	r2, r3
 1129 01ce 1023     		movs	r3, #16
 1130 01d0 03FA02F2 		lsl	r2, r3, r2
 1131 01d4 7B69     		ldr	r3, [r7, #20]
 1132 01d6 9A60     		str	r2, [r3, #8]
 1133              	.L50:
 742:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 743:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 744:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1134              		.loc 1 744 0
 1135 01d8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1136              	.L37:
 745:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1137              		.loc 1 745 0
 1138 01da 1846     		mov	r0, r3
 1139 01dc 2837     		adds	r7, r7, #40
 1140              	.LCFI34:
 1141              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccE1NIbz.s 			page 34


 1142 01de BD46     		mov	sp, r7
 1143              	.LCFI35:
 1144              		.cfi_def_cfa_register 13
 1145              		@ sp needed
 1146 01e0 80BD     		pop	{r7, pc}
 1147              	.L52:
 1148 01e2 00BF     		.align	2
 1149              	.L51:
 1150 01e4 01008000 		.word	8388609
 1151 01e8 04008000 		.word	8388612
 1152              		.cfi_endproc
 1153              	.LFE141:
 1155              		.section	.text.HAL_DMA_IRQHandler,"ax",%progbits
 1156              		.align	2
 1157              		.global	HAL_DMA_IRQHandler
 1158              		.thumb
 1159              		.thumb_func
 1161              	HAL_DMA_IRQHandler:
 1162              	.LFB142:
 746:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 747:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 748:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Handles DMA interrupt request.
 749:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
 750:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.  
 751:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval None
 752:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
 753:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
 754:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1163              		.loc 1 754 0
 1164              		.cfi_startproc
 1165              		@ args = 0, pretend = 0, frame = 24
 1166              		@ frame_needed = 1, uses_anonymous_args = 0
 1167 0000 80B5     		push	{r7, lr}
 1168              	.LCFI36:
 1169              		.cfi_def_cfa_offset 8
 1170              		.cfi_offset 7, -8
 1171              		.cfi_offset 14, -4
 1172 0002 86B0     		sub	sp, sp, #24
 1173              	.LCFI37:
 1174              		.cfi_def_cfa_offset 32
 1175 0004 00AF     		add	r7, sp, #0
 1176              	.LCFI38:
 1177              		.cfi_def_cfa_register 7
 1178 0006 7860     		str	r0, [r7, #4]
 755:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmpisr;
 756:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __IO uint32_t count = 0;
 1179              		.loc 1 756 0
 1180 0008 0023     		movs	r3, #0
 1181 000a BB60     		str	r3, [r7, #8]
 757:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t timeout = SystemCoreClock / 9600;
 1182              		.loc 1 757 0
 1183 000c 994B     		ldr	r3, .L78
 1184 000e 1B68     		ldr	r3, [r3]
 1185 0010 994A     		ldr	r2, .L78+4
 1186 0012 A2FB0323 		umull	r2, r3, r2, r3
 1187 0016 9B0A     		lsrs	r3, r3, #10
 1188 0018 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccE1NIbz.s 			page 35


 758:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 759:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* calculate DMA base and stream number */
 760:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 1189              		.loc 1 760 0
 1190 001a 7B68     		ldr	r3, [r7, #4]
 1191 001c 9B6D     		ldr	r3, [r3, #88]
 1192 001e 3B61     		str	r3, [r7, #16]
 761:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 762:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   tmpisr = regs->ISR;
 1193              		.loc 1 762 0
 1194 0020 3B69     		ldr	r3, [r7, #16]
 1195 0022 1B68     		ldr	r3, [r3]
 1196 0024 FB60     		str	r3, [r7, #12]
 763:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 764:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Error Interrupt management ***************************************/
 765:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 1197              		.loc 1 765 0
 1198 0026 7B68     		ldr	r3, [r7, #4]
 1199 0028 DB6D     		ldr	r3, [r3, #92]
 1200 002a 1A46     		mov	r2, r3
 1201 002c 0823     		movs	r3, #8
 1202 002e 03FA02F2 		lsl	r2, r3, r2
 1203 0032 FB68     		ldr	r3, [r7, #12]
 1204 0034 1340     		ands	r3, r3, r2
 1205 0036 002B     		cmp	r3, #0
 1206 0038 1CD0     		beq	.L54
 766:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 767:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 1207              		.loc 1 767 0
 1208 003a 7B68     		ldr	r3, [r7, #4]
 1209 003c 1B68     		ldr	r3, [r3]
 1210 003e 1B68     		ldr	r3, [r3]
 1211 0040 03F00403 		and	r3, r3, #4
 1212 0044 002B     		cmp	r3, #0
 1213 0046 15D0     		beq	.L54
 768:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 769:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer error interrupt */
 770:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->Instance->CR  &= ~(DMA_IT_TE);
 1214              		.loc 1 770 0
 1215 0048 7B68     		ldr	r3, [r7, #4]
 1216 004a 1B68     		ldr	r3, [r3]
 1217 004c 7A68     		ldr	r2, [r7, #4]
 1218 004e 1268     		ldr	r2, [r2]
 1219 0050 1268     		ldr	r2, [r2]
 1220 0052 22F00402 		bic	r2, r2, #4
 1221 0056 1A60     		str	r2, [r3]
 771:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 772:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer error flag */
 773:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 1222              		.loc 1 773 0
 1223 0058 7B68     		ldr	r3, [r7, #4]
 1224 005a DB6D     		ldr	r3, [r3, #92]
 1225 005c 1A46     		mov	r2, r3
 1226 005e 0823     		movs	r3, #8
 1227 0060 03FA02F2 		lsl	r2, r3, r2
 1228 0064 3B69     		ldr	r3, [r7, #16]
 1229 0066 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccE1NIbz.s 			page 36


 774:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 775:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 776:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 1230              		.loc 1 776 0
 1231 0068 7B68     		ldr	r3, [r7, #4]
 1232 006a 5B6D     		ldr	r3, [r3, #84]
 1233 006c 43F00102 		orr	r2, r3, #1
 1234 0070 7B68     		ldr	r3, [r7, #4]
 1235 0072 5A65     		str	r2, [r3, #84]
 1236              	.L54:
 777:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 778:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 779:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* FIFO Error Interrupt management ******************************************/
 780:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 1237              		.loc 1 780 0
 1238 0074 7B68     		ldr	r3, [r7, #4]
 1239 0076 DB6D     		ldr	r3, [r3, #92]
 1240 0078 1A46     		mov	r2, r3
 1241 007a 804B     		ldr	r3, .L78+8
 1242 007c 03FA02F2 		lsl	r2, r3, r2
 1243 0080 FB68     		ldr	r3, [r7, #12]
 1244 0082 1340     		ands	r3, r3, r2
 1245 0084 002B     		cmp	r3, #0
 1246 0086 14D0     		beq	.L55
 781:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 782:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 1247              		.loc 1 782 0
 1248 0088 7B68     		ldr	r3, [r7, #4]
 1249 008a 1B68     		ldr	r3, [r3]
 1250 008c 5B69     		ldr	r3, [r3, #20]
 1251 008e 03F08003 		and	r3, r3, #128
 1252 0092 002B     		cmp	r3, #0
 1253 0094 0DD0     		beq	.L55
 783:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 784:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the FIFO error flag */
 785:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 1254              		.loc 1 785 0
 1255 0096 7B68     		ldr	r3, [r7, #4]
 1256 0098 DB6D     		ldr	r3, [r3, #92]
 1257 009a 1A46     		mov	r2, r3
 1258 009c 774B     		ldr	r3, .L78+8
 1259 009e 03FA02F2 		lsl	r2, r3, r2
 1260 00a2 3B69     		ldr	r3, [r7, #16]
 1261 00a4 9A60     		str	r2, [r3, #8]
 786:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 787:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 788:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 1262              		.loc 1 788 0
 1263 00a6 7B68     		ldr	r3, [r7, #4]
 1264 00a8 5B6D     		ldr	r3, [r3, #84]
 1265 00aa 43F00202 		orr	r2, r3, #2
 1266 00ae 7B68     		ldr	r3, [r7, #4]
 1267 00b0 5A65     		str	r2, [r3, #84]
 1268              	.L55:
 789:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 790:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 791:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Direct Mode Error Interrupt management ***********************************/
ARM GAS  /tmp/ccE1NIbz.s 			page 37


 792:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 1269              		.loc 1 792 0
 1270 00b2 7B68     		ldr	r3, [r7, #4]
 1271 00b4 DB6D     		ldr	r3, [r3, #92]
 1272 00b6 1A46     		mov	r2, r3
 1273 00b8 714B     		ldr	r3, .L78+12
 1274 00ba 03FA02F2 		lsl	r2, r3, r2
 1275 00be FB68     		ldr	r3, [r7, #12]
 1276 00c0 1340     		ands	r3, r3, r2
 1277 00c2 002B     		cmp	r3, #0
 1278 00c4 14D0     		beq	.L56
 793:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 794:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 1279              		.loc 1 794 0
 1280 00c6 7B68     		ldr	r3, [r7, #4]
 1281 00c8 1B68     		ldr	r3, [r3]
 1282 00ca 1B68     		ldr	r3, [r3]
 1283 00cc 03F00203 		and	r3, r3, #2
 1284 00d0 002B     		cmp	r3, #0
 1285 00d2 0DD0     		beq	.L56
 795:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 796:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the direct mode error flag */
 797:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 1286              		.loc 1 797 0
 1287 00d4 7B68     		ldr	r3, [r7, #4]
 1288 00d6 DB6D     		ldr	r3, [r3, #92]
 1289 00d8 1A46     		mov	r2, r3
 1290 00da 694B     		ldr	r3, .L78+12
 1291 00dc 03FA02F2 		lsl	r2, r3, r2
 1292 00e0 3B69     		ldr	r3, [r7, #16]
 1293 00e2 9A60     		str	r2, [r3, #8]
 798:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 799:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Update error code */
 800:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 1294              		.loc 1 800 0
 1295 00e4 7B68     		ldr	r3, [r7, #4]
 1296 00e6 5B6D     		ldr	r3, [r3, #84]
 1297 00e8 43F00402 		orr	r2, r3, #4
 1298 00ec 7B68     		ldr	r3, [r7, #4]
 1299 00ee 5A65     		str	r2, [r3, #84]
 1300              	.L56:
 801:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 802:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 803:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Half Transfer Complete Interrupt management ******************************/
 804:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 1301              		.loc 1 804 0
 1302 00f0 7B68     		ldr	r3, [r7, #4]
 1303 00f2 DB6D     		ldr	r3, [r3, #92]
 1304 00f4 1A46     		mov	r2, r3
 1305 00f6 1023     		movs	r3, #16
 1306 00f8 03FA02F2 		lsl	r2, r3, r2
 1307 00fc FB68     		ldr	r3, [r7, #12]
 1308 00fe 1340     		ands	r3, r3, r2
 1309 0100 002B     		cmp	r3, #0
 1310 0102 45D0     		beq	.L57
 805:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 806:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
ARM GAS  /tmp/ccE1NIbz.s 			page 38


 1311              		.loc 1 806 0
 1312 0104 7B68     		ldr	r3, [r7, #4]
 1313 0106 1B68     		ldr	r3, [r3]
 1314 0108 1B68     		ldr	r3, [r3]
 1315 010a 03F00803 		and	r3, r3, #8
 1316 010e 002B     		cmp	r3, #0
 1317 0110 3ED0     		beq	.L57
 807:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 808:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the half transfer complete flag */
 809:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 1318              		.loc 1 809 0
 1319 0112 7B68     		ldr	r3, [r7, #4]
 1320 0114 DB6D     		ldr	r3, [r3, #92]
 1321 0116 1A46     		mov	r2, r3
 1322 0118 1023     		movs	r3, #16
 1323 011a 03FA02F2 		lsl	r2, r3, r2
 1324 011e 3B69     		ldr	r3, [r7, #16]
 1325 0120 9A60     		str	r2, [r3, #8]
 810:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 811:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Multi_Buffering mode enabled */
 812:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1326              		.loc 1 812 0
 1327 0122 7B68     		ldr	r3, [r7, #4]
 1328 0124 1B68     		ldr	r3, [r3]
 1329 0126 1B68     		ldr	r3, [r3]
 1330 0128 03F48023 		and	r3, r3, #262144
 1331 012c 002B     		cmp	r3, #0
 1332 012e 18D0     		beq	.L58
 813:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 814:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 815:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1333              		.loc 1 815 0
 1334 0130 7B68     		ldr	r3, [r7, #4]
 1335 0132 1B68     		ldr	r3, [r3]
 1336 0134 1B68     		ldr	r3, [r3]
 1337 0136 03F40023 		and	r3, r3, #524288
 1338 013a 002B     		cmp	r3, #0
 1339 013c 08D1     		bne	.L59
 816:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 817:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferHalfCpltCallback != NULL)
 1340              		.loc 1 817 0
 1341 013e 7B68     		ldr	r3, [r7, #4]
 1342 0140 1B6C     		ldr	r3, [r3, #64]
 1343 0142 002B     		cmp	r3, #0
 1344 0144 24D0     		beq	.L57
 818:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 819:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 820:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferHalfCpltCallback(hdma);
 1345              		.loc 1 820 0
 1346 0146 7B68     		ldr	r3, [r7, #4]
 1347 0148 1B6C     		ldr	r3, [r3, #64]
 1348 014a 7868     		ldr	r0, [r7, #4]
 1349 014c 9847     		blx	r3
 1350 014e 1FE0     		b	.L57
 1351              	.L59:
 821:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 822:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
ARM GAS  /tmp/ccE1NIbz.s 			page 39


 823:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 824:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 825:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 826:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1HalfCpltCallback != NULL)
 1352              		.loc 1 826 0
 1353 0150 7B68     		ldr	r3, [r7, #4]
 1354 0152 9B6C     		ldr	r3, [r3, #72]
 1355 0154 002B     		cmp	r3, #0
 1356 0156 1BD0     		beq	.L57
 827:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 828:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Half transfer callback */
 829:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1HalfCpltCallback(hdma);
 1357              		.loc 1 829 0
 1358 0158 7B68     		ldr	r3, [r7, #4]
 1359 015a 9B6C     		ldr	r3, [r3, #72]
 1360 015c 7868     		ldr	r0, [r7, #4]
 1361 015e 9847     		blx	r3
 1362 0160 16E0     		b	.L57
 1363              	.L58:
 830:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 831:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 832:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 833:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 834:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 835:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
 836:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1364              		.loc 1 836 0
 1365 0162 7B68     		ldr	r3, [r7, #4]
 1366 0164 1B68     		ldr	r3, [r3]
 1367 0166 1B68     		ldr	r3, [r3]
 1368 0168 03F48073 		and	r3, r3, #256
 1369 016c 002B     		cmp	r3, #0
 1370 016e 07D1     		bne	.L62
 837:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 838:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the half transfer interrupt */
 839:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1371              		.loc 1 839 0
 1372 0170 7B68     		ldr	r3, [r7, #4]
 1373 0172 1B68     		ldr	r3, [r3]
 1374 0174 7A68     		ldr	r2, [r7, #4]
 1375 0176 1268     		ldr	r2, [r2]
 1376 0178 1268     		ldr	r2, [r2]
 1377 017a 22F00802 		bic	r2, r2, #8
 1378 017e 1A60     		str	r2, [r3]
 1379              	.L62:
 840:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 841:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 842:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferHalfCpltCallback != NULL)
 1380              		.loc 1 842 0
 1381 0180 7B68     		ldr	r3, [r7, #4]
 1382 0182 1B6C     		ldr	r3, [r3, #64]
 1383 0184 002B     		cmp	r3, #0
 1384 0186 03D0     		beq	.L57
 843:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 844:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Half transfer callback */
 845:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferHalfCpltCallback(hdma);
 1385              		.loc 1 845 0
ARM GAS  /tmp/ccE1NIbz.s 			page 40


 1386 0188 7B68     		ldr	r3, [r7, #4]
 1387 018a 1B6C     		ldr	r3, [r3, #64]
 1388 018c 7868     		ldr	r0, [r7, #4]
 1389 018e 9847     		blx	r3
 1390              	.L57:
 846:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 847:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 848:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 849:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 850:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Transfer Complete Interrupt management ***********************************/
 851:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 1391              		.loc 1 851 0
 1392 0190 7B68     		ldr	r3, [r7, #4]
 1393 0192 DB6D     		ldr	r3, [r3, #92]
 1394 0194 1A46     		mov	r2, r3
 1395 0196 2023     		movs	r3, #32
 1396 0198 03FA02F2 		lsl	r2, r3, r2
 1397 019c FB68     		ldr	r3, [r7, #12]
 1398 019e 1340     		ands	r3, r3, r2
 1399 01a0 002B     		cmp	r3, #0
 1400 01a2 00F09780 		beq	.L63
 852:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 853:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 1401              		.loc 1 853 0
 1402 01a6 7B68     		ldr	r3, [r7, #4]
 1403 01a8 1B68     		ldr	r3, [r3]
 1404 01aa 1B68     		ldr	r3, [r3]
 1405 01ac 03F01003 		and	r3, r3, #16
 1406 01b0 002B     		cmp	r3, #0
 1407 01b2 00F08F80 		beq	.L63
 854:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 855:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Clear the transfer complete flag */
 856:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 1408              		.loc 1 856 0
 1409 01b6 7B68     		ldr	r3, [r7, #4]
 1410 01b8 DB6D     		ldr	r3, [r3, #92]
 1411 01ba 1A46     		mov	r2, r3
 1412 01bc 2023     		movs	r3, #32
 1413 01be 03FA02F2 		lsl	r2, r3, r2
 1414 01c2 3B69     		ldr	r3, [r7, #16]
 1415 01c4 9A60     		str	r2, [r3, #8]
 857:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 858:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(HAL_DMA_STATE_ABORT == hdma->State)
 1416              		.loc 1 858 0
 1417 01c6 7B68     		ldr	r3, [r7, #4]
 1418 01c8 93F83530 		ldrb	r3, [r3, #53]
 1419 01cc DBB2     		uxtb	r3, r3
 1420 01ce 052B     		cmp	r3, #5
 1421 01d0 39D1     		bne	.L64
 859:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 860:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Disable all the transfer interrupts */
 861:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 1422              		.loc 1 861 0
 1423 01d2 7B68     		ldr	r3, [r7, #4]
 1424 01d4 1B68     		ldr	r3, [r3]
 1425 01d6 7A68     		ldr	r2, [r7, #4]
 1426 01d8 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccE1NIbz.s 			page 41


 1427 01da 1268     		ldr	r2, [r2]
 1428 01dc 22F01602 		bic	r2, r2, #22
 1429 01e0 1A60     		str	r2, [r3]
 862:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->Instance->FCR &= ~(DMA_IT_FE);
 1430              		.loc 1 862 0
 1431 01e2 7B68     		ldr	r3, [r7, #4]
 1432 01e4 1B68     		ldr	r3, [r3]
 1433 01e6 7A68     		ldr	r2, [r7, #4]
 1434 01e8 1268     		ldr	r2, [r2]
 1435 01ea 5269     		ldr	r2, [r2, #20]
 1436 01ec 22F08002 		bic	r2, r2, #128
 1437 01f0 5A61     		str	r2, [r3, #20]
 863:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 864:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 1438              		.loc 1 864 0
 1439 01f2 7B68     		ldr	r3, [r7, #4]
 1440 01f4 1B6C     		ldr	r3, [r3, #64]
 1441 01f6 002B     		cmp	r3, #0
 1442 01f8 03D1     		bne	.L65
 1443              		.loc 1 864 0 is_stmt 0 discriminator 1
 1444 01fa 7B68     		ldr	r3, [r7, #4]
 1445 01fc 9B6C     		ldr	r3, [r3, #72]
 1446 01fe 002B     		cmp	r3, #0
 1447 0200 07D0     		beq	.L66
 1448              	.L65:
 865:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 866:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_HT);
 1449              		.loc 1 866 0 is_stmt 1
 1450 0202 7B68     		ldr	r3, [r7, #4]
 1451 0204 1B68     		ldr	r3, [r3]
 1452 0206 7A68     		ldr	r2, [r7, #4]
 1453 0208 1268     		ldr	r2, [r2]
 1454 020a 1268     		ldr	r2, [r2]
 1455 020c 22F00802 		bic	r2, r2, #8
 1456 0210 1A60     		str	r2, [r3]
 1457              	.L66:
 867:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 868:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 869:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Clear all interrupt flags at correct offset within the register */
 870:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         regs->IFCR = 0x3FU << hdma->StreamIndex;
 1458              		.loc 1 870 0
 1459 0212 7B68     		ldr	r3, [r7, #4]
 1460 0214 DB6D     		ldr	r3, [r3, #92]
 1461 0216 1A46     		mov	r2, r3
 1462 0218 3F23     		movs	r3, #63
 1463 021a 03FA02F2 		lsl	r2, r3, r2
 1464 021e 3B69     		ldr	r3, [r7, #16]
 1465 0220 9A60     		str	r2, [r3, #8]
 871:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 872:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Process Unlocked */
 873:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         __HAL_UNLOCK(hdma);
 1466              		.loc 1 873 0
 1467 0222 7B68     		ldr	r3, [r7, #4]
 1468 0224 0022     		movs	r2, #0
 1469 0226 83F83420 		strb	r2, [r3, #52]
 874:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****          
 875:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Change the DMA state */
ARM GAS  /tmp/ccE1NIbz.s 			page 42


 876:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         hdma->State = HAL_DMA_STATE_READY;
 1470              		.loc 1 876 0
 1471 022a 7B68     		ldr	r3, [r7, #4]
 1472 022c 0122     		movs	r2, #1
 1473 022e 83F83520 		strb	r2, [r3, #53]
 877:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 	
 878:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferAbortCallback != NULL)
 1474              		.loc 1 878 0
 1475 0232 7B68     		ldr	r3, [r7, #4]
 1476 0234 1B6D     		ldr	r3, [r3, #80]
 1477 0236 002B     		cmp	r3, #0
 1478 0238 04D0     		beq	.L67
 879:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 880:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferAbortCallback(hdma);
 1479              		.loc 1 880 0
 1480 023a 7B68     		ldr	r3, [r7, #4]
 1481 023c 1B6D     		ldr	r3, [r3, #80]
 1482 023e 7868     		ldr	r0, [r7, #4]
 1483 0240 9847     		blx	r3
 881:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 882:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         return;
 1484              		.loc 1 882 0
 1485 0242 7BE0     		b	.L53
 1486              	.L67:
 1487 0244 7AE0     		b	.L53
 1488              	.L64:
 883:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 884:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 885:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 1489              		.loc 1 885 0
 1490 0246 7B68     		ldr	r3, [r7, #4]
 1491 0248 1B68     		ldr	r3, [r3]
 1492 024a 1B68     		ldr	r3, [r3]
 1493 024c 03F48023 		and	r3, r3, #262144
 1494 0250 002B     		cmp	r3, #0
 1495 0252 20D0     		beq	.L69
 886:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 887:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 0 */
 888:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 1496              		.loc 1 888 0
 1497 0254 7B68     		ldr	r3, [r7, #4]
 1498 0256 1B68     		ldr	r3, [r3]
 1499 0258 1B68     		ldr	r3, [r3]
 1500 025a 03F40023 		and	r3, r3, #524288
 1501 025e 002B     		cmp	r3, #0
 1502 0260 10D1     		bne	.L70
 889:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 890:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferM1CpltCallback != NULL)
 1503              		.loc 1 890 0
 1504 0262 7B68     		ldr	r3, [r7, #4]
 1505 0264 5B6C     		ldr	r3, [r3, #68]
 1506 0266 002B     		cmp	r3, #0
 1507 0268 34D0     		beq	.L63
 891:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 892:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory1 */
 893:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferM1CpltCallback(hdma);
 1508              		.loc 1 893 0
ARM GAS  /tmp/ccE1NIbz.s 			page 43


 1509 026a 7B68     		ldr	r3, [r7, #4]
 1510 026c 5B6C     		ldr	r3, [r3, #68]
 1511 026e 7868     		ldr	r0, [r7, #4]
 1512 0270 9847     		blx	r3
 1513 0272 2FE0     		b	.L63
 1514              	.L79:
 1515              		.align	2
 1516              	.L78:
 1517 0274 00000000 		.word	SystemCoreClock
 1518 0278 B5814E1B 		.word	458129845
 1519 027c 01008000 		.word	8388609
 1520 0280 04008000 		.word	8388612
 1521              	.L70:
 894:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 895:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 896:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         /* Current memory buffer used is Memory 1 */
 897:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         else
 898:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 899:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           if(hdma->XferCpltCallback != NULL)
 1522              		.loc 1 899 0
 1523 0284 7B68     		ldr	r3, [r7, #4]
 1524 0286 DB6B     		ldr	r3, [r3, #60]
 1525 0288 002B     		cmp	r3, #0
 1526 028a 23D0     		beq	.L63
 900:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           {
 901:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             /* Transfer complete Callback for memory0 */
 902:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****             hdma->XferCpltCallback(hdma);
 1527              		.loc 1 902 0
 1528 028c 7B68     		ldr	r3, [r7, #4]
 1529 028e DB6B     		ldr	r3, [r3, #60]
 1530 0290 7868     		ldr	r0, [r7, #4]
 1531 0292 9847     		blx	r3
 1532 0294 1EE0     		b	.L63
 1533              	.L69:
 903:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           }
 904:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 905:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 906:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
 907:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       else
 908:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 909:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 1534              		.loc 1 909 0
 1535 0296 7B68     		ldr	r3, [r7, #4]
 1536 0298 1B68     		ldr	r3, [r3]
 1537 029a 1B68     		ldr	r3, [r3]
 1538 029c 03F48073 		and	r3, r3, #256
 1539 02a0 002B     		cmp	r3, #0
 1540 02a2 0FD1     		bne	.L73
 910:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 911:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Disable the transfer complete interrupt */
 912:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->Instance->CR  &= ~(DMA_IT_TC);
 1541              		.loc 1 912 0
 1542 02a4 7B68     		ldr	r3, [r7, #4]
 1543 02a6 1B68     		ldr	r3, [r3]
 1544 02a8 7A68     		ldr	r2, [r7, #4]
 1545 02aa 1268     		ldr	r2, [r2]
 1546 02ac 1268     		ldr	r2, [r2]
ARM GAS  /tmp/ccE1NIbz.s 			page 44


 1547 02ae 22F01002 		bic	r2, r2, #16
 1548 02b2 1A60     		str	r2, [r3]
 913:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 914:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Process Unlocked */
 915:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           __HAL_UNLOCK(hdma);
 1549              		.loc 1 915 0
 1550 02b4 7B68     		ldr	r3, [r7, #4]
 1551 02b6 0022     		movs	r2, #0
 1552 02b8 83F83420 		strb	r2, [r3, #52]
 916:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           
 917:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Change the DMA state */
 918:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->State = HAL_DMA_STATE_READY;
 1553              		.loc 1 918 0
 1554 02bc 7B68     		ldr	r3, [r7, #4]
 1555 02be 0122     		movs	r2, #1
 1556 02c0 83F83520 		strb	r2, [r3, #53]
 1557              	.L73:
 919:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 920:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         
 921:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if(hdma->XferCpltCallback != NULL)
 1558              		.loc 1 921 0
 1559 02c4 7B68     		ldr	r3, [r7, #4]
 1560 02c6 DB6B     		ldr	r3, [r3, #60]
 1561 02c8 002B     		cmp	r3, #0
 1562 02ca 03D0     		beq	.L63
 922:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 923:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           /* Transfer complete callback */
 924:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           hdma->XferCpltCallback(hdma);
 1563              		.loc 1 924 0
 1564 02cc 7B68     		ldr	r3, [r7, #4]
 1565 02ce DB6B     		ldr	r3, [r3, #60]
 1566 02d0 7868     		ldr	r0, [r7, #4]
 1567 02d2 9847     		blx	r3
 1568              	.L63:
 925:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 926:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 927:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 928:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 929:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
 930:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* manage error case */
 931:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 1569              		.loc 1 931 0
 1570 02d4 7B68     		ldr	r3, [r7, #4]
 1571 02d6 5B6D     		ldr	r3, [r3, #84]
 1572 02d8 002B     		cmp	r3, #0
 1573 02da 2FD0     		beq	.L53
 932:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 933:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 1574              		.loc 1 933 0
 1575 02dc 7B68     		ldr	r3, [r7, #4]
 1576 02de 5B6D     		ldr	r3, [r3, #84]
 1577 02e0 03F00103 		and	r3, r3, #1
 1578 02e4 002B     		cmp	r3, #0
 1579 02e6 21D0     		beq	.L74
 934:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 935:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_ABORT;
 1580              		.loc 1 935 0
ARM GAS  /tmp/ccE1NIbz.s 			page 45


 1581 02e8 7B68     		ldr	r3, [r7, #4]
 1582 02ea 0522     		movs	r2, #5
 1583 02ec 83F83520 		strb	r2, [r3, #53]
 936:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 937:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Disable the stream */
 938:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_DMA_DISABLE(hdma);
 1584              		.loc 1 938 0
 1585 02f0 7B68     		ldr	r3, [r7, #4]
 1586 02f2 1B68     		ldr	r3, [r3]
 1587 02f4 7A68     		ldr	r2, [r7, #4]
 1588 02f6 1268     		ldr	r2, [r2]
 1589 02f8 1268     		ldr	r2, [r2]
 1590 02fa 22F00102 		bic	r2, r2, #1
 1591 02fe 1A60     		str	r2, [r3]
 1592              	.L77:
 939:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 940:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       do
 941:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       {
 942:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (++count > timeout)
 1593              		.loc 1 942 0
 1594 0300 BB68     		ldr	r3, [r7, #8]
 1595 0302 0133     		adds	r3, r3, #1
 1596 0304 BB60     		str	r3, [r7, #8]
 1597 0306 7A69     		ldr	r2, [r7, #20]
 1598 0308 9342     		cmp	r3, r2
 1599 030a 00D9     		bls	.L75
 943:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 944:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           break;
 1600              		.loc 1 944 0
 1601 030c 06E0     		b	.L76
 1602              	.L75:
 945:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 946:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       }
 947:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 1603              		.loc 1 947 0
 1604 030e 7B68     		ldr	r3, [r7, #4]
 1605 0310 1B68     		ldr	r3, [r3]
 1606 0312 1B68     		ldr	r3, [r3]
 1607 0314 03F00103 		and	r3, r3, #1
 1608 0318 002B     		cmp	r3, #0
 1609 031a F1D1     		bne	.L77
 1610              	.L76:
 948:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 949:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Process Unlocked */
 950:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       __HAL_UNLOCK(hdma);
 1611              		.loc 1 950 0
 1612 031c 7B68     		ldr	r3, [r7, #4]
 1613 031e 0022     		movs	r2, #0
 1614 0320 83F83420 		strb	r2, [r3, #52]
 951:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 952:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Change the DMA state */
 953:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->State = HAL_DMA_STATE_READY;
 1615              		.loc 1 953 0
 1616 0324 7B68     		ldr	r3, [r7, #4]
 1617 0326 0122     		movs	r2, #1
 1618 0328 83F83520 		strb	r2, [r3, #53]
 1619              	.L74:
ARM GAS  /tmp/ccE1NIbz.s 			page 46


 954:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 955:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
 956:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     if(hdma->XferErrorCallback != NULL)
 1620              		.loc 1 956 0
 1621 032c 7B68     		ldr	r3, [r7, #4]
 1622 032e DB6C     		ldr	r3, [r3, #76]
 1623 0330 002B     		cmp	r3, #0
 1624 0332 03D0     		beq	.L53
 957:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 958:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       /* Transfer error callback */
 959:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback(hdma);
 1625              		.loc 1 959 0
 1626 0334 7B68     		ldr	r3, [r7, #4]
 1627 0336 DB6C     		ldr	r3, [r3, #76]
 1628 0338 7868     		ldr	r0, [r7, #4]
 1629 033a 9847     		blx	r3
 1630              	.L53:
 960:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
 961:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
 962:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1631              		.loc 1 962 0
 1632 033c 1837     		adds	r7, r7, #24
 1633              	.LCFI39:
 1634              		.cfi_def_cfa_offset 8
 1635 033e BD46     		mov	sp, r7
 1636              	.LCFI40:
 1637              		.cfi_def_cfa_register 13
 1638              		@ sp needed
 1639 0340 80BD     		pop	{r7, pc}
 1640              		.cfi_endproc
 1641              	.LFE142:
 1643 0342 00BF     		.section	.text.HAL_DMA_RegisterCallback,"ax",%progbits
 1644              		.align	2
 1645              		.global	HAL_DMA_RegisterCallback
 1646              		.thumb
 1647              		.thumb_func
 1649              	HAL_DMA_RegisterCallback:
 1650              	.LFB143:
 963:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 964:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
 965:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Register callbacks
 966:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:                 pointer to a DMA_HandleTypeDef structure that contains
 967:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
 968:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID:           User Callback identifer
 969:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 970:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  pCallback:            pointer to private callbacsk function which has pointer to 
 971:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a DMA_HandleTypeDef structure as parameter.
 972:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
 973:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */                      
 974:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Callb
 975:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1651              		.loc 1 975 0
 1652              		.cfi_startproc
 1653              		@ args = 0, pretend = 0, frame = 24
 1654              		@ frame_needed = 1, uses_anonymous_args = 0
 1655              		@ link register save eliminated.
 1656 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccE1NIbz.s 			page 47


 1657              	.LCFI41:
 1658              		.cfi_def_cfa_offset 4
 1659              		.cfi_offset 7, -4
 1660 0002 87B0     		sub	sp, sp, #28
 1661              	.LCFI42:
 1662              		.cfi_def_cfa_offset 32
 1663 0004 00AF     		add	r7, sp, #0
 1664              	.LCFI43:
 1665              		.cfi_def_cfa_register 7
 1666 0006 F860     		str	r0, [r7, #12]
 1667 0008 0B46     		mov	r3, r1
 1668 000a 7A60     		str	r2, [r7, #4]
 1669 000c FB72     		strb	r3, [r7, #11]
 976:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 977:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1670              		.loc 1 977 0
 1671 000e 0023     		movs	r3, #0
 1672 0010 FB75     		strb	r3, [r7, #23]
 978:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 979:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
 980:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1673              		.loc 1 980 0
 1674 0012 FB68     		ldr	r3, [r7, #12]
 1675 0014 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1676 0018 012B     		cmp	r3, #1
 1677 001a 01D1     		bne	.L81
 1678              		.loc 1 980 0 is_stmt 0 discriminator 1
 1679 001c 0223     		movs	r3, #2
 1680 001e 3CE0     		b	.L82
 1681              	.L81:
 1682              		.loc 1 980 0 discriminator 2
 1683 0020 FB68     		ldr	r3, [r7, #12]
 1684 0022 0122     		movs	r2, #1
 1685 0024 83F83420 		strb	r2, [r3, #52]
 981:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
 982:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1686              		.loc 1 982 0 is_stmt 1 discriminator 2
 1687 0028 FB68     		ldr	r3, [r7, #12]
 1688 002a 93F83530 		ldrb	r3, [r3, #53]
 1689 002e DBB2     		uxtb	r3, r3
 1690 0030 012B     		cmp	r3, #1
 1691 0032 2BD1     		bne	.L83
 983:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
 984:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 1692              		.loc 1 984 0
 1693 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1694 0036 052B     		cmp	r3, #5
 1695 0038 26D8     		bhi	.L94
 1696 003a 01A2     		adr	r2, .L86
 1697 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1698              		.p2align 2
 1699              	.L86:
 1700 0040 59000000 		.word	.L85+1
 1701 0044 61000000 		.word	.L87+1
 1702 0048 69000000 		.word	.L88+1
 1703 004c 71000000 		.word	.L89+1
 1704 0050 79000000 		.word	.L90+1
ARM GAS  /tmp/ccE1NIbz.s 			page 48


 1705 0054 81000000 		.word	.L91+1
 1706              		.p2align 1
 1707              	.L85:
 985:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
 986:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
 987:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = pCallback;
 1708              		.loc 1 987 0
 1709 0058 FB68     		ldr	r3, [r7, #12]
 1710 005a 7A68     		ldr	r2, [r7, #4]
 1711 005c DA63     		str	r2, [r3, #60]
 988:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1712              		.loc 1 988 0
 1713 005e 14E0     		b	.L92
 1714              	.L87:
 989:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 990:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
 991:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = pCallback;
 1715              		.loc 1 991 0
 1716 0060 FB68     		ldr	r3, [r7, #12]
 1717 0062 7A68     		ldr	r2, [r7, #4]
 1718 0064 1A64     		str	r2, [r3, #64]
 992:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1719              		.loc 1 992 0
 1720 0066 10E0     		b	.L92
 1721              	.L88:
 993:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 994:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
 995:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = pCallback;
 1722              		.loc 1 995 0
 1723 0068 FB68     		ldr	r3, [r7, #12]
 1724 006a 7A68     		ldr	r2, [r7, #4]
 1725 006c 5A64     		str	r2, [r3, #68]
 996:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1726              		.loc 1 996 0
 1727 006e 0CE0     		b	.L92
 1728              	.L89:
 997:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
 998:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
 999:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = pCallback;
 1729              		.loc 1 999 0
 1730 0070 FB68     		ldr	r3, [r7, #12]
 1731 0072 7A68     		ldr	r2, [r7, #4]
 1732 0074 9A64     		str	r2, [r3, #72]
1000:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1733              		.loc 1 1000 0
 1734 0076 08E0     		b	.L92
 1735              	.L90:
1001:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1002:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1003:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = pCallback;
 1736              		.loc 1 1003 0
 1737 0078 FB68     		ldr	r3, [r7, #12]
 1738 007a 7A68     		ldr	r2, [r7, #4]
 1739 007c DA64     		str	r2, [r3, #76]
1004:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1740              		.loc 1 1004 0
 1741 007e 04E0     		b	.L92
ARM GAS  /tmp/ccE1NIbz.s 			page 49


 1742              	.L91:
1005:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1006:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1007:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = pCallback;
 1743              		.loc 1 1007 0
 1744 0080 FB68     		ldr	r3, [r7, #12]
 1745 0082 7A68     		ldr	r2, [r7, #4]
 1746 0084 1A65     		str	r2, [r3, #80]
1008:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1747              		.loc 1 1008 0
 1748 0086 00E0     		b	.L92
 1749              	.L94:
1009:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1010:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1011:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1750              		.loc 1 1011 0
 1751 0088 00BF     		nop
 1752              	.L92:
 1753 008a 01E0     		b	.L93
 1754              	.L83:
1012:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1013:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1014:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1015:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1016:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Return error status */
1017:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status =  HAL_ERROR;
 1755              		.loc 1 1017 0
 1756 008c 0123     		movs	r3, #1
 1757 008e FB75     		strb	r3, [r7, #23]
 1758              	.L93:
1018:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1019:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1020:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1021:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1759              		.loc 1 1021 0
 1760 0090 FB68     		ldr	r3, [r7, #12]
 1761 0092 0022     		movs	r2, #0
 1762 0094 83F83420 		strb	r2, [r3, #52]
1022:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1023:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1763              		.loc 1 1023 0
 1764 0098 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1765              	.L82:
1024:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1766              		.loc 1 1024 0
 1767 009a 1846     		mov	r0, r3
 1768 009c 1C37     		adds	r7, r7, #28
 1769              	.LCFI44:
 1770              		.cfi_def_cfa_offset 4
 1771 009e BD46     		mov	sp, r7
 1772              	.LCFI45:
 1773              		.cfi_def_cfa_register 13
 1774              		@ sp needed
 1775 00a0 5DF8047B 		ldr	r7, [sp], #4
 1776              	.LCFI46:
 1777              		.cfi_restore 7
 1778              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccE1NIbz.s 			page 50


 1779 00a4 7047     		bx	lr
 1780              		.cfi_endproc
 1781              	.LFE143:
 1783 00a6 00BF     		.section	.text.HAL_DMA_UnRegisterCallback,"ax",%progbits
 1784              		.align	2
 1785              		.global	HAL_DMA_UnRegisterCallback
 1786              		.thumb
 1787              		.thumb_func
 1789              	HAL_DMA_UnRegisterCallback:
 1790              	.LFB144:
1025:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1026:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1027:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  UnRegister callbacks
1028:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:                 pointer to a DMA_HandleTypeDef structure that contains
1029:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               the configuration information for the specified DMA Stream.
1030:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  CallbackID:           User Callback identifer
1031:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                               a HAL_DMA_CallbackIDTypeDef ENUM as parameter.
1032:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1033:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */              
1034:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_StatusTypeDef HAL_DMA_UnRegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef Cal
1035:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1791              		.loc 1 1035 0
 1792              		.cfi_startproc
 1793              		@ args = 0, pretend = 0, frame = 16
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795              		@ link register save eliminated.
 1796 0000 80B4     		push	{r7}
 1797              	.LCFI47:
 1798              		.cfi_def_cfa_offset 4
 1799              		.cfi_offset 7, -4
 1800 0002 85B0     		sub	sp, sp, #20
 1801              	.LCFI48:
 1802              		.cfi_def_cfa_offset 24
 1803 0004 00AF     		add	r7, sp, #0
 1804              	.LCFI49:
 1805              		.cfi_def_cfa_register 7
 1806 0006 7860     		str	r0, [r7, #4]
 1807 0008 0B46     		mov	r3, r1
 1808 000a FB70     		strb	r3, [r7, #3]
1036:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 1809              		.loc 1 1036 0
 1810 000c 0023     		movs	r3, #0
 1811 000e FB73     		strb	r3, [r7, #15]
1037:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1038:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Process locked */
1039:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_LOCK(hdma);
 1812              		.loc 1 1039 0
 1813 0010 7B68     		ldr	r3, [r7, #4]
 1814 0012 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1815 0016 012B     		cmp	r3, #1
 1816 0018 01D1     		bne	.L96
 1817              		.loc 1 1039 0 is_stmt 0 discriminator 1
 1818 001a 0223     		movs	r3, #2
 1819 001c 54E0     		b	.L97
 1820              	.L96:
 1821              		.loc 1 1039 0 discriminator 2
 1822 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccE1NIbz.s 			page 51


 1823 0020 0122     		movs	r2, #1
 1824 0022 83F83420 		strb	r2, [r3, #52]
1040:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1041:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if(HAL_DMA_STATE_READY == hdma->State)
 1825              		.loc 1 1041 0 is_stmt 1 discriminator 2
 1826 0026 7B68     		ldr	r3, [r7, #4]
 1827 0028 93F83530 		ldrb	r3, [r3, #53]
 1828 002c DBB2     		uxtb	r3, r3
 1829 002e 012B     		cmp	r3, #1
 1830 0030 43D1     		bne	.L98
1042:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1043:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (CallbackID)
 1831              		.loc 1 1043 0
 1832 0032 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1833 0034 062B     		cmp	r3, #6
 1834 0036 3CD8     		bhi	.L99
 1835 0038 01A2     		adr	r2, .L101
 1836 003a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1837 003e 00BF     		.p2align 2
 1838              	.L101:
 1839 0040 5D000000 		.word	.L100+1
 1840 0044 65000000 		.word	.L102+1
 1841 0048 6D000000 		.word	.L103+1
 1842 004c 75000000 		.word	.L104+1
 1843 0050 7D000000 		.word	.L105+1
 1844 0054 85000000 		.word	.L106+1
 1845 0058 8D000000 		.word	.L107+1
 1846              		.p2align 1
 1847              	.L100:
1044:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1045:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_CPLT_CB_ID:
1046:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1848              		.loc 1 1046 0
 1849 005c 7B68     		ldr	r3, [r7, #4]
 1850 005e 0022     		movs	r2, #0
 1851 0060 DA63     		str	r2, [r3, #60]
1047:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1852              		.loc 1 1047 0
 1853 0062 29E0     		b	.L108
 1854              	.L102:
1048:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1049:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_HALFCPLT_CB_ID:
1050:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1855              		.loc 1 1050 0
 1856 0064 7B68     		ldr	r3, [r7, #4]
 1857 0066 0022     		movs	r2, #0
 1858 0068 1A64     		str	r2, [r3, #64]
1051:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1859              		.loc 1 1051 0
 1860 006a 25E0     		b	.L108
 1861              	.L103:
1052:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1053:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1CPLT_CB_ID:
1054:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1862              		.loc 1 1054 0
 1863 006c 7B68     		ldr	r3, [r7, #4]
 1864 006e 0022     		movs	r2, #0
ARM GAS  /tmp/ccE1NIbz.s 			page 52


 1865 0070 5A64     		str	r2, [r3, #68]
1055:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1866              		.loc 1 1055 0
 1867 0072 21E0     		b	.L108
 1868              	.L104:
1056:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1057:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_M1HALFCPLT_CB_ID:
1058:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1869              		.loc 1 1058 0
 1870 0074 7B68     		ldr	r3, [r7, #4]
 1871 0076 0022     		movs	r2, #0
 1872 0078 9A64     		str	r2, [r3, #72]
1059:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1873              		.loc 1 1059 0
 1874 007a 1DE0     		b	.L108
 1875              	.L105:
1060:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1061:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ERROR_CB_ID:
1062:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1876              		.loc 1 1062 0
 1877 007c 7B68     		ldr	r3, [r7, #4]
 1878 007e 0022     		movs	r2, #0
 1879 0080 DA64     		str	r2, [r3, #76]
1063:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1880              		.loc 1 1063 0
 1881 0082 19E0     		b	.L108
 1882              	.L106:
1064:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1065:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case  HAL_DMA_XFER_ABORT_CB_ID:
1066:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1883              		.loc 1 1066 0
 1884 0084 7B68     		ldr	r3, [r7, #4]
 1885 0086 0022     		movs	r2, #0
 1886 0088 1A65     		str	r2, [r3, #80]
1067:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1887              		.loc 1 1067 0
 1888 008a 15E0     		b	.L108
 1889              	.L107:
1068:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1069:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     case   HAL_DMA_XFER_ALL_CB_ID:
1070:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferCpltCallback = NULL;
 1890              		.loc 1 1070 0
 1891 008c 7B68     		ldr	r3, [r7, #4]
 1892 008e 0022     		movs	r2, #0
 1893 0090 DA63     		str	r2, [r3, #60]
1071:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferHalfCpltCallback = NULL;
 1894              		.loc 1 1071 0
 1895 0092 7B68     		ldr	r3, [r7, #4]
 1896 0094 0022     		movs	r2, #0
 1897 0096 1A64     		str	r2, [r3, #64]
1072:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1CpltCallback = NULL;
 1898              		.loc 1 1072 0
 1899 0098 7B68     		ldr	r3, [r7, #4]
 1900 009a 0022     		movs	r2, #0
 1901 009c 5A64     		str	r2, [r3, #68]
1073:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferM1HalfCpltCallback = NULL;
 1902              		.loc 1 1073 0
ARM GAS  /tmp/ccE1NIbz.s 			page 53


 1903 009e 7B68     		ldr	r3, [r7, #4]
 1904 00a0 0022     		movs	r2, #0
 1905 00a2 9A64     		str	r2, [r3, #72]
1074:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferErrorCallback = NULL;
 1906              		.loc 1 1074 0
 1907 00a4 7B68     		ldr	r3, [r7, #4]
 1908 00a6 0022     		movs	r2, #0
 1909 00a8 DA64     		str	r2, [r3, #76]
1075:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       hdma->XferAbortCallback = NULL;
 1910              		.loc 1 1075 0
 1911 00aa 7B68     		ldr	r3, [r7, #4]
 1912 00ac 0022     		movs	r2, #0
 1913 00ae 1A65     		str	r2, [r3, #80]
1076:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break; 
 1914              		.loc 1 1076 0
 1915 00b0 02E0     		b	.L108
 1916              	.L99:
1077:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       
1078:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     default:
1079:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       status = HAL_ERROR;
 1917              		.loc 1 1079 0
 1918 00b2 0123     		movs	r3, #1
 1919 00b4 FB73     		strb	r3, [r7, #15]
1080:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       break;
 1920              		.loc 1 1080 0
 1921 00b6 00BF     		nop
 1922              	.L108:
 1923 00b8 01E0     		b	.L109
 1924              	.L98:
1081:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1082:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1083:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1084:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1085:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     status = HAL_ERROR;
 1925              		.loc 1 1085 0
 1926 00ba 0123     		movs	r3, #1
 1927 00bc FB73     		strb	r3, [r7, #15]
 1928              	.L109:
1086:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1087:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1088:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Release Lock */
1089:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   __HAL_UNLOCK(hdma);
 1929              		.loc 1 1089 0
 1930 00be 7B68     		ldr	r3, [r7, #4]
 1931 00c0 0022     		movs	r2, #0
 1932 00c2 83F83420 		strb	r2, [r3, #52]
1090:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1091:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status;
 1933              		.loc 1 1091 0
 1934 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1935              	.L97:
1092:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1936              		.loc 1 1092 0
 1937 00c8 1846     		mov	r0, r3
 1938 00ca 1437     		adds	r7, r7, #20
 1939              	.LCFI50:
 1940              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccE1NIbz.s 			page 54


 1941 00cc BD46     		mov	sp, r7
 1942              	.LCFI51:
 1943              		.cfi_def_cfa_register 13
 1944              		@ sp needed
 1945 00ce 5DF8047B 		ldr	r7, [sp], #4
 1946              	.LCFI52:
 1947              		.cfi_restore 7
 1948              		.cfi_def_cfa_offset 0
 1949 00d2 7047     		bx	lr
 1950              		.cfi_endproc
 1951              	.LFE144:
 1953              		.section	.text.HAL_DMA_GetState,"ax",%progbits
 1954              		.align	2
 1955              		.global	HAL_DMA_GetState
 1956              		.thumb
 1957              		.thumb_func
 1959              	HAL_DMA_GetState:
 1960              	.LFB145:
1093:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1094:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1095:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1096:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1097:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1098:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Exported_Functions_Group3
1099:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *
1100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @verbatim
1101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****                     ##### State and Errors functions #####
1103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****  ===============================================================================
1104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     [..]
1105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     This subsection provides functions allowing to
1106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Check the DMA state
1107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       (+) Get error code
1108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** @endverbatim
1110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA state.
1115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma: pointer to a DMA_HandleTypeDef structure that contains
1116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *               the configuration information for the specified DMA Stream.
1117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL state
1118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** HAL_DMA_StateTypeDef HAL_DMA_GetState(DMA_HandleTypeDef *hdma)
1120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 1961              		.loc 1 1120 0
 1962              		.cfi_startproc
 1963              		@ args = 0, pretend = 0, frame = 8
 1964              		@ frame_needed = 1, uses_anonymous_args = 0
 1965              		@ link register save eliminated.
 1966 0000 80B4     		push	{r7}
 1967              	.LCFI53:
 1968              		.cfi_def_cfa_offset 4
 1969              		.cfi_offset 7, -4
 1970 0002 83B0     		sub	sp, sp, #12
 1971              	.LCFI54:
ARM GAS  /tmp/ccE1NIbz.s 			page 55


 1972              		.cfi_def_cfa_offset 16
 1973 0004 00AF     		add	r7, sp, #0
 1974              	.LCFI55:
 1975              		.cfi_def_cfa_register 7
 1976 0006 7860     		str	r0, [r7, #4]
1121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->State;
 1977              		.loc 1 1121 0
 1978 0008 7B68     		ldr	r3, [r7, #4]
 1979 000a 93F83530 		ldrb	r3, [r3, #53]
 1980 000e DBB2     		uxtb	r3, r3
1122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 1981              		.loc 1 1122 0
 1982 0010 1846     		mov	r0, r3
 1983 0012 0C37     		adds	r7, r7, #12
 1984              	.LCFI56:
 1985              		.cfi_def_cfa_offset 4
 1986 0014 BD46     		mov	sp, r7
 1987              	.LCFI57:
 1988              		.cfi_def_cfa_register 13
 1989              		@ sp needed
 1990 0016 5DF8047B 		ldr	r7, [sp], #4
 1991              	.LCFI58:
 1992              		.cfi_restore 7
 1993              		.cfi_def_cfa_offset 0
 1994 001a 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE145:
 1998              		.section	.text.HAL_DMA_GetError,"ax",%progbits
 1999              		.align	2
 2000              		.global	HAL_DMA_GetError
 2001              		.thumb
 2002              		.thumb_func
 2004              	HAL_DMA_GetError:
 2005              	.LFB146:
1123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Return the DMA error code
1126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma : pointer to a DMA_HandleTypeDef structure that contains
1127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *              the configuration information for the specified DMA Stream.
1128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval DMA Error Code
1129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** uint32_t HAL_DMA_GetError(DMA_HandleTypeDef *hdma)
1131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2006              		.loc 1 1131 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 8
 2009              		@ frame_needed = 1, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011 0000 80B4     		push	{r7}
 2012              	.LCFI59:
 2013              		.cfi_def_cfa_offset 4
 2014              		.cfi_offset 7, -4
 2015 0002 83B0     		sub	sp, sp, #12
 2016              	.LCFI60:
 2017              		.cfi_def_cfa_offset 16
 2018 0004 00AF     		add	r7, sp, #0
 2019              	.LCFI61:
ARM GAS  /tmp/ccE1NIbz.s 			page 56


 2020              		.cfi_def_cfa_register 7
 2021 0006 7860     		str	r0, [r7, #4]
1132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->ErrorCode;
 2022              		.loc 1 1132 0
 2023 0008 7B68     		ldr	r3, [r7, #4]
 2024 000a 5B6D     		ldr	r3, [r3, #84]
1133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2025              		.loc 1 1133 0
 2026 000c 1846     		mov	r0, r3
 2027 000e 0C37     		adds	r7, r7, #12
 2028              	.LCFI62:
 2029              		.cfi_def_cfa_offset 4
 2030 0010 BD46     		mov	sp, r7
 2031              	.LCFI63:
 2032              		.cfi_def_cfa_register 13
 2033              		@ sp needed
 2034 0012 5DF8047B 		ldr	r7, [sp], #4
 2035              	.LCFI64:
 2036              		.cfi_restore 7
 2037              		.cfi_def_cfa_offset 0
 2038 0016 7047     		bx	lr
 2039              		.cfi_endproc
 2040              	.LFE146:
 2042              		.section	.text.DMA_SetConfig,"ax",%progbits
 2043              		.align	2
 2044              		.thumb
 2045              		.thumb_func
 2047              	DMA_SetConfig:
 2048              	.LFB147:
1134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @}
1141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /** @addtogroup DMA_Private_Functions
1144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @{
1145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Sets the DMA Transfer parameter.
1149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
1150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream.
1151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  SrcAddress: The source memory Buffer address
1152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DstAddress: The destination memory Buffer address
1153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  DataLength: The length of data to be transferred from source to destination
1154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32
1157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2049              		.loc 1 1157 0
 2050              		.cfi_startproc
 2051              		@ args = 0, pretend = 0, frame = 16
 2052              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccE1NIbz.s 			page 57


 2053              		@ link register save eliminated.
 2054 0000 80B4     		push	{r7}
 2055              	.LCFI65:
 2056              		.cfi_def_cfa_offset 4
 2057              		.cfi_offset 7, -4
 2058 0002 85B0     		sub	sp, sp, #20
 2059              	.LCFI66:
 2060              		.cfi_def_cfa_offset 24
 2061 0004 00AF     		add	r7, sp, #0
 2062              	.LCFI67:
 2063              		.cfi_def_cfa_register 7
 2064 0006 F860     		str	r0, [r7, #12]
 2065 0008 B960     		str	r1, [r7, #8]
 2066 000a 7A60     		str	r2, [r7, #4]
 2067 000c 3B60     		str	r3, [r7]
1158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Clear DBM bit */
1159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 2068              		.loc 1 1159 0
 2069 000e FB68     		ldr	r3, [r7, #12]
 2070 0010 1B68     		ldr	r3, [r3]
 2071 0012 FA68     		ldr	r2, [r7, #12]
 2072 0014 1268     		ldr	r2, [r2]
 2073 0016 1268     		ldr	r2, [r2]
 2074 0018 22F48022 		bic	r2, r2, #262144
 2075 001c 1A60     		str	r2, [r3]
1160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Configure DMA Stream data length */
1162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->Instance->NDTR = DataLength;
 2076              		.loc 1 1162 0
 2077 001e FB68     		ldr	r3, [r7, #12]
 2078 0020 1B68     		ldr	r3, [r3]
 2079 0022 3A68     		ldr	r2, [r7]
 2080 0024 5A60     		str	r2, [r3, #4]
1163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Peripheral to Memory */
1165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 2081              		.loc 1 1165 0
 2082 0026 FB68     		ldr	r3, [r7, #12]
 2083 0028 9B68     		ldr	r3, [r3, #8]
 2084 002a 402B     		cmp	r3, #64
 2085 002c 08D1     		bne	.L115
1166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = DstAddress;
 2086              		.loc 1 1168 0
 2087 002e FB68     		ldr	r3, [r7, #12]
 2088 0030 1B68     		ldr	r3, [r3]
 2089 0032 7A68     		ldr	r2, [r7, #4]
 2090 0034 9A60     		str	r2, [r3, #8]
1169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = SrcAddress;
 2091              		.loc 1 1171 0
 2092 0036 FB68     		ldr	r3, [r7, #12]
 2093 0038 1B68     		ldr	r3, [r3]
 2094 003a BA68     		ldr	r2, [r7, #8]
 2095 003c DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/ccE1NIbz.s 			page 58


 2096 003e 07E0     		b	.L114
 2097              	.L115:
1172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory to Peripheral */
1174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream source address */
1177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->PAR = SrcAddress;
 2098              		.loc 1 1177 0
 2099 0040 FB68     		ldr	r3, [r7, #12]
 2100 0042 1B68     		ldr	r3, [r3]
 2101 0044 BA68     		ldr	r2, [r7, #8]
 2102 0046 9A60     		str	r2, [r3, #8]
1178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     
1179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* Configure DMA Stream destination address */
1180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->Instance->M0AR = DstAddress;
 2103              		.loc 1 1180 0
 2104 0048 FB68     		ldr	r3, [r7, #12]
 2105 004a 1B68     		ldr	r3, [r3]
 2106 004c 7A68     		ldr	r2, [r7, #4]
 2107 004e DA60     		str	r2, [r3, #12]
 2108              	.L114:
1181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2109              		.loc 1 1182 0
 2110 0050 1437     		adds	r7, r7, #20
 2111              	.LCFI68:
 2112              		.cfi_def_cfa_offset 4
 2113 0052 BD46     		mov	sp, r7
 2114              	.LCFI69:
 2115              		.cfi_def_cfa_register 13
 2116              		@ sp needed
 2117 0054 5DF8047B 		ldr	r7, [sp], #4
 2118              	.LCFI70:
 2119              		.cfi_restore 7
 2120              		.cfi_def_cfa_offset 0
 2121 0058 7047     		bx	lr
 2122              		.cfi_endproc
 2123              	.LFE147:
 2125 005a 00BF     		.section	.text.DMA_CalcBaseAndBitshift,"ax",%progbits
 2126              		.align	2
 2127              		.thumb
 2128              		.thumb_func
 2130              	DMA_CalcBaseAndBitshift:
 2131              	.LFB148:
1183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Returns the DMA Stream base address depending on stream number
1186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
1187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval Stream base address
1189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
1191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2132              		.loc 1 1191 0
 2133              		.cfi_startproc
 2134              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccE1NIbz.s 			page 59


 2135              		@ frame_needed = 1, uses_anonymous_args = 0
 2136              		@ link register save eliminated.
 2137 0000 80B4     		push	{r7}
 2138              	.LCFI71:
 2139              		.cfi_def_cfa_offset 4
 2140              		.cfi_offset 7, -4
 2141 0002 85B0     		sub	sp, sp, #20
 2142              	.LCFI72:
 2143              		.cfi_def_cfa_offset 24
 2144 0004 00AF     		add	r7, sp, #0
 2145              	.LCFI73:
 2146              		.cfi_def_cfa_register 7
 2147 0006 7860     		str	r0, [r7, #4]
1192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 2148              		.loc 1 1192 0
 2149 0008 7B68     		ldr	r3, [r7, #4]
 2150 000a 1B68     		ldr	r3, [r3]
 2151 000c DBB2     		uxtb	r3, r3
 2152 000e 103B     		subs	r3, r3, #16
 2153 0010 134A     		ldr	r2, .L121
 2154 0012 A2FB0323 		umull	r2, r3, r2, r3
 2155 0016 1B09     		lsrs	r3, r3, #4
 2156 0018 FB60     		str	r3, [r7, #12]
1193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* lookup table for necessary bitshift of flags within status registers */
1195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
1196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   hdma->StreamIndex = flagBitshiftOffset[stream_number];
 2157              		.loc 1 1196 0
 2158 001a 124A     		ldr	r2, .L121+4
 2159 001c FB68     		ldr	r3, [r7, #12]
 2160 001e 1344     		add	r3, r3, r2
 2161 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2162 0022 1A46     		mov	r2, r3
 2163 0024 7B68     		ldr	r3, [r7, #4]
 2164 0026 DA65     		str	r2, [r3, #92]
1197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (stream_number > 3U)
 2165              		.loc 1 1198 0
 2166 0028 FB68     		ldr	r3, [r7, #12]
 2167 002a 032B     		cmp	r3, #3
 2168 002c 08D9     		bls	.L118
1199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to HISR and HIFCR */
1201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 2169              		.loc 1 1201 0
 2170 002e 7B68     		ldr	r3, [r7, #4]
 2171 0030 1B68     		ldr	r3, [r3]
 2172 0032 1A46     		mov	r2, r3
 2173 0034 0C4B     		ldr	r3, .L121+8
 2174 0036 1340     		ands	r3, r3, r2
 2175 0038 1A1D     		adds	r2, r3, #4
 2176 003a 7B68     		ldr	r3, [r7, #4]
 2177 003c 9A65     		str	r2, [r3, #88]
 2178 003e 06E0     		b	.L119
 2179              	.L118:
1202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
ARM GAS  /tmp/ccE1NIbz.s 			page 60


1204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     /* return pointer to LISR and LIFCR */
1206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 2180              		.loc 1 1206 0
 2181 0040 7B68     		ldr	r3, [r7, #4]
 2182 0042 1B68     		ldr	r3, [r3]
 2183 0044 1A46     		mov	r2, r3
 2184 0046 084B     		ldr	r3, .L121+8
 2185 0048 1340     		ands	r3, r3, r2
 2186 004a 7A68     		ldr	r2, [r7, #4]
 2187 004c 9365     		str	r3, [r2, #88]
 2188              	.L119:
1207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return hdma->StreamBaseAddress;
 2189              		.loc 1 1209 0
 2190 004e 7B68     		ldr	r3, [r7, #4]
 2191 0050 9B6D     		ldr	r3, [r3, #88]
1210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2192              		.loc 1 1210 0
 2193 0052 1846     		mov	r0, r3
 2194 0054 1437     		adds	r7, r7, #20
 2195              	.LCFI74:
 2196              		.cfi_def_cfa_offset 4
 2197 0056 BD46     		mov	sp, r7
 2198              	.LCFI75:
 2199              		.cfi_def_cfa_register 13
 2200              		@ sp needed
 2201 0058 5DF8047B 		ldr	r7, [sp], #4
 2202              	.LCFI76:
 2203              		.cfi_restore 7
 2204              		.cfi_def_cfa_offset 0
 2205 005c 7047     		bx	lr
 2206              	.L122:
 2207 005e 00BF     		.align	2
 2208              	.L121:
 2209 0060 ABAAAAAA 		.word	-1431655765
 2210 0064 00000000 		.word	flagBitshiftOffset.9493
 2211 0068 00FCFFFF 		.word	-1024
 2212              		.cfi_endproc
 2213              	.LFE148:
 2215              		.section	.text.DMA_CheckFifoParam,"ax",%progbits
 2216              		.align	2
 2217              		.thumb
 2218              		.thumb_func
 2220              	DMA_CheckFifoParam:
 2221              	.LFB149:
1211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 
1212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** /**
1213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @brief  Check compatibility between FIFO threshold level and size of the memory burst
1214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @param  hdma:       pointer to a DMA_HandleTypeDef structure that contains
1215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   *                     the configuration information for the specified DMA Stream. 
1216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   * @retval HAL status
1217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   */
1218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
1219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** {
 2222              		.loc 1 1219 0
ARM GAS  /tmp/ccE1NIbz.s 			page 61


 2223              		.cfi_startproc
 2224              		@ args = 0, pretend = 0, frame = 16
 2225              		@ frame_needed = 1, uses_anonymous_args = 0
 2226              		@ link register save eliminated.
 2227 0000 80B4     		push	{r7}
 2228              	.LCFI77:
 2229              		.cfi_def_cfa_offset 4
 2230              		.cfi_offset 7, -4
 2231 0002 85B0     		sub	sp, sp, #20
 2232              	.LCFI78:
 2233              		.cfi_def_cfa_offset 24
 2234 0004 00AF     		add	r7, sp, #0
 2235              	.LCFI79:
 2236              		.cfi_def_cfa_register 7
 2237 0006 7860     		str	r0, [r7, #4]
1220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   HAL_StatusTypeDef status = HAL_OK;
 2238              		.loc 1 1220 0
 2239 0008 0023     		movs	r3, #0
 2240 000a FB73     		strb	r3, [r7, #15]
1221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   uint32_t tmp = hdma->Init.FIFOThreshold;
 2241              		.loc 1 1221 0
 2242 000c 7B68     		ldr	r3, [r7, #4]
 2243 000e 9B6A     		ldr	r3, [r3, #40]
 2244 0010 BB60     		str	r3, [r7, #8]
1222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Byte */
1224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 2245              		.loc 1 1224 0
 2246 0012 7B68     		ldr	r3, [r7, #4]
 2247 0014 9B69     		ldr	r3, [r3, #24]
 2248 0016 002B     		cmp	r3, #0
 2249 0018 2DD1     		bne	.L124
1225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2250              		.loc 1 1226 0
 2251 001a BB68     		ldr	r3, [r7, #8]
 2252 001c 032B     		cmp	r3, #3
 2253 001e 28D8     		bhi	.L151
 2254 0020 01A2     		adr	r2, .L127
 2255 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2256 0026 00BF     		.p2align 2
 2257              	.L127:
 2258 0028 39000000 		.word	.L126+1
 2259 002c 4D000000 		.word	.L128+1
 2260 0030 5F000000 		.word	.L129+1
 2261 0034 73000000 		.word	.L151+1
 2262              		.p2align 1
 2263              	.L126:
1227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2264              		.loc 1 1229 0
 2265 0038 7B68     		ldr	r3, [r7, #4]
 2266 003a DB6A     		ldr	r3, [r3, #44]
 2267 003c 03F08073 		and	r3, r3, #16777216
 2268 0040 002B     		cmp	r3, #0
 2269 0042 02D0     		beq	.L131
ARM GAS  /tmp/ccE1NIbz.s 			page 62


1230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
1231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           status = HAL_ERROR;
 2270              		.loc 1 1231 0
 2271 0044 0123     		movs	r3, #1
 2272 0046 FB73     		strb	r3, [r7, #15]
1232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
1233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2273              		.loc 1 1233 0
 2274 0048 14E0     		b	.L132
 2275              	.L131:
 2276 004a 13E0     		b	.L132
 2277              	.L128:
1234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_HALFFULL:
1235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2278              		.loc 1 1235 0
 2279 004c 7B68     		ldr	r3, [r7, #4]
 2280 004e DB6A     		ldr	r3, [r3, #44]
 2281 0050 B3F1C07F 		cmp	r3, #25165824
 2282 0054 02D1     		bne	.L133
1236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
1237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           status = HAL_ERROR;
 2283              		.loc 1 1237 0
 2284 0056 0123     		movs	r3, #1
 2285 0058 FB73     		strb	r3, [r7, #15]
1238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
1239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2286              		.loc 1 1239 0
 2287 005a 0BE0     		b	.L132
 2288              	.L133:
 2289              		.loc 1 1239 0 is_stmt 0 discriminator 2
 2290 005c 0AE0     		b	.L132
 2291              	.L129:
1240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2292              		.loc 1 1241 0 is_stmt 1
 2293 005e 7B68     		ldr	r3, [r7, #4]
 2294 0060 DB6A     		ldr	r3, [r3, #44]
 2295 0062 03F08073 		and	r3, r3, #16777216
 2296 0066 002B     		cmp	r3, #0
 2297 0068 02D0     		beq	.L134
1242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
1243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           status = HAL_ERROR;
 2298              		.loc 1 1243 0
 2299 006a 0123     		movs	r3, #1
 2300 006c FB73     		strb	r3, [r7, #15]
1244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
1245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2301              		.loc 1 1245 0
 2302 006e 01E0     		b	.L132
 2303              	.L134:
 2304              		.loc 1 1245 0 is_stmt 0 discriminator 3
 2305 0070 00E0     		b	.L132
 2306              	.L151:
1246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_FULL:
1247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
1248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       default:
1249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
ARM GAS  /tmp/ccE1NIbz.s 			page 63


 2307              		.loc 1 1249 0 is_stmt 1
 2308 0072 00BF     		nop
 2309              	.L132:
 2310 0074 40E0     		b	.L135
 2311              	.L124:
1250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Half-Word */
1254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 2312              		.loc 1 1254 0
 2313 0076 7B68     		ldr	r3, [r7, #4]
 2314 0078 9B69     		ldr	r3, [r3, #24]
 2315 007a B3F5005F 		cmp	r3, #8192
 2316 007e 28D1     		bne	.L136
1255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2317              		.loc 1 1256 0
 2318 0080 BB68     		ldr	r3, [r7, #8]
 2319 0082 032B     		cmp	r3, #3
 2320 0084 23D8     		bhi	.L152
 2321 0086 01A2     		adr	r2, .L139
 2322 0088 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2323              		.p2align 2
 2324              	.L139:
 2325 008c 9D000000 		.word	.L138+1
 2326 0090 A3000000 		.word	.L140+1
 2327 0094 B7000000 		.word	.L141+1
 2328 0098 BD000000 		.word	.L142+1
 2329              		.p2align 1
 2330              	.L138:
1257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2331              		.loc 1 1259 0
 2332 009c 0123     		movs	r3, #1
 2333 009e FB73     		strb	r3, [r7, #15]
1260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2334              		.loc 1 1260 0
 2335 00a0 16E0     		b	.L143
 2336              	.L140:
1261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_HALFFULL:
1262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 2337              		.loc 1 1262 0
 2338 00a2 7B68     		ldr	r3, [r7, #4]
 2339 00a4 DB6A     		ldr	r3, [r3, #44]
 2340 00a6 03F08073 		and	r3, r3, #16777216
 2341 00aa 002B     		cmp	r3, #0
 2342 00ac 02D0     		beq	.L144
1263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
1264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           status = HAL_ERROR;
 2343              		.loc 1 1264 0
 2344 00ae 0123     		movs	r3, #1
 2345 00b0 FB73     		strb	r3, [r7, #15]
1265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
1266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2346              		.loc 1 1266 0
ARM GAS  /tmp/ccE1NIbz.s 			page 64


 2347 00b2 0DE0     		b	.L143
 2348              	.L144:
 2349 00b4 0CE0     		b	.L143
 2350              	.L141:
1267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
1268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
 2351              		.loc 1 1268 0
 2352 00b6 0123     		movs	r3, #1
 2353 00b8 FB73     		strb	r3, [r7, #15]
1269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2354              		.loc 1 1269 0
 2355 00ba 09E0     		b	.L143
 2356              	.L142:
1270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_FULL:
1271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 2357              		.loc 1 1271 0
 2358 00bc 7B68     		ldr	r3, [r7, #4]
 2359 00be DB6A     		ldr	r3, [r3, #44]
 2360 00c0 B3F1C07F 		cmp	r3, #25165824
 2361 00c4 02D1     		bne	.L145
1272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
1273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           status = HAL_ERROR;
 2362              		.loc 1 1273 0
 2363 00c6 0123     		movs	r3, #1
 2364 00c8 FB73     		strb	r3, [r7, #15]
1274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
1275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;   
 2365              		.loc 1 1275 0
 2366 00ca 01E0     		b	.L143
 2367              	.L145:
 2368              		.loc 1 1275 0 is_stmt 0 discriminator 7
 2369 00cc 00E0     		b	.L143
 2370              	.L152:
1276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       default:
1277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2371              		.loc 1 1277 0 is_stmt 1
 2372 00ce 00BF     		nop
 2373              	.L143:
 2374 00d0 12E0     		b	.L135
 2375              	.L136:
1278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   }
1280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   /* Memory Data size equal to Word */
1282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   else
1283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   {
1284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     switch (tmp)
 2376              		.loc 1 1284 0
 2377 00d2 BB68     		ldr	r3, [r7, #8]
 2378 00d4 022B     		cmp	r3, #2
 2379 00d6 02D9     		bls	.L147
 2380 00d8 032B     		cmp	r3, #3
 2381 00da 03D0     		beq	.L148
1285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     {
1286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_1QUARTERFULL:
1287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_HALFFULL:
1288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
ARM GAS  /tmp/ccE1NIbz.s 			page 65


1289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         status = HAL_ERROR;
1290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
1291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_FULL:
1292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
1293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
1294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****           status = HAL_ERROR;
1295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
1296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** 		break;
1297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       default:
1298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2382              		.loc 1 1298 0
 2383 00dc 0CE0     		b	.L135
 2384              	.L147:
1289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         break;
 2385              		.loc 1 1289 0
 2386 00de 0123     		movs	r3, #1
 2387 00e0 FB73     		strb	r3, [r7, #15]
1290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       case DMA_FIFO_THRESHOLD_FULL:
 2388              		.loc 1 1290 0
 2389 00e2 09E0     		b	.L135
 2390              	.L148:
1292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         {
 2391              		.loc 1 1292 0
 2392 00e4 7B68     		ldr	r3, [r7, #4]
 2393 00e6 DB6A     		ldr	r3, [r3, #44]
 2394 00e8 03F08073 		and	r3, r3, #16777216
 2395 00ec 002B     		cmp	r3, #0
 2396 00ee 02D0     		beq	.L149
1294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****         }
 2397              		.loc 1 1294 0
 2398 00f0 0123     		movs	r3, #1
 2399 00f2 FB73     		strb	r3, [r7, #15]
1296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****       default:
 2400              		.loc 1 1296 0
 2401 00f4 FFE7     		b	.L153
 2402              	.L149:
 2403              	.L153:
 2404 00f6 00BF     		nop
 2405              	.L135:
1299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****     }
1300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   } 
1301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   
1302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c ****   return status; 
 2406              		.loc 1 1302 0
 2407 00f8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma.c **** }
 2408              		.loc 1 1303 0
 2409 00fa 1846     		mov	r0, r3
 2410 00fc 1437     		adds	r7, r7, #20
 2411              	.LCFI80:
 2412              		.cfi_def_cfa_offset 4
 2413 00fe BD46     		mov	sp, r7
 2414              	.LCFI81:
 2415              		.cfi_def_cfa_register 13
 2416              		@ sp needed
 2417 0100 5DF8047B 		ldr	r7, [sp], #4
 2418              	.LCFI82:
ARM GAS  /tmp/ccE1NIbz.s 			page 66


 2419              		.cfi_restore 7
 2420              		.cfi_def_cfa_offset 0
 2421 0104 7047     		bx	lr
 2422              		.cfi_endproc
 2423              	.LFE149:
 2425 0106 00BF     		.section	.rodata.flagBitshiftOffset.9493,"a",%progbits
 2426              		.align	2
 2429              	flagBitshiftOffset.9493:
 2430 0000 00       		.byte	0
 2431 0001 06       		.byte	6
 2432 0002 10       		.byte	16
 2433 0003 16       		.byte	22
 2434 0004 00       		.byte	0
 2435 0005 06       		.byte	6
 2436 0006 10       		.byte	16
 2437 0007 16       		.byte	22
 2438              		.text
 2439              	.Letext0:
 2440              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2441              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2442              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 2443              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 2444              		.file 6 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 2445              		.file 7 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 2446              		.file 8 "../../Drivers/CMSIS/Include/core_cm7.h"
 2447              		.file 9 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/system_stm32f7xx.h"
ARM GAS  /tmp/ccE1NIbz.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma.c
     /tmp/ccE1NIbz.s:21     .text.HAL_DMA_Init:0000000000000000 $t
     /tmp/ccE1NIbz.s:26     .text.HAL_DMA_Init:0000000000000000 HAL_DMA_Init
     /tmp/ccE1NIbz.s:2220   .text.DMA_CheckFifoParam:0000000000000000 DMA_CheckFifoParam
     /tmp/ccE1NIbz.s:2130   .text.DMA_CalcBaseAndBitshift:0000000000000000 DMA_CalcBaseAndBitshift
     /tmp/ccE1NIbz.s:257    .text.HAL_DMA_Init:0000000000000154 $d
     /tmp/ccE1NIbz.s:262    .text.HAL_DMA_DeInit:0000000000000000 $t
     /tmp/ccE1NIbz.s:267    .text.HAL_DMA_DeInit:0000000000000000 HAL_DMA_DeInit
     /tmp/ccE1NIbz.s:383    .text.HAL_DMA_Start:0000000000000000 $t
     /tmp/ccE1NIbz.s:388    .text.HAL_DMA_Start:0000000000000000 HAL_DMA_Start
     /tmp/ccE1NIbz.s:2047   .text.DMA_SetConfig:0000000000000000 DMA_SetConfig
     /tmp/ccE1NIbz.s:480    .text.HAL_DMA_Start_IT:0000000000000000 $t
     /tmp/ccE1NIbz.s:485    .text.HAL_DMA_Start_IT:0000000000000000 HAL_DMA_Start_IT
     /tmp/ccE1NIbz.s:619    .text.HAL_DMA_Abort:0000000000000000 $t
     /tmp/ccE1NIbz.s:624    .text.HAL_DMA_Abort:0000000000000000 HAL_DMA_Abort
     /tmp/ccE1NIbz.s:777    .text.HAL_DMA_Abort_IT:0000000000000000 $t
     /tmp/ccE1NIbz.s:782    .text.HAL_DMA_Abort_IT:0000000000000000 HAL_DMA_Abort_IT
     /tmp/ccE1NIbz.s:847    .text.HAL_DMA_PollForTransfer:0000000000000000 $t
     /tmp/ccE1NIbz.s:852    .text.HAL_DMA_PollForTransfer:0000000000000000 HAL_DMA_PollForTransfer
     /tmp/ccE1NIbz.s:1150   .text.HAL_DMA_PollForTransfer:00000000000001e4 $d
     /tmp/ccE1NIbz.s:1156   .text.HAL_DMA_IRQHandler:0000000000000000 $t
     /tmp/ccE1NIbz.s:1161   .text.HAL_DMA_IRQHandler:0000000000000000 HAL_DMA_IRQHandler
     /tmp/ccE1NIbz.s:1517   .text.HAL_DMA_IRQHandler:0000000000000274 $d
     /tmp/ccE1NIbz.s:1523   .text.HAL_DMA_IRQHandler:0000000000000284 $t
     /tmp/ccE1NIbz.s:1644   .text.HAL_DMA_RegisterCallback:0000000000000000 $t
     /tmp/ccE1NIbz.s:1649   .text.HAL_DMA_RegisterCallback:0000000000000000 HAL_DMA_RegisterCallback
     /tmp/ccE1NIbz.s:1700   .text.HAL_DMA_RegisterCallback:0000000000000040 $d
     /tmp/ccE1NIbz.s:1706   .text.HAL_DMA_RegisterCallback:0000000000000058 $t
     /tmp/ccE1NIbz.s:1784   .text.HAL_DMA_UnRegisterCallback:0000000000000000 $t
     /tmp/ccE1NIbz.s:1789   .text.HAL_DMA_UnRegisterCallback:0000000000000000 HAL_DMA_UnRegisterCallback
     /tmp/ccE1NIbz.s:1839   .text.HAL_DMA_UnRegisterCallback:0000000000000040 $d
     /tmp/ccE1NIbz.s:1846   .text.HAL_DMA_UnRegisterCallback:000000000000005c $t
     /tmp/ccE1NIbz.s:1954   .text.HAL_DMA_GetState:0000000000000000 $t
     /tmp/ccE1NIbz.s:1959   .text.HAL_DMA_GetState:0000000000000000 HAL_DMA_GetState
     /tmp/ccE1NIbz.s:1999   .text.HAL_DMA_GetError:0000000000000000 $t
     /tmp/ccE1NIbz.s:2004   .text.HAL_DMA_GetError:0000000000000000 HAL_DMA_GetError
     /tmp/ccE1NIbz.s:2043   .text.DMA_SetConfig:0000000000000000 $t
     /tmp/ccE1NIbz.s:2126   .text.DMA_CalcBaseAndBitshift:0000000000000000 $t
     /tmp/ccE1NIbz.s:2209   .text.DMA_CalcBaseAndBitshift:0000000000000060 $d
     /tmp/ccE1NIbz.s:2429   .rodata.flagBitshiftOffset.9493:0000000000000000 flagBitshiftOffset.9493
     /tmp/ccE1NIbz.s:2216   .text.DMA_CheckFifoParam:0000000000000000 $t
     /tmp/ccE1NIbz.s:2258   .text.DMA_CheckFifoParam:0000000000000028 $d
     /tmp/ccE1NIbz.s:2262   .text.DMA_CheckFifoParam:0000000000000038 $t
     /tmp/ccE1NIbz.s:2325   .text.DMA_CheckFifoParam:000000000000008c $d
     /tmp/ccE1NIbz.s:2329   .text.DMA_CheckFifoParam:000000000000009c $t
     /tmp/ccE1NIbz.s:2426   .rodata.flagBitshiftOffset.9493:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
SystemCoreClock
