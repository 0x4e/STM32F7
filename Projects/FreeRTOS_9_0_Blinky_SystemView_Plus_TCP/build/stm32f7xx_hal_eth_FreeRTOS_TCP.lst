ARM GAS  /tmp/cc1SlDEr.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f7xx_hal_eth_FreeRTOS_TCP.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_ETH_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_ETH_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ETH_Init:
  27              	.LFB135:
  28              		.file 1 "../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c"
   1:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
   2:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ******************************************************************************
   3:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @file    stm32f7xx_hal_eth.c
   4:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @version V1.3.2
   6:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @date    26-June-2015
   7:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief   ETH HAL module driver.
   8:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *          This file provides firmware functions to manage the following 
   9:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *          functionalities of the Ethernet (ETH) peripheral:
  10:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *           + Initialization and de-initialization functions
  11:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *           + IO operation functions
  12:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *           + Peripheral Control functions 
  13:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *           + Peripheral State and Errors functions
  14:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
  15:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @verbatim
  16:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ==============================================================================
  17:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                     ##### How to use this driver #####
  18:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ==============================================================================
  19:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     [..]
  20:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Declare a ETH_HandleTypeDef handle structure, for example:
  21:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          ETH_HandleTypeDef  heth;
  22:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****         
  23:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Fill parameters of Init structure in heth handle
  24:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   
  25:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Call HAL_ETH_Init() API to initialize the Ethernet peripheral (MAC, DMA, ...) 
  26:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  27:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Initialize the ETH low level resources through the HAL_ETH_MspInit() API:
  28:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) Enable the Ethernet interface clock using 
  29:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                (+++) __HAL_RCC_ETHMAC_CLK_ENABLE();
  30:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                (+++) __HAL_RCC_ETHMACTX_CLK_ENABLE();
ARM GAS  /tmp/cc1SlDEr.s 			page 2


  31:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                (+++) __HAL_RCC_ETHMACRX_CLK_ENABLE();
  32:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****            
  33:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) Initialize the related GPIO clocks
  34:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) Configure Ethernet pin-out
  35:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) Configure Ethernet NVIC interrupt (IT mode)   
  36:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     
  37:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Initialize Ethernet DMA Descriptors in chain mode and point to allocated buffers:
  38:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) HAL_ETH_DMATxDescListInit(); for Transmission process
  39:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) HAL_ETH_DMARxDescListInit(); for Reception process
  40:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  41:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Enable MAC and DMA transmission and reception:
  42:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           (##) HAL_ETH_Start();
  43:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  44:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Prepare ETH DMA TX Descriptors and give the hand to ETH DMA to transfer 
  45:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          the frame to MAC TX FIFO:
  46:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          (##) HAL_ETH_TransmitFrame();
  47:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  48:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#)Poll for a received frame in ETH RX DMA Descriptors and get received 
  49:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          frame parameters
  50:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          (##) HAL_ETH_GetReceivedFrame(); (should be called into an infinite loop)
  51:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  52:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#) Get a received frame when an ETH RX interrupt occurs:
  53:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          (##) HAL_ETH_GetReceivedFrame_IT(); (called in IT mode only)
  54:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  55:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#) Communicate with external PHY device:
  56:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          (##) Read a specific register from the PHY  
  57:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****               HAL_ETH_ReadPHYRegister();
  58:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****          (##) Write data to a specific RHY register:
  59:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****               HAL_ETH_WritePHYRegister();
  60:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  61:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#) Configure the Ethernet MAC after ETH peripheral initialization
  62:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           HAL_ETH_ConfigMAC(); all MAC parameters should be filled.
  63:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       
  64:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (#) Configure the Ethernet DMA after ETH peripheral initialization
  65:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           HAL_ETH_ConfigDMA(); all DMA parameters should be filled.
  66:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  67:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       -@- The PTP protocol and the DMA descriptors ring mode are not supported
  68:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           in this driver
  69:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
  70:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @endverbatim
  71:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ******************************************************************************
  72:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @attention
  73:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
  74:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * <h2><center>&copy; COPYRIGHT(c) 2015 STMicroelectronics</center></h2>
  75:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
  76:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * Redistribution and use in source and binary forms, with or without modification,
  77:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * are permitted provided that the following conditions are met:
  78:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  79:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *      this list of conditions and the following disclaimer.
  80:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  81:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *      this list of conditions and the following disclaimer in the documentation
  82:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *      and/or other materials provided with the distribution.
  83:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  84:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *      may be used to endorse or promote products derived from this software
  85:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *      without specific prior written permission.
  86:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
  87:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
ARM GAS  /tmp/cc1SlDEr.s 			page 3


  88:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  89:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  90:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  91:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  92:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  93:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  94:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  95:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  96:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  97:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
  98:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ******************************************************************************
  99:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */ 
 100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Includes ------------------------------------------------------------------*/
 102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #include "stm32f7xx_hal.h"
 103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** int lUDPLoggingPrintf( const char *pcFormatString, ... );
 106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @addtogroup STM32F4xx_HAL_Driver
 108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH ETH
 112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief ETH HAL module driver
 113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #if !defined( ARRAY_SIZE )
 117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	#define ARRAY_SIZE( x ) ( sizeof ( x ) / sizeof ( x )[ 0 ] )
 118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #endif
 119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #ifdef HAL_ETH_MODULE_ENABLED
 121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #if defined(STM32F7xx)
 123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Private typedef -----------------------------------------------------------*/
 125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Private define ------------------------------------------------------------*/
 126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Private_Constants ETH Private Constants
 127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #define LINKED_STATE_TIMEOUT_VALUE          ((uint32_t)2000)  /* 2000 ms */
 130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #define AUTONEGO_COMPLETED_TIMEOUT_VALUE    ((uint32_t)1000)  /* 1000 ms */
 131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
 134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Private macro -------------------------------------------------------------*/
 136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Private variables ---------------------------------------------------------*/
 137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Private function prototypes -----------------------------------------------*/
 138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Private_Functions ETH Private Functions
 139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err);
 142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr);
 143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth);
 144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth);
ARM GAS  /tmp/cc1SlDEr.s 			page 4


 145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth);
 146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth);
 147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth);
 148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth);
 149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth);
 150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth);
 151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth);
 152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
 155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /* Private functions ---------------------------------------------------------*/
 157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Exported_Functions ETH Exported Functions
 159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Exported_Functions_Group1 Initialization and de-initialization functions
 163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *  @brief   Initialization and Configuration functions
 164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
 165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @verbatim
 166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ===============================================================================
 167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****             ##### Initialization and de-initialization functions #####
 168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ===============================================================================
 169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   [..]  This section provides functions allowing to:
 170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (+) Initialize and configure the Ethernet peripheral
 171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (+) De-initialize the Ethernet peripheral
 172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @endverbatim
 174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** extern void vMACBProbePhy ( void );
 177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Initializes the Ethernet MAC and DMA according to default
 180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         parameters.
 181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_Init(ETH_HandleTypeDef *heth)
 186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
  29              		.loc 1 186 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
ARM GAS  /tmp/cc1SlDEr.s 			page 5


  44 0006 7860     		str	r0, [r7, #4]
 187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t tmpreg = 0;
  45              		.loc 1 187 0
  46 0008 0023     		movs	r3, #0
  47 000a 7B61     		str	r3, [r7, #20]
 188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t hclk = 60000000;
  48              		.loc 1 188 0
  49 000c 494B     		ldr	r3, .L11
  50 000e 3B61     		str	r3, [r7, #16]
 189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t err = ETH_SUCCESS;
  51              		.loc 1 189 0
  52 0010 0023     		movs	r3, #0
  53 0012 FB60     		str	r3, [r7, #12]
 190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check the ETH peripheral state */
 192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( heth == NULL )
  54              		.loc 1 192 0
  55 0014 7B68     		ldr	r3, [r7, #4]
  56 0016 002B     		cmp	r3, #0
  57 0018 01D1     		bne	.L2
 193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		return HAL_ERROR;
  58              		.loc 1 194 0
  59 001a 0123     		movs	r3, #1
  60 001c 85E0     		b	.L3
  61              	.L2:
 195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check parameters */
 198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_AUTONEGOTIATION(heth->Init.AutoNegotiation));
 199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_RX_MODE(heth->Init.RxMode));
 200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_CHECKSUM_MODE(heth->Init.ChecksumMode));
 201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_MEDIA_INTERFACE(heth->Init.MediaInterface));
 202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( heth->State == HAL_ETH_STATE_RESET )
  62              		.loc 1 203 0
  63 001e 7B68     		ldr	r3, [r7, #4]
  64 0020 93F84430 		ldrb	r3, [r3, #68]
  65 0024 DBB2     		uxtb	r3, r3
  66 0026 002B     		cmp	r3, #0
  67 0028 02D1     		bne	.L4
 204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Init the low level hardware : GPIO, CLOCK, NVIC. */
 206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		HAL_ETH_MspInit( heth );
  68              		.loc 1 206 0
  69 002a 7868     		ldr	r0, [r7, #4]
  70 002c FFF7FEFF 		bl	HAL_ETH_MspInit
  71              	.L4:
  72              	.LBB5:
 207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable SYSCFG Clock */
 210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_RCC_SYSCFG_CLK_ENABLE();
  73              		.loc 1 210 0
  74 0030 414A     		ldr	r2, .L11+4
  75 0032 414B     		ldr	r3, .L11+4
  76 0034 5B6C     		ldr	r3, [r3, #68]
ARM GAS  /tmp/cc1SlDEr.s 			page 6


  77 0036 43F48043 		orr	r3, r3, #16384
  78 003a 5364     		str	r3, [r2, #68]
  79 003c 3E4B     		ldr	r3, .L11+4
  80 003e 5B6C     		ldr	r3, [r3, #68]
  81 0040 03F48043 		and	r3, r3, #16384
  82 0044 BB60     		str	r3, [r7, #8]
  83 0046 BB68     		ldr	r3, [r7, #8]
  84              	.LBE5:
 211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Select MII or RMII Mode*/
 213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	SYSCFG->PMC &= ~(SYSCFG_PMC_MII_RMII_SEL);
  85              		.loc 1 213 0
  86 0048 3C4A     		ldr	r2, .L11+8
  87 004a 3C4B     		ldr	r3, .L11+8
  88 004c 5B68     		ldr	r3, [r3, #4]
  89 004e 23F40003 		bic	r3, r3, #8388608
  90 0052 5360     		str	r3, [r2, #4]
 214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	SYSCFG->PMC |= (uint32_t)heth->Init.MediaInterface;
  91              		.loc 1 214 0
  92 0054 3949     		ldr	r1, .L11+8
  93 0056 394B     		ldr	r3, .L11+8
  94 0058 5A68     		ldr	r2, [r3, #4]
  95 005a 7B68     		ldr	r3, [r7, #4]
  96 005c 1B6A     		ldr	r3, [r3, #32]
  97 005e 1343     		orrs	r3, r3, r2
  98 0060 4B60     		str	r3, [r1, #4]
 215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Ethernet Software reset */
 217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the SWR bit: resets all MAC subsystem internal registers and logic */
 218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* After reset all the registers holds their respective reset values */
 219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Also enable EDFE: Enhanced descriptor format enable. */
 220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** //	heth->Instance->DMABMR |= ETH_DMABMR_SR | ETH_DMABMR_EDE;
 221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMABMR |= ETH_DMABMR_SR;
  99              		.loc 1 221 0
 100 0062 7B68     		ldr	r3, [r7, #4]
 101 0064 1B68     		ldr	r3, [r3]
 102 0066 7A68     		ldr	r2, [r7, #4]
 103 0068 1268     		ldr	r2, [r2]
 104 006a 02F58052 		add	r2, r2, #4096
 105 006e 1268     		ldr	r2, [r2]
 106 0070 42F00102 		orr	r2, r2, #1
 107 0074 03F58053 		add	r3, r3, #4096
 108 0078 1A60     		str	r2, [r3]
 222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Wait for software reset */
 224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	while ((heth->Instance->DMABMR & ETH_DMABMR_SR) != (uint32_t)RESET)
 109              		.loc 1 224 0
 110 007a 00BF     		nop
 111              	.L5:
 112              		.loc 1 224 0 is_stmt 0 discriminator 1
 113 007c 7B68     		ldr	r3, [r7, #4]
 114 007e 1B68     		ldr	r3, [r3]
 115 0080 03F58053 		add	r3, r3, #4096
 116 0084 1B68     		ldr	r3, [r3]
 117 0086 03F00103 		and	r3, r3, #1
 118 008a 002B     		cmp	r3, #0
 119 008c F6D1     		bne	.L5
ARM GAS  /tmp/cc1SlDEr.s 			page 7


 225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/*-------------------------------- MAC Initialization ----------------------*/
 229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Get the ETHERNET MACMIIAR value */
 230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg = heth->Instance->MACMIIAR;
 120              		.loc 1 230 0 is_stmt 1
 121 008e 7B68     		ldr	r3, [r7, #4]
 122 0090 1B68     		ldr	r3, [r3]
 123 0092 1B69     		ldr	r3, [r3, #16]
 124 0094 7B61     		str	r3, [r7, #20]
 231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Clear CSR Clock Range CR[2:0] bits */
 232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg &= ETH_MACMIIAR_CR_MASK;
 125              		.loc 1 232 0
 126 0096 7B69     		ldr	r3, [r7, #20]
 127 0098 23F01C03 		bic	r3, r3, #28
 128 009c 7B61     		str	r3, [r7, #20]
 233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Get hclk frequency value (168,000,000) */
 235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	hclk = HAL_RCC_GetHCLKFreq();
 129              		.loc 1 235 0
 130 009e FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 131 00a2 3861     		str	r0, [r7, #16]
 236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set CR bits depending on hclk value */
 238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( ( hclk >= 20000000 ) && ( hclk < 35000000 ) )
 132              		.loc 1 238 0
 133 00a4 3B69     		ldr	r3, [r7, #16]
 134 00a6 264A     		ldr	r2, .L11+12
 135 00a8 9342     		cmp	r3, r2
 136 00aa 08D9     		bls	.L6
 137              		.loc 1 238 0 is_stmt 0 discriminator 1
 138 00ac 3B69     		ldr	r3, [r7, #16]
 139 00ae 254A     		ldr	r2, .L11+16
 140 00b0 9342     		cmp	r3, r2
 141 00b2 04D8     		bhi	.L6
 239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* CSR Clock Range between 20-35 MHz */
 241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t) ETH_MACMIIAR_CR_Div16;
 142              		.loc 1 241 0 is_stmt 1
 143 00b4 7B69     		ldr	r3, [r7, #20]
 144 00b6 43F00803 		orr	r3, r3, #8
 145 00ba 7B61     		str	r3, [r7, #20]
 146 00bc 26E0     		b	.L7
 147              	.L6:
 242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else if( ( hclk >= 35000000 ) && ( hclk < 60000000 ) )
 148              		.loc 1 243 0
 149 00be 3B69     		ldr	r3, [r7, #16]
 150 00c0 204A     		ldr	r2, .L11+16
 151 00c2 9342     		cmp	r3, r2
 152 00c4 08D9     		bls	.L8
 153              		.loc 1 243 0 is_stmt 0 discriminator 1
 154 00c6 3B69     		ldr	r3, [r7, #16]
 155 00c8 1F4A     		ldr	r2, .L11+20
 156 00ca 9342     		cmp	r3, r2
 157 00cc 04D8     		bhi	.L8
ARM GAS  /tmp/cc1SlDEr.s 			page 8


 244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* CSR Clock Range between 35-60 MHz */
 246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg |= ( uint32_t ) ETH_MACMIIAR_CR_Div26;
 158              		.loc 1 246 0 is_stmt 1
 159 00ce 7B69     		ldr	r3, [r7, #20]
 160 00d0 43F00C03 		orr	r3, r3, #12
 161 00d4 7B61     		str	r3, [r7, #20]
 162 00d6 19E0     		b	.L7
 163              	.L8:
 247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else if((hclk >= 60000000 ) && ( hclk < 100000000 ) )
 164              		.loc 1 248 0
 165 00d8 3B69     		ldr	r3, [r7, #16]
 166 00da 1B4A     		ldr	r2, .L11+20
 167 00dc 9342     		cmp	r3, r2
 168 00de 04D9     		bls	.L9
 169              		.loc 1 248 0 is_stmt 0 discriminator 1
 170 00e0 3B69     		ldr	r3, [r7, #16]
 171 00e2 1A4A     		ldr	r2, .L11+24
 172 00e4 9342     		cmp	r3, r2
 173 00e6 00D8     		bhi	.L9
 249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* CSR Clock Range between 60-100 MHz */
 251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t)ETH_MACMIIAR_CR_Div42;
 174              		.loc 1 251 0 is_stmt 1
 175 00e8 10E0     		b	.L7
 176              	.L9:
 252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else if((hclk >= 100000000 ) && ( hclk < 150000000))
 177              		.loc 1 253 0
 178 00ea 3B69     		ldr	r3, [r7, #16]
 179 00ec 174A     		ldr	r2, .L11+24
 180 00ee 9342     		cmp	r3, r2
 181 00f0 08D9     		bls	.L10
 182              		.loc 1 253 0 is_stmt 0 discriminator 1
 183 00f2 3B69     		ldr	r3, [r7, #16]
 184 00f4 164A     		ldr	r2, .L11+28
 185 00f6 9342     		cmp	r3, r2
 186 00f8 04D8     		bhi	.L10
 254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* CSR Clock Range between 100-150 MHz */
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t)ETH_MACMIIAR_CR_Div62;
 187              		.loc 1 256 0 is_stmt 1
 188 00fa 7B69     		ldr	r3, [r7, #20]
 189 00fc 43F00403 		orr	r3, r3, #4
 190 0100 7B61     		str	r3, [r7, #20]
 191 0102 03E0     		b	.L7
 192              	.L10:
 257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else /* ((hclk >= 150000000 ) && ( hclk <= 168000000)) */
 259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* CSR Clock Range between 150-168 MHz */
 261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t)ETH_MACMIIAR_CR_Div102;
 193              		.loc 1 261 0
 194 0104 7B69     		ldr	r3, [r7, #20]
 195 0106 43F01003 		orr	r3, r3, #16
 196 010a 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/cc1SlDEr.s 			page 9


 197              	.L7:
 262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Write to ETHERNET MAC MIIAR: Configure the ETHERNET CSR Clock Range */
 265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->MACMIIAR = (uint32_t)tmpreg;
 198              		.loc 1 265 0
 199 010c 7B68     		ldr	r3, [r7, #4]
 200 010e 1B68     		ldr	r3, [r3]
 201 0110 7A69     		ldr	r2, [r7, #20]
 202 0112 1A61     		str	r2, [r3, #16]
 266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Initialise the MACB and set all PHY properties */
 268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	vMACBProbePhy();
 203              		.loc 1 268 0
 204 0114 FFF7FEFF 		bl	vMACBProbePhy
 269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Config MAC and DMA */
 271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_MACDMAConfig(heth, err);
 205              		.loc 1 271 0
 206 0118 7868     		ldr	r0, [r7, #4]
 207 011a F968     		ldr	r1, [r7, #12]
 208 011c FFF7FEFF 		bl	ETH_MACDMAConfig
 272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set ETH HAL State to Ready */
 274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_READY;
 209              		.loc 1 274 0
 210 0120 7B68     		ldr	r3, [r7, #4]
 211 0122 0122     		movs	r2, #1
 212 0124 83F84420 		strb	r2, [r3, #68]
 275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 213              		.loc 1 277 0
 214 0128 0023     		movs	r3, #0
 215              	.L3:
 278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 216              		.loc 1 278 0
 217 012a 1846     		mov	r0, r3
 218 012c 1837     		adds	r7, r7, #24
 219              	.LCFI3:
 220              		.cfi_def_cfa_offset 8
 221 012e BD46     		mov	sp, r7
 222              	.LCFI4:
 223              		.cfi_def_cfa_register 13
 224              		@ sp needed
 225 0130 80BD     		pop	{r7, pc}
 226              	.L12:
 227 0132 00BF     		.align	2
 228              	.L11:
 229 0134 00879303 		.word	60000000
 230 0138 00380240 		.word	1073887232
 231 013c 00380140 		.word	1073821696
 232 0140 FF2C3101 		.word	19999999
 233 0144 BF0E1602 		.word	34999999
 234 0148 FF869303 		.word	59999999
 235 014c FFE0F505 		.word	99999999
 236 0150 7FD1F008 		.word	149999999
ARM GAS  /tmp/cc1SlDEr.s 			page 10


 237              		.cfi_endproc
 238              	.LFE135:
 240              		.section	.text.HAL_ETH_DeInit,"ax",%progbits
 241              		.align	2
 242              		.global	HAL_ETH_DeInit
 243              		.thumb
 244              		.thumb_func
 246              	HAL_ETH_DeInit:
 247              	.LFB136:
 279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  De-Initializes the ETH peripheral.
 282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_DeInit(ETH_HandleTypeDef *heth)
 287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 248              		.loc 1 287 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 82B0     		sub	sp, sp, #8
 258              	.LCFI6:
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              	.LCFI7:
 262              		.cfi_def_cfa_register 7
 263 0006 7860     		str	r0, [r7, #4]
 288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
 289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_BUSY;
 264              		.loc 1 289 0
 265 0008 7B68     		ldr	r3, [r7, #4]
 266 000a 0222     		movs	r2, #2
 267 000c 83F84420 		strb	r2, [r3, #68]
 290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* De-Init the low level hardware : GPIO, CLOCK, NVIC. */
 292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	HAL_ETH_MspDeInit( heth );
 268              		.loc 1 292 0
 269 0010 7868     		ldr	r0, [r7, #4]
 270 0012 FFF7FEFF 		bl	HAL_ETH_MspDeInit
 293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set ETH HAL state to Disabled */
 295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_RESET;
 271              		.loc 1 295 0
 272 0016 7B68     		ldr	r3, [r7, #4]
 273 0018 0022     		movs	r2, #0
 274 001a 83F84420 		strb	r2, [r3, #68]
 296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Release Lock */
 298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 275              		.loc 1 298 0
ARM GAS  /tmp/cc1SlDEr.s 			page 11


 276 001e 7B68     		ldr	r3, [r7, #4]
 277 0020 0022     		movs	r2, #0
 278 0022 83F84520 		strb	r2, [r3, #69]
 299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 279              		.loc 1 301 0
 280 0026 0023     		movs	r3, #0
 302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 281              		.loc 1 302 0
 282 0028 1846     		mov	r0, r3
 283 002a 0837     		adds	r7, r7, #8
 284              	.LCFI8:
 285              		.cfi_def_cfa_offset 8
 286 002c BD46     		mov	sp, r7
 287              	.LCFI9:
 288              		.cfi_def_cfa_register 13
 289              		@ sp needed
 290 002e 80BD     		pop	{r7, pc}
 291              		.cfi_endproc
 292              	.LFE136:
 294              		.section	.text.HAL_ETH_DMATxDescListInit,"ax",%progbits
 295              		.align	2
 296              		.global	HAL_ETH_DMATxDescListInit
 297              		.thumb
 298              		.thumb_func
 300              	HAL_ETH_DMATxDescListInit:
 301              	.LFB137:
 303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Initializes the DMA Tx descriptors in chain mode.
 306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  DMATxDescTab: Pointer to the first Tx desc list
 309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  TxBuff: Pointer to the first TxBuffer list
 310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  TxBuffCount: Number of the used Tx desc in the list
 311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_DMATxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *pxDMATable
 314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 302              		.loc 1 314 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 24
 305              		@ frame_needed = 1, uses_anonymous_args = 0
 306              		@ link register save eliminated.
 307 0000 80B4     		push	{r7}
 308              	.LCFI10:
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 87B0     		sub	sp, sp, #28
 312              	.LCFI11:
 313              		.cfi_def_cfa_offset 32
 314 0004 00AF     		add	r7, sp, #0
 315              	.LCFI12:
 316              		.cfi_def_cfa_register 7
 317 0006 F860     		str	r0, [r7, #12]
 318 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/cc1SlDEr.s 			page 12


 319 000a 7A60     		str	r2, [r7, #4]
 320 000c 3B60     		str	r3, [r7]
 315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t i = 0;
 321              		.loc 1 315 0
 322 000e 0023     		movs	r3, #0
 323 0010 7B61     		str	r3, [r7, #20]
 316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMADescTypeDef *pxDMADescriptor;
 317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
 319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 324              		.loc 1 319 0
 325 0012 FB68     		ldr	r3, [r7, #12]
 326 0014 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 327 0018 012B     		cmp	r3, #1
 328 001a 01D1     		bne	.L16
 329              		.loc 1 319 0 is_stmt 0 discriminator 1
 330 001c 0223     		movs	r3, #2
 331 001e 5CE0     		b	.L17
 332              	.L16:
 333              		.loc 1 319 0 discriminator 2
 334 0020 FB68     		ldr	r3, [r7, #12]
 335 0022 0122     		movs	r2, #1
 336 0024 83F84520 		strb	r2, [r3, #69]
 320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
 322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_BUSY;
 337              		.loc 1 322 0 is_stmt 1 discriminator 2
 338 0028 FB68     		ldr	r3, [r7, #12]
 339 002a 0222     		movs	r2, #2
 340 002c 83F84420 		strb	r2, [r3, #68]
 323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the TxDesc pointer with the first one of the pxDMATable list */
 325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->TxDesc = pxDMATable;
 341              		.loc 1 325 0 discriminator 2
 342 0030 FB68     		ldr	r3, [r7, #12]
 343 0032 BA68     		ldr	r2, [r7, #8]
 344 0034 DA62     		str	r2, [r3, #44]
 326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Fill each DMA descriptor with the right values */
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	for( i=0; i < ulBufferCount; i++ )
 345              		.loc 1 328 0 discriminator 2
 346 0036 0023     		movs	r3, #0
 347 0038 7B61     		str	r3, [r7, #20]
 348 003a 3AE0     		b	.L18
 349              	.L24:
 329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the pointer on the ith member of the descriptor list */
 331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDMADescriptor = pxDMATable + i;
 350              		.loc 1 331 0
 351 003c 7B69     		ldr	r3, [r7, #20]
 352 003e 5B01     		lsls	r3, r3, #5
 353 0040 BA68     		ldr	r2, [r7, #8]
 354 0042 1344     		add	r3, r3, r2
 355 0044 3B61     		str	r3, [r7, #16]
 332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set Second Address Chained bit */
 334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDMADescriptor->Status = ETH_DMATXDESC_TCH;
ARM GAS  /tmp/cc1SlDEr.s 			page 13


 356              		.loc 1 334 0
 357 0046 3B69     		ldr	r3, [r7, #16]
 358 0048 4FF48012 		mov	r2, #1048576
 359 004c 1A60     		str	r2, [r3]
 335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDMADescriptor->ControlBufferSize = 0;
 360              		.loc 1 336 0
 361 004e 3B69     		ldr	r3, [r7, #16]
 362 0050 0022     		movs	r2, #0
 363 0052 5A60     		str	r2, [r3, #4]
 337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set Buffer1 address pointer */
 339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if( ucDataBuffer != NULL )
 364              		.loc 1 339 0
 365 0054 7B68     		ldr	r3, [r7, #4]
 366 0056 002B     		cmp	r3, #0
 367 0058 0AD0     		beq	.L19
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer1Addr = ( uint32_t )( &ucDataBuffer[ i * ETH_TX_BUF_SIZE ] );
 368              		.loc 1 341 0
 369 005a 7B69     		ldr	r3, [r7, #20]
 370 005c 40F2F452 		movw	r2, #1524
 371 0060 02FB03F3 		mul	r3, r2, r3
 372 0064 7A68     		ldr	r2, [r7, #4]
 373 0066 1344     		add	r3, r3, r2
 374 0068 1A46     		mov	r2, r3
 375 006a 3B69     		ldr	r3, [r7, #16]
 376 006c 9A60     		str	r2, [r3, #8]
 377 006e 02E0     		b	.L20
 378              	.L19:
 342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		else
 344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Buffer space is not provided because it uses zero-copy transmissions. */
 346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer1Addr = ( uint32_t )0u;
 379              		.loc 1 346 0
 380 0070 3B69     		ldr	r3, [r7, #16]
 381 0072 0022     		movs	r2, #0
 382 0074 9A60     		str	r2, [r3, #8]
 383              	.L20:
 347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if (heth->Init.ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 384              		.loc 1 349 0
 385 0076 FB68     		ldr	r3, [r7, #12]
 386 0078 DB69     		ldr	r3, [r3, #28]
 387 007a 002B     		cmp	r3, #0
 388 007c 05D1     		bne	.L21
 350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Set the DMA Tx descriptors checksum insertion for TCP, UDP, and ICMP */
 352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Status |= ETH_DMATXDESC_CHECKSUMTCPUDPICMPFULL;
 389              		.loc 1 352 0
 390 007e 3B69     		ldr	r3, [r7, #16]
 391 0080 1B68     		ldr	r3, [r3]
 392 0082 43F44002 		orr	r2, r3, #12582912
 393 0086 3B69     		ldr	r3, [r7, #16]
 394 0088 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc1SlDEr.s 			page 14


 395              	.L21:
 353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Initialize the next descriptor with the Next Descriptor Polling Enable */
 356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if(i < ( ulBufferCount - 1 ) )
 396              		.loc 1 356 0
 397 008a 3B68     		ldr	r3, [r7]
 398 008c 5A1E     		subs	r2, r3, #1
 399 008e 7B69     		ldr	r3, [r7, #20]
 400 0090 9A42     		cmp	r2, r3
 401 0092 08D9     		bls	.L22
 357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Set next descriptor address register with next descriptor base address */
 359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer2NextDescAddr = ( uint32_t ) ( pxDMATable + i + 1 );
 402              		.loc 1 359 0
 403 0094 7B69     		ldr	r3, [r7, #20]
 404 0096 0133     		adds	r3, r3, #1
 405 0098 5B01     		lsls	r3, r3, #5
 406 009a BA68     		ldr	r2, [r7, #8]
 407 009c 1344     		add	r3, r3, r2
 408 009e 1A46     		mov	r2, r3
 409 00a0 3B69     		ldr	r3, [r7, #16]
 410 00a2 DA60     		str	r2, [r3, #12]
 411 00a4 02E0     		b	.L23
 412              	.L22:
 360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		else
 362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* For last descriptor, set next descriptor address register equal to the first descriptor base 
 364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer2NextDescAddr = ( uint32_t ) pxDMATable;
 413              		.loc 1 364 0
 414 00a6 BA68     		ldr	r2, [r7, #8]
 415 00a8 3B69     		ldr	r3, [r7, #16]
 416 00aa DA60     		str	r2, [r3, #12]
 417              	.L23:
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 418              		.loc 1 328 0 discriminator 2
 419 00ac 7B69     		ldr	r3, [r7, #20]
 420 00ae 0133     		adds	r3, r3, #1
 421 00b0 7B61     		str	r3, [r7, #20]
 422              	.L18:
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 423              		.loc 1 328 0 is_stmt 0 discriminator 1
 424 00b2 7A69     		ldr	r2, [r7, #20]
 425 00b4 3B68     		ldr	r3, [r7]
 426 00b6 9A42     		cmp	r2, r3
 427 00b8 C0D3     		bcc	.L24
 365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set Transmit Descriptor List Address Register */
 369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMATDLAR = ( uint32_t ) pxDMATable;
 428              		.loc 1 369 0 is_stmt 1
 429 00ba FB68     		ldr	r3, [r7, #12]
 430 00bc 1968     		ldr	r1, [r3]
 431 00be BA68     		ldr	r2, [r7, #8]
 432 00c0 41F21003 		movw	r3, #4112
ARM GAS  /tmp/cc1SlDEr.s 			page 15


 433 00c4 0B44     		add	r3, r3, r1
 434 00c6 1A60     		str	r2, [r3]
 370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set ETH HAL State to Ready */
 372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_READY;
 435              		.loc 1 372 0
 436 00c8 FB68     		ldr	r3, [r7, #12]
 437 00ca 0122     		movs	r2, #1
 438 00cc 83F84420 		strb	r2, [r3, #68]
 373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
 375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 439              		.loc 1 375 0
 440 00d0 FB68     		ldr	r3, [r7, #12]
 441 00d2 0022     		movs	r2, #0
 442 00d4 83F84520 		strb	r2, [r3, #69]
 376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 443              		.loc 1 378 0
 444 00d8 0023     		movs	r3, #0
 445              	.L17:
 379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 446              		.loc 1 379 0
 447 00da 1846     		mov	r0, r3
 448 00dc 1C37     		adds	r7, r7, #28
 449              	.LCFI13:
 450              		.cfi_def_cfa_offset 4
 451 00de BD46     		mov	sp, r7
 452              	.LCFI14:
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 00e0 5DF8047B 		ldr	r7, [sp], #4
 456              	.LCFI15:
 457              		.cfi_restore 7
 458              		.cfi_def_cfa_offset 0
 459 00e4 7047     		bx	lr
 460              		.cfi_endproc
 461              	.LFE137:
 463 00e6 00BF     		.section	.text.HAL_ETH_DMARxDescListInit,"ax",%progbits
 464              		.align	2
 465              		.global	HAL_ETH_DMARxDescListInit
 466              		.thumb
 467              		.thumb_func
 469              	HAL_ETH_DMARxDescListInit:
 470              	.LFB138:
 380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Initializes the DMA Rx descriptors in chain mode.
 383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  DMARxDescTab: Pointer to the first Rx desc list
 386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  RxBuff: Pointer to the first RxBuffer list
 387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  RxBuffCount: Number of the used Rx desc in the list
 388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_DMARxDescListInit(ETH_HandleTypeDef *heth, ETH_DMADescTypeDef *pxDMATable
ARM GAS  /tmp/cc1SlDEr.s 			page 16


 391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 471              		.loc 1 391 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 24
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              	.LCFI16:
 478              		.cfi_def_cfa_offset 4
 479              		.cfi_offset 7, -4
 480 0002 87B0     		sub	sp, sp, #28
 481              	.LCFI17:
 482              		.cfi_def_cfa_offset 32
 483 0004 00AF     		add	r7, sp, #0
 484              	.LCFI18:
 485              		.cfi_def_cfa_register 7
 486 0006 F860     		str	r0, [r7, #12]
 487 0008 B960     		str	r1, [r7, #8]
 488 000a 7A60     		str	r2, [r7, #4]
 489 000c 3B60     		str	r3, [r7]
 392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t i = 0;
 490              		.loc 1 392 0
 491 000e 0023     		movs	r3, #0
 492 0010 7B61     		str	r3, [r7, #20]
 393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMADescTypeDef *pxDMADescriptor;
 394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
 396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 493              		.loc 1 396 0
 494 0012 FB68     		ldr	r3, [r7, #12]
 495 0014 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 496 0018 012B     		cmp	r3, #1
 497 001a 01D1     		bne	.L26
 498              		.loc 1 396 0 is_stmt 0 discriminator 1
 499 001c 0223     		movs	r3, #2
 500 001e 5DE0     		b	.L27
 501              	.L26:
 502              		.loc 1 396 0 discriminator 2
 503 0020 FB68     		ldr	r3, [r7, #12]
 504 0022 0122     		movs	r2, #1
 505 0024 83F84520 		strb	r2, [r3, #69]
 397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
 399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_BUSY;
 506              		.loc 1 399 0 is_stmt 1 discriminator 2
 507 0028 FB68     		ldr	r3, [r7, #12]
 508 002a 0222     		movs	r2, #2
 509 002c 83F84420 		strb	r2, [r3, #68]
 400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the RxDesc pointer with the first one of the pxDMATable list */
 402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->RxDesc = pxDMATable;
 510              		.loc 1 402 0 discriminator 2
 511 0030 FB68     		ldr	r3, [r7, #12]
 512 0032 BA68     		ldr	r2, [r7, #8]
 513 0034 9A62     		str	r2, [r3, #40]
 403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Fill each DMA descriptor with the right values */
ARM GAS  /tmp/cc1SlDEr.s 			page 17


 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	for(i=0; i < ulBufferCount; i++)
 514              		.loc 1 405 0 discriminator 2
 515 0036 0023     		movs	r3, #0
 516 0038 7B61     		str	r3, [r7, #20]
 517 003a 3BE0     		b	.L28
 518              	.L34:
 406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the pointer on the ith member of the descriptor list */
 408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDMADescriptor = pxDMATable+i;
 519              		.loc 1 408 0
 520 003c 7B69     		ldr	r3, [r7, #20]
 521 003e 5B01     		lsls	r3, r3, #5
 522 0040 BA68     		ldr	r2, [r7, #8]
 523 0042 1344     		add	r3, r3, r2
 524 0044 3B61     		str	r3, [r7, #16]
 409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set Own bit of the Rx descriptor Status */
 411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDMADescriptor->Status = ETH_DMARXDESC_OWN;
 525              		.loc 1 411 0
 526 0046 3B69     		ldr	r3, [r7, #16]
 527 0048 4FF00042 		mov	r2, #-2147483648
 528 004c 1A60     		str	r2, [r3]
 412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set Buffer1 size and Second Address Chained bit */
 414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDMADescriptor->ControlBufferSize = ETH_DMARXDESC_RCH | ETH_RX_BUF_SIZE;
 529              		.loc 1 414 0
 530 004e 3B69     		ldr	r3, [r7, #16]
 531 0050 44F2F452 		movw	r2, #17908
 532 0054 5A60     		str	r2, [r3, #4]
 415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set Buffer1 address pointer */
 417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if( ucDataBuffer != NULL )
 533              		.loc 1 417 0
 534 0056 7B68     		ldr	r3, [r7, #4]
 535 0058 002B     		cmp	r3, #0
 536 005a 0AD0     		beq	.L29
 418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer1Addr = ( uint32_t )( &ucDataBuffer[ i * ETH_RX_BUF_SIZE ] );
 537              		.loc 1 419 0
 538 005c 7B69     		ldr	r3, [r7, #20]
 539 005e 40F2F452 		movw	r2, #1524
 540 0062 02FB03F3 		mul	r3, r2, r3
 541 0066 7A68     		ldr	r2, [r7, #4]
 542 0068 1344     		add	r3, r3, r2
 543 006a 1A46     		mov	r2, r3
 544 006c 3B69     		ldr	r3, [r7, #16]
 545 006e 9A60     		str	r2, [r3, #8]
 546 0070 02E0     		b	.L30
 547              	.L29:
 420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		else
 422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Buffer space is not provided because it uses zero-copy reception. */
 424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer1Addr = ( uint32_t )0u;
 548              		.loc 1 424 0
 549 0072 3B69     		ldr	r3, [r7, #16]
 550 0074 0022     		movs	r2, #0
ARM GAS  /tmp/cc1SlDEr.s 			page 18


 551 0076 9A60     		str	r2, [r3, #8]
 552              	.L30:
 425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if( heth->Init.RxMode == ETH_RXINTERRUPT_MODE )
 553              		.loc 1 427 0
 554 0078 FB68     		ldr	r3, [r7, #12]
 555 007a 9B69     		ldr	r3, [r3, #24]
 556 007c 012B     		cmp	r3, #1
 557 007e 05D1     		bne	.L31
 428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Enable Ethernet DMA Rx Descriptor interrupt */
 430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->ControlBufferSize &= ~ETH_DMARXDESC_DIC;
 558              		.loc 1 430 0
 559 0080 3B69     		ldr	r3, [r7, #16]
 560 0082 5B68     		ldr	r3, [r3, #4]
 561 0084 23F00042 		bic	r2, r3, #-2147483648
 562 0088 3B69     		ldr	r3, [r7, #16]
 563 008a 5A60     		str	r2, [r3, #4]
 564              	.L31:
 431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Initialize the next descriptor with the Next Descriptor Polling Enable */
 434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if(i < (ulBufferCount-1))
 565              		.loc 1 434 0
 566 008c 3B68     		ldr	r3, [r7]
 567 008e 5A1E     		subs	r2, r3, #1
 568 0090 7B69     		ldr	r3, [r7, #20]
 569 0092 9A42     		cmp	r2, r3
 570 0094 08D9     		bls	.L32
 435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Set next descriptor address register with next descriptor base address */
 437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer2NextDescAddr = (uint32_t)(pxDMATable+i+1);
 571              		.loc 1 437 0
 572 0096 7B69     		ldr	r3, [r7, #20]
 573 0098 0133     		adds	r3, r3, #1
 574 009a 5B01     		lsls	r3, r3, #5
 575 009c BA68     		ldr	r2, [r7, #8]
 576 009e 1344     		add	r3, r3, r2
 577 00a0 1A46     		mov	r2, r3
 578 00a2 3B69     		ldr	r3, [r7, #16]
 579 00a4 DA60     		str	r2, [r3, #12]
 580 00a6 02E0     		b	.L33
 581              	.L32:
 438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		else
 440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* For last descriptor, set next descriptor address register equal to the first descriptor base 
 442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDMADescriptor->Buffer2NextDescAddr = ( uint32_t ) pxDMATable;
 582              		.loc 1 442 0
 583 00a8 BA68     		ldr	r2, [r7, #8]
 584 00aa 3B69     		ldr	r3, [r7, #16]
 585 00ac DA60     		str	r2, [r3, #12]
 586              	.L33:
 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 587              		.loc 1 405 0 discriminator 2
 588 00ae 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/cc1SlDEr.s 			page 19


 589 00b0 0133     		adds	r3, r3, #1
 590 00b2 7B61     		str	r3, [r7, #20]
 591              	.L28:
 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 592              		.loc 1 405 0 is_stmt 0 discriminator 1
 593 00b4 7A69     		ldr	r2, [r7, #20]
 594 00b6 3B68     		ldr	r3, [r7]
 595 00b8 9A42     		cmp	r2, r3
 596 00ba BFD3     		bcc	.L34
 443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set Receive Descriptor List Address Register */
 447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMARDLAR = ( uint32_t ) pxDMATable;
 597              		.loc 1 447 0 is_stmt 1
 598 00bc FB68     		ldr	r3, [r7, #12]
 599 00be 1968     		ldr	r1, [r3]
 600 00c0 BA68     		ldr	r2, [r7, #8]
 601 00c2 41F20C03 		movw	r3, #4108
 602 00c6 0B44     		add	r3, r3, r1
 603 00c8 1A60     		str	r2, [r3]
 448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set ETH HAL State to Ready */
 450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_READY;
 604              		.loc 1 450 0
 605 00ca FB68     		ldr	r3, [r7, #12]
 606 00cc 0122     		movs	r2, #1
 607 00ce 83F84420 		strb	r2, [r3, #68]
 451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
 453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 608              		.loc 1 453 0
 609 00d2 FB68     		ldr	r3, [r7, #12]
 610 00d4 0022     		movs	r2, #0
 611 00d6 83F84520 		strb	r2, [r3, #69]
 454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 612              		.loc 1 456 0
 613 00da 0023     		movs	r3, #0
 614              	.L27:
 457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 615              		.loc 1 457 0
 616 00dc 1846     		mov	r0, r3
 617 00de 1C37     		adds	r7, r7, #28
 618              	.LCFI19:
 619              		.cfi_def_cfa_offset 4
 620 00e0 BD46     		mov	sp, r7
 621              	.LCFI20:
 622              		.cfi_def_cfa_register 13
 623              		@ sp needed
 624 00e2 5DF8047B 		ldr	r7, [sp], #4
 625              	.LCFI21:
 626              		.cfi_restore 7
 627              		.cfi_def_cfa_offset 0
 628 00e6 7047     		bx	lr
 629              		.cfi_endproc
ARM GAS  /tmp/cc1SlDEr.s 			page 20


 630              	.LFE138:
 632              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 633              		.align	2
 634              		.weak	HAL_ETH_MspInit
 635              		.thumb
 636              		.thumb_func
 638              	HAL_ETH_MspInit:
 639              	.LFB139:
 458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Initializes the ETH MSP.
 461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
 464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** __weak void HAL_ETH_MspInit(ETH_HandleTypeDef *heth)
 466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 640              		.loc 1 466 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 8
 643              		@ frame_needed = 1, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645 0000 80B4     		push	{r7}
 646              	.LCFI22:
 647              		.cfi_def_cfa_offset 4
 648              		.cfi_offset 7, -4
 649 0002 83B0     		sub	sp, sp, #12
 650              	.LCFI23:
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
 653              	.LCFI24:
 654              		.cfi_def_cfa_register 7
 655 0006 7860     		str	r0, [r7, #4]
 467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   the HAL_ETH_MspInit could be implemented in the user file
 469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 656              		.loc 1 470 0
 657 0008 0C37     		adds	r7, r7, #12
 658              	.LCFI25:
 659              		.cfi_def_cfa_offset 4
 660 000a BD46     		mov	sp, r7
 661              	.LCFI26:
 662              		.cfi_def_cfa_register 13
 663              		@ sp needed
 664 000c 5DF8047B 		ldr	r7, [sp], #4
 665              	.LCFI27:
 666              		.cfi_restore 7
 667              		.cfi_def_cfa_offset 0
 668 0010 7047     		bx	lr
 669              		.cfi_endproc
 670              	.LFE139:
 672 0012 00BF     		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 673              		.align	2
 674              		.weak	HAL_ETH_MspDeInit
 675              		.thumb
 676              		.thumb_func
ARM GAS  /tmp/cc1SlDEr.s 			page 21


 678              	HAL_ETH_MspDeInit:
 679              	.LFB140:
 471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  DeInitializes ETH MSP.
 474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
 477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** __weak void HAL_ETH_MspDeInit(ETH_HandleTypeDef *heth)
 479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 680              		.loc 1 479 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 0000 80B4     		push	{r7}
 686              	.LCFI28:
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 0002 83B0     		sub	sp, sp, #12
 690              	.LCFI29:
 691              		.cfi_def_cfa_offset 16
 692 0004 00AF     		add	r7, sp, #0
 693              	.LCFI30:
 694              		.cfi_def_cfa_register 7
 695 0006 7860     		str	r0, [r7, #4]
 480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   the HAL_ETH_MspDeInit could be implemented in the user file
 482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 696              		.loc 1 483 0
 697 0008 0C37     		adds	r7, r7, #12
 698              	.LCFI31:
 699              		.cfi_def_cfa_offset 4
 700 000a BD46     		mov	sp, r7
 701              	.LCFI32:
 702              		.cfi_def_cfa_register 13
 703              		@ sp needed
 704 000c 5DF8047B 		ldr	r7, [sp], #4
 705              	.LCFI33:
 706              		.cfi_restore 7
 707              		.cfi_def_cfa_offset 0
 708 0010 7047     		bx	lr
 709              		.cfi_endproc
 710              	.LFE140:
 712 0012 00BF     		.section	.text.HAL_ETH_TransmitFrame,"ax",%progbits
 713              		.align	2
 714              		.global	HAL_ETH_TransmitFrame
 715              		.thumb
 716              		.thumb_func
 718              	HAL_ETH_TransmitFrame:
 719              	.LFB141:
 484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
 487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
ARM GAS  /tmp/cc1SlDEr.s 			page 22


 488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Exported_Functions_Group2 IO operation functions
 490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *  @brief   Data transfers functions
 491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
 492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @verbatim
 493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ==============================================================================
 494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                           ##### IO operation functions #####
 495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ==============================================================================
 496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   [..]  This section provides functions allowing to:
 497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****         (+) Transmit a frame
 498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****             HAL_ETH_TransmitFrame();
 499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****         (+) Receive a frame
 500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****             HAL_ETH_GetReceivedFrame();
 501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****             HAL_ETH_GetReceivedFrame_IT();
 502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****         (+) Read from an External PHY register
 503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****             HAL_ETH_ReadPHYRegister();
 504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****         (+) Write to an External PHY register
 505:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****             HAL_ETH_WritePHYRegister();
 506:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @endverbatim
 508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
 510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Sends an Ethernet frame.
 514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  FrameLength: Amount of data to be sent
 517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 518:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 519:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_TransmitFrame(ETH_HandleTypeDef *heth, uint32_t FrameLength)
 520:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 720              		.loc 1 520 0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 32
 723              		@ frame_needed = 1, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 725 0000 80B4     		push	{r7}
 726              	.LCFI34:
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 7, -4
 729 0002 89B0     		sub	sp, sp, #36
 730              	.LCFI35:
 731              		.cfi_def_cfa_offset 40
 732 0004 00AF     		add	r7, sp, #0
 733              	.LCFI36:
 734              		.cfi_def_cfa_register 7
 735 0006 7860     		str	r0, [r7, #4]
 736 0008 3960     		str	r1, [r7]
 521:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t bufcount = 0, size = 0, i = 0;
 737              		.loc 1 521 0
 738 000a 0023     		movs	r3, #0
 739 000c BB61     		str	r3, [r7, #24]
 740 000e 0023     		movs	r3, #0
 741 0010 7B61     		str	r3, [r7, #20]
 742 0012 0023     		movs	r3, #0
ARM GAS  /tmp/cc1SlDEr.s 			page 23


 743 0014 FB61     		str	r3, [r7, #28]
 522:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO ETH_DMADescTypeDef *pxDmaTxDesc = heth->TxDesc;
 744              		.loc 1 522 0
 745 0016 7B68     		ldr	r3, [r7, #4]
 746 0018 DB6A     		ldr	r3, [r3, #44]
 747 001a 3B61     		str	r3, [r7, #16]
 523:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
 524:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 748              		.loc 1 524 0
 749 001c 7B68     		ldr	r3, [r7, #4]
 750 001e 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 751 0022 012B     		cmp	r3, #1
 752 0024 01D1     		bne	.L38
 753              		.loc 1 524 0 is_stmt 0 discriminator 1
 754 0026 0223     		movs	r3, #2
 755 0028 B6E0     		b	.L39
 756              	.L38:
 757              		.loc 1 524 0 discriminator 2
 758 002a 7B68     		ldr	r3, [r7, #4]
 759 002c 0122     		movs	r2, #1
 760 002e 83F84520 		strb	r2, [r3, #69]
 525:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 526:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
 527:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_BUSY;
 761              		.loc 1 527 0 is_stmt 1 discriminator 2
 762 0032 7B68     		ldr	r3, [r7, #4]
 763 0034 0222     		movs	r2, #2
 764 0036 83F84420 		strb	r2, [r3, #68]
 528:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 529:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( FrameLength == 0 )
 765              		.loc 1 529 0 discriminator 2
 766 003a 3B68     		ldr	r3, [r7]
 767 003c 002B     		cmp	r3, #0
 768 003e 09D1     		bne	.L40
 530:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 531:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set ETH HAL state to READY */
 532:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->State = HAL_ETH_STATE_READY;
 769              		.loc 1 532 0
 770 0040 7B68     		ldr	r3, [r7, #4]
 771 0042 0122     		movs	r2, #1
 772 0044 83F84420 		strb	r2, [r3, #68]
 533:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Process Unlocked */
 535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		__HAL_UNLOCK( heth );
 773              		.loc 1 535 0
 774 0048 7B68     		ldr	r3, [r7, #4]
 775 004a 0022     		movs	r2, #0
 776 004c 83F84520 		strb	r2, [r3, #69]
 536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		return  HAL_ERROR;
 777              		.loc 1 537 0
 778 0050 0123     		movs	r3, #1
 779 0052 A1E0     		b	.L39
 780              	.L40:
 538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check if the descriptor is owned by the ETHERNET DMA (when set) or CPU (when reset) */
ARM GAS  /tmp/cc1SlDEr.s 			page 24


 541:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( ( pxDmaTxDesc->Status & ETH_DMATXDESC_OWN ) != ( uint32_t ) RESET )
 781              		.loc 1 541 0
 782 0054 3B69     		ldr	r3, [r7, #16]
 783 0056 1B68     		ldr	r3, [r3]
 784 0058 002B     		cmp	r3, #0
 785 005a 09DA     		bge	.L41
 542:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 543:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* OWN bit set */
 544:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->State = HAL_ETH_STATE_BUSY_TX;
 786              		.loc 1 544 0
 787 005c 7B68     		ldr	r3, [r7, #4]
 788 005e 1222     		movs	r2, #18
 789 0060 83F84420 		strb	r2, [r3, #68]
 545:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 546:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Process Unlocked */
 547:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		__HAL_UNLOCK( heth );
 790              		.loc 1 547 0
 791 0064 7B68     		ldr	r3, [r7, #4]
 792 0066 0022     		movs	r2, #0
 793 0068 83F84520 		strb	r2, [r3, #69]
 548:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 549:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		return HAL_ERROR;
 794              		.loc 1 549 0
 795 006c 0123     		movs	r3, #1
 796 006e 93E0     		b	.L39
 797              	.L41:
 550:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 552:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Get the number of needed Tx buffers for the current frame, rounding up. */
 553:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	bufcount = ( FrameLength + ETH_TX_BUF_SIZE - 1 ) / ETH_TX_BUF_SIZE;
 798              		.loc 1 553 0
 799 0070 3B68     		ldr	r3, [r7]
 800 0072 03F2F353 		addw	r3, r3, #1523
 801 0076 4B4A     		ldr	r2, .L50
 802 0078 A2FB0323 		umull	r2, r3, r2, r3
 803 007c 9B0A     		lsrs	r3, r3, #10
 804 007e BB61     		str	r3, [r7, #24]
 554:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 555:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if (bufcount == 1)
 805              		.loc 1 555 0
 806 0080 BB69     		ldr	r3, [r7, #24]
 807 0082 012B     		cmp	r3, #1
 808 0084 17D1     		bne	.L42
 556:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 557:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set LAST and FIRST segment */
 558:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDmaTxDesc->Status |= ETH_DMATXDESC_FS | ETH_DMATXDESC_LS;
 809              		.loc 1 558 0
 810 0086 3B69     		ldr	r3, [r7, #16]
 811 0088 1B68     		ldr	r3, [r3]
 812 008a 43F04052 		orr	r2, r3, #805306368
 813 008e 3B69     		ldr	r3, [r7, #16]
 814 0090 1A60     		str	r2, [r3]
 559:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set frame size */
 560:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDmaTxDesc->ControlBufferSize = ( FrameLength & ETH_DMATXDESC_TBS1 );
 815              		.loc 1 560 0
 816 0092 3B68     		ldr	r3, [r7]
 817 0094 C3F30C02 		ubfx	r2, r3, #0, #13
ARM GAS  /tmp/cc1SlDEr.s 			page 25


 818 0098 3B69     		ldr	r3, [r7, #16]
 819 009a 5A60     		str	r2, [r3, #4]
 561:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 562:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		pxDmaTxDesc->Status |= ETH_DMATXDESC_OWN;
 820              		.loc 1 562 0
 821 009c 3B69     		ldr	r3, [r7, #16]
 822 009e 1B68     		ldr	r3, [r3]
 823 00a0 43F00042 		orr	r2, r3, #-2147483648
 824 00a4 3B69     		ldr	r3, [r7, #16]
 825 00a6 1A60     		str	r2, [r3]
 563:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Point to next descriptor */
 564:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->TxDesc = ( ETH_DMADescTypeDef * ) ( heth->TxDesc->Buffer2NextDescAddr );
 826              		.loc 1 564 0
 827 00a8 7B68     		ldr	r3, [r7, #4]
 828 00aa DB6A     		ldr	r3, [r3, #44]
 829 00ac DB68     		ldr	r3, [r3, #12]
 830 00ae 1A46     		mov	r2, r3
 831 00b0 7B68     		ldr	r3, [r7, #4]
 832 00b2 DA62     		str	r2, [r3, #44]
 833 00b4 46E0     		b	.L43
 834              	.L42:
 565:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 566:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else
 567:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		for( i = 0; i < bufcount; i++ )
 835              		.loc 1 568 0
 836 00b6 0023     		movs	r3, #0
 837 00b8 FB61     		str	r3, [r7, #28]
 838 00ba 3FE0     		b	.L44
 839              	.L48:
 840              	.LBB6:
 569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Clear FIRST and LAST segment bits */
 571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		uint32_t ulStatus = heth->TxDesc->Status & ~( ETH_DMATXDESC_FS | ETH_DMATXDESC_LS );
 841              		.loc 1 571 0
 842 00bc 7B68     		ldr	r3, [r7, #4]
 843 00be DB6A     		ldr	r3, [r3, #44]
 844 00c0 1B68     		ldr	r3, [r3]
 845 00c2 23F04053 		bic	r3, r3, #805306368
 846 00c6 FB60     		str	r3, [r7, #12]
 572:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 573:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if( i == 0 )
 847              		.loc 1 573 0
 848 00c8 FB69     		ldr	r3, [r7, #28]
 849 00ca 002B     		cmp	r3, #0
 850 00cc 05D1     		bne	.L45
 574:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 575:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				/* Setting the first segment bit */
 576:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				heth->TxDesc->Status = ulStatus | ETH_DMATXDESC_FS;
 851              		.loc 1 576 0
 852 00ce 7B68     		ldr	r3, [r7, #4]
 853 00d0 DB6A     		ldr	r3, [r3, #44]
 854 00d2 FA68     		ldr	r2, [r7, #12]
 855 00d4 42F08052 		orr	r2, r2, #268435456
 856 00d8 1A60     		str	r2, [r3]
 857              	.L45:
 577:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
ARM GAS  /tmp/cc1SlDEr.s 			page 26


 578:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 579:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Program size */
 580:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if (i < (bufcount-1))
 858              		.loc 1 580 0
 859 00da BB69     		ldr	r3, [r7, #24]
 860 00dc 5A1E     		subs	r2, r3, #1
 861 00de FB69     		ldr	r3, [r7, #28]
 862 00e0 9A42     		cmp	r2, r3
 863 00e2 05D9     		bls	.L46
 581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 582:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				heth->TxDesc->ControlBufferSize = (ETH_TX_BUF_SIZE & ETH_DMATXDESC_TBS1);
 864              		.loc 1 582 0
 865 00e4 7B68     		ldr	r3, [r7, #4]
 866 00e6 DB6A     		ldr	r3, [r3, #44]
 867 00e8 40F2F452 		movw	r2, #1524
 868 00ec 5A60     		str	r2, [r3, #4]
 869 00ee 14E0     		b	.L47
 870              	.L46:
 583:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 584:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			else
 585:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 586:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				/* Setting the last segment bit */
 587:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				heth->TxDesc->Status = ulStatus | ETH_DMATXDESC_LS;
 871              		.loc 1 587 0
 872 00f0 7B68     		ldr	r3, [r7, #4]
 873 00f2 DB6A     		ldr	r3, [r3, #44]
 874 00f4 FA68     		ldr	r2, [r7, #12]
 875 00f6 42F00052 		orr	r2, r2, #536870912
 876 00fa 1A60     		str	r2, [r3]
 588:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				size = FrameLength - (bufcount-1)*ETH_TX_BUF_SIZE;
 877              		.loc 1 588 0
 878 00fc BB69     		ldr	r3, [r7, #24]
 879 00fe 2A4A     		ldr	r2, .L50+4
 880 0100 02FB03F2 		mul	r2, r2, r3
 881 0104 3B68     		ldr	r3, [r7]
 882 0106 1344     		add	r3, r3, r2
 883 0108 03F2F453 		addw	r3, r3, #1524
 884 010c 7B61     		str	r3, [r7, #20]
 589:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				heth->TxDesc->ControlBufferSize = (size & ETH_DMATXDESC_TBS1);
 885              		.loc 1 589 0
 886 010e 7B68     		ldr	r3, [r7, #4]
 887 0110 DB6A     		ldr	r3, [r3, #44]
 888 0112 7A69     		ldr	r2, [r7, #20]
 889 0114 C2F30C02 		ubfx	r2, r2, #0, #13
 890 0118 5A60     		str	r2, [r3, #4]
 891              	.L47:
 590:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 591:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 592:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Set Own bit of the Tx descriptor Status: gives the buffer back to ETHERNET DMA */
 593:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->TxDesc->Status |= ETH_DMATXDESC_OWN;
 892              		.loc 1 593 0 discriminator 2
 893 011a 7B68     		ldr	r3, [r7, #4]
 894 011c DB6A     		ldr	r3, [r3, #44]
 895 011e 7A68     		ldr	r2, [r7, #4]
 896 0120 D26A     		ldr	r2, [r2, #44]
 897 0122 1268     		ldr	r2, [r2]
 898 0124 42F00042 		orr	r2, r2, #-2147483648
ARM GAS  /tmp/cc1SlDEr.s 			page 27


 899 0128 1A60     		str	r2, [r3]
 594:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* point to next descriptor */
 595:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->TxDesc = (ETH_DMADescTypeDef *)( heth->TxDesc->Buffer2NextDescAddr );
 900              		.loc 1 595 0 discriminator 2
 901 012a 7B68     		ldr	r3, [r7, #4]
 902 012c DB6A     		ldr	r3, [r3, #44]
 903 012e DB68     		ldr	r3, [r3, #12]
 904 0130 1A46     		mov	r2, r3
 905 0132 7B68     		ldr	r3, [r7, #4]
 906 0134 DA62     		str	r2, [r3, #44]
 907              	.LBE6:
 568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 908              		.loc 1 568 0 discriminator 2
 909 0136 FB69     		ldr	r3, [r7, #28]
 910 0138 0133     		adds	r3, r3, #1
 911 013a FB61     		str	r3, [r7, #28]
 912              	.L44:
 568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 913              		.loc 1 568 0 is_stmt 0 discriminator 1
 914 013c FA69     		ldr	r2, [r7, #28]
 915 013e BB69     		ldr	r3, [r7, #24]
 916 0140 9A42     		cmp	r2, r3
 917 0142 BBD3     		bcc	.L48
 918              	.L43:
 919              	.LBB7:
 920              	.LBB8:
 921              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
ARM GAS  /tmp/cc1SlDEr.s 			page 28


  31:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 29


  88:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
ARM GAS  /tmp/cc1SlDEr.s 			page 30


 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/cc1SlDEr.s 			page 31


 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  /tmp/cc1SlDEr.s 			page 32


 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc1SlDEr.s 			page 33


 316:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/cc1SlDEr.s 			page 34


 373:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
ARM GAS  /tmp/cc1SlDEr.s 			page 35


 922              		.loc 2 429 0 is_stmt 1
 923              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 924 0144 BFF34F8F 		dsb 0xF
 925              	@ 0 "" 2
 926              		.thumb
 927              	.LBE8:
 928              	.LBE7:
 596:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 597:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 598:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 599:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__DSB();
 600:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* When Tx Buffer unavailable flag is set: clear it and resume transmission */
 602:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( ( heth->Instance->DMASR & ETH_DMASR_TBUS ) != ( uint32_t )RESET )
 929              		.loc 1 602 0
 930 0148 7B68     		ldr	r3, [r7, #4]
 931 014a 1A68     		ldr	r2, [r3]
 932 014c 41F21403 		movw	r3, #4116
 933 0150 1344     		add	r3, r3, r2
 934 0152 1B68     		ldr	r3, [r3]
 935 0154 03F00403 		and	r3, r3, #4
 936 0158 002B     		cmp	r3, #0
 937 015a 14D0     		beq	.L49
 603:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 604:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->DMACHTDR = ( uint32_t )pxDmaTxDesc;
 938              		.loc 1 604 0
 939 015c 7B68     		ldr	r3, [r7, #4]
 940 015e 1968     		ldr	r1, [r3]
 941 0160 3A69     		ldr	r2, [r7, #16]
 942 0162 41F24803 		movw	r3, #4168
 943 0166 0B44     		add	r3, r3, r1
 944 0168 1A60     		str	r2, [r3]
 605:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 606:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Clear TBUS ETHERNET DMA flag */
 607:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->DMASR = ETH_DMASR_TBUS;
 945              		.loc 1 607 0
 946 016a 7B68     		ldr	r3, [r7, #4]
 947 016c 1A68     		ldr	r2, [r3]
 948 016e 41F21403 		movw	r3, #4116
 949 0172 1344     		add	r3, r3, r2
 950 0174 0422     		movs	r2, #4
 951 0176 1A60     		str	r2, [r3]
 608:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Resume DMA transmission*/
 609:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->DMATPDR = 0;
 952              		.loc 1 609 0
 953 0178 7B68     		ldr	r3, [r7, #4]
 954 017a 1A68     		ldr	r2, [r3]
 955 017c 41F20403 		movw	r3, #4100
 956 0180 1344     		add	r3, r3, r2
 957 0182 0022     		movs	r2, #0
 958 0184 1A60     		str	r2, [r3]
 959              	.L49:
 610:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 611:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 612:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set ETH HAL State to Ready */
 613:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_READY;
 960              		.loc 1 613 0
ARM GAS  /tmp/cc1SlDEr.s 			page 36


 961 0186 7B68     		ldr	r3, [r7, #4]
 962 0188 0122     		movs	r2, #1
 963 018a 83F84420 		strb	r2, [r3, #68]
 614:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 615:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
 616:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 964              		.loc 1 616 0
 965 018e 7B68     		ldr	r3, [r7, #4]
 966 0190 0022     		movs	r2, #0
 967 0192 83F84520 		strb	r2, [r3, #69]
 617:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 618:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 619:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 968              		.loc 1 619 0
 969 0196 0023     		movs	r3, #0
 970              	.L39:
 620:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 971              		.loc 1 620 0
 972 0198 1846     		mov	r0, r3
 973 019a 2437     		adds	r7, r7, #36
 974              	.LCFI37:
 975              		.cfi_def_cfa_offset 4
 976 019c BD46     		mov	sp, r7
 977              	.LCFI38:
 978              		.cfi_def_cfa_register 13
 979              		@ sp needed
 980 019e 5DF8047B 		ldr	r7, [sp], #4
 981              	.LCFI39:
 982              		.cfi_restore 7
 983              		.cfi_def_cfa_offset 0
 984 01a2 7047     		bx	lr
 985              	.L51:
 986              		.align	2
 987              	.L50:
 988 01a4 0BB002AC 		.word	-1409110005
 989 01a8 0CFAFFFF 		.word	-1524
 990              		.cfi_endproc
 991              	.LFE141:
 993              		.section	.text.HAL_ETH_GetReceivedFrame_IT,"ax",%progbits
 994              		.align	2
 995              		.global	HAL_ETH_GetReceivedFrame_IT
 996              		.thumb
 997              		.thumb_func
 999              	HAL_ETH_GetReceivedFrame_IT:
 1000              	.LFB142:
 621:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Checks for received frames.
 624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame_IT( ETH_HandleTypeDef *heth )
 629:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1001              		.loc 1 629 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cc1SlDEr.s 			page 37


 1004              		@ frame_needed = 1, uses_anonymous_args = 0
 1005 0000 80B5     		push	{r7, lr}
 1006              	.LCFI40:
 1007              		.cfi_def_cfa_offset 8
 1008              		.cfi_offset 7, -8
 1009              		.cfi_offset 14, -4
 1010 0002 82B0     		sub	sp, sp, #8
 1011              	.LCFI41:
 1012              		.cfi_def_cfa_offset 16
 1013 0004 00AF     		add	r7, sp, #0
 1014              	.LCFI42:
 1015              		.cfi_def_cfa_register 7
 1016 0006 7860     		str	r0, [r7, #4]
 630:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_ETH_GetReceivedFrame( heth );
 1017              		.loc 1 630 0
 1018 0008 7868     		ldr	r0, [r7, #4]
 1019 000a FFF7FEFF 		bl	HAL_ETH_GetReceivedFrame
 1020 000e 0346     		mov	r3, r0
 631:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1021              		.loc 1 631 0
 1022 0010 1846     		mov	r0, r3
 1023 0012 0837     		adds	r7, r7, #8
 1024              	.LCFI43:
 1025              		.cfi_def_cfa_offset 8
 1026 0014 BD46     		mov	sp, r7
 1027              	.LCFI44:
 1028              		.cfi_def_cfa_register 13
 1029              		@ sp needed
 1030 0016 80BD     		pop	{r7, pc}
 1031              		.cfi_endproc
 1032              	.LFE142:
 1034              		.section	.text.HAL_ETH_GetReceivedFrame,"ax",%progbits
 1035              		.align	2
 1036              		.global	HAL_ETH_GetReceivedFrame
 1037              		.thumb
 1038              		.thumb_func
 1040              	HAL_ETH_GetReceivedFrame:
 1041              	.LFB143:
 632:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 633:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_GetReceivedFrame( ETH_HandleTypeDef *heth )
 634:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1042              		.loc 1 634 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 24
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              	.LCFI45:
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 7, -4
 1051 0002 87B0     		sub	sp, sp, #28
 1052              	.LCFI46:
 1053              		.cfi_def_cfa_offset 32
 1054 0004 00AF     		add	r7, sp, #0
 1055              	.LCFI47:
 1056              		.cfi_def_cfa_register 7
 1057 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cc1SlDEr.s 			page 38


 635:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** uint32_t ulCounter = 0;
 1058              		.loc 1 635 0
 1059 0008 0023     		movs	r3, #0
 1060 000a 7B61     		str	r3, [r7, #20]
 636:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** ETH_DMADescTypeDef *pxDescriptor = heth->RxDesc;
 1061              		.loc 1 636 0
 1062 000c 7B68     		ldr	r3, [r7, #4]
 1063 000e 9B6A     		ldr	r3, [r3, #40]
 1064 0010 3B61     		str	r3, [r7, #16]
 637:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef xResult = HAL_ERROR;
 1065              		.loc 1 637 0
 1066 0012 0123     		movs	r3, #1
 1067 0014 FB73     		strb	r3, [r7, #15]
 638:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 639:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
 640:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 1068              		.loc 1 640 0
 1069 0016 7B68     		ldr	r3, [r7, #4]
 1070 0018 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1071 001c 012B     		cmp	r3, #1
 1072 001e 01D1     		bne	.L55
 1073              		.loc 1 640 0 is_stmt 0 discriminator 1
 1074 0020 0223     		movs	r3, #2
 1075 0022 68E0     		b	.L56
 1076              	.L55:
 1077              		.loc 1 640 0 discriminator 2
 1078 0024 7B68     		ldr	r3, [r7, #4]
 1079 0026 0122     		movs	r2, #1
 1080 0028 83F84520 		strb	r2, [r3, #69]
 641:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 642:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check the ETH state to BUSY */
 643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_BUSY;
 1081              		.loc 1 643 0 is_stmt 1 discriminator 2
 1082 002c 7B68     		ldr	r3, [r7, #4]
 1083 002e 0222     		movs	r2, #2
 1084 0030 83F84420 		strb	r2, [r3, #68]
 644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Scan descriptors owned by CPU */
 646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	while( ( ( pxDescriptor->Status & ETH_DMARXDESC_OWN ) == 0ul ) && ( ulCounter < ETH_RXBUFNB ) )
 1085              		.loc 1 646 0 discriminator 2
 1086 0034 4FE0     		b	.L57
 1087              	.L62:
 1088              	.LBB9:
 647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t ulStatus = pxDescriptor->Status;
 1089              		.loc 1 648 0
 1090 0036 3B69     		ldr	r3, [r7, #16]
 1091 0038 1B68     		ldr	r3, [r3]
 1092 003a BB60     		str	r3, [r7, #8]
 649:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Just for security. */
 651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		ulCounter++;
 1093              		.loc 1 651 0
 1094 003c 7B69     		ldr	r3, [r7, #20]
 1095 003e 0133     		adds	r3, r3, #1
 1096 0040 7B61     		str	r3, [r7, #20]
 652:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 39


 653:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		if( ( ulStatus & ( ETH_DMARXDESC_FS | ETH_DMARXDESC_LS ) ) == ( uint32_t )ETH_DMARXDESC_FS )
 1097              		.loc 1 653 0
 1098 0042 BB68     		ldr	r3, [r7, #8]
 1099 0044 03F44073 		and	r3, r3, #768
 1100 0048 B3F5007F 		cmp	r3, #512
 1101 004c 0FD1     		bne	.L58
 654:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 655:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* First segment in frame, but not the last. */
 656:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.FSRxDesc = pxDescriptor;
 1102              		.loc 1 656 0
 1103 004e 7B68     		ldr	r3, [r7, #4]
 1104 0050 3A69     		ldr	r2, [r7, #16]
 1105 0052 1A63     		str	r2, [r3, #48]
 657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.LSRxDesc = ( ETH_DMADescTypeDef *)NULL;
 1106              		.loc 1 657 0
 1107 0054 7B68     		ldr	r3, [r7, #4]
 1108 0056 0022     		movs	r2, #0
 1109 0058 5A63     		str	r2, [r3, #52]
 658:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.SegCount = 1;
 1110              		.loc 1 658 0
 1111 005a 7B68     		ldr	r3, [r7, #4]
 1112 005c 0122     		movs	r2, #1
 1113 005e 9A63     		str	r2, [r3, #56]
 659:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Point to next descriptor. */
 660:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDescriptor = (ETH_DMADescTypeDef*) (pxDescriptor->Buffer2NextDescAddr);
 1114              		.loc 1 660 0
 1115 0060 3B69     		ldr	r3, [r7, #16]
 1116 0062 DB68     		ldr	r3, [r3, #12]
 1117 0064 3B61     		str	r3, [r7, #16]
 661:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxDesc = pxDescriptor;
 1118              		.loc 1 661 0
 1119 0066 7B68     		ldr	r3, [r7, #4]
 1120 0068 3A69     		ldr	r2, [r7, #16]
 1121 006a 9A62     		str	r2, [r3, #40]
 1122 006c 33E0     		b	.L57
 1123              	.L58:
 662:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 663:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		else if( ( ulStatus & ( ETH_DMARXDESC_LS | ETH_DMARXDESC_FS ) ) == 0ul )
 1124              		.loc 1 663 0
 1125 006e BB68     		ldr	r3, [r7, #8]
 1126 0070 03F44073 		and	r3, r3, #768
 1127 0074 002B     		cmp	r3, #0
 1128 0076 0BD1     		bne	.L59
 664:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 665:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* This is an intermediate segment, not first, not last. */
 666:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Increment segment count. */
 667:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.SegCount++;
 1129              		.loc 1 667 0
 1130 0078 7B68     		ldr	r3, [r7, #4]
 1131 007a 9B6B     		ldr	r3, [r3, #56]
 1132 007c 5A1C     		adds	r2, r3, #1
 1133 007e 7B68     		ldr	r3, [r7, #4]
 1134 0080 9A63     		str	r2, [r3, #56]
 668:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Move to the next descriptor. */
 669:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			pxDescriptor = ( ETH_DMADescTypeDef * ) ( pxDescriptor->Buffer2NextDescAddr );
 1135              		.loc 1 669 0
 1136 0082 3B69     		ldr	r3, [r7, #16]
ARM GAS  /tmp/cc1SlDEr.s 			page 40


 1137 0084 DB68     		ldr	r3, [r3, #12]
 1138 0086 3B61     		str	r3, [r7, #16]
 670:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxDesc = pxDescriptor;
 1139              		.loc 1 670 0
 1140 0088 7B68     		ldr	r3, [r7, #4]
 1141 008a 3A69     		ldr	r2, [r7, #16]
 1142 008c 9A62     		str	r2, [r3, #40]
 1143 008e 22E0     		b	.L57
 1144              	.L59:
 671:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 672:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Must be a last segment */
 673:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		else
 674:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 675:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* This is the last segment. */
 676:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Check if last segment is first segment: one segment contains the frame */
 677:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if( heth->RxFrameInfos.SegCount == 0 )
 1145              		.loc 1 677 0
 1146 0090 7B68     		ldr	r3, [r7, #4]
 1147 0092 9B6B     		ldr	r3, [r3, #56]
 1148 0094 002B     		cmp	r3, #0
 1149 0096 02D1     		bne	.L60
 678:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 679:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				/* Remember the first segment. */
 680:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				heth->RxFrameInfos.FSRxDesc = pxDescriptor;
 1150              		.loc 1 680 0
 1151 0098 7B68     		ldr	r3, [r7, #4]
 1152 009a 3A69     		ldr	r2, [r7, #16]
 1153 009c 1A63     		str	r2, [r3, #48]
 1154              	.L60:
 681:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 682:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 683:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Increment segment count */
 684:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.SegCount++;
 1155              		.loc 1 684 0
 1156 009e 7B68     		ldr	r3, [r7, #4]
 1157 00a0 9B6B     		ldr	r3, [r3, #56]
 1158 00a2 5A1C     		adds	r2, r3, #1
 1159 00a4 7B68     		ldr	r3, [r7, #4]
 1160 00a6 9A63     		str	r2, [r3, #56]
 685:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 686:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Remember the last segment. */
 687:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.LSRxDesc = pxDescriptor;
 1161              		.loc 1 687 0
 1162 00a8 7B68     		ldr	r3, [r7, #4]
 1163 00aa 3A69     		ldr	r2, [r7, #16]
 1164 00ac 5A63     		str	r2, [r3, #52]
 688:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 689:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Get the Frame Length of the received packet: substruct 4 bytes of the CRC */
 690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.length =
 691:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				( ( ulStatus & ETH_DMARXDESC_FL ) >> ETH_DMARXDESC_FRAMELENGTHSHIFT ) - 4;
 1165              		.loc 1 691 0
 1166 00ae BA68     		ldr	r2, [r7, #8]
 1167 00b0 144B     		ldr	r3, .L63
 1168 00b2 1340     		ands	r3, r3, r2
 1169 00b4 1B0C     		lsrs	r3, r3, #16
 1170 00b6 1A1F     		subs	r2, r3, #4
 690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				( ( ulStatus & ETH_DMARXDESC_FL ) >> ETH_DMARXDESC_FRAMELENGTHSHIFT ) - 4;
ARM GAS  /tmp/cc1SlDEr.s 			page 41


 1171              		.loc 1 690 0
 1172 00b8 7B68     		ldr	r3, [r7, #4]
 1173 00ba DA63     		str	r2, [r3, #60]
 692:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 693:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Get the address of the buffer start address */
 694:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxFrameInfos.buffer = heth->RxFrameInfos.FSRxDesc->Buffer1Addr;
 1174              		.loc 1 694 0
 1175 00bc 7B68     		ldr	r3, [r7, #4]
 1176 00be 1B6B     		ldr	r3, [r3, #48]
 1177 00c0 9A68     		ldr	r2, [r3, #8]
 1178 00c2 7B68     		ldr	r3, [r7, #4]
 1179 00c4 1A64     		str	r2, [r3, #64]
 695:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 696:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Point to next descriptor */
 697:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->RxDesc = ( ETH_DMADescTypeDef * ) pxDescriptor->Buffer2NextDescAddr;
 1180              		.loc 1 697 0
 1181 00c6 3B69     		ldr	r3, [r7, #16]
 1182 00c8 DB68     		ldr	r3, [r3, #12]
 1183 00ca 1A46     		mov	r2, r3
 1184 00cc 7B68     		ldr	r3, [r7, #4]
 1185 00ce 9A62     		str	r2, [r3, #40]
 698:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 699:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Return OK status: a packet was received. */
 700:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			xResult = HAL_OK;
 1186              		.loc 1 700 0
 1187 00d0 0023     		movs	r3, #0
 1188 00d2 FB73     		strb	r3, [r7, #15]
 701:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			break;
 1189              		.loc 1 701 0
 1190 00d4 06E0     		b	.L61
 1191              	.L57:
 1192              	.LBE9:
 646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 1193              		.loc 1 646 0
 1194 00d6 3B69     		ldr	r3, [r7, #16]
 1195 00d8 1B68     		ldr	r3, [r3]
 1196 00da 002B     		cmp	r3, #0
 1197 00dc 02DB     		blt	.L61
 646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 1198              		.loc 1 646 0 is_stmt 0 discriminator 1
 1199 00de 7B69     		ldr	r3, [r7, #20]
 1200 00e0 032B     		cmp	r3, #3
 1201 00e2 A8D9     		bls	.L62
 1202              	.L61:
 702:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 703:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 704:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 705:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set ETH HAL State to Ready */
 706:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_READY;
 1203              		.loc 1 706 0 is_stmt 1
 1204 00e4 7B68     		ldr	r3, [r7, #4]
 1205 00e6 0122     		movs	r2, #1
 1206 00e8 83F84420 		strb	r2, [r3, #68]
 707:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 708:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
 709:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 1207              		.loc 1 709 0
ARM GAS  /tmp/cc1SlDEr.s 			page 42


 1208 00ec 7B68     		ldr	r3, [r7, #4]
 1209 00ee 0022     		movs	r2, #0
 1210 00f0 83F84520 		strb	r2, [r3, #69]
 710:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 711:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 712:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return xResult;
 1211              		.loc 1 712 0
 1212 00f4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1213              	.L56:
 713:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1214              		.loc 1 713 0
 1215 00f6 1846     		mov	r0, r3
 1216 00f8 1C37     		adds	r7, r7, #28
 1217              	.LCFI48:
 1218              		.cfi_def_cfa_offset 4
 1219 00fa BD46     		mov	sp, r7
 1220              	.LCFI49:
 1221              		.cfi_def_cfa_register 13
 1222              		@ sp needed
 1223 00fc 5DF8047B 		ldr	r7, [sp], #4
 1224              	.LCFI50:
 1225              		.cfi_restore 7
 1226              		.cfi_def_cfa_offset 0
 1227 0100 7047     		bx	lr
 1228              	.L64:
 1229 0102 00BF     		.align	2
 1230              	.L63:
 1231 0104 0000FF3F 		.word	1073676288
 1232              		.cfi_endproc
 1233              	.LFE143:
 1235              		.section	.text.HAL_ETH_IRQHandler,"ax",%progbits
 1236              		.align	2
 1237              		.global	HAL_ETH_IRQHandler
 1238              		.thumb
 1239              		.thumb_func
 1241              	HAL_ETH_IRQHandler:
 1242              	.LFB144:
 714:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 715:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #if( STM32_ETHERNET_STATS != 0 )
 716:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 717:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	volatile int rx_count, tx_count, int_count;
 718:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/**
 719:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	  * @brief  This function handles ETH interrupt request.
 720:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	  * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 721:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	  *         the configuration information for ETHERNET module
 722:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	  * @retval HAL status
 723:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	  */
 724:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	volatile int int_counts[32];
 725:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	volatile int tx_status[8];
 726:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	volatile unsigned sr_history[32];
 727:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	volatile int sr_head;
 728:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	#define	STM32_STAT_INC( x )		do { ( x )++; } while( 0 )
 729:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 730:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #else
 731:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	#define	STM32_STAT_INC( x )		do { } while( 0 )
 732:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #endif /* STM32_ETHERNET_STATS */
 733:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 43


 734:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #define ETH_DMA_ALL_INTS \
 735:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	( ETH_DMA_IT_TST | ETH_DMA_IT_PMT | ETH_DMA_IT_MMC | ETH_DMA_IT_NIS | ETH_DMA_IT_AIS | ETH_DMA_IT_
 736:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMA_IT_FBE | ETH_DMA_IT_ET | ETH_DMA_IT_RWT | ETH_DMA_IT_RPS | ETH_DMA_IT_RBU | ETH_DMA_IT_R |
 737:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMA_IT_TU | ETH_DMA_IT_RO | ETH_DMA_IT_TJT | ETH_DMA_IT_TPS | ETH_DMA_IT_T )
 738:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 739:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** //#define ETH_DMA_ALL_INTS		ETH_DMA_IT_RBU | ETH_DMA_FLAG_T | ETH_DMA_FLAG_AIS
 740:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 741:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #define INT_MASK		( ( uint32_t ) ~ ( ETH_DMA_IT_TBU ) )
 742:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** void HAL_ETH_IRQHandler(ETH_HandleTypeDef *heth)
 743:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1243              		.loc 1 743 0
 1244              		.cfi_startproc
 1245              		@ args = 0, pretend = 0, frame = 16
 1246              		@ frame_needed = 1, uses_anonymous_args = 0
 1247 0000 80B5     		push	{r7, lr}
 1248              	.LCFI51:
 1249              		.cfi_def_cfa_offset 8
 1250              		.cfi_offset 7, -8
 1251              		.cfi_offset 14, -4
 1252 0002 84B0     		sub	sp, sp, #16
 1253              	.LCFI52:
 1254              		.cfi_def_cfa_offset 24
 1255 0004 00AF     		add	r7, sp, #0
 1256              	.LCFI53:
 1257              		.cfi_def_cfa_register 7
 1258 0006 7860     		str	r0, [r7, #4]
 744:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t dmasr;
 745:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 746:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	STM32_STAT_INC( int_count );
 747:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 748:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmasr = heth->Instance->DMASR & ETH_DMA_ALL_INTS;
 1259              		.loc 1 748 0
 1260 0008 7B68     		ldr	r3, [r7, #4]
 1261 000a 1A68     		ldr	r2, [r3]
 1262 000c 41F21403 		movw	r3, #4116
 1263 0010 1344     		add	r3, r3, r2
 1264 0012 1A68     		ldr	r2, [r3]
 1265 0014 124B     		ldr	r3, .L69
 1266 0016 1340     		ands	r3, r3, r2
 1267 0018 FB60     		str	r3, [r7, #12]
 749:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMASR = dmasr;
 1268              		.loc 1 749 0
 1269 001a 7B68     		ldr	r3, [r7, #4]
 1270 001c 1A68     		ldr	r2, [r3]
 1271 001e 41F21403 		movw	r3, #4116
 1272 0022 1344     		add	r3, r3, r2
 1273 0024 FA68     		ldr	r2, [r7, #12]
 1274 0026 1A60     		str	r2, [r3]
 750:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 751:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #if( STM32_ETHERNET_STATS != 0 )
 752:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( sr_head < ARRAY_SIZE( sr_history ) )
 753:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 754:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		sr_history[ sr_head++ ] = dmasr;
 755:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 756:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 757:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 758:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		int i;
ARM GAS  /tmp/cc1SlDEr.s 			page 44


 759:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		for (i = 0; i < 32; i++) {
 760:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if (dmasr & (1u << i)) {
 761:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				int_counts[i]++;
 762:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 763:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 764:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tx_status[ ( dmasr >> 20 ) & 0x07 ]++;
 765:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 766:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** #endif
 767:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 768:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Frame received */
 769:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( ( dmasr & ( ETH_DMA_FLAG_R | ETH_DMA_IT_RBU ) ) != 0 )
 1275              		.loc 1 769 0
 1276 0028 FB68     		ldr	r3, [r7, #12]
 1277 002a 03F0C003 		and	r3, r3, #192
 1278 002e 002B     		cmp	r3, #0
 1279 0030 02D0     		beq	.L66
 770:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 771:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Receive complete callback */
 772:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		HAL_ETH_RxCpltCallback( heth );
 1280              		.loc 1 772 0
 1281 0032 7868     		ldr	r0, [r7, #4]
 1282 0034 FFF7FEFF 		bl	HAL_ETH_RxCpltCallback
 1283              	.L66:
 773:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		STM32_STAT_INC( rx_count );
 774:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 775:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Frame transmitted */
 776:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( ( dmasr & ( ETH_DMA_FLAG_T ) ) != 0 )
 1284              		.loc 1 776 0
 1285 0038 FB68     		ldr	r3, [r7, #12]
 1286 003a 03F00103 		and	r3, r3, #1
 1287 003e 002B     		cmp	r3, #0
 1288 0040 02D0     		beq	.L67
 777:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 778:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Transfer complete callback */
 779:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		HAL_ETH_TxCpltCallback( heth );
 1289              		.loc 1 779 0
 1290 0042 7868     		ldr	r0, [r7, #4]
 1291 0044 FFF7FEFF 		bl	HAL_ETH_TxCpltCallback
 1292              	.L67:
 780:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		STM32_STAT_INC( tx_count );
 781:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 782:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 783:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* ETH DMA Error */
 784:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( ( dmasr & ( ETH_DMA_FLAG_AIS ) ) != 0 )
 1293              		.loc 1 784 0
 1294 0048 FB68     		ldr	r3, [r7, #12]
 1295 004a 03F40043 		and	r3, r3, #32768
 1296 004e 002B     		cmp	r3, #0
 1297 0050 02D0     		beq	.L65
 785:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 786:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Ethernet Error callback */
 787:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		HAL_ETH_ErrorCallback( heth );
 1298              		.loc 1 787 0
 1299 0052 7868     		ldr	r0, [r7, #4]
 1300 0054 FFF7FEFF 		bl	HAL_ETH_ErrorCallback
 1301              	.L65:
 788:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
ARM GAS  /tmp/cc1SlDEr.s 			page 45


 789:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1302              		.loc 1 789 0
 1303 0058 1037     		adds	r7, r7, #16
 1304              	.LCFI54:
 1305              		.cfi_def_cfa_offset 8
 1306 005a BD46     		mov	sp, r7
 1307              	.LCFI55:
 1308              		.cfi_def_cfa_register 13
 1309              		@ sp needed
 1310 005c 80BD     		pop	{r7, pc}
 1311              	.L70:
 1312 005e 00BF     		.align	2
 1313              	.L69:
 1314 0060 FBE70138 		.word	939649019
 1315              		.cfi_endproc
 1316              	.LFE144:
 1318              		.section	.text.HAL_ETH_TxCpltCallback,"ax",%progbits
 1319              		.align	2
 1320              		.weak	HAL_ETH_TxCpltCallback
 1321              		.thumb
 1322              		.thumb_func
 1324              	HAL_ETH_TxCpltCallback:
 1325              	.LFB145:
 790:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 791:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 792:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Tx Transfer completed callbacks.
 793:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 794:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 795:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
 796:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 797:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** __weak void HAL_ETH_TxCpltCallback(ETH_HandleTypeDef *heth)
 798:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1326              		.loc 1 798 0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 8
 1329              		@ frame_needed = 1, uses_anonymous_args = 0
 1330              		@ link register save eliminated.
 1331 0000 80B4     		push	{r7}
 1332              	.LCFI56:
 1333              		.cfi_def_cfa_offset 4
 1334              		.cfi_offset 7, -4
 1335 0002 83B0     		sub	sp, sp, #12
 1336              	.LCFI57:
 1337              		.cfi_def_cfa_offset 16
 1338 0004 00AF     		add	r7, sp, #0
 1339              	.LCFI58:
 1340              		.cfi_def_cfa_register 7
 1341 0006 7860     		str	r0, [r7, #4]
 799:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 800:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
 801:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 802:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1342              		.loc 1 802 0
 1343 0008 0C37     		adds	r7, r7, #12
 1344              	.LCFI59:
 1345              		.cfi_def_cfa_offset 4
 1346 000a BD46     		mov	sp, r7
ARM GAS  /tmp/cc1SlDEr.s 			page 46


 1347              	.LCFI60:
 1348              		.cfi_def_cfa_register 13
 1349              		@ sp needed
 1350 000c 5DF8047B 		ldr	r7, [sp], #4
 1351              	.LCFI61:
 1352              		.cfi_restore 7
 1353              		.cfi_def_cfa_offset 0
 1354 0010 7047     		bx	lr
 1355              		.cfi_endproc
 1356              	.LFE145:
 1358 0012 00BF     		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 1359              		.align	2
 1360              		.weak	HAL_ETH_RxCpltCallback
 1361              		.thumb
 1362              		.thumb_func
 1364              	HAL_ETH_RxCpltCallback:
 1365              	.LFB146:
 803:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 804:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 805:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Rx Transfer completed callbacks.
 806:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 807:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 808:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
 809:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 810:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** __weak void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
 811:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1366              		.loc 1 811 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 8
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370              		@ link register save eliminated.
 1371 0000 80B4     		push	{r7}
 1372              	.LCFI62:
 1373              		.cfi_def_cfa_offset 4
 1374              		.cfi_offset 7, -4
 1375 0002 83B0     		sub	sp, sp, #12
 1376              	.LCFI63:
 1377              		.cfi_def_cfa_offset 16
 1378 0004 00AF     		add	r7, sp, #0
 1379              	.LCFI64:
 1380              		.cfi_def_cfa_register 7
 1381 0006 7860     		str	r0, [r7, #4]
 812:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 813:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
 814:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 815:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1382              		.loc 1 815 0
 1383 0008 0C37     		adds	r7, r7, #12
 1384              	.LCFI65:
 1385              		.cfi_def_cfa_offset 4
 1386 000a BD46     		mov	sp, r7
 1387              	.LCFI66:
 1388              		.cfi_def_cfa_register 13
 1389              		@ sp needed
 1390 000c 5DF8047B 		ldr	r7, [sp], #4
 1391              	.LCFI67:
 1392              		.cfi_restore 7
ARM GAS  /tmp/cc1SlDEr.s 			page 47


 1393              		.cfi_def_cfa_offset 0
 1394 0010 7047     		bx	lr
 1395              		.cfi_endproc
 1396              	.LFE146:
 1398 0012 00BF     		.section	.text.HAL_ETH_ErrorCallback,"ax",%progbits
 1399              		.align	2
 1400              		.weak	HAL_ETH_ErrorCallback
 1401              		.thumb
 1402              		.thumb_func
 1404              	HAL_ETH_ErrorCallback:
 1405              	.LFB147:
 816:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 817:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 818:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Ethernet transfer error callbacks
 819:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 820:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 821:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
 822:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 823:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** __weak void HAL_ETH_ErrorCallback(ETH_HandleTypeDef *heth)
 824:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1406              		.loc 1 824 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411 0000 80B4     		push	{r7}
 1412              	.LCFI68:
 1413              		.cfi_def_cfa_offset 4
 1414              		.cfi_offset 7, -4
 1415 0002 83B0     		sub	sp, sp, #12
 1416              	.LCFI69:
 1417              		.cfi_def_cfa_offset 16
 1418 0004 00AF     		add	r7, sp, #0
 1419              	.LCFI70:
 1420              		.cfi_def_cfa_register 7
 1421 0006 7860     		str	r0, [r7, #4]
 825:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 826:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   the HAL_ETH_TxCpltCallback could be implemented in the user file
 827:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 828:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1422              		.loc 1 828 0
 1423 0008 0C37     		adds	r7, r7, #12
 1424              	.LCFI71:
 1425              		.cfi_def_cfa_offset 4
 1426 000a BD46     		mov	sp, r7
 1427              	.LCFI72:
 1428              		.cfi_def_cfa_register 13
 1429              		@ sp needed
 1430 000c 5DF8047B 		ldr	r7, [sp], #4
 1431              	.LCFI73:
 1432              		.cfi_restore 7
 1433              		.cfi_def_cfa_offset 0
 1434 0010 7047     		bx	lr
 1435              		.cfi_endproc
 1436              	.LFE147:
 1438 0012 00BF     		.section	.rodata
 1439              		.align	2
ARM GAS  /tmp/cc1SlDEr.s 			page 48


 1440              	.LC0:
 1441 0000 52656164 		.ascii	"ReadPHY: %d\012\000"
 1441      5048593A 
 1441      2025640A 
 1441      00
 1442              		.section	.text.HAL_ETH_ReadPHYRegister,"ax",%progbits
 1443              		.align	2
 1444              		.global	HAL_ETH_ReadPHYRegister
 1445              		.thumb
 1446              		.thumb_func
 1448              	HAL_ETH_ReadPHYRegister:
 1449              	.LFB148:
 829:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 830:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
 831:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Reads a PHY register
 832:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 833:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 834:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param PHYReg: PHY register address, is the index of one of the 32 PHY register.
 835:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *                This parameter can be one of the following values:
 836:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *                   PHY_BCR: Transceiver Basic Control Register,
 837:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *                   PHY_BSR: Transceiver Basic Status Register.
 838:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *                   More PHY register could be read depending on the used PHY
 839:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param RegValue: PHY register value
 840:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 841:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 842:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_ReadPHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t *RegVa
 843:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1450              		.loc 1 843 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 32
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454 0000 80B5     		push	{r7, lr}
 1455              	.LCFI74:
 1456              		.cfi_def_cfa_offset 8
 1457              		.cfi_offset 7, -8
 1458              		.cfi_offset 14, -4
 1459 0002 88B0     		sub	sp, sp, #32
 1460              	.LCFI75:
 1461              		.cfi_def_cfa_offset 40
 1462 0004 00AF     		add	r7, sp, #0
 1463              	.LCFI76:
 1464              		.cfi_def_cfa_register 7
 1465 0006 F860     		str	r0, [r7, #12]
 1466 0008 0B46     		mov	r3, r1
 1467 000a 7A60     		str	r2, [r7, #4]
 1468 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 844:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** uint32_t tmpreg = 0;
 1469              		.loc 1 844 0
 1470 000e 0023     		movs	r3, #0
 1471 0010 BB61     		str	r3, [r7, #24]
 845:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** uint32_t tickstart = 0;
 1472              		.loc 1 845 0
 1473 0012 0023     		movs	r3, #0
 1474 0014 7B61     		str	r3, [r7, #20]
 846:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef xResult;
 847:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 848:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check parameters */
ARM GAS  /tmp/cc1SlDEr.s 			page 49


 849:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_PHY_ADDRESS(heth->Init.PhyAddress));
 850:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 851:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check the ETH peripheral state */
 852:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( heth->State == HAL_ETH_STATE_BUSY_RD )
 1475              		.loc 1 852 0
 1476 0016 FB68     		ldr	r3, [r7, #12]
 1477 0018 93F84430 		ldrb	r3, [r3, #68]
 1478 001c DBB2     		uxtb	r3, r3
 1479 001e 822B     		cmp	r3, #130
 1480 0020 02D1     		bne	.L75
 853:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 854:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		xResult = HAL_BUSY;
 1481              		.loc 1 854 0
 1482 0022 0223     		movs	r3, #2
 1483 0024 FB77     		strb	r3, [r7, #31]
 1484 0026 58E0     		b	.L76
 1485              	.L75:
 855:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 856:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else
 857:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 858:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		__HAL_LOCK( heth );
 1486              		.loc 1 858 0
 1487 0028 FB68     		ldr	r3, [r7, #12]
 1488 002a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1489 002e 012B     		cmp	r3, #1
 1490 0030 01D1     		bne	.L77
 1491              		.loc 1 858 0 is_stmt 0 discriminator 1
 1492 0032 0223     		movs	r3, #2
 1493 0034 5AE0     		b	.L78
 1494              	.L77:
 1495              		.loc 1 858 0 discriminator 2
 1496 0036 FB68     		ldr	r3, [r7, #12]
 1497 0038 0122     		movs	r2, #1
 1498 003a 83F84520 		strb	r2, [r3, #69]
 859:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 860:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set ETH HAL State to BUSY_RD */
 861:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->State = HAL_ETH_STATE_BUSY_RD;
 1499              		.loc 1 861 0 is_stmt 1 discriminator 2
 1500 003e FB68     		ldr	r3, [r7, #12]
 1501 0040 8222     		movs	r2, #130
 1502 0042 83F84420 		strb	r2, [r3, #68]
 862:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 863:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the ETHERNET MACMIIAR value */
 864:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACMIIAR;
 1503              		.loc 1 864 0 discriminator 2
 1504 0046 FB68     		ldr	r3, [r7, #12]
 1505 0048 1B68     		ldr	r3, [r3]
 1506 004a 1B69     		ldr	r3, [r3, #16]
 1507 004c BB61     		str	r3, [r7, #24]
 865:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 866:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Keep only the CSR Clock Range CR[2:0] bits value */
 867:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg &= ~ETH_MACMIIAR_CR_MASK;
 1508              		.loc 1 867 0 discriminator 2
 1509 004e BB69     		ldr	r3, [r7, #24]
 1510 0050 03F01C03 		and	r3, r3, #28
 1511 0054 BB61     		str	r3, [r7, #24]
 868:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 50


 869:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Prepare the MII address register value */
 870:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ( ( ( uint32_t )heth->Init.PhyAddress << 11) & ETH_MACMIIAR_PA );    /* Set the PHY dev
 1512              		.loc 1 870 0 discriminator 2
 1513 0056 FB68     		ldr	r3, [r7, #12]
 1514 0058 1B8A     		ldrh	r3, [r3, #16]
 1515 005a DB02     		lsls	r3, r3, #11
 1516 005c 9BB2     		uxth	r3, r3
 1517 005e BA69     		ldr	r2, [r7, #24]
 1518 0060 1343     		orrs	r3, r3, r2
 1519 0062 BB61     		str	r3, [r7, #24]
 871:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ( ( ( uint32_t )PHYReg << 6 ) & ETH_MACMIIAR_MR );                   /* Set the PHY reg
 1520              		.loc 1 871 0 discriminator 2
 1521 0064 7B89     		ldrh	r3, [r7, #10]
 1522 0066 9B01     		lsls	r3, r3, #6
 1523 0068 03F4F863 		and	r3, r3, #1984
 1524 006c BA69     		ldr	r2, [r7, #24]
 1525 006e 1343     		orrs	r3, r3, r2
 1526 0070 BB61     		str	r3, [r7, #24]
 872:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg &= ~ETH_MACMIIAR_MW;                                           /* Set the read mode       
 1527              		.loc 1 872 0 discriminator 2
 1528 0072 BB69     		ldr	r3, [r7, #24]
 1529 0074 23F00203 		bic	r3, r3, #2
 1530 0078 BB61     		str	r3, [r7, #24]
 873:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ETH_MACMIIAR_MB;                                            /* Set the MII Busy bit    
 1531              		.loc 1 873 0 discriminator 2
 1532 007a BB69     		ldr	r3, [r7, #24]
 1533 007c 43F00103 		orr	r3, r3, #1
 1534 0080 BB61     		str	r3, [r7, #24]
 874:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 875:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write the result value into the MII Address register */
 876:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACMIIAR = tmpreg;
 1535              		.loc 1 876 0 discriminator 2
 1536 0082 FB68     		ldr	r3, [r7, #12]
 1537 0084 1B68     		ldr	r3, [r3]
 1538 0086 BA69     		ldr	r2, [r7, #24]
 1539 0088 1A61     		str	r2, [r3, #16]
 877:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 878:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get tick */
 879:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tickstart = HAL_GetTick();
 1540              		.loc 1 879 0 discriminator 2
 1541 008a FFF7FEFF 		bl	HAL_GetTick
 1542 008e 7861     		str	r0, [r7, #20]
 1543              	.L82:
 880:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 881:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Check for the Busy flag */
 882:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		while( 1 )
 883:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 884:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			tmpreg = heth->Instance->MACMIIAR;
 1544              		.loc 1 884 0
 1545 0090 FB68     		ldr	r3, [r7, #12]
 1546 0092 1B68     		ldr	r3, [r3]
 1547 0094 1B69     		ldr	r3, [r3, #16]
 1548 0096 BB61     		str	r3, [r7, #24]
 885:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 886:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if( ( tmpreg & ETH_MACMIIAR_MB ) == 0ul )
 1549              		.loc 1 886 0
 1550 0098 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/cc1SlDEr.s 			page 51


 1551 009a 03F00103 		and	r3, r3, #1
 1552 009e 002B     		cmp	r3, #0
 1553 00a0 07D1     		bne	.L79
 887:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 888:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				/* Get MACMIIDR value */
 889:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				*RegValue = ( uint32_t ) heth->Instance->MACMIIDR;
 1554              		.loc 1 889 0
 1555 00a2 FB68     		ldr	r3, [r7, #12]
 1556 00a4 1B68     		ldr	r3, [r3]
 1557 00a6 5A69     		ldr	r2, [r3, #20]
 1558 00a8 7B68     		ldr	r3, [r7, #4]
 1559 00aa 1A60     		str	r2, [r3]
 890:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				xResult = HAL_OK;
 1560              		.loc 1 890 0
 1561 00ac 0023     		movs	r3, #0
 1562 00ae FB77     		strb	r3, [r7, #31]
 891:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				break;
 1563              		.loc 1 891 0
 1564 00b0 0BE0     		b	.L80
 1565              	.L79:
 892:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 893:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Check for the Timeout */
 894:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if( ( HAL_GetTick( ) - tickstart ) > PHY_READ_TO )
 1566              		.loc 1 894 0
 1567 00b2 FFF7FEFF 		bl	HAL_GetTick
 1568 00b6 0246     		mov	r2, r0
 1569 00b8 7B69     		ldr	r3, [r7, #20]
 1570 00ba D31A     		subs	r3, r2, r3
 1571 00bc B3F5803F 		cmp	r3, #65536
 1572 00c0 02D3     		bcc	.L81
 895:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 896:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				xResult = HAL_TIMEOUT;
 1573              		.loc 1 896 0
 1574 00c2 0323     		movs	r3, #3
 1575 00c4 FB77     		strb	r3, [r7, #31]
 897:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				break;
 1576              		.loc 1 897 0
 1577 00c6 00E0     		b	.L80
 1578              	.L81:
 898:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 899:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 900:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 1579              		.loc 1 900 0
 1580 00c8 E2E7     		b	.L82
 1581              	.L80:
 901:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 902:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set ETH HAL State to READY */
 903:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->State = HAL_ETH_STATE_READY;
 1582              		.loc 1 903 0
 1583 00ca FB68     		ldr	r3, [r7, #12]
 1584 00cc 0122     		movs	r2, #1
 1585 00ce 83F84420 		strb	r2, [r3, #68]
 904:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 905:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Process Unlocked */
 906:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		__HAL_UNLOCK( heth );
 1586              		.loc 1 906 0
 1587 00d2 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/cc1SlDEr.s 			page 52


 1588 00d4 0022     		movs	r2, #0
 1589 00d6 83F84520 		strb	r2, [r3, #69]
 1590              	.L76:
 907:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 908:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 909:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( xResult != HAL_OK )
 1591              		.loc 1 909 0
 1592 00da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1593 00dc 002B     		cmp	r3, #0
 1594 00de 04D0     		beq	.L83
 910:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 911:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		lUDPLoggingPrintf( "ReadPHY: %d\n", xResult );
 1595              		.loc 1 911 0
 1596 00e0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1597 00e2 0448     		ldr	r0, .L84
 1598 00e4 1946     		mov	r1, r3
 1599 00e6 FFF7FEFF 		bl	lUDPLoggingPrintf
 1600              	.L83:
 912:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 913:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 914:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return xResult;
 1601              		.loc 1 914 0
 1602 00ea FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1603              	.L78:
 915:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1604              		.loc 1 915 0
 1605 00ec 1846     		mov	r0, r3
 1606 00ee 2037     		adds	r7, r7, #32
 1607              	.LCFI77:
 1608              		.cfi_def_cfa_offset 8
 1609 00f0 BD46     		mov	sp, r7
 1610              	.LCFI78:
 1611              		.cfi_def_cfa_register 13
 1612              		@ sp needed
 1613 00f2 80BD     		pop	{r7, pc}
 1614              	.L85:
 1615              		.align	2
 1616              	.L84:
 1617 00f4 00000000 		.word	.LC0
 1618              		.cfi_endproc
 1619              	.LFE148:
 1621              		.section	.rodata
 1622 000d 000000   		.align	2
 1623              	.LC1:
 1624 0010 57726974 		.ascii	"WritePHY: %d\012\000"
 1624      65504859 
 1624      3A202564 
 1624      0A00
 1625              		.section	.text.HAL_ETH_WritePHYRegister,"ax",%progbits
 1626              		.align	2
 1627              		.global	HAL_ETH_WritePHYRegister
 1628              		.thumb
 1629              		.thumb_func
 1631              	HAL_ETH_WritePHYRegister:
 1632              	.LFB149:
 916:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 917:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
ARM GAS  /tmp/cc1SlDEr.s 			page 53


 918:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Writes to a PHY register.
 919:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
 920:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
 921:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  PHYReg: PHY register address, is the index of one of the 32 PHY register.
 922:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *          This parameter can be one of the following values:
 923:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *             PHY_BCR: Transceiver Control Register.
 924:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *             More PHY register could be written depending on the used PHY
 925:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  RegValue: the value to write
 926:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
 927:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
 928:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_WritePHYRegister(ETH_HandleTypeDef *heth, uint16_t PHYReg, uint32_t RegVa
 929:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1633              		.loc 1 929 0
 1634              		.cfi_startproc
 1635              		@ args = 0, pretend = 0, frame = 32
 1636              		@ frame_needed = 1, uses_anonymous_args = 0
 1637 0000 80B5     		push	{r7, lr}
 1638              	.LCFI79:
 1639              		.cfi_def_cfa_offset 8
 1640              		.cfi_offset 7, -8
 1641              		.cfi_offset 14, -4
 1642 0002 88B0     		sub	sp, sp, #32
 1643              	.LCFI80:
 1644              		.cfi_def_cfa_offset 40
 1645 0004 00AF     		add	r7, sp, #0
 1646              	.LCFI81:
 1647              		.cfi_def_cfa_register 7
 1648 0006 F860     		str	r0, [r7, #12]
 1649 0008 0B46     		mov	r3, r1
 1650 000a 7A60     		str	r2, [r7, #4]
 1651 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 930:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** uint32_t tmpreg = 0;
 1652              		.loc 1 930 0
 1653 000e 0023     		movs	r3, #0
 1654 0010 BB61     		str	r3, [r7, #24]
 931:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** uint32_t tickstart = 0;
 1655              		.loc 1 931 0
 1656 0012 0023     		movs	r3, #0
 1657 0014 7B61     		str	r3, [r7, #20]
 932:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef xResult;
 933:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 934:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check parameters */
 935:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param( IS_ETH_PHY_ADDRESS( heth->Init.PhyAddress ) );
 936:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 937:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check the ETH peripheral state */
 938:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( heth->State == HAL_ETH_STATE_BUSY_WR )
 1658              		.loc 1 938 0
 1659 0016 FB68     		ldr	r3, [r7, #12]
 1660 0018 93F84430 		ldrb	r3, [r3, #68]
 1661 001c DBB2     		uxtb	r3, r3
 1662 001e 422B     		cmp	r3, #66
 1663 0020 02D1     		bne	.L87
 939:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 940:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		xResult = HAL_BUSY;
 1664              		.loc 1 940 0
 1665 0022 0223     		movs	r3, #2
 1666 0024 FB77     		strb	r3, [r7, #31]
ARM GAS  /tmp/cc1SlDEr.s 			page 54


 1667 0026 58E0     		b	.L88
 1668              	.L87:
 941:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 942:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else
 943:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 944:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		__HAL_LOCK( heth );
 1669              		.loc 1 944 0
 1670 0028 FB68     		ldr	r3, [r7, #12]
 1671 002a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1672 002e 012B     		cmp	r3, #1
 1673 0030 01D1     		bne	.L89
 1674              		.loc 1 944 0 is_stmt 0 discriminator 1
 1675 0032 0223     		movs	r3, #2
 1676 0034 5AE0     		b	.L90
 1677              	.L89:
 1678              		.loc 1 944 0 discriminator 2
 1679 0036 FB68     		ldr	r3, [r7, #12]
 1680 0038 0122     		movs	r2, #1
 1681 003a 83F84520 		strb	r2, [r3, #69]
 945:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 946:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set ETH HAL State to BUSY_WR */
 947:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->State = HAL_ETH_STATE_BUSY_WR;
 1682              		.loc 1 947 0 is_stmt 1 discriminator 2
 1683 003e FB68     		ldr	r3, [r7, #12]
 1684 0040 4222     		movs	r2, #66
 1685 0042 83F84420 		strb	r2, [r3, #68]
 948:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 949:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the ETHERNET MACMIIAR value */
 950:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACMIIAR;
 1686              		.loc 1 950 0 discriminator 2
 1687 0046 FB68     		ldr	r3, [r7, #12]
 1688 0048 1B68     		ldr	r3, [r3]
 1689 004a 1B69     		ldr	r3, [r3, #16]
 1690 004c BB61     		str	r3, [r7, #24]
 951:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 952:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Keep only the CSR Clock Range CR[2:0] bits value */
 953:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg &= ~ETH_MACMIIAR_CR_MASK;
 1691              		.loc 1 953 0 discriminator 2
 1692 004e BB69     		ldr	r3, [r7, #24]
 1693 0050 03F01C03 		and	r3, r3, #28
 1694 0054 BB61     		str	r3, [r7, #24]
 954:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 955:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Prepare the MII register address value */
 956:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ( ( ( uint32_t ) heth->Init.PhyAddress << 11 ) & ETH_MACMIIAR_PA ); /* Set the PHY devi
 1695              		.loc 1 956 0 discriminator 2
 1696 0056 FB68     		ldr	r3, [r7, #12]
 1697 0058 1B8A     		ldrh	r3, [r3, #16]
 1698 005a DB02     		lsls	r3, r3, #11
 1699 005c 9BB2     		uxth	r3, r3
 1700 005e BA69     		ldr	r2, [r7, #24]
 1701 0060 1343     		orrs	r3, r3, r2
 1702 0062 BB61     		str	r3, [r7, #24]
 957:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ( ( ( uint32_t ) PHYReg << 6 ) & ETH_MACMIIAR_MR );                 /* Set the PHY regi
 1703              		.loc 1 957 0 discriminator 2
 1704 0064 7B89     		ldrh	r3, [r7, #10]
 1705 0066 9B01     		lsls	r3, r3, #6
 1706 0068 03F4F863 		and	r3, r3, #1984
ARM GAS  /tmp/cc1SlDEr.s 			page 55


 1707 006c BA69     		ldr	r2, [r7, #24]
 1708 006e 1343     		orrs	r3, r3, r2
 1709 0070 BB61     		str	r3, [r7, #24]
 958:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ETH_MACMIIAR_MW;                                          /* Set the write mode */
 1710              		.loc 1 958 0 discriminator 2
 1711 0072 BB69     		ldr	r3, [r7, #24]
 1712 0074 43F00203 		orr	r3, r3, #2
 1713 0078 BB61     		str	r3, [r7, #24]
 959:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= ETH_MACMIIAR_MB;                                          /* Set the MII Busy bit */
 1714              		.loc 1 959 0 discriminator 2
 1715 007a BB69     		ldr	r3, [r7, #24]
 1716 007c 43F00103 		orr	r3, r3, #1
 1717 0080 BB61     		str	r3, [r7, #24]
 960:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 961:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Give the value to the MII data register */
 962:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACMIIDR = ( uint16_t ) RegValue;
 1718              		.loc 1 962 0 discriminator 2
 1719 0082 FB68     		ldr	r3, [r7, #12]
 1720 0084 1B68     		ldr	r3, [r3]
 1721 0086 7A68     		ldr	r2, [r7, #4]
 1722 0088 92B2     		uxth	r2, r2
 1723 008a 5A61     		str	r2, [r3, #20]
 963:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 964:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write the result value into the MII Address register */
 965:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACMIIAR = tmpreg;
 1724              		.loc 1 965 0 discriminator 2
 1725 008c FB68     		ldr	r3, [r7, #12]
 1726 008e 1B68     		ldr	r3, [r3]
 1727 0090 BA69     		ldr	r2, [r7, #24]
 1728 0092 1A61     		str	r2, [r3, #16]
 966:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 967:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get tick */
 968:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tickstart = HAL_GetTick();
 1729              		.loc 1 968 0 discriminator 2
 1730 0094 FFF7FEFF 		bl	HAL_GetTick
 1731 0098 7861     		str	r0, [r7, #20]
 1732              	.L94:
 969:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 970:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Check for the Busy flag */
 971:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		while( 1 )
 972:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		{
 973:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			tmpreg = heth->Instance->MACMIIAR;
 1733              		.loc 1 973 0
 1734 009a FB68     		ldr	r3, [r7, #12]
 1735 009c 1B68     		ldr	r3, [r3]
 1736 009e 1B69     		ldr	r3, [r3, #16]
 1737 00a0 BB61     		str	r3, [r7, #24]
 974:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 975:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if( ( tmpreg & ETH_MACMIIAR_MB ) == 0ul )
 1738              		.loc 1 975 0
 1739 00a2 BB69     		ldr	r3, [r7, #24]
 1740 00a4 03F00103 		and	r3, r3, #1
 1741 00a8 002B     		cmp	r3, #0
 1742 00aa 02D1     		bne	.L91
 976:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 977:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				xResult = HAL_OK;
 1743              		.loc 1 977 0
ARM GAS  /tmp/cc1SlDEr.s 			page 56


 1744 00ac 0023     		movs	r3, #0
 1745 00ae FB77     		strb	r3, [r7, #31]
 978:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				break;
 1746              		.loc 1 978 0
 1747 00b0 0BE0     		b	.L92
 1748              	.L91:
 979:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 980:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			/* Check for the Timeout */
 981:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			if( ( HAL_GetTick( ) - tickstart ) > PHY_WRITE_TO )
 1749              		.loc 1 981 0
 1750 00b2 FFF7FEFF 		bl	HAL_GetTick
 1751 00b6 0246     		mov	r2, r0
 1752 00b8 7B69     		ldr	r3, [r7, #20]
 1753 00ba D31A     		subs	r3, r2, r3
 1754 00bc B3F5803F 		cmp	r3, #65536
 1755 00c0 02D3     		bcc	.L93
 982:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			{
 983:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				xResult = HAL_TIMEOUT;
 1756              		.loc 1 983 0
 1757 00c2 0323     		movs	r3, #3
 1758 00c4 FB77     		strb	r3, [r7, #31]
 984:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 				break;
 1759              		.loc 1 984 0
 1760 00c6 00E0     		b	.L92
 1761              	.L93:
 985:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			}
 986:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		}
 1762              		.loc 1 986 0
 1763 00c8 E7E7     		b	.L94
 1764              	.L92:
 987:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 988:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Set ETH HAL State to READY */
 989:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->State = HAL_ETH_STATE_READY;
 1765              		.loc 1 989 0
 1766 00ca FB68     		ldr	r3, [r7, #12]
 1767 00cc 0122     		movs	r2, #1
 1768 00ce 83F84420 		strb	r2, [r3, #68]
 990:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Process Unlocked */
 991:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		__HAL_UNLOCK( heth );
 1769              		.loc 1 991 0
 1770 00d2 FB68     		ldr	r3, [r7, #12]
 1771 00d4 0022     		movs	r2, #0
 1772 00d6 83F84520 		strb	r2, [r3, #69]
 1773              	.L88:
 992:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 993:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
 994:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if( xResult != HAL_OK )
 1774              		.loc 1 994 0
 1775 00da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1776 00dc 002B     		cmp	r3, #0
 1777 00de 04D0     		beq	.L95
 995:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
 996:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		lUDPLoggingPrintf( "WritePHY: %d\n", xResult );
 1778              		.loc 1 996 0
 1779 00e0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1780 00e2 0448     		ldr	r0, .L96
 1781 00e4 1946     		mov	r1, r3
ARM GAS  /tmp/cc1SlDEr.s 			page 57


 1782 00e6 FFF7FEFF 		bl	lUDPLoggingPrintf
 1783              	.L95:
 997:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
 998:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
 999:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return xResult;
 1784              		.loc 1 999 0
 1785 00ea FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1786              	.L90:
1000:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1787              		.loc 1 1000 0
 1788 00ec 1846     		mov	r0, r3
 1789 00ee 2037     		adds	r7, r7, #32
 1790              	.LCFI82:
 1791              		.cfi_def_cfa_offset 8
 1792 00f0 BD46     		mov	sp, r7
 1793              	.LCFI83:
 1794              		.cfi_def_cfa_register 13
 1795              		@ sp needed
 1796 00f2 80BD     		pop	{r7, pc}
 1797              	.L97:
 1798              		.align	2
 1799              	.L96:
 1800 00f4 10000000 		.word	.LC1
 1801              		.cfi_endproc
 1802              	.LFE149:
 1804              		.section	.text.HAL_ETH_Start,"ax",%progbits
 1805              		.align	2
 1806              		.global	HAL_ETH_Start
 1807              		.thumb
 1808              		.thumb_func
 1810              	HAL_ETH_Start:
 1811              	.LFB150:
1001:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1002:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1003:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
1004:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1005:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1006:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Exported_Functions_Group3 Peripheral Control functions
1007:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****  *  @brief    Peripheral Control functions
1008:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****  *
1009:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** @verbatim
1010:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****  ===============================================================================
1011:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                   ##### Peripheral Control functions #####
1012:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****  ===============================================================================
1013:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     [..]  This section provides functions allowing to:
1014:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (+) Enable MAC and DMA transmission and reception.
1015:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           HAL_ETH_Start();
1016:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (+) Disable MAC and DMA transmission and reception.
1017:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           HAL_ETH_Stop();
1018:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (+) Set the MAC configuration in runtime mode
1019:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           HAL_ETH_ConfigMAC();
1020:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       (+) Set the DMA configuration in runtime mode
1021:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****           HAL_ETH_ConfigDMA();
1022:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1023:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** @endverbatim
1024:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
1025:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
ARM GAS  /tmp/cc1SlDEr.s 			page 58


1026:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1027:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****  /**
1028:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Enables Ethernet MAC and DMA reception/transmission
1029:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1030:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1031:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
1032:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1033:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_Start( ETH_HandleTypeDef *heth )
1034:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1812              		.loc 1 1034 0
 1813              		.cfi_startproc
 1814              		@ args = 0, pretend = 0, frame = 8
 1815              		@ frame_needed = 1, uses_anonymous_args = 0
 1816 0000 80B5     		push	{r7, lr}
 1817              	.LCFI84:
 1818              		.cfi_def_cfa_offset 8
 1819              		.cfi_offset 7, -8
 1820              		.cfi_offset 14, -4
 1821 0002 82B0     		sub	sp, sp, #8
 1822              	.LCFI85:
 1823              		.cfi_def_cfa_offset 16
 1824 0004 00AF     		add	r7, sp, #0
 1825              	.LCFI86:
 1826              		.cfi_def_cfa_register 7
 1827 0006 7860     		str	r0, [r7, #4]
1035:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
1036:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 1828              		.loc 1 1036 0
 1829 0008 7B68     		ldr	r3, [r7, #4]
 1830 000a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1831 000e 012B     		cmp	r3, #1
 1832 0010 01D1     		bne	.L99
 1833              		.loc 1 1036 0 is_stmt 0 discriminator 1
 1834 0012 0223     		movs	r3, #2
 1835 0014 1FE0     		b	.L100
 1836              	.L99:
 1837              		.loc 1 1036 0 discriminator 2
 1838 0016 7B68     		ldr	r3, [r7, #4]
 1839 0018 0122     		movs	r2, #1
 1840 001a 83F84520 		strb	r2, [r3, #69]
1037:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1038:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
1039:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State = HAL_ETH_STATE_BUSY;
 1841              		.loc 1 1039 0 is_stmt 1 discriminator 2
 1842 001e 7B68     		ldr	r3, [r7, #4]
 1843 0020 0222     		movs	r2, #2
 1844 0022 83F84420 		strb	r2, [r3, #68]
1040:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1041:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable transmit state machine of the MAC for transmission on the MII */
1042:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_MACTransmissionEnable( heth );
 1845              		.loc 1 1042 0 discriminator 2
 1846 0026 7868     		ldr	r0, [r7, #4]
 1847 0028 FFF7FEFF 		bl	ETH_MACTransmissionEnable
1043:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1044:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable receive state machine of the MAC for reception from the MII */
1045:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_MACReceptionEnable( heth );
 1848              		.loc 1 1045 0 discriminator 2
ARM GAS  /tmp/cc1SlDEr.s 			page 59


 1849 002c 7868     		ldr	r0, [r7, #4]
 1850 002e FFF7FEFF 		bl	ETH_MACReceptionEnable
1046:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1047:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Flush Transmit FIFO */
1048:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_FlushTransmitFIFO( heth );
 1851              		.loc 1 1048 0 discriminator 2
 1852 0032 7868     		ldr	r0, [r7, #4]
 1853 0034 FFF7FEFF 		bl	ETH_FlushTransmitFIFO
1049:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1050:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Start DMA transmission */
1051:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMATransmissionEnable( heth );
 1854              		.loc 1 1051 0 discriminator 2
 1855 0038 7868     		ldr	r0, [r7, #4]
 1856 003a FFF7FEFF 		bl	ETH_DMATransmissionEnable
1052:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1053:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Start DMA reception */
1054:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMAReceptionEnable( heth );
 1857              		.loc 1 1054 0 discriminator 2
 1858 003e 7868     		ldr	r0, [r7, #4]
 1859 0040 FFF7FEFF 		bl	ETH_DMAReceptionEnable
1055:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1056:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH state to READY*/
1057:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_READY;
 1860              		.loc 1 1057 0 discriminator 2
 1861 0044 7B68     		ldr	r3, [r7, #4]
 1862 0046 0122     		movs	r2, #1
 1863 0048 83F84420 		strb	r2, [r3, #68]
1058:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1059:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
1060:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 1864              		.loc 1 1060 0 discriminator 2
 1865 004c 7B68     		ldr	r3, [r7, #4]
 1866 004e 0022     		movs	r2, #0
 1867 0050 83F84520 		strb	r2, [r3, #69]
1061:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1062:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
1063:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 1868              		.loc 1 1063 0 discriminator 2
 1869 0054 0023     		movs	r3, #0
 1870              	.L100:
1064:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1871              		.loc 1 1064 0
 1872 0056 1846     		mov	r0, r3
 1873 0058 0837     		adds	r7, r7, #8
 1874              	.LCFI87:
 1875              		.cfi_def_cfa_offset 8
 1876 005a BD46     		mov	sp, r7
 1877              	.LCFI88:
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 005c 80BD     		pop	{r7, pc}
 1881              		.cfi_endproc
 1882              	.LFE150:
 1884 005e 00BF     		.section	.text.HAL_ETH_Stop,"ax",%progbits
 1885              		.align	2
 1886              		.global	HAL_ETH_Stop
 1887              		.thumb
ARM GAS  /tmp/cc1SlDEr.s 			page 60


 1888              		.thumb_func
 1890              	HAL_ETH_Stop:
 1891              	.LFB151:
1065:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1066:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1067:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Stop Ethernet MAC and DMA reception/transmission
1068:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1069:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1070:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
1071:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1072:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_Stop(ETH_HandleTypeDef *heth)
1073:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1892              		.loc 1 1073 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 8
 1895              		@ frame_needed = 1, uses_anonymous_args = 0
 1896 0000 80B5     		push	{r7, lr}
 1897              	.LCFI89:
 1898              		.cfi_def_cfa_offset 8
 1899              		.cfi_offset 7, -8
 1900              		.cfi_offset 14, -4
 1901 0002 82B0     		sub	sp, sp, #8
 1902              	.LCFI90:
 1903              		.cfi_def_cfa_offset 16
 1904 0004 00AF     		add	r7, sp, #0
 1905              	.LCFI91:
 1906              		.cfi_def_cfa_register 7
 1907 0006 7860     		str	r0, [r7, #4]
1074:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Process Locked */
1075:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   __HAL_LOCK( heth );
 1908              		.loc 1 1075 0
 1909 0008 7B68     		ldr	r3, [r7, #4]
 1910 000a 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 1911 000e 012B     		cmp	r3, #1
 1912 0010 01D1     		bne	.L102
 1913              		.loc 1 1075 0 is_stmt 0 discriminator 1
 1914 0012 0223     		movs	r3, #2
 1915 0014 1FE0     		b	.L103
 1916              	.L102:
 1917              		.loc 1 1075 0 discriminator 2
 1918 0016 7B68     		ldr	r3, [r7, #4]
 1919 0018 0122     		movs	r2, #1
 1920 001a 83F84520 		strb	r2, [r3, #69]
1076:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1077:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the ETH peripheral state to BUSY */
1078:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   heth->State = HAL_ETH_STATE_BUSY;
 1921              		.loc 1 1078 0 is_stmt 1 discriminator 2
 1922 001e 7B68     		ldr	r3, [r7, #4]
 1923 0020 0222     		movs	r2, #2
 1924 0022 83F84420 		strb	r2, [r3, #68]
1079:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1080:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Stop DMA transmission */
1081:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_DMATransmissionDisable( heth );
 1925              		.loc 1 1081 0 discriminator 2
 1926 0026 7868     		ldr	r0, [r7, #4]
 1927 0028 FFF7FEFF 		bl	ETH_DMATransmissionDisable
1082:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 61


1083:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Stop DMA reception */
1084:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_DMAReceptionDisable( heth );
 1928              		.loc 1 1084 0 discriminator 2
 1929 002c 7868     		ldr	r0, [r7, #4]
 1930 002e FFF7FEFF 		bl	ETH_DMAReceptionDisable
1085:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1086:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Disable receive state machine of the MAC for reception from the MII */
1087:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_MACReceptionDisable( heth );
 1931              		.loc 1 1087 0 discriminator 2
 1932 0032 7868     		ldr	r0, [r7, #4]
 1933 0034 FFF7FEFF 		bl	ETH_MACReceptionDisable
1088:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1089:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Flush Transmit FIFO */
1090:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_FlushTransmitFIFO( heth );
 1934              		.loc 1 1090 0 discriminator 2
 1935 0038 7868     		ldr	r0, [r7, #4]
 1936 003a FFF7FEFF 		bl	ETH_FlushTransmitFIFO
1091:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1092:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Disable transmit state machine of the MAC for transmission on the MII */
1093:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_MACTransmissionDisable( heth );
 1937              		.loc 1 1093 0 discriminator 2
 1938 003e 7868     		ldr	r0, [r7, #4]
 1939 0040 FFF7FEFF 		bl	ETH_MACTransmissionDisable
1094:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1095:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the ETH state*/
1096:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   heth->State = HAL_ETH_STATE_READY;
 1940              		.loc 1 1096 0 discriminator 2
 1941 0044 7B68     		ldr	r3, [r7, #4]
 1942 0046 0122     		movs	r2, #1
 1943 0048 83F84420 		strb	r2, [r3, #68]
1097:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1098:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Process Unlocked */
1099:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   __HAL_UNLOCK( heth );
 1944              		.loc 1 1099 0 discriminator 2
 1945 004c 7B68     		ldr	r3, [r7, #4]
 1946 004e 0022     		movs	r2, #0
 1947 0050 83F84520 		strb	r2, [r3, #69]
1100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Return function status */
1102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   return HAL_OK;
 1948              		.loc 1 1102 0 discriminator 2
 1949 0054 0023     		movs	r3, #0
 1950              	.L103:
1103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 1951              		.loc 1 1103 0
 1952 0056 1846     		mov	r0, r3
 1953 0058 0837     		adds	r7, r7, #8
 1954              	.LCFI92:
 1955              		.cfi_def_cfa_offset 8
 1956 005a BD46     		mov	sp, r7
 1957              	.LCFI93:
 1958              		.cfi_def_cfa_register 13
 1959              		@ sp needed
 1960 005c 80BD     		pop	{r7, pc}
 1961              		.cfi_endproc
 1962              	.LFE151:
 1964 005e 00BF     		.section	.text.prvWriteMACFCR,"ax",%progbits
ARM GAS  /tmp/cc1SlDEr.s 			page 62


 1965              		.align	2
 1966              		.thumb
 1967              		.thumb_func
 1969              	prvWriteMACFCR:
 1970              	.LFB152:
1104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void prvWriteMACFCR( ETH_HandleTypeDef *heth, uint32_t ulValue)
1106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 1971              		.loc 1 1106 0
 1972              		.cfi_startproc
 1973              		@ args = 0, pretend = 0, frame = 8
 1974              		@ frame_needed = 1, uses_anonymous_args = 0
 1975 0000 80B5     		push	{r7, lr}
 1976              	.LCFI94:
 1977              		.cfi_def_cfa_offset 8
 1978              		.cfi_offset 7, -8
 1979              		.cfi_offset 14, -4
 1980 0002 82B0     		sub	sp, sp, #8
 1981              	.LCFI95:
 1982              		.cfi_def_cfa_offset 16
 1983 0004 00AF     		add	r7, sp, #0
 1984              	.LCFI96:
 1985              		.cfi_def_cfa_register 7
 1986 0006 7860     		str	r0, [r7, #4]
 1987 0008 3960     		str	r1, [r7]
1107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable the MAC transmission */
1108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->MACFCR = ulValue;
 1988              		.loc 1 1108 0
 1989 000a 7B68     		ldr	r3, [r7, #4]
 1990 000c 1B68     		ldr	r3, [r3]
 1991 000e 3A68     		ldr	r2, [r7]
 1992 0010 9A61     		str	r2, [r3, #24]
1109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Wait until the write operation will be taken into account:
1111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	at least four TX_CLK/RX_CLK clock cycles.
1112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	Read it back, wait a ms and */
1113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	( void ) heth->Instance->MACFCR;
 1993              		.loc 1 1113 0
 1994 0012 7B68     		ldr	r3, [r7, #4]
 1995 0014 1B68     		ldr	r3, [r3]
 1996 0016 9B69     		ldr	r3, [r3, #24]
1114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	HAL_Delay( ETH_REG_WRITE_DELAY );
 1997              		.loc 1 1115 0
 1998 0018 0120     		movs	r0, #1
 1999 001a FFF7FEFF 		bl	HAL_Delay
1116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->MACFCR = ulValue;
 2000              		.loc 1 1117 0
 2001 001e 7B68     		ldr	r3, [r7, #4]
 2002 0020 1B68     		ldr	r3, [r3]
 2003 0022 3A68     		ldr	r2, [r7]
 2004 0024 9A61     		str	r2, [r3, #24]
1118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 2005              		.loc 1 1118 0
 2006 0026 0837     		adds	r7, r7, #8
 2007              	.LCFI97:
ARM GAS  /tmp/cc1SlDEr.s 			page 63


 2008              		.cfi_def_cfa_offset 8
 2009 0028 BD46     		mov	sp, r7
 2010              	.LCFI98:
 2011              		.cfi_def_cfa_register 13
 2012              		@ sp needed
 2013 002a 80BD     		pop	{r7, pc}
 2014              		.cfi_endproc
 2015              	.LFE152:
 2017              		.section	.text.prvWriteDMAOMR,"ax",%progbits
 2018              		.align	2
 2019              		.thumb
 2020              		.thumb_func
 2022              	prvWriteDMAOMR:
 2023              	.LFB153:
1119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void prvWriteDMAOMR( ETH_HandleTypeDef *heth, uint32_t ulValue)
1121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 2024              		.loc 1 1121 0
 2025              		.cfi_startproc
 2026              		@ args = 0, pretend = 0, frame = 8
 2027              		@ frame_needed = 1, uses_anonymous_args = 0
 2028 0000 80B5     		push	{r7, lr}
 2029              	.LCFI99:
 2030              		.cfi_def_cfa_offset 8
 2031              		.cfi_offset 7, -8
 2032              		.cfi_offset 14, -4
 2033 0002 82B0     		sub	sp, sp, #8
 2034              	.LCFI100:
 2035              		.cfi_def_cfa_offset 16
 2036 0004 00AF     		add	r7, sp, #0
 2037              	.LCFI101:
 2038              		.cfi_def_cfa_register 7
 2039 0006 7860     		str	r0, [r7, #4]
 2040 0008 3960     		str	r1, [r7]
1122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable the MAC transmission */
1123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMAOMR = ulValue;
 2041              		.loc 1 1123 0
 2042 000a 7B68     		ldr	r3, [r7, #4]
 2043 000c 1A68     		ldr	r2, [r3]
 2044 000e 41F21803 		movw	r3, #4120
 2045 0012 1344     		add	r3, r3, r2
 2046 0014 3A68     		ldr	r2, [r7]
 2047 0016 1A60     		str	r2, [r3]
1124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Wait until the write operation will be taken into account:
1126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	at least four TX_CLK/RX_CLK clock cycles.
1127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	Read it back, wait a ms and */
1128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	( void ) heth->Instance->DMAOMR;
 2048              		.loc 1 1128 0
 2049 0018 7B68     		ldr	r3, [r7, #4]
 2050 001a 1A68     		ldr	r2, [r3]
 2051 001c 41F21803 		movw	r3, #4120
 2052 0020 1344     		add	r3, r3, r2
 2053 0022 1B68     		ldr	r3, [r3]
1129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	HAL_Delay( ETH_REG_WRITE_DELAY );
 2054              		.loc 1 1130 0
ARM GAS  /tmp/cc1SlDEr.s 			page 64


 2055 0024 0120     		movs	r0, #1
 2056 0026 FFF7FEFF 		bl	HAL_Delay
1131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMAOMR = ulValue;
 2057              		.loc 1 1132 0
 2058 002a 7B68     		ldr	r3, [r7, #4]
 2059 002c 1A68     		ldr	r2, [r3]
 2060 002e 41F21803 		movw	r3, #4120
 2061 0032 1344     		add	r3, r3, r2
 2062 0034 3A68     		ldr	r2, [r7]
 2063 0036 1A60     		str	r2, [r3]
1133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 2064              		.loc 1 1133 0
 2065 0038 0837     		adds	r7, r7, #8
 2066              	.LCFI102:
 2067              		.cfi_def_cfa_offset 8
 2068 003a BD46     		mov	sp, r7
 2069              	.LCFI103:
 2070              		.cfi_def_cfa_register 13
 2071              		@ sp needed
 2072 003c 80BD     		pop	{r7, pc}
 2073              		.cfi_endproc
 2074              	.LFE153:
 2076 003e 00BF     		.section	.text.prvWriteMACCR,"ax",%progbits
 2077              		.align	2
 2078              		.thumb
 2079              		.thumb_func
 2081              	prvWriteMACCR:
 2082              	.LFB154:
1134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void prvWriteMACCR( ETH_HandleTypeDef *heth, uint32_t ulValue)
1136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 2083              		.loc 1 1136 0
 2084              		.cfi_startproc
 2085              		@ args = 0, pretend = 0, frame = 8
 2086              		@ frame_needed = 1, uses_anonymous_args = 0
 2087 0000 80B5     		push	{r7, lr}
 2088              	.LCFI104:
 2089              		.cfi_def_cfa_offset 8
 2090              		.cfi_offset 7, -8
 2091              		.cfi_offset 14, -4
 2092 0002 82B0     		sub	sp, sp, #8
 2093              	.LCFI105:
 2094              		.cfi_def_cfa_offset 16
 2095 0004 00AF     		add	r7, sp, #0
 2096              	.LCFI106:
 2097              		.cfi_def_cfa_register 7
 2098 0006 7860     		str	r0, [r7, #4]
 2099 0008 3960     		str	r1, [r7]
1137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable the MAC transmission */
1138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->MACCR = ulValue;
 2100              		.loc 1 1138 0
 2101 000a 7B68     		ldr	r3, [r7, #4]
 2102 000c 1B68     		ldr	r3, [r3]
 2103 000e 3A68     		ldr	r2, [r7]
 2104 0010 1A60     		str	r2, [r3]
1139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 65


1140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Wait until the write operation will be taken into account:
1141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	at least four TX_CLK/RX_CLK clock cycles.
1142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	Read it back, wait a ms and */
1143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	( void ) heth->Instance->MACCR;
 2105              		.loc 1 1143 0
 2106 0012 7B68     		ldr	r3, [r7, #4]
 2107 0014 1B68     		ldr	r3, [r3]
 2108 0016 1B68     		ldr	r3, [r3]
1144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	HAL_Delay( ETH_REG_WRITE_DELAY );
 2109              		.loc 1 1145 0
 2110 0018 0120     		movs	r0, #1
 2111 001a FFF7FEFF 		bl	HAL_Delay
1146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->MACCR = ulValue;
 2112              		.loc 1 1147 0
 2113 001e 7B68     		ldr	r3, [r7, #4]
 2114 0020 1B68     		ldr	r3, [r3]
 2115 0022 3A68     		ldr	r2, [r7]
 2116 0024 1A60     		str	r2, [r3]
1148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 2117              		.loc 1 1148 0
 2118 0026 0837     		adds	r7, r7, #8
 2119              	.LCFI107:
 2120              		.cfi_def_cfa_offset 8
 2121 0028 BD46     		mov	sp, r7
 2122              	.LCFI108:
 2123              		.cfi_def_cfa_register 13
 2124              		@ sp needed
 2125 002a 80BD     		pop	{r7, pc}
 2126              		.cfi_endproc
 2127              	.LFE154:
 2129              		.section	.text.HAL_ETH_ConfigMAC,"ax",%progbits
 2130              		.align	2
 2131              		.global	HAL_ETH_ConfigMAC
 2132              		.thumb
 2133              		.thumb_func
 2135              	HAL_ETH_ConfigMAC:
 2136              	.LFB155:
1149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Set ETH MAC Configuration.
1152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  macconf: MAC Configuration structure
1155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
1156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_ConfigMAC(ETH_HandleTypeDef *heth, ETH_MACInitTypeDef *macconf)
1158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 2137              		.loc 1 1158 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 16
 2140              		@ frame_needed = 1, uses_anonymous_args = 0
 2141 0000 80B5     		push	{r7, lr}
 2142              	.LCFI109:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 7, -8
ARM GAS  /tmp/cc1SlDEr.s 			page 66


 2145              		.cfi_offset 14, -4
 2146 0002 84B0     		sub	sp, sp, #16
 2147              	.LCFI110:
 2148              		.cfi_def_cfa_offset 24
 2149 0004 00AF     		add	r7, sp, #0
 2150              	.LCFI111:
 2151              		.cfi_def_cfa_register 7
 2152 0006 7860     		str	r0, [r7, #4]
 2153 0008 3960     		str	r1, [r7]
1159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t tmpreg = 0;
 2154              		.loc 1 1159 0
 2155 000a 0023     		movs	r3, #0
 2156 000c FB60     		str	r3, [r7, #12]
1160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
1162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 2157              		.loc 1 1162 0
 2158 000e 7B68     		ldr	r3, [r7, #4]
 2159 0010 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
 2160 0014 012B     		cmp	r3, #1
 2161 0016 01D1     		bne	.L108
 2162              		.loc 1 1162 0 is_stmt 0 discriminator 1
 2163 0018 0223     		movs	r3, #2
 2164 001a C2E0     		b	.L109
 2165              	.L108:
 2166              		.loc 1 1162 0 discriminator 2
 2167 001c 7B68     		ldr	r3, [r7, #4]
 2168 001e 0122     		movs	r2, #1
 2169 0020 83F84520 		strb	r2, [r3, #69]
1163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
1165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_BUSY;
 2170              		.loc 1 1165 0 is_stmt 1 discriminator 2
 2171 0024 7B68     		ldr	r3, [r7, #4]
 2172 0026 0222     		movs	r2, #2
 2173 0028 83F84420 		strb	r2, [r3, #68]
1166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_SPEED(heth->Init.Speed));
1168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_DUPLEX_MODE(heth->Init.DuplexMode));
1169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	if (macconf != NULL)
 2174              		.loc 1 1170 0 discriminator 2
 2175 002c 3B68     		ldr	r3, [r7]
 2176 002e 002B     		cmp	r3, #0
 2177 0030 00F09A80 		beq	.L110
1171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
1172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Check the parameters */
1173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_WATCHDOG(macconf->Watchdog));
1174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_JABBER(macconf->Jabber));
1175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_INTER_FRAME_GAP(macconf->InterFrameGap));
1176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_CARRIER_SENSE(macconf->CarrierSense));
1177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_RECEIVE_OWN(macconf->ReceiveOwn));
1178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_LOOPBACK_MODE(macconf->LoopbackMode));
1179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_CHECKSUM_OFFLOAD(macconf->ChecksumOffload));
1180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_RETRY_TRANSMISSION(macconf->RetryTransmission));
1181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_AUTOMATIC_PADCRC_STRIP(macconf->AutomaticPadCRCStrip));
1182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_BACKOFF_LIMIT(macconf->BackOffLimit));
ARM GAS  /tmp/cc1SlDEr.s 			page 67


1183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_DEFERRAL_CHECK(macconf->DeferralCheck));
1184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_RECEIVE_ALL(macconf->ReceiveAll));
1185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_SOURCE_ADDR_FILTER(macconf->SourceAddrFilter));
1186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_CONTROL_FRAMES(macconf->PassControlFrames));
1187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_BROADCAST_FRAMES_RECEPTION(macconf->BroadcastFramesReception));
1188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_DESTINATION_ADDR_FILTER(macconf->DestinationAddrFilter));
1189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_PROMISCUOUS_MODE(macconf->PromiscuousMode));
1190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_MULTICAST_FRAMES_FILTER(macconf->MulticastFramesFilter));
1191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_UNICAST_FRAMES_FILTER(macconf->UnicastFramesFilter));
1192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_PAUSE_TIME(macconf->PauseTime));
1193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_ZEROQUANTA_PAUSE(macconf->ZeroQuantaPause));
1194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_PAUSE_LOW_THRESHOLD(macconf->PauseLowThreshold));
1195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_UNICAST_PAUSE_FRAME_DETECT(macconf->UnicastPauseFrameDetect));
1196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_RECEIVE_FLOWCONTROL(macconf->ReceiveFlowControl));
1197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_TRANSMIT_FLOWCONTROL(macconf->TransmitFlowControl));
1198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_VLAN_TAG_COMPARISON(macconf->VLANTagComparison));
1199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		assert_param(IS_ETH_VLAN_TAG_IDENTIFIER(macconf->VLANTagIdentifier));
1200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/*------------------------ ETHERNET MACCR Configuration --------------------*/
1202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the ETHERNET MACCR value */
1203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACCR;
 2178              		.loc 1 1203 0
 2179 0034 7B68     		ldr	r3, [r7, #4]
 2180 0036 1B68     		ldr	r3, [r3]
 2181 0038 1B68     		ldr	r3, [r3]
 2182 003a FB60     		str	r3, [r7, #12]
1204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Clear WD, PCE, PS, TE and RE bits */
1205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg &= ETH_MACCR_CLEAR_MASK;
 2183              		.loc 1 1205 0
 2184 003c FA68     		ldr	r2, [r7, #12]
 2185 003e 5B4B     		ldr	r3, .L112
 2186 0040 1340     		ands	r3, r3, r2
 2187 0042 FB60     		str	r3, [r7, #12]
1206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t)(
1208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->Watchdog |
 2188              		.loc 1 1208 0
 2189 0044 3B68     		ldr	r3, [r7]
 2190 0046 1A68     		ldr	r2, [r3]
1209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->Jabber |
 2191              		.loc 1 1209 0
 2192 0048 3B68     		ldr	r3, [r7]
 2193 004a 5B68     		ldr	r3, [r3, #4]
1208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->Jabber |
 2194              		.loc 1 1208 0
 2195 004c 1A43     		orrs	r2, r2, r3
1210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->InterFrameGap |
 2196              		.loc 1 1210 0
 2197 004e 3B68     		ldr	r3, [r7]
 2198 0050 9B68     		ldr	r3, [r3, #8]
1209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->Jabber |
 2199              		.loc 1 1209 0
 2200 0052 1A43     		orrs	r2, r2, r3
1211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->CarrierSense |
 2201              		.loc 1 1211 0
 2202 0054 3B68     		ldr	r3, [r7]
 2203 0056 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/cc1SlDEr.s 			page 68


1210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->InterFrameGap |
 2204              		.loc 1 1210 0
 2205 0058 1A43     		orrs	r2, r2, r3
1212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->Init.Speed |
 2206              		.loc 1 1212 0
 2207 005a 7B68     		ldr	r3, [r7, #4]
 2208 005c 9B68     		ldr	r3, [r3, #8]
1211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->CarrierSense |
 2209              		.loc 1 1211 0
 2210 005e 1A43     		orrs	r2, r2, r3
1213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ReceiveOwn |
 2211              		.loc 1 1213 0
 2212 0060 3B68     		ldr	r3, [r7]
 2213 0062 1B69     		ldr	r3, [r3, #16]
1212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->Init.Speed |
 2214              		.loc 1 1212 0
 2215 0064 1A43     		orrs	r2, r2, r3
1214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->LoopbackMode |
 2216              		.loc 1 1214 0
 2217 0066 3B68     		ldr	r3, [r7]
 2218 0068 5B69     		ldr	r3, [r3, #20]
1213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ReceiveOwn |
 2219              		.loc 1 1213 0
 2220 006a 1A43     		orrs	r2, r2, r3
1215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->Init.DuplexMode |
 2221              		.loc 1 1215 0
 2222 006c 7B68     		ldr	r3, [r7, #4]
 2223 006e DB68     		ldr	r3, [r3, #12]
1214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->LoopbackMode |
 2224              		.loc 1 1214 0
 2225 0070 1A43     		orrs	r2, r2, r3
1216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ChecksumOffload |
 2226              		.loc 1 1216 0
 2227 0072 3B68     		ldr	r3, [r7]
 2228 0074 9B69     		ldr	r3, [r3, #24]
1215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			heth->Init.DuplexMode |
 2229              		.loc 1 1215 0
 2230 0076 1A43     		orrs	r2, r2, r3
1217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->RetryTransmission |
 2231              		.loc 1 1217 0
 2232 0078 3B68     		ldr	r3, [r7]
 2233 007a DB69     		ldr	r3, [r3, #28]
1216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ChecksumOffload |
 2234              		.loc 1 1216 0
 2235 007c 1A43     		orrs	r2, r2, r3
1218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->AutomaticPadCRCStrip |
 2236              		.loc 1 1218 0
 2237 007e 3B68     		ldr	r3, [r7]
 2238 0080 1B6A     		ldr	r3, [r3, #32]
1217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->RetryTransmission |
 2239              		.loc 1 1217 0
 2240 0082 1A43     		orrs	r2, r2, r3
1219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->BackOffLimit |
 2241              		.loc 1 1219 0
 2242 0084 3B68     		ldr	r3, [r7]
 2243 0086 5B6A     		ldr	r3, [r3, #36]
1218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->AutomaticPadCRCStrip |
ARM GAS  /tmp/cc1SlDEr.s 			page 69


 2244              		.loc 1 1218 0
 2245 0088 1A43     		orrs	r2, r2, r3
1220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->DeferralCheck);
 2246              		.loc 1 1220 0
 2247 008a 3B68     		ldr	r3, [r7]
 2248 008c 9B6A     		ldr	r3, [r3, #40]
1207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->Watchdog |
 2249              		.loc 1 1207 0
 2250 008e 1343     		orrs	r3, r3, r2
 2251 0090 FA68     		ldr	r2, [r7, #12]
 2252 0092 1343     		orrs	r3, r3, r2
 2253 0094 FB60     		str	r3, [r7, #12]
1221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write to ETHERNET MACCR */
1223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		prvWriteMACCR( heth, tmpreg );
 2254              		.loc 1 1223 0
 2255 0096 7868     		ldr	r0, [r7, #4]
 2256 0098 F968     		ldr	r1, [r7, #12]
 2257 009a FFF7FEFF 		bl	prvWriteMACCR
1224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/*----------------------- ETHERNET MACFFR Configuration --------------------*/
1226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write to ETHERNET MACFFR */
1227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACFFR = (uint32_t)(
 2258              		.loc 1 1227 0
 2259 009e 7B68     		ldr	r3, [r7, #4]
 2260 00a0 1B68     		ldr	r3, [r3]
1228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ReceiveAll |
 2261              		.loc 1 1228 0
 2262 00a2 3A68     		ldr	r2, [r7]
 2263 00a4 D16A     		ldr	r1, [r2, #44]
1229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->SourceAddrFilter |
 2264              		.loc 1 1229 0
 2265 00a6 3A68     		ldr	r2, [r7]
 2266 00a8 126B     		ldr	r2, [r2, #48]
1228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ReceiveAll |
 2267              		.loc 1 1228 0
 2268 00aa 1143     		orrs	r1, r1, r2
1230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PassControlFrames |
 2269              		.loc 1 1230 0
 2270 00ac 3A68     		ldr	r2, [r7]
 2271 00ae 526B     		ldr	r2, [r2, #52]
1229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->SourceAddrFilter |
 2272              		.loc 1 1229 0
 2273 00b0 1143     		orrs	r1, r1, r2
1231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->BroadcastFramesReception |
 2274              		.loc 1 1231 0
 2275 00b2 3A68     		ldr	r2, [r7]
 2276 00b4 926B     		ldr	r2, [r2, #56]
1230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PassControlFrames |
 2277              		.loc 1 1230 0
 2278 00b6 1143     		orrs	r1, r1, r2
1232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->DestinationAddrFilter |
 2279              		.loc 1 1232 0
 2280 00b8 3A68     		ldr	r2, [r7]
 2281 00ba D26B     		ldr	r2, [r2, #60]
1231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->BroadcastFramesReception |
 2282              		.loc 1 1231 0
ARM GAS  /tmp/cc1SlDEr.s 			page 70


 2283 00bc 1143     		orrs	r1, r1, r2
1233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PromiscuousMode |
 2284              		.loc 1 1233 0
 2285 00be 3A68     		ldr	r2, [r7]
 2286 00c0 126C     		ldr	r2, [r2, #64]
1232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->DestinationAddrFilter |
 2287              		.loc 1 1232 0
 2288 00c2 1143     		orrs	r1, r1, r2
1234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->MulticastFramesFilter |
 2289              		.loc 1 1234 0
 2290 00c4 3A68     		ldr	r2, [r7]
 2291 00c6 526C     		ldr	r2, [r2, #68]
1233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PromiscuousMode |
 2292              		.loc 1 1233 0
 2293 00c8 1143     		orrs	r1, r1, r2
1235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->UnicastFramesFilter);
 2294              		.loc 1 1235 0
 2295 00ca 3A68     		ldr	r2, [r7]
 2296 00cc 926C     		ldr	r2, [r2, #72]
1227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ReceiveAll |
 2297              		.loc 1 1227 0
 2298 00ce 0A43     		orrs	r2, r2, r1
 2299 00d0 5A60     		str	r2, [r3, #4]
1236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Wait until the write operation will be taken into account :
1238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		at least four TX_CLK/RX_CLK clock cycles */
1239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACFFR;
 2300              		.loc 1 1239 0
 2301 00d2 7B68     		ldr	r3, [r7, #4]
 2302 00d4 1B68     		ldr	r3, [r3]
 2303 00d6 5B68     		ldr	r3, [r3, #4]
 2304 00d8 FB60     		str	r3, [r7, #12]
1240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		HAL_Delay(ETH_REG_WRITE_DELAY);
 2305              		.loc 1 1240 0
 2306 00da 0120     		movs	r0, #1
 2307 00dc FFF7FEFF 		bl	HAL_Delay
1241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACFFR = tmpreg;
 2308              		.loc 1 1241 0
 2309 00e0 7B68     		ldr	r3, [r7, #4]
 2310 00e2 1B68     		ldr	r3, [r3]
 2311 00e4 FA68     		ldr	r2, [r7, #12]
 2312 00e6 5A60     		str	r2, [r3, #4]
1242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/*--------------- ETHERNET MACHTHR and MACHTLR Configuration ---------------*/
1244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write to ETHERNET MACHTHR */
1245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACHTHR = (uint32_t)macconf->HashTableHigh;
 2313              		.loc 1 1245 0
 2314 00e8 7B68     		ldr	r3, [r7, #4]
 2315 00ea 1B68     		ldr	r3, [r3]
 2316 00ec 3A68     		ldr	r2, [r7]
 2317 00ee D26C     		ldr	r2, [r2, #76]
 2318 00f0 9A60     		str	r2, [r3, #8]
1246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write to ETHERNET MACHTLR */
1248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACHTLR = (uint32_t)macconf->HashTableLow;
 2319              		.loc 1 1248 0
 2320 00f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc1SlDEr.s 			page 71


 2321 00f4 1B68     		ldr	r3, [r3]
 2322 00f6 3A68     		ldr	r2, [r7]
 2323 00f8 126D     		ldr	r2, [r2, #80]
 2324 00fa DA60     		str	r2, [r3, #12]
1249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/*----------------------- ETHERNET MACFCR Configuration --------------------*/
1250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the ETHERNET MACFCR value */
1252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACFCR;
 2325              		.loc 1 1252 0
 2326 00fc 7B68     		ldr	r3, [r7, #4]
 2327 00fe 1B68     		ldr	r3, [r3]
 2328 0100 9B69     		ldr	r3, [r3, #24]
 2329 0102 FB60     		str	r3, [r7, #12]
1253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Clear xx bits */
1254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg &= ETH_MACFCR_CLEAR_MASK;
 2330              		.loc 1 1254 0
 2331 0104 FA68     		ldr	r2, [r7, #12]
 2332 0106 4FF64173 		movw	r3, #65345
 2333 010a 1340     		ands	r3, r3, r2
 2334 010c FB60     		str	r3, [r7, #12]
1255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t)((
1257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PauseTime << 16) |
 2335              		.loc 1 1257 0
 2336 010e 3B68     		ldr	r3, [r7]
 2337 0110 5B6D     		ldr	r3, [r3, #84]
 2338 0112 1A04     		lsls	r2, r3, #16
1258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ZeroQuantaPause |
 2339              		.loc 1 1258 0
 2340 0114 3B68     		ldr	r3, [r7]
 2341 0116 9B6D     		ldr	r3, [r3, #88]
1257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ZeroQuantaPause |
 2342              		.loc 1 1257 0
 2343 0118 1A43     		orrs	r2, r2, r3
1259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PauseLowThreshold |
 2344              		.loc 1 1259 0
 2345 011a 3B68     		ldr	r3, [r7]
 2346 011c DB6D     		ldr	r3, [r3, #92]
1258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ZeroQuantaPause |
 2347              		.loc 1 1258 0
 2348 011e 1A43     		orrs	r2, r2, r3
1260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->UnicastPauseFrameDetect |
 2349              		.loc 1 1260 0
 2350 0120 3B68     		ldr	r3, [r7]
 2351 0122 1B6E     		ldr	r3, [r3, #96]
1259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PauseLowThreshold |
 2352              		.loc 1 1259 0
 2353 0124 1A43     		orrs	r2, r2, r3
1261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->ReceiveFlowControl |
 2354              		.loc 1 1261 0
 2355 0126 3B68     		ldr	r3, [r7]
 2356 0128 5B6E     		ldr	r3, [r3, #100]
1260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->UnicastPauseFrameDetect |
 2357              		.loc 1 1260 0
 2358 012a 1A43     		orrs	r2, r2, r3
1262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->TransmitFlowControl);
 2359              		.loc 1 1262 0
ARM GAS  /tmp/cc1SlDEr.s 			page 72


 2360 012c 3B68     		ldr	r3, [r7]
 2361 012e 9B6E     		ldr	r3, [r3, #104]
1256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 			macconf->PauseTime << 16) |
 2362              		.loc 1 1256 0
 2363 0130 1343     		orrs	r3, r3, r2
 2364 0132 FA68     		ldr	r2, [r7, #12]
 2365 0134 1343     		orrs	r3, r3, r2
 2366 0136 FB60     		str	r3, [r7, #12]
1263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write to ETHERNET MACFCR */
1265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		prvWriteMACFCR( heth, tmpreg );
 2367              		.loc 1 1265 0
 2368 0138 7868     		ldr	r0, [r7, #4]
 2369 013a F968     		ldr	r1, [r7, #12]
 2370 013c FFF7FEFF 		bl	prvWriteMACFCR
1266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/*----------------------- ETHERNET MACVLANTR Configuration -----------------*/
1268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACVLANTR = (uint32_t)(macconf->VLANTagComparison |
 2371              		.loc 1 1268 0
 2372 0140 7B68     		ldr	r3, [r7, #4]
 2373 0142 1B68     		ldr	r3, [r3]
 2374 0144 3A68     		ldr	r2, [r7]
 2375 0146 D16E     		ldr	r1, [r2, #108]
1269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		macconf->VLANTagIdentifier);
 2376              		.loc 1 1269 0
 2377 0148 3A68     		ldr	r2, [r7]
 2378 014a 126F     		ldr	r2, [r2, #112]
1268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		macconf->VLANTagIdentifier);
 2379              		.loc 1 1268 0
 2380 014c 0A43     		orrs	r2, r2, r1
 2381 014e DA61     		str	r2, [r3, #28]
1270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Wait until the write operation will be taken into account :
1272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		at least four TX_CLK/RX_CLK clock cycles */
1273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACVLANTR;
 2382              		.loc 1 1273 0
 2383 0150 7B68     		ldr	r3, [r7, #4]
 2384 0152 1B68     		ldr	r3, [r3]
 2385 0154 DB69     		ldr	r3, [r3, #28]
 2386 0156 FB60     		str	r3, [r7, #12]
1274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		HAL_Delay(ETH_REG_WRITE_DELAY);
 2387              		.loc 1 1274 0
 2388 0158 0120     		movs	r0, #1
 2389 015a FFF7FEFF 		bl	HAL_Delay
1275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		heth->Instance->MACVLANTR = tmpreg;
 2390              		.loc 1 1275 0
 2391 015e 7B68     		ldr	r3, [r7, #4]
 2392 0160 1B68     		ldr	r3, [r3]
 2393 0162 FA68     		ldr	r2, [r7, #12]
 2394 0164 DA61     		str	r2, [r3, #28]
 2395 0166 13E0     		b	.L111
 2396              	.L110:
1276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
1277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	else /* macconf == NULL : here we just configure Speed and Duplex mode */
1278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	{
1279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/*------------------------ ETHERNET MACCR Configuration --------------------*/
1280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Get the ETHERNET MACCR value */
ARM GAS  /tmp/cc1SlDEr.s 			page 73


1281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg = heth->Instance->MACCR;
 2397              		.loc 1 1281 0
 2398 0168 7B68     		ldr	r3, [r7, #4]
 2399 016a 1B68     		ldr	r3, [r3]
 2400 016c 1B68     		ldr	r3, [r3]
 2401 016e FB60     		str	r3, [r7, #12]
1282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Clear FES and DM bits */
1284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg &= ~((uint32_t)0x00004800);
 2402              		.loc 1 1284 0
 2403 0170 FB68     		ldr	r3, [r7, #12]
 2404 0172 23F49043 		bic	r3, r3, #18432
 2405 0176 FB60     		str	r3, [r7, #12]
1285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		tmpreg |= (uint32_t)(heth->Init.Speed | heth->Init.DuplexMode);
 2406              		.loc 1 1286 0
 2407 0178 7B68     		ldr	r3, [r7, #4]
 2408 017a 9A68     		ldr	r2, [r3, #8]
 2409 017c 7B68     		ldr	r3, [r7, #4]
 2410 017e DB68     		ldr	r3, [r3, #12]
 2411 0180 1343     		orrs	r3, r3, r2
 2412 0182 FA68     		ldr	r2, [r7, #12]
 2413 0184 1343     		orrs	r3, r3, r2
 2414 0186 FB60     		str	r3, [r7, #12]
1287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		/* Write to ETHERNET MACCR */
1289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		prvWriteMACCR( heth, tmpreg );
 2415              		.loc 1 1289 0
 2416 0188 7868     		ldr	r0, [r7, #4]
 2417 018a F968     		ldr	r1, [r7, #12]
 2418 018c FFF7FEFF 		bl	prvWriteMACCR
 2419              	.L111:
1290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	}
1291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH state to Ready */
1293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_READY;
 2420              		.loc 1 1293 0
 2421 0190 7B68     		ldr	r3, [r7, #4]
 2422 0192 0122     		movs	r2, #1
 2423 0194 83F84420 		strb	r2, [r3, #68]
1294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
1296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 2424              		.loc 1 1296 0
 2425 0198 7B68     		ldr	r3, [r7, #4]
 2426 019a 0022     		movs	r2, #0
 2427 019c 83F84520 		strb	r2, [r3, #69]
1297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
1299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 2428              		.loc 1 1299 0
 2429 01a0 0023     		movs	r3, #0
 2430              	.L109:
1300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 2431              		.loc 1 1300 0
 2432 01a2 1846     		mov	r0, r3
 2433 01a4 1037     		adds	r7, r7, #16
ARM GAS  /tmp/cc1SlDEr.s 			page 74


 2434              	.LCFI112:
 2435              		.cfi_def_cfa_offset 8
 2436 01a6 BD46     		mov	sp, r7
 2437              	.LCFI113:
 2438              		.cfi_def_cfa_register 13
 2439              		@ sp needed
 2440 01a8 80BD     		pop	{r7, pc}
 2441              	.L113:
 2442 01aa 00BF     		.align	2
 2443              	.L112:
 2444 01ac 0F8120FF 		.word	-14647025
 2445              		.cfi_endproc
 2446              	.LFE155:
 2448              		.section	.text.HAL_ETH_ConfigDMA,"ax",%progbits
 2449              		.align	2
 2450              		.global	HAL_ETH_ConfigDMA
 2451              		.thumb
 2452              		.thumb_func
 2454              	HAL_ETH_ConfigDMA:
 2455              	.LFB156:
1301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Sets ETH DMA Configuration.
1304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  dmaconf: DMA Configuration structure
1307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
1308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_StatusTypeDef HAL_ETH_ConfigDMA(ETH_HandleTypeDef *heth, ETH_DMAInitTypeDef *dmaconf)
1310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 2456              		.loc 1 1310 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 16
 2459              		@ frame_needed = 1, uses_anonymous_args = 0
 2460 0000 80B5     		push	{r7, lr}
 2461              	.LCFI114:
 2462              		.cfi_def_cfa_offset 8
 2463              		.cfi_offset 7, -8
 2464              		.cfi_offset 14, -4
 2465 0002 84B0     		sub	sp, sp, #16
 2466              	.LCFI115:
 2467              		.cfi_def_cfa_offset 24
 2468 0004 00AF     		add	r7, sp, #0
 2469              	.LCFI116:
 2470              		.cfi_def_cfa_register 7
 2471 0006 7860     		str	r0, [r7, #4]
 2472 0008 3960     		str	r1, [r7]
1311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t tmpreg = 0;
 2473              		.loc 1 1311 0
 2474 000a 0023     		movs	r3, #0
 2475 000c FB60     		str	r3, [r7, #12]
1312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Locked */
1314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_LOCK( heth );
 2476              		.loc 1 1314 0
 2477 000e 7B68     		ldr	r3, [r7, #4]
 2478 0010 93F84530 		ldrb	r3, [r3, #69]	@ zero_extendqisi2
ARM GAS  /tmp/cc1SlDEr.s 			page 75


 2479 0014 012B     		cmp	r3, #1
 2480 0016 01D1     		bne	.L115
 2481              		.loc 1 1314 0 is_stmt 0 discriminator 1
 2482 0018 0223     		movs	r3, #2
 2483 001a 67E0     		b	.L116
 2484              	.L115:
 2485              		.loc 1 1314 0 discriminator 2
 2486 001c 7B68     		ldr	r3, [r7, #4]
 2487 001e 0122     		movs	r2, #1
 2488 0020 83F84520 		strb	r2, [r3, #69]
1315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH peripheral state to BUSY */
1317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_BUSY;
 2489              		.loc 1 1317 0 is_stmt 1 discriminator 2
 2490 0024 7B68     		ldr	r3, [r7, #4]
 2491 0026 0222     		movs	r2, #2
 2492 0028 83F84420 		strb	r2, [r3, #68]
1318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check parameters */
1320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_DROP_TCPIP_CHECKSUM_FRAME(dmaconf->DropTCPIPChecksumErrorFrame));
1321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_RECEIVE_STORE_FORWARD(dmaconf->ReceiveStoreForward));
1322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_FLUSH_RECEIVE_FRAME(dmaconf->FlushReceivedFrame));
1323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_TRANSMIT_STORE_FORWARD(dmaconf->TransmitStoreForward));
1324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_TRANSMIT_THRESHOLD_CONTROL(dmaconf->TransmitThresholdControl));
1325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_FORWARD_ERROR_FRAMES(dmaconf->ForwardErrorFrames));
1326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_FORWARD_UNDERSIZED_GOOD_FRAMES(dmaconf->ForwardUndersizedGoodFrames));
1327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_RECEIVE_THRESHOLD_CONTROL(dmaconf->ReceiveThresholdControl));
1328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_SECOND_FRAME_OPERATE(dmaconf->SecondFrameOperate));
1329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_ADDRESS_ALIGNED_BEATS(dmaconf->AddressAlignedBeats));
1330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_FIXED_BURST(dmaconf->FixedBurst));
1331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_RXDMA_BURST_LENGTH(dmaconf->RxDMABurstLength));
1332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_TXDMA_BURST_LENGTH(dmaconf->TxDMABurstLength));
1333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_ENHANCED_DESCRIPTOR_FORMAT(dmaconf->EnhancedDescriptorFormat));
1334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_DMA_DESC_SKIP_LENGTH(dmaconf->DescriptorSkipLength));
1335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param(IS_ETH_DMA_ARBITRATION_ROUNDROBIN_RXTX(dmaconf->DMAArbitration));
1336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/*----------------------- ETHERNET DMAOMR Configuration --------------------*/
1338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Get the ETHERNET DMAOMR value */
1339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg = heth->Instance->DMAOMR;
 2493              		.loc 1 1339 0 discriminator 2
 2494 002c 7B68     		ldr	r3, [r7, #4]
 2495 002e 1A68     		ldr	r2, [r3]
 2496 0030 41F21803 		movw	r3, #4120
 2497 0034 1344     		add	r3, r3, r2
 2498 0036 1B68     		ldr	r3, [r3]
 2499 0038 FB60     		str	r3, [r7, #12]
1340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Clear xx bits */
1341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg &= ETH_DMAOMR_CLEAR_MASK;
 2500              		.loc 1 1341 0 discriminator 2
 2501 003a FA68     		ldr	r2, [r7, #12]
 2502 003c 2D4B     		ldr	r3, .L117
 2503 003e 1340     		ands	r3, r3, r2
 2504 0040 FB60     		str	r3, [r7, #12]
1342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg |= (uint32_t)(
1344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->DropTCPIPChecksumErrorFrame |
 2505              		.loc 1 1344 0 discriminator 2
ARM GAS  /tmp/cc1SlDEr.s 			page 76


 2506 0042 3B68     		ldr	r3, [r7]
 2507 0044 1A68     		ldr	r2, [r3]
1345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ReceiveStoreForward |
 2508              		.loc 1 1345 0 discriminator 2
 2509 0046 3B68     		ldr	r3, [r7]
 2510 0048 5B68     		ldr	r3, [r3, #4]
1344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ReceiveStoreForward |
 2511              		.loc 1 1344 0 discriminator 2
 2512 004a 1A43     		orrs	r2, r2, r3
1346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->FlushReceivedFrame |
 2513              		.loc 1 1346 0 discriminator 2
 2514 004c 3B68     		ldr	r3, [r7]
 2515 004e 9B68     		ldr	r3, [r3, #8]
1345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ReceiveStoreForward |
 2516              		.loc 1 1345 0 discriminator 2
 2517 0050 1A43     		orrs	r2, r2, r3
1347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->TransmitStoreForward |
 2518              		.loc 1 1347 0 discriminator 2
 2519 0052 3B68     		ldr	r3, [r7]
 2520 0054 DB68     		ldr	r3, [r3, #12]
1346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->FlushReceivedFrame |
 2521              		.loc 1 1346 0 discriminator 2
 2522 0056 1A43     		orrs	r2, r2, r3
1348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->TransmitThresholdControl |
 2523              		.loc 1 1348 0 discriminator 2
 2524 0058 3B68     		ldr	r3, [r7]
 2525 005a 1B69     		ldr	r3, [r3, #16]
1347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->TransmitStoreForward |
 2526              		.loc 1 1347 0 discriminator 2
 2527 005c 1A43     		orrs	r2, r2, r3
1349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ForwardErrorFrames |
 2528              		.loc 1 1349 0 discriminator 2
 2529 005e 3B68     		ldr	r3, [r7]
 2530 0060 5B69     		ldr	r3, [r3, #20]
1348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->TransmitThresholdControl |
 2531              		.loc 1 1348 0 discriminator 2
 2532 0062 1A43     		orrs	r2, r2, r3
1350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ForwardUndersizedGoodFrames |
 2533              		.loc 1 1350 0 discriminator 2
 2534 0064 3B68     		ldr	r3, [r7]
 2535 0066 9B69     		ldr	r3, [r3, #24]
1349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ForwardErrorFrames |
 2536              		.loc 1 1349 0 discriminator 2
 2537 0068 1A43     		orrs	r2, r2, r3
1351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ReceiveThresholdControl |
 2538              		.loc 1 1351 0 discriminator 2
 2539 006a 3B68     		ldr	r3, [r7]
 2540 006c DB69     		ldr	r3, [r3, #28]
1350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->ForwardUndersizedGoodFrames |
 2541              		.loc 1 1350 0 discriminator 2
 2542 006e 1A43     		orrs	r2, r2, r3
1352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->SecondFrameOperate);
 2543              		.loc 1 1352 0 discriminator 2
 2544 0070 3B68     		ldr	r3, [r7]
 2545 0072 1B6A     		ldr	r3, [r3, #32]
1343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 		dmaconf->DropTCPIPChecksumErrorFrame |
 2546              		.loc 1 1343 0 discriminator 2
ARM GAS  /tmp/cc1SlDEr.s 			page 77


 2547 0074 1343     		orrs	r3, r3, r2
 2548 0076 FA68     		ldr	r2, [r7, #12]
 2549 0078 1343     		orrs	r3, r3, r2
 2550 007a FB60     		str	r3, [r7, #12]
1353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Write to ETHERNET DMAOMR */
1355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteDMAOMR( heth, tmpreg );
 2551              		.loc 1 1355 0 discriminator 2
 2552 007c 7868     		ldr	r0, [r7, #4]
 2553 007e F968     		ldr	r1, [r7, #12]
 2554 0080 FFF7FEFF 		bl	prvWriteDMAOMR
1356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/*----------------------- ETHERNET DMABMR Configuration --------------------*/
1358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMABMR = (uint32_t)(dmaconf->AddressAlignedBeats |
 2555              		.loc 1 1358 0 discriminator 2
 2556 0084 7B68     		ldr	r3, [r7, #4]
 2557 0086 1B68     		ldr	r3, [r3]
 2558 0088 3A68     		ldr	r2, [r7]
 2559 008a 516A     		ldr	r1, [r2, #36]
1359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->FixedBurst |
 2560              		.loc 1 1359 0 discriminator 2
 2561 008c 3A68     		ldr	r2, [r7]
 2562 008e 926A     		ldr	r2, [r2, #40]
1358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->FixedBurst |
 2563              		.loc 1 1358 0 discriminator 2
 2564 0090 1143     		orrs	r1, r1, r2
1360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for Tx or Rx it is applied for the other */
 2565              		.loc 1 1360 0 discriminator 2
 2566 0092 3A68     		ldr	r2, [r7]
 2567 0094 D26A     		ldr	r2, [r2, #44]
1359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->FixedBurst |
 2568              		.loc 1 1359 0 discriminator 2
 2569 0096 1143     		orrs	r1, r1, r2
1361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->TxDMABurstLength |
 2570              		.loc 1 1361 0 discriminator 2
 2571 0098 3A68     		ldr	r2, [r7]
 2572 009a 126B     		ldr	r2, [r2, #48]
1360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->RxDMABurstLength | /* !! if 4xPBL is selected for Tx or Rx it is applied for the other */
 2573              		.loc 1 1360 0 discriminator 2
 2574 009c 1143     		orrs	r1, r1, r2
1362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->EnhancedDescriptorFormat |
 2575              		.loc 1 1362 0 discriminator 2
 2576 009e 3A68     		ldr	r2, [r7]
 2577 00a0 526B     		ldr	r2, [r2, #52]
1361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->TxDMABurstLength |
 2578              		.loc 1 1361 0 discriminator 2
 2579 00a2 1143     		orrs	r1, r1, r2
1363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	(dmaconf->DescriptorSkipLength << 2) |
 2580              		.loc 1 1363 0 discriminator 2
 2581 00a4 3A68     		ldr	r2, [r7]
 2582 00a6 926B     		ldr	r2, [r2, #56]
 2583 00a8 9200     		lsls	r2, r2, #2
1362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->EnhancedDescriptorFormat |
 2584              		.loc 1 1362 0 discriminator 2
 2585 00aa 1143     		orrs	r1, r1, r2
1364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->DMAArbitration |
 2586              		.loc 1 1364 0 discriminator 2
ARM GAS  /tmp/cc1SlDEr.s 			page 78


 2587 00ac 3A68     		ldr	r2, [r7]
 2588 00ae D26B     		ldr	r2, [r2, #60]
1363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	(dmaconf->DescriptorSkipLength << 2) |
 2589              		.loc 1 1363 0 discriminator 2
 2590 00b0 0A43     		orrs	r2, r2, r1
1358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	dmaconf->FixedBurst |
 2591              		.loc 1 1358 0 discriminator 2
 2592 00b2 42F40002 		orr	r2, r2, #8388608
 2593 00b6 03F58053 		add	r3, r3, #4096
 2594 00ba 1A60     		str	r2, [r3]
1365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and Tx */
1366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Wait until the write operation will be taken into account:
1368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	at least four TX_CLK/RX_CLK clock cycles */
1369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg = heth->Instance->DMABMR;
 2595              		.loc 1 1369 0 discriminator 2
 2596 00bc 7B68     		ldr	r3, [r7, #4]
 2597 00be 1B68     		ldr	r3, [r3]
 2598 00c0 03F58053 		add	r3, r3, #4096
 2599 00c4 1B68     		ldr	r3, [r3]
 2600 00c6 FB60     		str	r3, [r7, #12]
1370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	HAL_Delay(ETH_REG_WRITE_DELAY);
 2601              		.loc 1 1370 0 discriminator 2
 2602 00c8 0120     		movs	r0, #1
 2603 00ca FFF7FEFF 		bl	HAL_Delay
1371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->Instance->DMABMR = tmpreg;
 2604              		.loc 1 1371 0 discriminator 2
 2605 00ce 7B68     		ldr	r3, [r7, #4]
 2606 00d0 1B68     		ldr	r3, [r3]
 2607 00d2 03F58053 		add	r3, r3, #4096
 2608 00d6 FA68     		ldr	r2, [r7, #12]
 2609 00d8 1A60     		str	r2, [r3]
1372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the ETH state to Ready */
1374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	heth->State= HAL_ETH_STATE_READY;
 2610              		.loc 1 1374 0 discriminator 2
 2611 00da 7B68     		ldr	r3, [r7, #4]
 2612 00dc 0122     		movs	r2, #1
 2613 00de 83F84420 		strb	r2, [r3, #68]
1375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Process Unlocked */
1377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__HAL_UNLOCK( heth );
 2614              		.loc 1 1377 0 discriminator 2
 2615 00e2 7B68     		ldr	r3, [r7, #4]
 2616 00e4 0022     		movs	r2, #0
 2617 00e6 83F84520 		strb	r2, [r3, #69]
1378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Return function status */
1380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	return HAL_OK;
 2618              		.loc 1 1380 0 discriminator 2
 2619 00ea 0023     		movs	r3, #0
 2620              	.L116:
1381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 2621              		.loc 1 1381 0
 2622 00ec 1846     		mov	r0, r3
 2623 00ee 1037     		adds	r7, r7, #16
 2624              	.LCFI117:
ARM GAS  /tmp/cc1SlDEr.s 			page 79


 2625              		.cfi_def_cfa_offset 8
 2626 00f0 BD46     		mov	sp, r7
 2627              	.LCFI118:
 2628              		.cfi_def_cfa_register 13
 2629              		@ sp needed
 2630 00f2 80BD     		pop	{r7, pc}
 2631              	.L118:
 2632              		.align	2
 2633              	.L117:
 2634 00f4 233FDEF8 		.word	-119652573
 2635              		.cfi_endproc
 2636              	.LFE156:
 2638              		.section	.text.HAL_ETH_GetState,"ax",%progbits
 2639              		.align	2
 2640              		.global	HAL_ETH_GetState
 2641              		.thumb
 2642              		.thumb_func
 2644              	HAL_ETH_GetState:
 2645              	.LFB157:
1382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
1385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @defgroup ETH_Exported_Functions_Group4 Peripheral State functions
1388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *  @brief   Peripheral State functions
1389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *
1390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @verbatim
1391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ===============================================================================
1392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          ##### Peripheral State functions #####
1393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ===============================================================================
1394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   [..]
1395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   This subsection permits to get in run-time the status of the peripheral
1396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   and the data flow.
1397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****        (+) Get the ETH handle state:
1398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****            HAL_ETH_GetState();
1399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   @endverbatim
1402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
1403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Return the ETH HAL state
1407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL state
1410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** HAL_ETH_StateTypeDef HAL_ETH_GetState(ETH_HandleTypeDef *heth)
1412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 2646              		.loc 1 1412 0
 2647              		.cfi_startproc
 2648              		@ args = 0, pretend = 0, frame = 8
 2649              		@ frame_needed = 1, uses_anonymous_args = 0
 2650              		@ link register save eliminated.
 2651 0000 80B4     		push	{r7}
 2652              	.LCFI119:
ARM GAS  /tmp/cc1SlDEr.s 			page 80


 2653              		.cfi_def_cfa_offset 4
 2654              		.cfi_offset 7, -4
 2655 0002 83B0     		sub	sp, sp, #12
 2656              	.LCFI120:
 2657              		.cfi_def_cfa_offset 16
 2658 0004 00AF     		add	r7, sp, #0
 2659              	.LCFI121:
 2660              		.cfi_def_cfa_register 7
 2661 0006 7860     		str	r0, [r7, #4]
1413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Return ETH state */
1414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   return heth->State;
 2662              		.loc 1 1414 0
 2663 0008 7B68     		ldr	r3, [r7, #4]
 2664 000a 93F84430 		ldrb	r3, [r3, #68]
 2665 000e DBB2     		uxtb	r3, r3
1415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 2666              		.loc 1 1415 0
 2667 0010 1846     		mov	r0, r3
 2668 0012 0C37     		adds	r7, r7, #12
 2669              	.LCFI122:
 2670              		.cfi_def_cfa_offset 4
 2671 0014 BD46     		mov	sp, r7
 2672              	.LCFI123:
 2673              		.cfi_def_cfa_register 13
 2674              		@ sp needed
 2675 0016 5DF8047B 		ldr	r7, [sp], #4
 2676              	.LCFI124:
 2677              		.cfi_restore 7
 2678              		.cfi_def_cfa_offset 0
 2679 001a 7047     		bx	lr
 2680              		.cfi_endproc
 2681              	.LFE157:
 2683              		.section	.text.ETH_MACDMAConfig,"ax",%progbits
 2684              		.align	2
 2685              		.thumb
 2686              		.thumb_func
 2688              	ETH_MACDMAConfig:
 2689              	.LFB158:
1416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
1419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @}
1423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /** @addtogroup ETH_Private_Functions
1426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @{
1427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Configures Ethernet MAC and DMA with default parameters.
1431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  err: Ethernet Init error
1434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
ARM GAS  /tmp/cc1SlDEr.s 			page 81


1435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACDMAConfig(ETH_HandleTypeDef *heth, uint32_t err)
1437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 2690              		.loc 1 1437 0
 2691              		.cfi_startproc
 2692              		@ args = 0, pretend = 0, frame = 192
 2693              		@ frame_needed = 1, uses_anonymous_args = 0
 2694 0000 80B5     		push	{r7, lr}
 2695              	.LCFI125:
 2696              		.cfi_def_cfa_offset 8
 2697              		.cfi_offset 7, -8
 2698              		.cfi_offset 14, -4
 2699 0002 B0B0     		sub	sp, sp, #192
 2700              	.LCFI126:
 2701              		.cfi_def_cfa_offset 200
 2702 0004 00AF     		add	r7, sp, #0
 2703              	.LCFI127:
 2704              		.cfi_def_cfa_register 7
 2705 0006 7860     		str	r0, [r7, #4]
 2706 0008 3960     		str	r1, [r7]
1438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_MACInitTypeDef macinit;
1439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   ETH_DMAInitTypeDef dmainit;
1440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   uint32_t tmpreg = 0;
 2707              		.loc 1 1440 0
 2708 000a 0023     		movs	r3, #0
 2709 000c C7F8BC30 		str	r3, [r7, #188]
1441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   if (err != ETH_SUCCESS) /* Auto-negotiation failed */
 2710              		.loc 1 1442 0
 2711 0010 3B68     		ldr	r3, [r7]
 2712 0012 002B     		cmp	r3, #0
 2713 0014 07D0     		beq	.L122
1443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   {
1444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set Ethernet duplex mode to Full-duplex */
1445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     heth->Init.DuplexMode = ETH_MODE_FULLDUPLEX;
 2714              		.loc 1 1445 0
 2715 0016 7B68     		ldr	r3, [r7, #4]
 2716 0018 4FF40062 		mov	r2, #2048
 2717 001c DA60     		str	r2, [r3, #12]
1446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set Ethernet speed to 100M */
1448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     heth->Init.Speed = ETH_SPEED_100M;
 2718              		.loc 1 1448 0
 2719 001e 7B68     		ldr	r3, [r7, #4]
 2720 0020 4FF48042 		mov	r2, #16384
 2721 0024 9A60     		str	r2, [r3, #8]
 2722              	.L122:
1449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   }
1450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Ethernet MAC default initialization **************************************/
1452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.Watchdog = ETH_WATCHDOG_ENABLE;
 2723              		.loc 1 1452 0
 2724 0026 0023     		movs	r3, #0
 2725 0028 BB64     		str	r3, [r7, #72]
1453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.Jabber = ETH_JABBER_ENABLE;
 2726              		.loc 1 1453 0
 2727 002a 0023     		movs	r3, #0
ARM GAS  /tmp/cc1SlDEr.s 			page 82


 2728 002c FB64     		str	r3, [r7, #76]
1454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.InterFrameGap = ETH_INTERFRAMEGAP_96BIT;
 2729              		.loc 1 1454 0
 2730 002e 0023     		movs	r3, #0
 2731 0030 3B65     		str	r3, [r7, #80]
1455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.CarrierSense = ETH_CARRIERSENCE_ENABLE;
 2732              		.loc 1 1455 0
 2733 0032 0023     		movs	r3, #0
 2734 0034 7B65     		str	r3, [r7, #84]
1456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.ReceiveOwn = ETH_RECEIVEOWN_ENABLE;
 2735              		.loc 1 1456 0
 2736 0036 0023     		movs	r3, #0
 2737 0038 BB65     		str	r3, [r7, #88]
1457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.LoopbackMode = ETH_LOOPBACKMODE_DISABLE;
 2738              		.loc 1 1457 0
 2739 003a 0023     		movs	r3, #0
 2740 003c FB65     		str	r3, [r7, #92]
1458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   if(heth->Init.ChecksumMode == ETH_CHECKSUM_BY_HARDWARE)
 2741              		.loc 1 1458 0
 2742 003e 7B68     		ldr	r3, [r7, #4]
 2743 0040 DB69     		ldr	r3, [r3, #28]
 2744 0042 002B     		cmp	r3, #0
 2745 0044 03D1     		bne	.L123
1459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   {
1460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_ENABLE;
 2746              		.loc 1 1460 0
 2747 0046 4FF48063 		mov	r3, #1024
 2748 004a 3B66     		str	r3, [r7, #96]
 2749 004c 01E0     		b	.L124
 2750              	.L123:
1461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   }
1462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   else
1463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   {
1464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     macinit.ChecksumOffload = ETH_CHECKSUMOFFLAOD_DISABLE;
 2751              		.loc 1 1464 0
 2752 004e 0023     		movs	r3, #0
 2753 0050 3B66     		str	r3, [r7, #96]
 2754              	.L124:
1465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   }
1466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.RetryTransmission = ETH_RETRYTRANSMISSION_DISABLE;
 2755              		.loc 1 1466 0
 2756 0052 4FF40073 		mov	r3, #512
 2757 0056 7B66     		str	r3, [r7, #100]
1467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.AutomaticPadCRCStrip = ETH_AUTOMATICPADCRCSTRIP_DISABLE;
 2758              		.loc 1 1467 0
 2759 0058 0023     		movs	r3, #0
 2760 005a BB66     		str	r3, [r7, #104]
1468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.BackOffLimit = ETH_BACKOFFLIMIT_10;
 2761              		.loc 1 1468 0
 2762 005c 0023     		movs	r3, #0
 2763 005e FB66     		str	r3, [r7, #108]
1469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.DeferralCheck = ETH_DEFFERRALCHECK_DISABLE;
 2764              		.loc 1 1469 0
 2765 0060 0023     		movs	r3, #0
 2766 0062 3B67     		str	r3, [r7, #112]
1470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.ReceiveAll = ETH_RECEIVEAll_DISABLE;
 2767              		.loc 1 1470 0
ARM GAS  /tmp/cc1SlDEr.s 			page 83


 2768 0064 0023     		movs	r3, #0
 2769 0066 7B67     		str	r3, [r7, #116]
1471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.SourceAddrFilter = ETH_SOURCEADDRFILTER_DISABLE;
 2770              		.loc 1 1471 0
 2771 0068 0023     		movs	r3, #0
 2772 006a BB67     		str	r3, [r7, #120]
1472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.PassControlFrames = ETH_PASSCONTROLFRAMES_BLOCKALL;
 2773              		.loc 1 1472 0
 2774 006c 4023     		movs	r3, #64
 2775 006e FB67     		str	r3, [r7, #124]
1473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.BroadcastFramesReception = ETH_BROADCASTFRAMESRECEPTION_ENABLE;
 2776              		.loc 1 1473 0
 2777 0070 0023     		movs	r3, #0
 2778 0072 C7F88030 		str	r3, [r7, #128]
1474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.DestinationAddrFilter = ETH_DESTINATIONADDRFILTER_NORMAL;
 2779              		.loc 1 1474 0
 2780 0076 0023     		movs	r3, #0
 2781 0078 C7F88430 		str	r3, [r7, #132]
1475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.PromiscuousMode = ETH_PROMISCUOUS_MODE_DISABLE;
 2782              		.loc 1 1475 0
 2783 007c 0023     		movs	r3, #0
 2784 007e C7F88830 		str	r3, [r7, #136]
1476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.MulticastFramesFilter = ETH_MULTICASTFRAMESFILTER_PERFECT;
 2785              		.loc 1 1476 0
 2786 0082 0023     		movs	r3, #0
 2787 0084 C7F88C30 		str	r3, [r7, #140]
1477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.UnicastFramesFilter = ETH_UNICASTFRAMESFILTER_PERFECT;
 2788              		.loc 1 1477 0
 2789 0088 0023     		movs	r3, #0
 2790 008a C7F89030 		str	r3, [r7, #144]
1478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.HashTableHigh = 0x0;
 2791              		.loc 1 1478 0
 2792 008e 0023     		movs	r3, #0
 2793 0090 C7F89430 		str	r3, [r7, #148]
1479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.HashTableLow = 0x0;
 2794              		.loc 1 1479 0
 2795 0094 0023     		movs	r3, #0
 2796 0096 C7F89830 		str	r3, [r7, #152]
1480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.PauseTime = 0x0;
 2797              		.loc 1 1480 0
 2798 009a 0023     		movs	r3, #0
 2799 009c C7F89C30 		str	r3, [r7, #156]
1481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.ZeroQuantaPause = ETH_ZEROQUANTAPAUSE_DISABLE;
 2800              		.loc 1 1481 0
 2801 00a0 8023     		movs	r3, #128
 2802 00a2 C7F8A030 		str	r3, [r7, #160]
1482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.PauseLowThreshold = ETH_PAUSELOWTHRESHOLD_MINUS4;
 2803              		.loc 1 1482 0
 2804 00a6 0023     		movs	r3, #0
 2805 00a8 C7F8A430 		str	r3, [r7, #164]
1483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.UnicastPauseFrameDetect = ETH_UNICASTPAUSEFRAMEDETECT_DISABLE;
 2806              		.loc 1 1483 0
 2807 00ac 0023     		movs	r3, #0
 2808 00ae C7F8A830 		str	r3, [r7, #168]
1484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.ReceiveFlowControl = ETH_RECEIVEFLOWCONTROL_DISABLE;
 2809              		.loc 1 1484 0
 2810 00b2 0023     		movs	r3, #0
ARM GAS  /tmp/cc1SlDEr.s 			page 84


 2811 00b4 C7F8AC30 		str	r3, [r7, #172]
1485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.TransmitFlowControl = ETH_TRANSMITFLOWCONTROL_DISABLE;
 2812              		.loc 1 1485 0
 2813 00b8 0023     		movs	r3, #0
 2814 00ba C7F8B030 		str	r3, [r7, #176]
1486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.VLANTagComparison = ETH_VLANTAGCOMPARISON_16BIT;
 2815              		.loc 1 1486 0
 2816 00be 0023     		movs	r3, #0
 2817 00c0 C7F8B430 		str	r3, [r7, #180]
1487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   macinit.VLANTagIdentifier = 0x0;
 2818              		.loc 1 1487 0
 2819 00c4 0023     		movs	r3, #0
 2820 00c6 C7F8B830 		str	r3, [r7, #184]
1488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /*------------------------ ETHERNET MACCR Configuration --------------------*/
1490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Get the ETHERNET MACCR value */
1491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   tmpreg = heth->Instance->MACCR;
 2821              		.loc 1 1491 0
 2822 00ca 7B68     		ldr	r3, [r7, #4]
 2823 00cc 1B68     		ldr	r3, [r3]
 2824 00ce 1B68     		ldr	r3, [r3]
 2825 00d0 C7F8BC30 		str	r3, [r7, #188]
1492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Clear WD, PCE, PS, TE and RE bits */
1493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   tmpreg &= ETH_MACCR_CLEAR_MASK;
 2826              		.loc 1 1493 0
 2827 00d4 D7F8BC20 		ldr	r2, [r7, #188]
 2828 00d8 924B     		ldr	r3, .L126
 2829 00da 1340     		ands	r3, r3, r2
 2830 00dc C7F8BC30 		str	r3, [r7, #188]
1494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the WD bit according to ETH Watchdog value */
1495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the JD: bit according to ETH Jabber value */
1496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the IFG bit according to ETH InterFrameGap value */
1497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DCRS bit according to ETH CarrierSense value */
1498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the FES bit according to ETH Speed value */
1499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DO bit according to ETH ReceiveOwn value */
1500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the LM bit according to ETH LoopbackMode value */
1501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DM bit according to ETH Mode value */
1502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the IPCO bit according to ETH ChecksumOffload value */
1503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DR bit according to ETH RetryTransmission value */
1504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the ACS bit according to ETH AutomaticPadCRCStrip value */
1505:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the BL bit according to ETH BackOffLimit value */
1506:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DC bit according to ETH DeferralCheck value */
1507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   tmpreg |= (uint32_t)(macinit.Watchdog |
 2831              		.loc 1 1507 0
 2832 00e0 BA6C     		ldr	r2, [r7, #72]
1508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.Jabber |
 2833              		.loc 1 1508 0
 2834 00e2 FB6C     		ldr	r3, [r7, #76]
1507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.Jabber |
 2835              		.loc 1 1507 0
 2836 00e4 1A43     		orrs	r2, r2, r3
1509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.InterFrameGap |
 2837              		.loc 1 1509 0
 2838 00e6 3B6D     		ldr	r3, [r7, #80]
1508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.Jabber |
 2839              		.loc 1 1508 0
 2840 00e8 1A43     		orrs	r2, r2, r3
ARM GAS  /tmp/cc1SlDEr.s 			page 85


1510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.CarrierSense |
 2841              		.loc 1 1510 0
 2842 00ea 7B6D     		ldr	r3, [r7, #84]
1509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.InterFrameGap |
 2843              		.loc 1 1509 0
 2844 00ec 1A43     		orrs	r2, r2, r3
1511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        heth->Init.Speed |
 2845              		.loc 1 1511 0
 2846 00ee 7B68     		ldr	r3, [r7, #4]
 2847 00f0 9B68     		ldr	r3, [r3, #8]
1510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.CarrierSense |
 2848              		.loc 1 1510 0
 2849 00f2 1A43     		orrs	r2, r2, r3
1512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.ReceiveOwn |
 2850              		.loc 1 1512 0
 2851 00f4 BB6D     		ldr	r3, [r7, #88]
1511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        heth->Init.Speed |
 2852              		.loc 1 1511 0
 2853 00f6 1A43     		orrs	r2, r2, r3
1513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.LoopbackMode |
 2854              		.loc 1 1513 0
 2855 00f8 FB6D     		ldr	r3, [r7, #92]
1512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.ReceiveOwn |
 2856              		.loc 1 1512 0
 2857 00fa 1A43     		orrs	r2, r2, r3
1514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        heth->Init.DuplexMode |
 2858              		.loc 1 1514 0
 2859 00fc 7B68     		ldr	r3, [r7, #4]
 2860 00fe DB68     		ldr	r3, [r3, #12]
1513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.LoopbackMode |
 2861              		.loc 1 1513 0
 2862 0100 1A43     		orrs	r2, r2, r3
1515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.ChecksumOffload |
 2863              		.loc 1 1515 0
 2864 0102 3B6E     		ldr	r3, [r7, #96]
1514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        heth->Init.DuplexMode |
 2865              		.loc 1 1514 0
 2866 0104 1A43     		orrs	r2, r2, r3
1516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.RetryTransmission |
 2867              		.loc 1 1516 0
 2868 0106 7B6E     		ldr	r3, [r7, #100]
1515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.ChecksumOffload |
 2869              		.loc 1 1515 0
 2870 0108 1A43     		orrs	r2, r2, r3
1517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.AutomaticPadCRCStrip |
 2871              		.loc 1 1517 0
 2872 010a BB6E     		ldr	r3, [r7, #104]
1516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.RetryTransmission |
 2873              		.loc 1 1516 0
 2874 010c 1A43     		orrs	r2, r2, r3
1518:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.BackOffLimit |
 2875              		.loc 1 1518 0
 2876 010e FB6E     		ldr	r3, [r7, #108]
1517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.AutomaticPadCRCStrip |
 2877              		.loc 1 1517 0
 2878 0110 1A43     		orrs	r2, r2, r3
1519:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.DeferralCheck);
ARM GAS  /tmp/cc1SlDEr.s 			page 86


 2879              		.loc 1 1519 0
 2880 0112 3B6F     		ldr	r3, [r7, #112]
1507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                        macinit.Jabber |
 2881              		.loc 1 1507 0
 2882 0114 1343     		orrs	r3, r3, r2
 2883 0116 D7F8BC20 		ldr	r2, [r7, #188]
 2884 011a 1343     		orrs	r3, r3, r2
 2885 011c C7F8BC30 		str	r3, [r7, #188]
1520:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1521:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Write to ETHERNET MACCR */
1522:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   prvWriteMACCR( heth, tmpreg );
 2886              		.loc 1 1522 0
 2887 0120 7868     		ldr	r0, [r7, #4]
 2888 0122 D7F8BC10 		ldr	r1, [r7, #188]
 2889 0126 FFF7FEFF 		bl	prvWriteMACCR
1523:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1524:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /*----------------------- ETHERNET MACFFR Configuration --------------------*/
1525:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the RA bit according to ETH ReceiveAll value */
1526:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the SAF and SAIF bits according to ETH SourceAddrFilter value */
1527:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the PCF bit according to ETH PassControlFrames value */
1528:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DBF bit according to ETH BroadcastFramesReception value */
1529:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the DAIF bit according to ETH DestinationAddrFilter value */
1530:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the PR bit according to ETH PromiscuousMode value */
1531:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the PM, HMC and HPF bits according to ETH MulticastFramesFilter value */
1532:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Set the HUC and HPF bits according to ETH UnicastFramesFilter value */
1533:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   /* Write to ETHERNET MACFFR */
1534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   heth->Instance->MACFFR = (uint32_t)(macinit.ReceiveAll |
 2890              		.loc 1 1534 0
 2891 012a 7B68     		ldr	r3, [r7, #4]
 2892 012c 1B68     		ldr	r3, [r3]
 2893 012e 796F     		ldr	r1, [r7, #116]
1535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.SourceAddrFilter |
 2894              		.loc 1 1535 0
 2895 0130 BA6F     		ldr	r2, [r7, #120]
1534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.SourceAddrFilter |
 2896              		.loc 1 1534 0
 2897 0132 1143     		orrs	r1, r1, r2
1536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.PassControlFrames |
 2898              		.loc 1 1536 0
 2899 0134 FA6F     		ldr	r2, [r7, #124]
1535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.SourceAddrFilter |
 2900              		.loc 1 1535 0
 2901 0136 1143     		orrs	r1, r1, r2
1537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.BroadcastFramesReception |
 2902              		.loc 1 1537 0
 2903 0138 D7F88020 		ldr	r2, [r7, #128]
1536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.PassControlFrames |
 2904              		.loc 1 1536 0
 2905 013c 1143     		orrs	r1, r1, r2
1538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.DestinationAddrFilter |
 2906              		.loc 1 1538 0
 2907 013e D7F88420 		ldr	r2, [r7, #132]
1537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.BroadcastFramesReception |
 2908              		.loc 1 1537 0
 2909 0142 1143     		orrs	r1, r1, r2
1539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.PromiscuousMode |
 2910              		.loc 1 1539 0
ARM GAS  /tmp/cc1SlDEr.s 			page 87


 2911 0144 D7F88820 		ldr	r2, [r7, #136]
1538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.DestinationAddrFilter |
 2912              		.loc 1 1538 0
 2913 0148 1143     		orrs	r1, r1, r2
1540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.MulticastFramesFilter |
 2914              		.loc 1 1540 0
 2915 014a D7F88C20 		ldr	r2, [r7, #140]
1539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.PromiscuousMode |
 2916              		.loc 1 1539 0
 2917 014e 1143     		orrs	r1, r1, r2
1541:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.UnicastFramesFilter);
 2918              		.loc 1 1541 0
 2919 0150 D7F89020 		ldr	r2, [r7, #144]
1534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                         macinit.SourceAddrFilter |
 2920              		.loc 1 1534 0
 2921 0154 0A43     		orrs	r2, r2, r1
 2922 0156 5A60     		str	r2, [r3, #4]
1542:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1543:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Wait until the write operation will be taken into account:
1544:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****       at least four TX_CLK/RX_CLK clock cycles */
1545:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    tmpreg = heth->Instance->MACFFR;
 2923              		.loc 1 1545 0
 2924 0158 7B68     		ldr	r3, [r7, #4]
 2925 015a 1B68     		ldr	r3, [r3]
 2926 015c 5B68     		ldr	r3, [r3, #4]
 2927 015e C7F8BC30 		str	r3, [r7, #188]
1546:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    HAL_Delay(ETH_REG_WRITE_DELAY);
 2928              		.loc 1 1546 0
 2929 0162 0120     		movs	r0, #1
 2930 0164 FFF7FEFF 		bl	HAL_Delay
1547:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    heth->Instance->MACFFR = tmpreg;
 2931              		.loc 1 1547 0
 2932 0168 7B68     		ldr	r3, [r7, #4]
 2933 016a 1B68     		ldr	r3, [r3]
 2934 016c D7F8BC20 		ldr	r2, [r7, #188]
 2935 0170 5A60     		str	r2, [r3, #4]
1548:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1549:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /*--------------- ETHERNET MACHTHR and MACHTLR Configuration --------------*/
1550:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Write to ETHERNET MACHTHR */
1551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    heth->Instance->MACHTHR = (uint32_t)macinit.HashTableHigh;
 2936              		.loc 1 1551 0
 2937 0172 7B68     		ldr	r3, [r7, #4]
 2938 0174 1B68     		ldr	r3, [r3]
 2939 0176 D7F89420 		ldr	r2, [r7, #148]
 2940 017a 9A60     		str	r2, [r3, #8]
1552:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1553:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Write to ETHERNET MACHTLR */
1554:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    heth->Instance->MACHTLR = (uint32_t)macinit.HashTableLow;
 2941              		.loc 1 1554 0
 2942 017c 7B68     		ldr	r3, [r7, #4]
 2943 017e 1B68     		ldr	r3, [r3]
 2944 0180 D7F89820 		ldr	r2, [r7, #152]
 2945 0184 DA60     		str	r2, [r3, #12]
1555:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /*----------------------- ETHERNET MACFCR Configuration -------------------*/
1556:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1557:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Get the ETHERNET MACFCR value */
1558:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    tmpreg = heth->Instance->MACFCR;
ARM GAS  /tmp/cc1SlDEr.s 			page 88


 2946              		.loc 1 1558 0
 2947 0186 7B68     		ldr	r3, [r7, #4]
 2948 0188 1B68     		ldr	r3, [r3]
 2949 018a 9B69     		ldr	r3, [r3, #24]
 2950 018c C7F8BC30 		str	r3, [r7, #188]
1559:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Clear xx bits */
1560:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    tmpreg &= ETH_MACFCR_CLEAR_MASK;
 2951              		.loc 1 1560 0
 2952 0190 D7F8BC20 		ldr	r2, [r7, #188]
 2953 0194 4FF64173 		movw	r3, #65345
 2954 0198 1340     		ands	r3, r3, r2
 2955 019a C7F8BC30 		str	r3, [r7, #188]
1561:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1562:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the PT bit according to ETH PauseTime value */
1563:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the DZPQ bit according to ETH ZeroQuantaPause value */
1564:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the PLT bit according to ETH PauseLowThreshold value */
1565:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the UP bit according to ETH UnicastPauseFrameDetect value */
1566:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the RFE bit according to ETH ReceiveFlowControl value */
1567:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the TFE bit according to ETH TransmitFlowControl value */
1568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    tmpreg |= (uint32_t)((macinit.PauseTime << 16) |
 2956              		.loc 1 1568 0
 2957 019e D7F89C30 		ldr	r3, [r7, #156]
 2958 01a2 1A04     		lsls	r2, r3, #16
1569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.ZeroQuantaPause |
 2959              		.loc 1 1569 0
 2960 01a4 D7F8A030 		ldr	r3, [r7, #160]
1568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.ZeroQuantaPause |
 2961              		.loc 1 1568 0
 2962 01a8 1A43     		orrs	r2, r2, r3
1570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.PauseLowThreshold |
 2963              		.loc 1 1570 0
 2964 01aa D7F8A430 		ldr	r3, [r7, #164]
1569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.ZeroQuantaPause |
 2965              		.loc 1 1569 0
 2966 01ae 1A43     		orrs	r2, r2, r3
1571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.UnicastPauseFrameDetect |
 2967              		.loc 1 1571 0
 2968 01b0 D7F8A830 		ldr	r3, [r7, #168]
1570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.PauseLowThreshold |
 2969              		.loc 1 1570 0
 2970 01b4 1A43     		orrs	r2, r2, r3
1572:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.ReceiveFlowControl |
 2971              		.loc 1 1572 0
 2972 01b6 D7F8AC30 		ldr	r3, [r7, #172]
1571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.UnicastPauseFrameDetect |
 2973              		.loc 1 1571 0
 2974 01ba 1A43     		orrs	r2, r2, r3
1573:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.TransmitFlowControl);
 2975              		.loc 1 1573 0
 2976 01bc D7F8B030 		ldr	r3, [r7, #176]
1568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                         macinit.ZeroQuantaPause |
 2977              		.loc 1 1568 0
 2978 01c0 1343     		orrs	r3, r3, r2
 2979 01c2 D7F8BC20 		ldr	r2, [r7, #188]
 2980 01c6 1343     		orrs	r3, r3, r2
 2981 01c8 C7F8BC30 		str	r3, [r7, #188]
1574:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 89


1575:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Write to ETHERNET MACFCR */
1576:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    prvWriteMACFCR( heth, tmpreg );
 2982              		.loc 1 1576 0
 2983 01cc 7868     		ldr	r0, [r7, #4]
 2984 01ce D7F8BC10 		ldr	r1, [r7, #188]
 2985 01d2 FFF7FEFF 		bl	prvWriteMACFCR
1577:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1578:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /*----------------------- ETHERNET MACVLANTR Configuration ----------------*/
1579:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the ETV bit according to ETH VLANTagComparison value */
1580:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    /* Set the VL bit according to ETH VLANTagIdentifier value */
1581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****    heth->Instance->MACVLANTR = (uint32_t)(macinit.VLANTagComparison |
 2986              		.loc 1 1581 0
 2987 01d6 7B68     		ldr	r3, [r7, #4]
 2988 01d8 1B68     		ldr	r3, [r3]
 2989 01da D7F8B410 		ldr	r1, [r7, #180]
1582:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                             macinit.VLANTagIdentifier);
 2990              		.loc 1 1582 0
 2991 01de D7F8B820 		ldr	r2, [r7, #184]
1581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                             macinit.VLANTagIdentifier);
 2992              		.loc 1 1581 0
 2993 01e2 0A43     		orrs	r2, r2, r1
 2994 01e4 DA61     		str	r2, [r3, #28]
1583:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1584:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Wait until the write operation will be taken into account:
1585:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****        at least four TX_CLK/RX_CLK clock cycles */
1586:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     tmpreg = heth->Instance->MACVLANTR;
 2995              		.loc 1 1586 0
 2996 01e6 7B68     		ldr	r3, [r7, #4]
 2997 01e8 1B68     		ldr	r3, [r3]
 2998 01ea DB69     		ldr	r3, [r3, #28]
 2999 01ec C7F8BC30 		str	r3, [r7, #188]
1587:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     HAL_Delay(ETH_REG_WRITE_DELAY);
 3000              		.loc 1 1587 0
 3001 01f0 0120     		movs	r0, #1
 3002 01f2 FFF7FEFF 		bl	HAL_Delay
1588:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     heth->Instance->MACVLANTR = tmpreg;
 3003              		.loc 1 1588 0
 3004 01f6 7B68     		ldr	r3, [r7, #4]
 3005 01f8 1B68     		ldr	r3, [r3]
 3006 01fa D7F8BC20 		ldr	r2, [r7, #188]
 3007 01fe DA61     		str	r2, [r3, #28]
1589:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1590:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Ethernet DMA default initialization ************************************/
1591:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.DropTCPIPChecksumErrorFrame = ETH_DROPTCPIPCHECKSUMERRORFRAME_ENABLE;
 3008              		.loc 1 1591 0
 3009 0200 0023     		movs	r3, #0
 3010 0202 BB60     		str	r3, [r7, #8]
1592:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.ReceiveStoreForward = ETH_RECEIVESTOREFORWARD_ENABLE;
 3011              		.loc 1 1592 0
 3012 0204 4FF00073 		mov	r3, #33554432
 3013 0208 FB60     		str	r3, [r7, #12]
1593:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.FlushReceivedFrame = ETH_FLUSHRECEIVEDFRAME_ENABLE;
 3014              		.loc 1 1593 0
 3015 020a 0023     		movs	r3, #0
 3016 020c 3B61     		str	r3, [r7, #16]
1594:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.TransmitStoreForward = ETH_TRANSMITSTOREFORWARD_ENABLE;
 3017              		.loc 1 1594 0
ARM GAS  /tmp/cc1SlDEr.s 			page 90


 3018 020e 4FF40013 		mov	r3, #2097152
 3019 0212 7B61     		str	r3, [r7, #20]
1595:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.TransmitThresholdControl = ETH_TRANSMITTHRESHOLDCONTROL_64BYTES;
 3020              		.loc 1 1595 0
 3021 0214 0023     		movs	r3, #0
 3022 0216 BB61     		str	r3, [r7, #24]
1596:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.ForwardErrorFrames = ETH_FORWARDERRORFRAMES_DISABLE;
 3023              		.loc 1 1596 0
 3024 0218 0023     		movs	r3, #0
 3025 021a FB61     		str	r3, [r7, #28]
1597:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.ForwardUndersizedGoodFrames = ETH_FORWARDUNDERSIZEDGOODFRAMES_DISABLE;
 3026              		.loc 1 1597 0
 3027 021c 0023     		movs	r3, #0
 3028 021e 3B62     		str	r3, [r7, #32]
1598:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.ReceiveThresholdControl = ETH_RECEIVEDTHRESHOLDCONTROL_64BYTES;
 3029              		.loc 1 1598 0
 3030 0220 0023     		movs	r3, #0
 3031 0222 7B62     		str	r3, [r7, #36]
1599:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.SecondFrameOperate = ETH_SECONDFRAMEOPERARTE_ENABLE;
 3032              		.loc 1 1599 0
 3033 0224 0423     		movs	r3, #4
 3034 0226 BB62     		str	r3, [r7, #40]
1600:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.AddressAlignedBeats = ETH_ADDRESSALIGNEDBEATS_ENABLE;
 3035              		.loc 1 1600 0
 3036 0228 4FF00073 		mov	r3, #33554432
 3037 022c FB62     		str	r3, [r7, #44]
1601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.FixedBurst = ETH_FIXEDBURST_ENABLE;
 3038              		.loc 1 1601 0
 3039 022e 4FF48033 		mov	r3, #65536
 3040 0232 3B63     		str	r3, [r7, #48]
1602:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.RxDMABurstLength = ETH_RXDMABURSTLENGTH_32BEAT;
 3041              		.loc 1 1602 0
 3042 0234 4FF48003 		mov	r3, #4194304
 3043 0238 7B63     		str	r3, [r7, #52]
1603:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.TxDMABurstLength = ETH_TXDMABURSTLENGTH_32BEAT;
 3044              		.loc 1 1603 0
 3045 023a 4FF40053 		mov	r3, #8192
 3046 023e BB63     		str	r3, [r7, #56]
1604:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.EnhancedDescriptorFormat = ETH_DMAENHANCEDDESCRIPTOR_ENABLE;
 3047              		.loc 1 1604 0
 3048 0240 8023     		movs	r3, #128
 3049 0242 FB63     		str	r3, [r7, #60]
1605:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.DescriptorSkipLength = 0x0;
 3050              		.loc 1 1605 0
 3051 0244 0023     		movs	r3, #0
 3052 0246 3B64     		str	r3, [r7, #64]
1606:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     dmainit.DMAArbitration = ETH_DMAARBITRATION_ROUNDROBIN_RXTX_1_1;
 3053              		.loc 1 1606 0
 3054 0248 0023     		movs	r3, #0
 3055 024a 7B64     		str	r3, [r7, #68]
1607:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1608:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Get the ETHERNET DMAOMR value */
1609:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     tmpreg = heth->Instance->DMAOMR;
 3056              		.loc 1 1609 0
 3057 024c 7B68     		ldr	r3, [r7, #4]
 3058 024e 1A68     		ldr	r2, [r3]
 3059 0250 41F21803 		movw	r3, #4120
ARM GAS  /tmp/cc1SlDEr.s 			page 91


 3060 0254 1344     		add	r3, r3, r2
 3061 0256 1B68     		ldr	r3, [r3]
 3062 0258 C7F8BC30 		str	r3, [r7, #188]
1610:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Clear xx bits */
1611:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     tmpreg &= ETH_DMAOMR_CLEAR_MASK;
 3063              		.loc 1 1611 0
 3064 025c D7F8BC20 		ldr	r2, [r7, #188]
 3065 0260 314B     		ldr	r3, .L126+4
 3066 0262 1340     		ands	r3, r3, r2
 3067 0264 C7F8BC30 		str	r3, [r7, #188]
1612:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1613:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the DT bit according to ETH DropTCPIPChecksumErrorFrame value */
1614:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the RSF bit according to ETH ReceiveStoreForward value */
1615:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the DFF bit according to ETH FlushReceivedFrame value */
1616:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the TSF bit according to ETH TransmitStoreForward value */
1617:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the TTC bit according to ETH TransmitThresholdControl value */
1618:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the FEF bit according to ETH ForwardErrorFrames value */
1619:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the FUF bit according to ETH ForwardUndersizedGoodFrames value */
1620:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the RTC bit according to ETH ReceiveThresholdControl value */
1621:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the OSF bit according to ETH SecondFrameOperate value */
1622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     tmpreg |= (uint32_t)(dmainit.DropTCPIPChecksumErrorFrame |
 3068              		.loc 1 1622 0
 3069 0268 BA68     		ldr	r2, [r7, #8]
1623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ReceiveStoreForward |
 3070              		.loc 1 1623 0
 3071 026a FB68     		ldr	r3, [r7, #12]
1622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ReceiveStoreForward |
 3072              		.loc 1 1622 0
 3073 026c 1A43     		orrs	r2, r2, r3
1624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.FlushReceivedFrame |
 3074              		.loc 1 1624 0
 3075 026e 3B69     		ldr	r3, [r7, #16]
1623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ReceiveStoreForward |
 3076              		.loc 1 1623 0
 3077 0270 1A43     		orrs	r2, r2, r3
1625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.TransmitStoreForward |
 3078              		.loc 1 1625 0
 3079 0272 7B69     		ldr	r3, [r7, #20]
1624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.FlushReceivedFrame |
 3080              		.loc 1 1624 0
 3081 0274 1A43     		orrs	r2, r2, r3
1626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.TransmitThresholdControl |
 3082              		.loc 1 1626 0
 3083 0276 BB69     		ldr	r3, [r7, #24]
1625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.TransmitStoreForward |
 3084              		.loc 1 1625 0
 3085 0278 1A43     		orrs	r2, r2, r3
1627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ForwardErrorFrames |
 3086              		.loc 1 1627 0
 3087 027a FB69     		ldr	r3, [r7, #28]
1626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.TransmitThresholdControl |
 3088              		.loc 1 1626 0
 3089 027c 1A43     		orrs	r2, r2, r3
1628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ForwardUndersizedGoodFrames |
 3090              		.loc 1 1628 0
 3091 027e 3B6A     		ldr	r3, [r7, #32]
1627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ForwardErrorFrames |
ARM GAS  /tmp/cc1SlDEr.s 			page 92


 3092              		.loc 1 1627 0
 3093 0280 1A43     		orrs	r2, r2, r3
1629:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ReceiveThresholdControl |
 3094              		.loc 1 1629 0
 3095 0282 7B6A     		ldr	r3, [r7, #36]
1628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ForwardUndersizedGoodFrames |
 3096              		.loc 1 1628 0
 3097 0284 1A43     		orrs	r2, r2, r3
1630:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.SecondFrameOperate);
 3098              		.loc 1 1630 0
 3099 0286 BB6A     		ldr	r3, [r7, #40]
1622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                          dmainit.ReceiveStoreForward |
 3100              		.loc 1 1622 0
 3101 0288 1343     		orrs	r3, r3, r2
 3102 028a D7F8BC20 		ldr	r2, [r7, #188]
 3103 028e 1343     		orrs	r3, r3, r2
 3104 0290 C7F8BC30 		str	r3, [r7, #188]
1631:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1632:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Write to ETHERNET DMAOMR */
1633:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     prvWriteDMAOMR( heth, tmpreg );
 3105              		.loc 1 1633 0
 3106 0294 7868     		ldr	r0, [r7, #4]
 3107 0296 D7F8BC10 		ldr	r1, [r7, #188]
 3108 029a FFF7FEFF 		bl	prvWriteDMAOMR
1634:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1635:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /*----------------------- ETHERNET DMABMR Configuration ------------------*/
1636:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the AAL bit according to ETH AddressAlignedBeats value */
1637:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the FB bit according to ETH FixedBurst value */
1638:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the RPBL and 4*PBL bits according to ETH RxDMABurstLength value */
1639:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the PBL and 4*PBL bits according to ETH TxDMABurstLength value */
1640:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the Enhanced DMA descriptors bit according to ETH EnhancedDescriptorFormat value*/
1641:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the DSL bit according to ETH DesciptorSkipLength value */
1642:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     /* Set the PR and DA bits according to ETH DMAArbitration value */
1643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****     heth->Instance->DMABMR = (uint32_t)(dmainit.AddressAlignedBeats |
 3109              		.loc 1 1643 0
 3110 029e 7B68     		ldr	r3, [r7, #4]
 3111 02a0 1B68     		ldr	r3, [r3]
 3112 02a2 F96A     		ldr	r1, [r7, #44]
1644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.FixedBurst |
 3113              		.loc 1 1644 0
 3114 02a4 3A6B     		ldr	r2, [r7, #48]
1643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.FixedBurst |
 3115              		.loc 1 1643 0
 3116 02a6 1143     		orrs	r1, r1, r2
1645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
 3117              		.loc 1 1645 0
 3118 02a8 7A6B     		ldr	r2, [r7, #52]
1644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.FixedBurst |
 3119              		.loc 1 1644 0
 3120 02aa 1143     		orrs	r1, r1, r2
1646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.TxDMABurstLength |
 3121              		.loc 1 1646 0
 3122 02ac BA6B     		ldr	r2, [r7, #56]
1645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.RxDMABurstLength |    /* !! if 4xPBL is selected 
 3123              		.loc 1 1645 0
 3124 02ae 1143     		orrs	r1, r1, r2
1647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.EnhancedDescriptorFormat |
ARM GAS  /tmp/cc1SlDEr.s 			page 93


 3125              		.loc 1 1647 0
 3126 02b0 FA6B     		ldr	r2, [r7, #60]
1646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.TxDMABurstLength |
 3127              		.loc 1 1646 0
 3128 02b2 1143     		orrs	r1, r1, r2
1648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           (dmainit.DescriptorSkipLength << 2) |
 3129              		.loc 1 1648 0
 3130 02b4 3A6C     		ldr	r2, [r7, #64]
 3131 02b6 9200     		lsls	r2, r2, #2
1647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.EnhancedDescriptorFormat |
 3132              		.loc 1 1647 0
 3133 02b8 1143     		orrs	r1, r1, r2
1649:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.DMAArbitration |
 3134              		.loc 1 1649 0
 3135 02ba 7A6C     		ldr	r2, [r7, #68]
1648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           (dmainit.DescriptorSkipLength << 2) |
 3136              		.loc 1 1648 0
 3137 02bc 0A43     		orrs	r2, r2, r1
1643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           dmainit.FixedBurst |
 3138              		.loc 1 1643 0
 3139 02be 42F40002 		orr	r2, r2, #8388608
 3140 02c2 03F58053 		add	r3, r3, #4096
 3141 02c6 1A60     		str	r2, [r3]
1650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****                                           ETH_DMABMR_USP); /* Enable use of separate PBL for Rx and
1651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1652:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      /* Wait until the write operation will be taken into account:
1653:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****         at least four TX_CLK/RX_CLK clock cycles */
1654:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      tmpreg = heth->Instance->DMABMR;
 3142              		.loc 1 1654 0
 3143 02c8 7B68     		ldr	r3, [r7, #4]
 3144 02ca 1B68     		ldr	r3, [r3]
 3145 02cc 03F58053 		add	r3, r3, #4096
 3146 02d0 1B68     		ldr	r3, [r3]
 3147 02d2 C7F8BC30 		str	r3, [r7, #188]
1655:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      HAL_Delay(ETH_REG_WRITE_DELAY);
 3148              		.loc 1 1655 0
 3149 02d6 0120     		movs	r0, #1
 3150 02d8 FFF7FEFF 		bl	HAL_Delay
1656:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      heth->Instance->DMABMR = tmpreg;
 3151              		.loc 1 1656 0
 3152 02dc 7B68     		ldr	r3, [r7, #4]
 3153 02de 1B68     		ldr	r3, [r3]
 3154 02e0 03F58053 		add	r3, r3, #4096
 3155 02e4 D7F8BC20 		ldr	r2, [r7, #188]
 3156 02e8 1A60     		str	r2, [r3]
1657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1658:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      if(heth->Init.RxMode == ETH_RXINTERRUPT_MODE)
 3157              		.loc 1 1658 0
 3158 02ea 7B68     		ldr	r3, [r7, #4]
 3159 02ec 9B69     		ldr	r3, [r3, #24]
 3160 02ee 012B     		cmp	r3, #1
 3161 02f0 0DD1     		bne	.L125
1659:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      {
1660:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****        /* Enable the Ethernet Rx Interrupt */
1661:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****        __HAL_ETH_DMA_ENABLE_IT(( heth ), ETH_DMA_IT_NIS | ETH_DMA_IT_R);
 3162              		.loc 1 1661 0
 3163 02f2 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc1SlDEr.s 			page 94


 3164 02f4 1968     		ldr	r1, [r3]
 3165 02f6 7B68     		ldr	r3, [r7, #4]
 3166 02f8 1A68     		ldr	r2, [r3]
 3167 02fa 41F21C03 		movw	r3, #4124
 3168 02fe 1344     		add	r3, r3, r2
 3169 0300 1B68     		ldr	r3, [r3]
 3170 0302 0A4A     		ldr	r2, .L126+8
 3171 0304 1A43     		orrs	r2, r2, r3
 3172 0306 41F21C03 		movw	r3, #4124
 3173 030a 0B44     		add	r3, r3, r1
 3174 030c 1A60     		str	r2, [r3]
 3175              	.L125:
1662:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      }
1663:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1664:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      /* Initialize MAC address in ethernet MAC */
1665:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****      ETH_MACAddressConfig(heth, ETH_MAC_ADDRESS0, heth->Init.MACAddr);
 3176              		.loc 1 1665 0
 3177 030e 7B68     		ldr	r3, [r7, #4]
 3178 0310 5B69     		ldr	r3, [r3, #20]
 3179 0312 7868     		ldr	r0, [r7, #4]
 3180 0314 0021     		movs	r1, #0
 3181 0316 1A46     		mov	r2, r3
 3182 0318 FFF7FEFF 		bl	ETH_MACAddressConfig
1666:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3183              		.loc 1 1666 0
 3184 031c C037     		adds	r7, r7, #192
 3185              	.LCFI128:
 3186              		.cfi_def_cfa_offset 8
 3187 031e BD46     		mov	sp, r7
 3188              	.LCFI129:
 3189              		.cfi_def_cfa_register 13
 3190              		@ sp needed
 3191 0320 80BD     		pop	{r7, pc}
 3192              	.L127:
 3193 0322 00BF     		.align	2
 3194              	.L126:
 3195 0324 0F8120FF 		.word	-14647025
 3196 0328 233FDEF8 		.word	-119652573
 3197 032c 40000100 		.word	65600
 3198              		.cfi_endproc
 3199              	.LFE158:
 3201              		.section	.text.ETH_MACAddressConfig,"ax",%progbits
 3202              		.align	2
 3203              		.thumb
 3204              		.thumb_func
 3206              	ETH_MACAddressConfig:
 3207              	.LFB159:
1667:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1668:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1669:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Configures the selected MAC address.
1670:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1671:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1672:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  MacAddr: The MAC address to configure
1673:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *          This parameter can be one of the following values:
1674:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *             @arg ETH_MAC_Address0: MAC Address0
1675:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *             @arg ETH_MAC_Address1: MAC Address1
1676:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *             @arg ETH_MAC_Address2: MAC Address2
ARM GAS  /tmp/cc1SlDEr.s 			page 95


1677:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *             @arg ETH_MAC_Address3: MAC Address3
1678:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  Addr: Pointer to MAC address buffer data (6 bytes)
1679:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval HAL status
1680:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1681:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACAddressConfig(ETH_HandleTypeDef *heth, uint32_t MacAddr, uint8_t *Addr)
1682:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3208              		.loc 1 1682 0
 3209              		.cfi_startproc
 3210              		@ args = 0, pretend = 0, frame = 24
 3211              		@ frame_needed = 1, uses_anonymous_args = 0
 3212              		@ link register save eliminated.
 3213 0000 80B4     		push	{r7}
 3214              	.LCFI130:
 3215              		.cfi_def_cfa_offset 4
 3216              		.cfi_offset 7, -4
 3217 0002 87B0     		sub	sp, sp, #28
 3218              	.LCFI131:
 3219              		.cfi_def_cfa_offset 32
 3220 0004 00AF     		add	r7, sp, #0
 3221              	.LCFI132:
 3222              		.cfi_def_cfa_register 7
 3223 0006 F860     		str	r0, [r7, #12]
 3224 0008 B960     		str	r1, [r7, #8]
 3225 000a 7A60     		str	r2, [r7, #4]
1683:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t tmpreg;
1684:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1685:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Check the parameters */
1686:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	assert_param( IS_ETH_MAC_ADDRESS0123( MacAddr ) );
1687:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1688:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Calculate the selected MAC address high register */
1689:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg = 0x80000000ul | ( ( uint32_t )Addr[ 5 ] << 8) | (uint32_t)Addr[ 4 ];
 3226              		.loc 1 1689 0
 3227 000c 7B68     		ldr	r3, [r7, #4]
 3228 000e 0533     		adds	r3, r3, #5
 3229 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3230 0012 1B02     		lsls	r3, r3, #8
 3231 0014 7A68     		ldr	r2, [r7, #4]
 3232 0016 0432     		adds	r2, r2, #4
 3233 0018 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3234 001a 1343     		orrs	r3, r3, r2
 3235 001c 43F00043 		orr	r3, r3, #-2147483648
 3236 0020 7B61     		str	r3, [r7, #20]
1690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Load the selected MAC address high register */
1691:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	( * ( __IO uint32_t * ) ( ( uint32_t ) ( ETH_MAC_ADDR_HBASE + MacAddr ) ) ) = tmpreg;
 3237              		.loc 1 1691 0
 3238 0022 BA68     		ldr	r2, [r7, #8]
 3239 0024 104B     		ldr	r3, .L129
 3240 0026 1344     		add	r3, r3, r2
 3241 0028 1A46     		mov	r2, r3
 3242 002a 7B69     		ldr	r3, [r7, #20]
 3243 002c 1360     		str	r3, [r2]
1692:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Calculate the selected MAC address low register */
1693:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	tmpreg = ( ( uint32_t )Addr[ 3 ] << 24 ) | ( ( uint32_t )Addr[ 2 ] << 16 ) | ( ( uint32_t )Addr[ 1
 3244              		.loc 1 1693 0
 3245 002e 7B68     		ldr	r3, [r7, #4]
 3246 0030 0333     		adds	r3, r3, #3
 3247 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cc1SlDEr.s 			page 96


 3248 0034 1A06     		lsls	r2, r3, #24
 3249 0036 7B68     		ldr	r3, [r7, #4]
 3250 0038 0233     		adds	r3, r3, #2
 3251 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3252 003c 1B04     		lsls	r3, r3, #16
 3253 003e 1A43     		orrs	r2, r2, r3
 3254 0040 7B68     		ldr	r3, [r7, #4]
 3255 0042 0133     		adds	r3, r3, #1
 3256 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3257 0046 1B02     		lsls	r3, r3, #8
 3258 0048 1343     		orrs	r3, r3, r2
 3259 004a 7A68     		ldr	r2, [r7, #4]
 3260 004c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3261 004e 1343     		orrs	r3, r3, r2
 3262 0050 7B61     		str	r3, [r7, #20]
1694:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1695:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Load the selected MAC address low register */
1696:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	( * ( __IO uint32_t * ) ( ( uint32_t ) ( ETH_MAC_ADDR_LBASE + MacAddr ) ) ) = tmpreg;
 3263              		.loc 1 1696 0
 3264 0052 BA68     		ldr	r2, [r7, #8]
 3265 0054 054B     		ldr	r3, .L129+4
 3266 0056 1344     		add	r3, r3, r2
 3267 0058 1A46     		mov	r2, r3
 3268 005a 7B69     		ldr	r3, [r7, #20]
 3269 005c 1360     		str	r3, [r2]
1697:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3270              		.loc 1 1697 0
 3271 005e 1C37     		adds	r7, r7, #28
 3272              	.LCFI133:
 3273              		.cfi_def_cfa_offset 4
 3274 0060 BD46     		mov	sp, r7
 3275              	.LCFI134:
 3276              		.cfi_def_cfa_register 13
 3277              		@ sp needed
 3278 0062 5DF8047B 		ldr	r7, [sp], #4
 3279              	.LCFI135:
 3280              		.cfi_restore 7
 3281              		.cfi_def_cfa_offset 0
 3282 0066 7047     		bx	lr
 3283              	.L130:
 3284              		.align	2
 3285              	.L129:
 3286 0068 40800240 		.word	1073905728
 3287 006c 44800240 		.word	1073905732
 3288              		.cfi_endproc
 3289              	.LFE159:
 3291              		.section	.text.ETH_MACTransmissionEnable,"ax",%progbits
 3292              		.align	2
 3293              		.thumb
 3294              		.thumb_func
 3296              	ETH_MACTransmissionEnable:
 3297              	.LFB160:
1698:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1699:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1700:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Enables the MAC transmission.
1701:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1702:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
ARM GAS  /tmp/cc1SlDEr.s 			page 97


1703:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1704:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1705:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACTransmissionEnable(ETH_HandleTypeDef *heth)
1706:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3298              		.loc 1 1706 0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 16
 3301              		@ frame_needed = 1, uses_anonymous_args = 0
 3302 0000 80B5     		push	{r7, lr}
 3303              	.LCFI136:
 3304              		.cfi_def_cfa_offset 8
 3305              		.cfi_offset 7, -8
 3306              		.cfi_offset 14, -4
 3307 0002 84B0     		sub	sp, sp, #16
 3308              	.LCFI137:
 3309              		.cfi_def_cfa_offset 24
 3310 0004 00AF     		add	r7, sp, #0
 3311              	.LCFI138:
 3312              		.cfi_def_cfa_register 7
 3313 0006 7860     		str	r0, [r7, #4]
1707:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t tmpreg = heth->Instance->MACCR | ETH_MACCR_TE;
 3314              		.loc 1 1707 0
 3315 0008 7B68     		ldr	r3, [r7, #4]
 3316 000a 1B68     		ldr	r3, [r3]
 3317 000c 1B68     		ldr	r3, [r3]
 3318 000e 43F00803 		orr	r3, r3, #8
 3319 0012 FB60     		str	r3, [r7, #12]
1708:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1709:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteMACCR( heth, tmpreg );
 3320              		.loc 1 1709 0
 3321 0014 7868     		ldr	r0, [r7, #4]
 3322 0016 F968     		ldr	r1, [r7, #12]
 3323 0018 FFF7FEFF 		bl	prvWriteMACCR
1710:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3324              		.loc 1 1710 0
 3325 001c 1037     		adds	r7, r7, #16
 3326              	.LCFI139:
 3327              		.cfi_def_cfa_offset 8
 3328 001e BD46     		mov	sp, r7
 3329              	.LCFI140:
 3330              		.cfi_def_cfa_register 13
 3331              		@ sp needed
 3332 0020 80BD     		pop	{r7, pc}
 3333              		.cfi_endproc
 3334              	.LFE160:
 3336 0022 00BF     		.section	.text.ETH_MACTransmissionDisable,"ax",%progbits
 3337              		.align	2
 3338              		.thumb
 3339              		.thumb_func
 3341              	ETH_MACTransmissionDisable:
 3342              	.LFB161:
1711:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1712:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1713:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Disables the MAC transmission.
1714:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1715:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1716:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
ARM GAS  /tmp/cc1SlDEr.s 			page 98


1717:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1718:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACTransmissionDisable(ETH_HandleTypeDef *heth)
1719:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3343              		.loc 1 1719 0
 3344              		.cfi_startproc
 3345              		@ args = 0, pretend = 0, frame = 16
 3346              		@ frame_needed = 1, uses_anonymous_args = 0
 3347 0000 80B5     		push	{r7, lr}
 3348              	.LCFI141:
 3349              		.cfi_def_cfa_offset 8
 3350              		.cfi_offset 7, -8
 3351              		.cfi_offset 14, -4
 3352 0002 84B0     		sub	sp, sp, #16
 3353              	.LCFI142:
 3354              		.cfi_def_cfa_offset 24
 3355 0004 00AF     		add	r7, sp, #0
 3356              	.LCFI143:
 3357              		.cfi_def_cfa_register 7
 3358 0006 7860     		str	r0, [r7, #4]
1720:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	uint32_t tmpreg = heth->Instance->MACCR & ~( ETH_MACCR_TE );
 3359              		.loc 1 1720 0
 3360 0008 7B68     		ldr	r3, [r7, #4]
 3361 000a 1B68     		ldr	r3, [r3]
 3362 000c 1B68     		ldr	r3, [r3]
 3363 000e 23F00803 		bic	r3, r3, #8
 3364 0012 FB60     		str	r3, [r7, #12]
1721:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1722:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteMACCR( heth, tmpreg );
 3365              		.loc 1 1722 0
 3366 0014 7868     		ldr	r0, [r7, #4]
 3367 0016 F968     		ldr	r1, [r7, #12]
 3368 0018 FFF7FEFF 		bl	prvWriteMACCR
1723:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3369              		.loc 1 1723 0
 3370 001c 1037     		adds	r7, r7, #16
 3371              	.LCFI144:
 3372              		.cfi_def_cfa_offset 8
 3373 001e BD46     		mov	sp, r7
 3374              	.LCFI145:
 3375              		.cfi_def_cfa_register 13
 3376              		@ sp needed
 3377 0020 80BD     		pop	{r7, pc}
 3378              		.cfi_endproc
 3379              	.LFE161:
 3381 0022 00BF     		.section	.text.ETH_MACReceptionEnable,"ax",%progbits
 3382              		.align	2
 3383              		.thumb
 3384              		.thumb_func
 3386              	ETH_MACReceptionEnable:
 3387              	.LFB162:
1724:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1725:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1726:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Enables the MAC reception.
1727:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1728:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1729:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1730:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
ARM GAS  /tmp/cc1SlDEr.s 			page 99


1731:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACReceptionEnable(ETH_HandleTypeDef *heth)
1732:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3388              		.loc 1 1732 0
 3389              		.cfi_startproc
 3390              		@ args = 0, pretend = 0, frame = 16
 3391              		@ frame_needed = 1, uses_anonymous_args = 0
 3392 0000 80B5     		push	{r7, lr}
 3393              	.LCFI146:
 3394              		.cfi_def_cfa_offset 8
 3395              		.cfi_offset 7, -8
 3396              		.cfi_offset 14, -4
 3397 0002 84B0     		sub	sp, sp, #16
 3398              	.LCFI147:
 3399              		.cfi_def_cfa_offset 24
 3400 0004 00AF     		add	r7, sp, #0
 3401              	.LCFI148:
 3402              		.cfi_def_cfa_register 7
 3403 0006 7860     		str	r0, [r7, #4]
1733:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->MACCR | ETH_MACCR_RE;
 3404              		.loc 1 1733 0
 3405 0008 7B68     		ldr	r3, [r7, #4]
 3406 000a 1B68     		ldr	r3, [r3]
 3407 000c 1B68     		ldr	r3, [r3]
 3408 000e 43F00403 		orr	r3, r3, #4
 3409 0012 FB60     		str	r3, [r7, #12]
1734:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1735:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteMACCR( heth, tmpreg );
 3410              		.loc 1 1735 0
 3411 0014 FB68     		ldr	r3, [r7, #12]
 3412 0016 7868     		ldr	r0, [r7, #4]
 3413 0018 1946     		mov	r1, r3
 3414 001a FFF7FEFF 		bl	prvWriteMACCR
1736:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3415              		.loc 1 1736 0
 3416 001e 1037     		adds	r7, r7, #16
 3417              	.LCFI149:
 3418              		.cfi_def_cfa_offset 8
 3419 0020 BD46     		mov	sp, r7
 3420              	.LCFI150:
 3421              		.cfi_def_cfa_register 13
 3422              		@ sp needed
 3423 0022 80BD     		pop	{r7, pc}
 3424              		.cfi_endproc
 3425              	.LFE162:
 3427              		.section	.text.ETH_MACReceptionDisable,"ax",%progbits
 3428              		.align	2
 3429              		.thumb
 3430              		.thumb_func
 3432              	ETH_MACReceptionDisable:
 3433              	.LFB163:
1737:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1738:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1739:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Disables the MAC reception.
1740:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1741:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1742:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1743:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
ARM GAS  /tmp/cc1SlDEr.s 			page 100


1744:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_MACReceptionDisable(ETH_HandleTypeDef *heth)
1745:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3434              		.loc 1 1745 0
 3435              		.cfi_startproc
 3436              		@ args = 0, pretend = 0, frame = 16
 3437              		@ frame_needed = 1, uses_anonymous_args = 0
 3438 0000 80B5     		push	{r7, lr}
 3439              	.LCFI151:
 3440              		.cfi_def_cfa_offset 8
 3441              		.cfi_offset 7, -8
 3442              		.cfi_offset 14, -4
 3443 0002 84B0     		sub	sp, sp, #16
 3444              	.LCFI152:
 3445              		.cfi_def_cfa_offset 24
 3446 0004 00AF     		add	r7, sp, #0
 3447              	.LCFI153:
 3448              		.cfi_def_cfa_register 7
 3449 0006 7860     		str	r0, [r7, #4]
1746:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->MACCR & ~( ETH_MACCR_RE );
 3450              		.loc 1 1746 0
 3451 0008 7B68     		ldr	r3, [r7, #4]
 3452 000a 1B68     		ldr	r3, [r3]
 3453 000c 1B68     		ldr	r3, [r3]
 3454 000e 23F00403 		bic	r3, r3, #4
 3455 0012 FB60     		str	r3, [r7, #12]
1747:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1748:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteMACCR( heth, tmpreg );
 3456              		.loc 1 1748 0
 3457 0014 FB68     		ldr	r3, [r7, #12]
 3458 0016 7868     		ldr	r0, [r7, #4]
 3459 0018 1946     		mov	r1, r3
 3460 001a FFF7FEFF 		bl	prvWriteMACCR
1749:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3461              		.loc 1 1749 0
 3462 001e 1037     		adds	r7, r7, #16
 3463              	.LCFI154:
 3464              		.cfi_def_cfa_offset 8
 3465 0020 BD46     		mov	sp, r7
 3466              	.LCFI155:
 3467              		.cfi_def_cfa_register 13
 3468              		@ sp needed
 3469 0022 80BD     		pop	{r7, pc}
 3470              		.cfi_endproc
 3471              	.LFE163:
 3473              		.section	.text.ETH_DMATransmissionEnable,"ax",%progbits
 3474              		.align	2
 3475              		.thumb
 3476              		.thumb_func
 3478              	ETH_DMATransmissionEnable:
 3479              	.LFB164:
1750:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1751:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1752:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Enables the DMA transmission.
1753:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1754:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1755:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1756:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
ARM GAS  /tmp/cc1SlDEr.s 			page 101


1757:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMATransmissionEnable(ETH_HandleTypeDef *heth)
1758:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3480              		.loc 1 1758 0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 16
 3483              		@ frame_needed = 1, uses_anonymous_args = 0
 3484 0000 80B5     		push	{r7, lr}
 3485              	.LCFI156:
 3486              		.cfi_def_cfa_offset 8
 3487              		.cfi_offset 7, -8
 3488              		.cfi_offset 14, -4
 3489 0002 84B0     		sub	sp, sp, #16
 3490              	.LCFI157:
 3491              		.cfi_def_cfa_offset 24
 3492 0004 00AF     		add	r7, sp, #0
 3493              	.LCFI158:
 3494              		.cfi_def_cfa_register 7
 3495 0006 7860     		str	r0, [r7, #4]
1759:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable the DMA transmission */
1760:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->DMAOMR | ETH_DMAOMR_ST;
 3496              		.loc 1 1760 0
 3497 0008 7B68     		ldr	r3, [r7, #4]
 3498 000a 1A68     		ldr	r2, [r3]
 3499 000c 41F21803 		movw	r3, #4120
 3500 0010 1344     		add	r3, r3, r2
 3501 0012 1B68     		ldr	r3, [r3]
 3502 0014 43F40053 		orr	r3, r3, #8192
 3503 0018 FB60     		str	r3, [r7, #12]
1761:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1762:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteDMAOMR( heth, tmpreg );
 3504              		.loc 1 1762 0
 3505 001a FB68     		ldr	r3, [r7, #12]
 3506 001c 7868     		ldr	r0, [r7, #4]
 3507 001e 1946     		mov	r1, r3
 3508 0020 FFF7FEFF 		bl	prvWriteDMAOMR
1763:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3509              		.loc 1 1763 0
 3510 0024 1037     		adds	r7, r7, #16
 3511              	.LCFI159:
 3512              		.cfi_def_cfa_offset 8
 3513 0026 BD46     		mov	sp, r7
 3514              	.LCFI160:
 3515              		.cfi_def_cfa_register 13
 3516              		@ sp needed
 3517 0028 80BD     		pop	{r7, pc}
 3518              		.cfi_endproc
 3519              	.LFE164:
 3521 002a 00BF     		.section	.text.ETH_DMATransmissionDisable,"ax",%progbits
 3522              		.align	2
 3523              		.thumb
 3524              		.thumb_func
 3526              	ETH_DMATransmissionDisable:
 3527              	.LFB165:
1764:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1765:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1766:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Disables the DMA transmission.
1767:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
ARM GAS  /tmp/cc1SlDEr.s 			page 102


1768:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1769:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1770:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1771:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMATransmissionDisable(ETH_HandleTypeDef *heth)
1772:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3528              		.loc 1 1772 0
 3529              		.cfi_startproc
 3530              		@ args = 0, pretend = 0, frame = 16
 3531              		@ frame_needed = 1, uses_anonymous_args = 0
 3532 0000 80B5     		push	{r7, lr}
 3533              	.LCFI161:
 3534              		.cfi_def_cfa_offset 8
 3535              		.cfi_offset 7, -8
 3536              		.cfi_offset 14, -4
 3537 0002 84B0     		sub	sp, sp, #16
 3538              	.LCFI162:
 3539              		.cfi_def_cfa_offset 24
 3540 0004 00AF     		add	r7, sp, #0
 3541              	.LCFI163:
 3542              		.cfi_def_cfa_register 7
 3543 0006 7860     		str	r0, [r7, #4]
1773:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Disable the DMA transmission */
1774:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->DMAOMR & ~( ETH_DMAOMR_ST );
 3544              		.loc 1 1774 0
 3545 0008 7B68     		ldr	r3, [r7, #4]
 3546 000a 1A68     		ldr	r2, [r3]
 3547 000c 41F21803 		movw	r3, #4120
 3548 0010 1344     		add	r3, r3, r2
 3549 0012 1B68     		ldr	r3, [r3]
 3550 0014 23F40053 		bic	r3, r3, #8192
 3551 0018 FB60     		str	r3, [r7, #12]
1775:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1776:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteDMAOMR( heth, tmpreg );
 3552              		.loc 1 1776 0
 3553 001a FB68     		ldr	r3, [r7, #12]
 3554 001c 7868     		ldr	r0, [r7, #4]
 3555 001e 1946     		mov	r1, r3
 3556 0020 FFF7FEFF 		bl	prvWriteDMAOMR
1777:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3557              		.loc 1 1777 0
 3558 0024 1037     		adds	r7, r7, #16
 3559              	.LCFI164:
 3560              		.cfi_def_cfa_offset 8
 3561 0026 BD46     		mov	sp, r7
 3562              	.LCFI165:
 3563              		.cfi_def_cfa_register 13
 3564              		@ sp needed
 3565 0028 80BD     		pop	{r7, pc}
 3566              		.cfi_endproc
 3567              	.LFE165:
 3569 002a 00BF     		.section	.text.ETH_DMAReceptionEnable,"ax",%progbits
 3570              		.align	2
 3571              		.thumb
 3572              		.thumb_func
 3574              	ETH_DMAReceptionEnable:
 3575              	.LFB166:
1778:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
ARM GAS  /tmp/cc1SlDEr.s 			page 103


1779:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1780:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Enables the DMA reception.
1781:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1782:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1783:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1784:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1785:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMAReceptionEnable(ETH_HandleTypeDef *heth)
1786:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3576              		.loc 1 1786 0
 3577              		.cfi_startproc
 3578              		@ args = 0, pretend = 0, frame = 16
 3579              		@ frame_needed = 1, uses_anonymous_args = 0
 3580 0000 80B5     		push	{r7, lr}
 3581              	.LCFI166:
 3582              		.cfi_def_cfa_offset 8
 3583              		.cfi_offset 7, -8
 3584              		.cfi_offset 14, -4
 3585 0002 84B0     		sub	sp, sp, #16
 3586              	.LCFI167:
 3587              		.cfi_def_cfa_offset 24
 3588 0004 00AF     		add	r7, sp, #0
 3589              	.LCFI168:
 3590              		.cfi_def_cfa_register 7
 3591 0006 7860     		str	r0, [r7, #4]
1787:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Enable the DMA reception */
1788:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->DMAOMR | ETH_DMAOMR_SR;
 3592              		.loc 1 1788 0
 3593 0008 7B68     		ldr	r3, [r7, #4]
 3594 000a 1A68     		ldr	r2, [r3]
 3595 000c 41F21803 		movw	r3, #4120
 3596 0010 1344     		add	r3, r3, r2
 3597 0012 1B68     		ldr	r3, [r3]
 3598 0014 43F00203 		orr	r3, r3, #2
 3599 0018 FB60     		str	r3, [r7, #12]
1789:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1790:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteDMAOMR( heth, tmpreg );
 3600              		.loc 1 1790 0
 3601 001a FB68     		ldr	r3, [r7, #12]
 3602 001c 7868     		ldr	r0, [r7, #4]
 3603 001e 1946     		mov	r1, r3
 3604 0020 FFF7FEFF 		bl	prvWriteDMAOMR
1791:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3605              		.loc 1 1791 0
 3606 0024 1037     		adds	r7, r7, #16
 3607              	.LCFI169:
 3608              		.cfi_def_cfa_offset 8
 3609 0026 BD46     		mov	sp, r7
 3610              	.LCFI170:
 3611              		.cfi_def_cfa_register 13
 3612              		@ sp needed
 3613 0028 80BD     		pop	{r7, pc}
 3614              		.cfi_endproc
 3615              	.LFE166:
 3617 002a 00BF     		.section	.text.ETH_DMAReceptionDisable,"ax",%progbits
 3618              		.align	2
 3619              		.thumb
 3620              		.thumb_func
ARM GAS  /tmp/cc1SlDEr.s 			page 104


 3622              	ETH_DMAReceptionDisable:
 3623              	.LFB167:
1792:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1793:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1794:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Disables the DMA reception.
1795:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1796:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1797:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1798:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1799:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_DMAReceptionDisable(ETH_HandleTypeDef *heth)
1800:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3624              		.loc 1 1800 0
 3625              		.cfi_startproc
 3626              		@ args = 0, pretend = 0, frame = 16
 3627              		@ frame_needed = 1, uses_anonymous_args = 0
 3628 0000 80B5     		push	{r7, lr}
 3629              	.LCFI171:
 3630              		.cfi_def_cfa_offset 8
 3631              		.cfi_offset 7, -8
 3632              		.cfi_offset 14, -4
 3633 0002 84B0     		sub	sp, sp, #16
 3634              	.LCFI172:
 3635              		.cfi_def_cfa_offset 24
 3636 0004 00AF     		add	r7, sp, #0
 3637              	.LCFI173:
 3638              		.cfi_def_cfa_register 7
 3639 0006 7860     		str	r0, [r7, #4]
1801:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Disable the DMA reception */
1802:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->DMAOMR & ~( ETH_DMAOMR_SR );
 3640              		.loc 1 1802 0
 3641 0008 7B68     		ldr	r3, [r7, #4]
 3642 000a 1A68     		ldr	r2, [r3]
 3643 000c 41F21803 		movw	r3, #4120
 3644 0010 1344     		add	r3, r3, r2
 3645 0012 1B68     		ldr	r3, [r3]
 3646 0014 23F00203 		bic	r3, r3, #2
 3647 0018 FB60     		str	r3, [r7, #12]
1803:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1804:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteDMAOMR( heth, tmpreg );
 3648              		.loc 1 1804 0
 3649 001a FB68     		ldr	r3, [r7, #12]
 3650 001c 7868     		ldr	r0, [r7, #4]
 3651 001e 1946     		mov	r1, r3
 3652 0020 FFF7FEFF 		bl	prvWriteDMAOMR
1805:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3653              		.loc 1 1805 0
 3654 0024 1037     		adds	r7, r7, #16
 3655              	.LCFI174:
 3656              		.cfi_def_cfa_offset 8
 3657 0026 BD46     		mov	sp, r7
 3658              	.LCFI175:
 3659              		.cfi_def_cfa_register 13
 3660              		@ sp needed
 3661 0028 80BD     		pop	{r7, pc}
 3662              		.cfi_endproc
 3663              	.LFE167:
 3665 002a 00BF     		.section	.text.ETH_FlushTransmitFIFO,"ax",%progbits
ARM GAS  /tmp/cc1SlDEr.s 			page 105


 3666              		.align	2
 3667              		.thumb
 3668              		.thumb_func
 3670              	ETH_FlushTransmitFIFO:
 3671              	.LFB168:
1806:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1807:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** /**
1808:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @brief  Clears the ETHERNET transmit FIFO.
1809:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @param  heth: pointer to a ETH_HandleTypeDef structure that contains
1810:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   *         the configuration information for ETHERNET module
1811:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   * @retval None
1812:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c ****   */
1813:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** static void ETH_FlushTransmitFIFO(ETH_HandleTypeDef *heth)
1814:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** {
 3672              		.loc 1 1814 0
 3673              		.cfi_startproc
 3674              		@ args = 0, pretend = 0, frame = 16
 3675              		@ frame_needed = 1, uses_anonymous_args = 0
 3676 0000 80B5     		push	{r7, lr}
 3677              	.LCFI176:
 3678              		.cfi_def_cfa_offset 8
 3679              		.cfi_offset 7, -8
 3680              		.cfi_offset 14, -4
 3681 0002 84B0     		sub	sp, sp, #16
 3682              	.LCFI177:
 3683              		.cfi_def_cfa_offset 24
 3684 0004 00AF     		add	r7, sp, #0
 3685              	.LCFI178:
 3686              		.cfi_def_cfa_register 7
 3687 0006 7860     		str	r0, [r7, #4]
1815:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	/* Set the Flush Transmit FIFO bit */
1816:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	__IO uint32_t tmpreg = heth->Instance->DMAOMR | ETH_DMAOMR_FTF;
 3688              		.loc 1 1816 0
 3689 0008 7B68     		ldr	r3, [r7, #4]
 3690 000a 1A68     		ldr	r2, [r3]
 3691 000c 41F21803 		movw	r3, #4120
 3692 0010 1344     		add	r3, r3, r2
 3693 0012 1B68     		ldr	r3, [r3]
 3694 0014 43F48013 		orr	r3, r3, #1048576
 3695 0018 FB60     		str	r3, [r7, #12]
1817:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 
1818:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** 	prvWriteDMAOMR( heth, tmpreg );
 3696              		.loc 1 1818 0
 3697 001a FB68     		ldr	r3, [r7, #12]
 3698 001c 7868     		ldr	r0, [r7, #4]
 3699 001e 1946     		mov	r1, r3
 3700 0020 FFF7FEFF 		bl	prvWriteDMAOMR
1819:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_eth_FreeRTOS_TCP.c **** }
 3701              		.loc 1 1819 0
 3702 0024 1037     		adds	r7, r7, #16
 3703              	.LCFI179:
 3704              		.cfi_def_cfa_offset 8
 3705 0026 BD46     		mov	sp, r7
 3706              	.LCFI180:
 3707              		.cfi_def_cfa_register 13
 3708              		@ sp needed
 3709 0028 80BD     		pop	{r7, pc}
ARM GAS  /tmp/cc1SlDEr.s 			page 106


 3710              		.cfi_endproc
 3711              	.LFE168:
 3713 002a 00BF     		.text
 3714              	.Letext0:
 3715              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3716              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3717              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 3718              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3719              		.file 7 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3720              		.file 8 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 3721              		.file 9 "../../Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cc1SlDEr.s 			page 107


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_eth_FreeRTOS_TCP.c
     /tmp/cc1SlDEr.s:21     .text.HAL_ETH_Init:0000000000000000 $t
     /tmp/cc1SlDEr.s:26     .text.HAL_ETH_Init:0000000000000000 HAL_ETH_Init
     /tmp/cc1SlDEr.s:638    .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/cc1SlDEr.s:2688   .text.ETH_MACDMAConfig:0000000000000000 ETH_MACDMAConfig
     /tmp/cc1SlDEr.s:229    .text.HAL_ETH_Init:0000000000000134 $d
     /tmp/cc1SlDEr.s:241    .text.HAL_ETH_DeInit:0000000000000000 $t
     /tmp/cc1SlDEr.s:246    .text.HAL_ETH_DeInit:0000000000000000 HAL_ETH_DeInit
     /tmp/cc1SlDEr.s:678    .text.HAL_ETH_MspDeInit:0000000000000000 HAL_ETH_MspDeInit
     /tmp/cc1SlDEr.s:295    .text.HAL_ETH_DMATxDescListInit:0000000000000000 $t
     /tmp/cc1SlDEr.s:300    .text.HAL_ETH_DMATxDescListInit:0000000000000000 HAL_ETH_DMATxDescListInit
     /tmp/cc1SlDEr.s:464    .text.HAL_ETH_DMARxDescListInit:0000000000000000 $t
     /tmp/cc1SlDEr.s:469    .text.HAL_ETH_DMARxDescListInit:0000000000000000 HAL_ETH_DMARxDescListInit
     /tmp/cc1SlDEr.s:633    .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/cc1SlDEr.s:673    .text.HAL_ETH_MspDeInit:0000000000000000 $t
     /tmp/cc1SlDEr.s:713    .text.HAL_ETH_TransmitFrame:0000000000000000 $t
     /tmp/cc1SlDEr.s:718    .text.HAL_ETH_TransmitFrame:0000000000000000 HAL_ETH_TransmitFrame
     /tmp/cc1SlDEr.s:988    .text.HAL_ETH_TransmitFrame:00000000000001a4 $d
     /tmp/cc1SlDEr.s:994    .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 $t
     /tmp/cc1SlDEr.s:999    .text.HAL_ETH_GetReceivedFrame_IT:0000000000000000 HAL_ETH_GetReceivedFrame_IT
     /tmp/cc1SlDEr.s:1040   .text.HAL_ETH_GetReceivedFrame:0000000000000000 HAL_ETH_GetReceivedFrame
     /tmp/cc1SlDEr.s:1035   .text.HAL_ETH_GetReceivedFrame:0000000000000000 $t
     /tmp/cc1SlDEr.s:1231   .text.HAL_ETH_GetReceivedFrame:0000000000000104 $d
     /tmp/cc1SlDEr.s:1236   .text.HAL_ETH_IRQHandler:0000000000000000 $t
     /tmp/cc1SlDEr.s:1241   .text.HAL_ETH_IRQHandler:0000000000000000 HAL_ETH_IRQHandler
     /tmp/cc1SlDEr.s:1364   .text.HAL_ETH_RxCpltCallback:0000000000000000 HAL_ETH_RxCpltCallback
     /tmp/cc1SlDEr.s:1324   .text.HAL_ETH_TxCpltCallback:0000000000000000 HAL_ETH_TxCpltCallback
     /tmp/cc1SlDEr.s:1404   .text.HAL_ETH_ErrorCallback:0000000000000000 HAL_ETH_ErrorCallback
     /tmp/cc1SlDEr.s:1314   .text.HAL_ETH_IRQHandler:0000000000000060 $d
     /tmp/cc1SlDEr.s:1319   .text.HAL_ETH_TxCpltCallback:0000000000000000 $t
     /tmp/cc1SlDEr.s:1359   .text.HAL_ETH_RxCpltCallback:0000000000000000 $t
     /tmp/cc1SlDEr.s:1399   .text.HAL_ETH_ErrorCallback:0000000000000000 $t
     /tmp/cc1SlDEr.s:1439   .rodata:0000000000000000 $d
     /tmp/cc1SlDEr.s:1443   .text.HAL_ETH_ReadPHYRegister:0000000000000000 $t
     /tmp/cc1SlDEr.s:1448   .text.HAL_ETH_ReadPHYRegister:0000000000000000 HAL_ETH_ReadPHYRegister
     /tmp/cc1SlDEr.s:1617   .text.HAL_ETH_ReadPHYRegister:00000000000000f4 $d
     /tmp/cc1SlDEr.s:1626   .text.HAL_ETH_WritePHYRegister:0000000000000000 $t
     /tmp/cc1SlDEr.s:1631   .text.HAL_ETH_WritePHYRegister:0000000000000000 HAL_ETH_WritePHYRegister
     /tmp/cc1SlDEr.s:1800   .text.HAL_ETH_WritePHYRegister:00000000000000f4 $d
     /tmp/cc1SlDEr.s:1805   .text.HAL_ETH_Start:0000000000000000 $t
     /tmp/cc1SlDEr.s:1810   .text.HAL_ETH_Start:0000000000000000 HAL_ETH_Start
     /tmp/cc1SlDEr.s:3296   .text.ETH_MACTransmissionEnable:0000000000000000 ETH_MACTransmissionEnable
     /tmp/cc1SlDEr.s:3386   .text.ETH_MACReceptionEnable:0000000000000000 ETH_MACReceptionEnable
     /tmp/cc1SlDEr.s:3670   .text.ETH_FlushTransmitFIFO:0000000000000000 ETH_FlushTransmitFIFO
     /tmp/cc1SlDEr.s:3478   .text.ETH_DMATransmissionEnable:0000000000000000 ETH_DMATransmissionEnable
     /tmp/cc1SlDEr.s:3574   .text.ETH_DMAReceptionEnable:0000000000000000 ETH_DMAReceptionEnable
     /tmp/cc1SlDEr.s:1885   .text.HAL_ETH_Stop:0000000000000000 $t
     /tmp/cc1SlDEr.s:1890   .text.HAL_ETH_Stop:0000000000000000 HAL_ETH_Stop
     /tmp/cc1SlDEr.s:3526   .text.ETH_DMATransmissionDisable:0000000000000000 ETH_DMATransmissionDisable
     /tmp/cc1SlDEr.s:3622   .text.ETH_DMAReceptionDisable:0000000000000000 ETH_DMAReceptionDisable
     /tmp/cc1SlDEr.s:3432   .text.ETH_MACReceptionDisable:0000000000000000 ETH_MACReceptionDisable
     /tmp/cc1SlDEr.s:3341   .text.ETH_MACTransmissionDisable:0000000000000000 ETH_MACTransmissionDisable
     /tmp/cc1SlDEr.s:1965   .text.prvWriteMACFCR:0000000000000000 $t
     /tmp/cc1SlDEr.s:1969   .text.prvWriteMACFCR:0000000000000000 prvWriteMACFCR
     /tmp/cc1SlDEr.s:2018   .text.prvWriteDMAOMR:0000000000000000 $t
     /tmp/cc1SlDEr.s:2022   .text.prvWriteDMAOMR:0000000000000000 prvWriteDMAOMR
ARM GAS  /tmp/cc1SlDEr.s 			page 108


     /tmp/cc1SlDEr.s:2077   .text.prvWriteMACCR:0000000000000000 $t
     /tmp/cc1SlDEr.s:2081   .text.prvWriteMACCR:0000000000000000 prvWriteMACCR
     /tmp/cc1SlDEr.s:2130   .text.HAL_ETH_ConfigMAC:0000000000000000 $t
     /tmp/cc1SlDEr.s:2135   .text.HAL_ETH_ConfigMAC:0000000000000000 HAL_ETH_ConfigMAC
     /tmp/cc1SlDEr.s:2444   .text.HAL_ETH_ConfigMAC:00000000000001ac $d
     /tmp/cc1SlDEr.s:2449   .text.HAL_ETH_ConfigDMA:0000000000000000 $t
     /tmp/cc1SlDEr.s:2454   .text.HAL_ETH_ConfigDMA:0000000000000000 HAL_ETH_ConfigDMA
     /tmp/cc1SlDEr.s:2634   .text.HAL_ETH_ConfigDMA:00000000000000f4 $d
     /tmp/cc1SlDEr.s:2639   .text.HAL_ETH_GetState:0000000000000000 $t
     /tmp/cc1SlDEr.s:2644   .text.HAL_ETH_GetState:0000000000000000 HAL_ETH_GetState
     /tmp/cc1SlDEr.s:2684   .text.ETH_MACDMAConfig:0000000000000000 $t
     /tmp/cc1SlDEr.s:3206   .text.ETH_MACAddressConfig:0000000000000000 ETH_MACAddressConfig
     /tmp/cc1SlDEr.s:3195   .text.ETH_MACDMAConfig:0000000000000324 $d
     /tmp/cc1SlDEr.s:3202   .text.ETH_MACAddressConfig:0000000000000000 $t
     /tmp/cc1SlDEr.s:3286   .text.ETH_MACAddressConfig:0000000000000068 $d
     /tmp/cc1SlDEr.s:3292   .text.ETH_MACTransmissionEnable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3337   .text.ETH_MACTransmissionDisable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3382   .text.ETH_MACReceptionEnable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3428   .text.ETH_MACReceptionDisable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3474   .text.ETH_DMATransmissionEnable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3522   .text.ETH_DMATransmissionDisable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3570   .text.ETH_DMAReceptionEnable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3618   .text.ETH_DMAReceptionDisable:0000000000000000 $t
     /tmp/cc1SlDEr.s:3666   .text.ETH_FlushTransmitFIFO:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_RCC_GetHCLKFreq
vMACBProbePhy
HAL_GetTick
lUDPLoggingPrintf
HAL_Delay
