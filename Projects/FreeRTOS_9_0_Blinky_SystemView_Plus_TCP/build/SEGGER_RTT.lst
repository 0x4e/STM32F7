ARM GAS  /tmp/ccjwrkYl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"SEGGER_RTT.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.data._aTerminalId,"aw",%progbits
  21              		.align	2
  24              	_aTerminalId:
  25 0000 30       		.byte	48
  26 0001 31       		.byte	49
  27 0002 32       		.byte	50
  28 0003 33       		.byte	51
  29 0004 34       		.byte	52
  30 0005 35       		.byte	53
  31 0006 36       		.byte	54
  32 0007 37       		.byte	55
  33 0008 38       		.byte	56
  34 0009 39       		.byte	57
  35 000a 41       		.byte	65
  36 000b 42       		.byte	66
  37 000c 43       		.byte	67
  38 000d 44       		.byte	68
  39 000e 45       		.byte	69
  40 000f 46       		.byte	70
  41              		.comm	_SEGGER_RTT,168,4
  42              		.section	.bss._acUpBuffer,"aw",%nobits
  43              		.align	2
  46              	_acUpBuffer:
  47 0000 00000000 		.space	1024
  47      00000000 
  47      00000000 
  47      00000000 
  47      00000000 
  48              		.section	.bss._acDownBuffer,"aw",%nobits
  49              		.align	2
  52              	_acDownBuffer:
  53 0000 00000000 		.space	16
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.section	.bss._ActiveTerminal,"aw",%nobits
  57              	_ActiveTerminal:
  58 0000 00       		.space	1
ARM GAS  /tmp/ccjwrkYl.s 			page 2


  59              		.section	.rodata
  60              		.align	2
  61              	.LC0:
  62 0000 5465726D 		.ascii	"Terminal\000"
  62      696E616C 
  62      00
  63 0009 000000   		.align	2
  64              	.LC1:
  65 000c 52545400 		.ascii	"RTT\000"
  66              		.align	2
  67              	.LC2:
  68 0010 53454747 		.ascii	"SEGGER\000"
  68      455200
  69              		.section	.text._DoInit,"ax",%progbits
  70              		.align	2
  71              		.thumb
  72              		.thumb_func
  74              	_DoInit:
  75              	.LFB0:
  76              		.file 1 "../../../SystemView/SEGGER/SEGGER_RTT.c"
   1:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
   2:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                SEGGER Microcontroller GmbH & Co. KG                *
   3:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
   5:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
   6:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       (c) 2015 - 2017  SEGGER Microcontroller GmbH & Co. KG        *
   7:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
   8:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  10:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  11:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  12:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER SystemView * Real-time application analysis           *
  13:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  14:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  15:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  16:../../../SystemView/SEGGER/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  18:../../../SystemView/SEGGER/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:../../../SystemView/SEGGER/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:../../../SystemView/SEGGER/SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  22:../../../SystemView/SEGGER/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:../../../SystemView/SEGGER/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:../../../SystemView/SEGGER/SEGGER_RTT.c **** * conditions are met:                                                *
  25:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  26:../../../SystemView/SEGGER/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   notice, this list of conditions and the following disclaimer.    *
  28:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  29:../../../SystemView/SEGGER/SEGGER_RTT.c **** * o Redistributions in binary form must reproduce the above          *
  30:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   copyright notice, this list of conditions and the following      *
  31:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   disclaimer in the documentation and/or other materials provided  *
  32:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   with the distribution.                                           *
  33:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  34:../../../SystemView/SEGGER/SEGGER_RTT.c **** * o Neither the name of SEGGER Microcontroller GmbH & Co. KG         *
  35:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   nor the names of its contributors may be used to endorse or      *
  36:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   promote products derived from this software without specific     *
  37:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   prior written permission.                                        *
ARM GAS  /tmp/ccjwrkYl.s 			page 3


  38:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  39:../../../SystemView/SEGGER/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  40:../../../SystemView/SEGGER/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  41:../../../SystemView/SEGGER/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  42:../../../SystemView/SEGGER/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  43:../../../SystemView/SEGGER/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  44:../../../SystemView/SEGGER/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  45:../../../SystemView/SEGGER/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  46:../../../SystemView/SEGGER/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  47:../../../SystemView/SEGGER/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  48:../../../SystemView/SEGGER/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  49:../../../SystemView/SEGGER/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  50:../../../SystemView/SEGGER/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  51:../../../SystemView/SEGGER/SEGGER_RTT.c **** * DAMAGE.                                                            *
  52:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  53:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  54:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  55:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SystemView version: V2.50                                    *
  56:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  57:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  58:../../../SystemView/SEGGER/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  59:../../../SystemView/SEGGER/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  60:../../../SystemView/SEGGER/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  61:../../../SystemView/SEGGER/SEGGER_RTT.c ****           allows real-time communication on targets which support
  62:../../../SystemView/SEGGER/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  63:../../../SystemView/SEGGER/SEGGER_RTT.c **** Revision: $Rev: 6249 $
  64:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  65:../../../SystemView/SEGGER/SEGGER_RTT.c **** Additional information:
  66:../../../SystemView/SEGGER/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  67:../../../SystemView/SEGGER/SEGGER_RTT.c ****           H->T    Host to target communication
  68:../../../SystemView/SEGGER/SEGGER_RTT.c ****           T->H    Target to host communication
  69:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  70:../../../SystemView/SEGGER/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  71:../../../SystemView/SEGGER/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  72:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  73:../../../SystemView/SEGGER/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  74:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  75:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  76:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  77:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  78:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  79:../../../SystemView/SEGGER/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  80:../../../SystemView/SEGGER/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  81:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  82:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  83:../../../SystemView/SEGGER/SEGGER_RTT.c **** ----------------------------------------------------------------------
  84:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
  85:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  86:../../../SystemView/SEGGER/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  87:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  88:../../../SystemView/SEGGER/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  89:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  90:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
  91:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
  92:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Configuration, default values
  93:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
  94:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
ARM GAS  /tmp/ccjwrkYl.s 			page 4


  95:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
  96:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  97:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
  98:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
  99:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 100:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 101:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 102:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 103:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 104:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 105:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 106:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 107:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 108:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 109:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 110:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 111:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 112:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 113:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 114:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 115:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 116:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #endif
 117:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 118:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 119:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 120:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            0
 121:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 122:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 123:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 124:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     0
 125:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 126:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 127:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 128:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 129:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 130:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 131:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 132:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 133:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 134:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 135:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 136:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 137:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 138:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 139:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   STRLEN
 140:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 141:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 142:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 143:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   MEMCPY
 144:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define MEMCPY(pDest, pSrc, NumBytes)                   memcpy((pDest), (pSrc), (NumBytes))
 145:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 146:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 147:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   MIN
 148:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 149:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 150:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 151:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   MAX
ARM GAS  /tmp/ccjwrkYl.s 			page 5


 152:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 153:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 154:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 155:../../../SystemView/SEGGER/SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 156:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 157:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef NULL
 158:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define NULL 0
 159:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 160:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 161:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 162:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 163:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Defines, fixed
 164:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 165:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 166:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 167:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 168:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 169:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 170:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 171:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 172:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #if (defined __GNUC__)
 173:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 174:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 175:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 176:../../../SystemView/SEGGER/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 177:../../../SystemView/SEGGER/SEGGER_RTT.c ****                                   Var
 178:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 179:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 180:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #else
 181:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 182:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #endif
 183:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 184:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 185:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 186:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 187:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 188:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #if (defined __GNUC__)
 189:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 190:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 191:../../../SystemView/SEGGER/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 192:../../../SystemView/SEGGER/SEGGER_RTT.c ****                                         Var
 193:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 194:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 195:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #else
 196:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 197:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #endif
 198:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 199:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 200:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 201:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 202:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 203:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 204:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 205:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 206:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 207:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 208:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
ARM GAS  /tmp/ccjwrkYl.s 			page 6


 209:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 210:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 211:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 212:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 213:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 214:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 215:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 216:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 217:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 218:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 219:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 220:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 221:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 222:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 223:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 224:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 225:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 226:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 227:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 228:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 229:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 230:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Static const data
 231:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 232:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 233:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 234:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 235:../../../SystemView/SEGGER/SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 236:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 237:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 238:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 239:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Static data
 240:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 241:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 242:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 243:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 244:../../../SystemView/SEGGER/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 245:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 246:../../../SystemView/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 247:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 248:../../../SystemView/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]));
 249:../../../SystemView/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]))
 250:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 251:../../../SystemView/SEGGER/SEGGER_RTT.c **** static char _ActiveTerminal;
 252:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 253:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 254:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 255:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Static functions
 256:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 257:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 258:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 259:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 260:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 261:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 262:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _DoInit()
 263:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 264:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 265:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Initializes the control block an buffers.
ARM GAS  /tmp/ccjwrkYl.s 			page 7


 266:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 267:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 268:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 269:../../../SystemView/SEGGER/SEGGER_RTT.c **** #define INIT()  do {                                            \
 270:../../../SystemView/SEGGER/SEGGER_RTT.c ****                   if (_SEGGER_RTT.acID[0] == '\0') { _DoInit(); }  \
 271:../../../SystemView/SEGGER/SEGGER_RTT.c ****                 } while (0)
 272:../../../SystemView/SEGGER/SEGGER_RTT.c **** static void _DoInit(void) {
  77              		.loc 1 272 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 80B4     		push	{r7}
  83              	.LCFI0:
  84              		.cfi_def_cfa_offset 4
  85              		.cfi_offset 7, -4
  86 0002 83B0     		sub	sp, sp, #12
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 16
  89 0004 00AF     		add	r7, sp, #0
  90              	.LCFI2:
  91              		.cfi_def_cfa_register 7
 273:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_CB* p;
 274:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 275:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Initialize control block
 276:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 277:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p = &_SEGGER_RTT;
  92              		.loc 1 277 0
  93 0006 214B     		ldr	r3, .L2
  94 0008 7B60     		str	r3, [r7, #4]
 278:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
  95              		.loc 1 278 0
  96 000a 7B68     		ldr	r3, [r7, #4]
  97 000c 0322     		movs	r2, #3
  98 000e 1A61     		str	r2, [r3, #16]
 279:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
  99              		.loc 1 279 0
 100 0010 7B68     		ldr	r3, [r7, #4]
 101 0012 0322     		movs	r2, #3
 102 0014 5A61     		str	r2, [r3, #20]
 280:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 281:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Initialize up buffer 0
 282:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 283:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
 103              		.loc 1 283 0
 104 0016 7B68     		ldr	r3, [r7, #4]
 105 0018 1D4A     		ldr	r2, .L2+4
 106 001a 9A61     		str	r2, [r3, #24]
 284:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 107              		.loc 1 284 0
 108 001c 7B68     		ldr	r3, [r7, #4]
 109 001e 1D4A     		ldr	r2, .L2+8
 110 0020 DA61     		str	r2, [r3, #28]
 285:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
 111              		.loc 1 285 0
 112 0022 7B68     		ldr	r3, [r7, #4]
 113 0024 4FF48062 		mov	r2, #1024
ARM GAS  /tmp/ccjwrkYl.s 			page 8


 114 0028 1A62     		str	r2, [r3, #32]
 286:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 115              		.loc 1 286 0
 116 002a 7B68     		ldr	r3, [r7, #4]
 117 002c 0022     		movs	r2, #0
 118 002e 9A62     		str	r2, [r3, #40]
 287:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 119              		.loc 1 287 0
 120 0030 7B68     		ldr	r3, [r7, #4]
 121 0032 0022     		movs	r2, #0
 122 0034 5A62     		str	r2, [r3, #36]
 288:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 123              		.loc 1 288 0
 124 0036 7B68     		ldr	r3, [r7, #4]
 125 0038 0022     		movs	r2, #0
 126 003a DA62     		str	r2, [r3, #44]
 289:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 290:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Initialize down buffer 0
 291:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 292:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 127              		.loc 1 292 0
 128 003c 7B68     		ldr	r3, [r7, #4]
 129 003e 144A     		ldr	r2, .L2+4
 130 0040 1A66     		str	r2, [r3, #96]
 293:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 131              		.loc 1 293 0
 132 0042 7B68     		ldr	r3, [r7, #4]
 133 0044 144A     		ldr	r2, .L2+12
 134 0046 5A66     		str	r2, [r3, #100]
 294:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
 135              		.loc 1 294 0
 136 0048 7B68     		ldr	r3, [r7, #4]
 137 004a 1022     		movs	r2, #16
 138 004c 9A66     		str	r2, [r3, #104]
 295:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 139              		.loc 1 295 0
 140 004e 7B68     		ldr	r3, [r7, #4]
 141 0050 0022     		movs	r2, #0
 142 0052 1A67     		str	r2, [r3, #112]
 296:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 143              		.loc 1 296 0
 144 0054 7B68     		ldr	r3, [r7, #4]
 145 0056 0022     		movs	r2, #0
 146 0058 DA66     		str	r2, [r3, #108]
 297:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 147              		.loc 1 297 0
 148 005a 7B68     		ldr	r3, [r7, #4]
 149 005c 0022     		movs	r2, #0
 150 005e 5A67     		str	r2, [r3, #116]
 298:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 299:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish initialization of the control block.
 300:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Copy Id string in three steps to make sure "SEGGER RTT" is not found
 301:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // in initializer memory (usually flash) by J-Link
 302:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 303:../../../SystemView/SEGGER/SEGGER_RTT.c ****   strcpy(&p->acID[7], "RTT");
 151              		.loc 1 303 0
 152 0060 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjwrkYl.s 			page 9


 153 0062 0733     		adds	r3, r3, #7
 154 0064 0D4A     		ldr	r2, .L2+16
 155 0066 1068     		ldr	r0, [r2]	@ unaligned
 156 0068 1860     		str	r0, [r3]	@ unaligned
 304:../../../SystemView/SEGGER/SEGGER_RTT.c ****   strcpy(&p->acID[0], "SEGGER");
 157              		.loc 1 304 0
 158 006a 7B68     		ldr	r3, [r7, #4]
 159 006c 0C4A     		ldr	r2, .L2+20
 160 006e 1068     		ldr	r0, [r2]	@ unaligned
 161 0070 1860     		str	r0, [r3]	@ unaligned
 162 0072 9188     		ldrh	r1, [r2, #4]	@ unaligned
 163 0074 9279     		ldrb	r2, [r2, #6]
 164 0076 9980     		strh	r1, [r3, #4]	@ unaligned
 165 0078 9A71     		strb	r2, [r3, #6]
 305:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->acID[6] = ' ';
 166              		.loc 1 305 0
 167 007a 7B68     		ldr	r3, [r7, #4]
 168 007c 2022     		movs	r2, #32
 169 007e 9A71     		strb	r2, [r3, #6]
 306:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 170              		.loc 1 306 0
 171 0080 0C37     		adds	r7, r7, #12
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 4
 174 0082 BD46     		mov	sp, r7
 175              	.LCFI4:
 176              		.cfi_def_cfa_register 13
 177              		@ sp needed
 178 0084 5DF8047B 		ldr	r7, [sp], #4
 179              	.LCFI5:
 180              		.cfi_restore 7
 181              		.cfi_def_cfa_offset 0
 182 0088 7047     		bx	lr
 183              	.L3:
 184 008a 00BF     		.align	2
 185              	.L2:
 186 008c 00000000 		.word	_SEGGER_RTT
 187 0090 00000000 		.word	.LC0
 188 0094 00000000 		.word	_acUpBuffer
 189 0098 00000000 		.word	_acDownBuffer
 190 009c 0C000000 		.word	.LC1
 191 00a0 10000000 		.word	.LC2
 192              		.cfi_endproc
 193              	.LFE0:
 195              		.section	.text._WriteBlocking,"ax",%progbits
 196              		.align	2
 197              		.thumb
 198              		.thumb_func
 200              	_WriteBlocking:
 201              	.LFB1:
 307:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 308:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 309:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 310:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _WriteBlocking()
 311:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 312:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 313:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
ARM GAS  /tmp/ccjwrkYl.s 			page 10


 314:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 315:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    read by the host.
 316:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 317:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 318:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 319:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 320:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 321:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 322:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 323:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 324:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 325:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 326:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 327:../../../SystemView/SEGGER/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 202              		.loc 1 327 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 32
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 80B5     		push	{r7, lr}
 207              	.LCFI6:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 88B0     		sub	sp, sp, #32
 212              	.LCFI7:
 213              		.cfi_def_cfa_offset 40
 214 0004 00AF     		add	r7, sp, #0
 215              	.LCFI8:
 216              		.cfi_def_cfa_register 7
 217 0006 F860     		str	r0, [r7, #12]
 218 0008 B960     		str	r1, [r7, #8]
 219 000a 7A60     		str	r2, [r7, #4]
 328:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 329:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 330:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 331:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 332:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 333:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 334:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 335:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 220              		.loc 1 335 0
 221 000c 0023     		movs	r3, #0
 222 000e BB61     		str	r3, [r7, #24]
 336:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 223              		.loc 1 336 0
 224 0010 FB68     		ldr	r3, [r7, #12]
 225 0012 DB68     		ldr	r3, [r3, #12]
 226 0014 7B61     		str	r3, [r7, #20]
 227              	.L8:
 337:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
 338:../../../SystemView/SEGGER/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 228              		.loc 1 338 0
 229 0016 FB68     		ldr	r3, [r7, #12]
 230 0018 1B69     		ldr	r3, [r3, #16]
 231 001a 3B61     		str	r3, [r7, #16]
 339:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 232              		.loc 1 339 0
ARM GAS  /tmp/ccjwrkYl.s 			page 11


 233 001c 3A69     		ldr	r2, [r7, #16]
 234 001e 7B69     		ldr	r3, [r7, #20]
 235 0020 9A42     		cmp	r2, r3
 236 0022 05D9     		bls	.L5
 340:../../../SystemView/SEGGER/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 237              		.loc 1 340 0
 238 0024 3A69     		ldr	r2, [r7, #16]
 239 0026 7B69     		ldr	r3, [r7, #20]
 240 0028 D31A     		subs	r3, r2, r3
 241 002a 013B     		subs	r3, r3, #1
 242 002c FB61     		str	r3, [r7, #28]
 243 002e 07E0     		b	.L6
 244              	.L5:
 341:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {
 342:../../../SystemView/SEGGER/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 245              		.loc 1 342 0
 246 0030 FB68     		ldr	r3, [r7, #12]
 247 0032 9A68     		ldr	r2, [r3, #8]
 248 0034 3969     		ldr	r1, [r7, #16]
 249 0036 7B69     		ldr	r3, [r7, #20]
 250 0038 CB1A     		subs	r3, r1, r3
 251 003a 1344     		add	r3, r3, r2
 252 003c 013B     		subs	r3, r3, #1
 253 003e FB61     		str	r3, [r7, #28]
 254              	.L6:
 343:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 344:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 255              		.loc 1 344 0
 256 0040 FB68     		ldr	r3, [r7, #12]
 257 0042 9A68     		ldr	r2, [r3, #8]
 258 0044 7B69     		ldr	r3, [r7, #20]
 259 0046 D31A     		subs	r3, r2, r3
 260 0048 FA69     		ldr	r2, [r7, #28]
 261 004a 9342     		cmp	r3, r2
 262 004c 28BF     		it	cs
 263 004e 1346     		movcs	r3, r2
 264 0050 FB61     		str	r3, [r7, #28]
 345:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 265              		.loc 1 345 0
 266 0052 FA69     		ldr	r2, [r7, #28]
 267 0054 7B68     		ldr	r3, [r7, #4]
 268 0056 9342     		cmp	r3, r2
 269 0058 28BF     		it	cs
 270 005a 1346     		movcs	r3, r2
 271 005c FB61     		str	r3, [r7, #28]
 346:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer + WrOff, pBuffer, NumBytesToWrite);
 272              		.loc 1 346 0
 273 005e FB68     		ldr	r3, [r7, #12]
 274 0060 5A68     		ldr	r2, [r3, #4]
 275 0062 7B69     		ldr	r3, [r7, #20]
 276 0064 1344     		add	r3, r3, r2
 277 0066 1846     		mov	r0, r3
 278 0068 B968     		ldr	r1, [r7, #8]
 279 006a FA69     		ldr	r2, [r7, #28]
 280 006c FFF7FEFF 		bl	memcpy
 347:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 281              		.loc 1 347 0
ARM GAS  /tmp/ccjwrkYl.s 			page 12


 282 0070 BA69     		ldr	r2, [r7, #24]
 283 0072 FB69     		ldr	r3, [r7, #28]
 284 0074 1344     		add	r3, r3, r2
 285 0076 BB61     		str	r3, [r7, #24]
 348:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 286              		.loc 1 348 0
 287 0078 BA68     		ldr	r2, [r7, #8]
 288 007a FB69     		ldr	r3, [r7, #28]
 289 007c 1344     		add	r3, r3, r2
 290 007e BB60     		str	r3, [r7, #8]
 349:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 291              		.loc 1 349 0
 292 0080 7A68     		ldr	r2, [r7, #4]
 293 0082 FB69     		ldr	r3, [r7, #28]
 294 0084 D31A     		subs	r3, r2, r3
 295 0086 7B60     		str	r3, [r7, #4]
 350:../../../SystemView/SEGGER/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 296              		.loc 1 350 0
 297 0088 7A69     		ldr	r2, [r7, #20]
 298 008a FB69     		ldr	r3, [r7, #28]
 299 008c 1344     		add	r3, r3, r2
 300 008e 7B61     		str	r3, [r7, #20]
 351:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 301              		.loc 1 351 0
 302 0090 FB68     		ldr	r3, [r7, #12]
 303 0092 9A68     		ldr	r2, [r3, #8]
 304 0094 7B69     		ldr	r3, [r7, #20]
 305 0096 9A42     		cmp	r2, r3
 306 0098 01D1     		bne	.L7
 352:../../../SystemView/SEGGER/SEGGER_RTT.c ****       WrOff = 0u;
 307              		.loc 1 352 0
 308 009a 0023     		movs	r3, #0
 309 009c 7B61     		str	r3, [r7, #20]
 310              	.L7:
 353:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 354:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 311              		.loc 1 354 0
 312 009e FB68     		ldr	r3, [r7, #12]
 313 00a0 7A69     		ldr	r2, [r7, #20]
 314 00a2 DA60     		str	r2, [r3, #12]
 355:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (NumBytes);
 315              		.loc 1 355 0
 316 00a4 7B68     		ldr	r3, [r7, #4]
 317 00a6 002B     		cmp	r3, #0
 318 00a8 B5D1     		bne	.L8
 356:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 357:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return NumBytesWritten;
 319              		.loc 1 357 0
 320 00aa BB69     		ldr	r3, [r7, #24]
 358:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 321              		.loc 1 358 0
 322 00ac 1846     		mov	r0, r3
 323 00ae 2037     		adds	r7, r7, #32
 324              	.LCFI9:
 325              		.cfi_def_cfa_offset 8
 326 00b0 BD46     		mov	sp, r7
 327              	.LCFI10:
ARM GAS  /tmp/ccjwrkYl.s 			page 13


 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 00b2 80BD     		pop	{r7, pc}
 331              		.cfi_endproc
 332              	.LFE1:
 334              		.section	.text._WriteNoCheck,"ax",%progbits
 335              		.align	2
 336              		.thumb
 337              		.thumb_func
 339              	_WriteNoCheck:
 340              	.LFB2:
 359:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 360:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 361:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 362:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _WriteNoCheck()
 363:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 364:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 365:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 366:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 367:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    read by the host.
 368:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 369:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 370:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 371:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 372:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 373:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 374:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 375:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 376:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 377:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 378:../../../SystemView/SEGGER/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 341              		.loc 1 378 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 32
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              	.LCFI11:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 88B0     		sub	sp, sp, #32
 351              	.LCFI12:
 352              		.cfi_def_cfa_offset 40
 353 0004 00AF     		add	r7, sp, #0
 354              	.LCFI13:
 355              		.cfi_def_cfa_register 7
 356 0006 F860     		str	r0, [r7, #12]
 357 0008 B960     		str	r1, [r7, #8]
 358 000a 7A60     		str	r2, [r7, #4]
 379:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 380:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 381:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Rem;
 382:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 383:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 359              		.loc 1 383 0
 360 000c FB68     		ldr	r3, [r7, #12]
 361 000e DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccjwrkYl.s 			page 14


 362 0010 FB61     		str	r3, [r7, #28]
 384:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 363              		.loc 1 384 0
 364 0012 FB68     		ldr	r3, [r7, #12]
 365 0014 9A68     		ldr	r2, [r3, #8]
 366 0016 FB69     		ldr	r3, [r7, #28]
 367 0018 D31A     		subs	r3, r2, r3
 368 001a BB61     		str	r3, [r7, #24]
 385:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 369              		.loc 1 385 0
 370 001c BA69     		ldr	r2, [r7, #24]
 371 001e 7B68     		ldr	r3, [r7, #4]
 372 0020 9A42     		cmp	r2, r3
 373 0022 0ED9     		bls	.L11
 386:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 387:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // All data fits before wrap around
 388:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 389:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 374              		.loc 1 389 0
 375 0024 FB68     		ldr	r3, [r7, #12]
 376 0026 5A68     		ldr	r2, [r3, #4]
 377 0028 FB69     		ldr	r3, [r7, #28]
 378 002a 1344     		add	r3, r3, r2
 379 002c 1846     		mov	r0, r3
 380 002e B968     		ldr	r1, [r7, #8]
 381 0030 7A68     		ldr	r2, [r7, #4]
 382 0032 FFF7FEFF 		bl	memcpy
 390:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 383              		.loc 1 390 0
 384 0036 FA69     		ldr	r2, [r7, #28]
 385 0038 7B68     		ldr	r3, [r7, #4]
 386 003a 1A44     		add	r2, r2, r3
 387 003c FB68     		ldr	r3, [r7, #12]
 388 003e DA60     		str	r2, [r3, #12]
 389 0040 1BE0     		b	.L10
 390              	.L11:
 391:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 392:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 393:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 394:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 395:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 391              		.loc 1 395 0
 392 0042 BB69     		ldr	r3, [r7, #24]
 393 0044 7B61     		str	r3, [r7, #20]
 396:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer + WrOff, pData, NumBytesAtOnce);
 394              		.loc 1 396 0
 395 0046 FB68     		ldr	r3, [r7, #12]
 396 0048 5A68     		ldr	r2, [r3, #4]
 397 004a FB69     		ldr	r3, [r7, #28]
 398 004c 1344     		add	r3, r3, r2
 399 004e 1846     		mov	r0, r3
 400 0050 B968     		ldr	r1, [r7, #8]
 401 0052 7A69     		ldr	r2, [r7, #20]
 402 0054 FFF7FEFF 		bl	memcpy
 397:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 403              		.loc 1 397 0
 404 0058 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccjwrkYl.s 			page 15


 405 005a BB69     		ldr	r3, [r7, #24]
 406 005c D31A     		subs	r3, r2, r3
 407 005e 7B61     		str	r3, [r7, #20]
 398:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
 408              		.loc 1 398 0
 409 0060 FB68     		ldr	r3, [r7, #12]
 410 0062 5968     		ldr	r1, [r3, #4]
 411 0064 BA68     		ldr	r2, [r7, #8]
 412 0066 BB69     		ldr	r3, [r7, #24]
 413 0068 1344     		add	r3, r3, r2
 414 006a 0846     		mov	r0, r1
 415 006c 1946     		mov	r1, r3
 416 006e 7A69     		ldr	r2, [r7, #20]
 417 0070 FFF7FEFF 		bl	memcpy
 399:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 418              		.loc 1 399 0
 419 0074 FB68     		ldr	r3, [r7, #12]
 420 0076 7A69     		ldr	r2, [r7, #20]
 421 0078 DA60     		str	r2, [r3, #12]
 422              	.L10:
 400:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 401:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 423              		.loc 1 401 0
 424 007a 2037     		adds	r7, r7, #32
 425              	.LCFI14:
 426              		.cfi_def_cfa_offset 8
 427 007c BD46     		mov	sp, r7
 428              	.LCFI15:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 007e 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE2:
 435              		.section	.text._PostTerminalSwitch,"ax",%progbits
 436              		.align	2
 437              		.thumb
 438              		.thumb_func
 440              	_PostTerminalSwitch:
 441              	.LFB3:
 402:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 403:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 404:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 405:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 406:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 407:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 408:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 409:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 410:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 411:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 412:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 413:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 414:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 415:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 416:../../../SystemView/SEGGER/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 442              		.loc 1 416 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccjwrkYl.s 			page 16


 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 0000 80B5     		push	{r7, lr}
 447              	.LCFI16:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 0002 84B0     		sub	sp, sp, #16
 452              	.LCFI17:
 453              		.cfi_def_cfa_offset 24
 454 0004 00AF     		add	r7, sp, #0
 455              	.LCFI18:
 456              		.cfi_def_cfa_register 7
 457 0006 7860     		str	r0, [r7, #4]
 458 0008 0B46     		mov	r3, r1
 459 000a FB70     		strb	r3, [r7, #3]
 417:../../../SystemView/SEGGER/SEGGER_RTT.c ****   char ac[2];
 418:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 419:../../../SystemView/SEGGER/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 460              		.loc 1 419 0
 461 000c FF23     		movs	r3, #255
 462 000e 3B73     		strb	r3, [r7, #12]
 420:../../../SystemView/SEGGER/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 463              		.loc 1 420 0
 464 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 465 0012 064A     		ldr	r2, .L14
 466 0014 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 467 0016 7B73     		strb	r3, [r7, #13]
 421:../../../SystemView/SEGGER/SEGGER_RTT.c ****   _WriteBlocking(pRing, ac, 2u);
 468              		.loc 1 421 0
 469 0018 07F10C03 		add	r3, r7, #12
 470 001c 7868     		ldr	r0, [r7, #4]
 471 001e 1946     		mov	r1, r3
 472 0020 0222     		movs	r2, #2
 473 0022 FFF7FEFF 		bl	_WriteBlocking
 422:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 474              		.loc 1 422 0
 475 0026 1037     		adds	r7, r7, #16
 476              	.LCFI19:
 477              		.cfi_def_cfa_offset 8
 478 0028 BD46     		mov	sp, r7
 479              	.LCFI20:
 480              		.cfi_def_cfa_register 13
 481              		@ sp needed
 482 002a 80BD     		pop	{r7, pc}
 483              	.L15:
 484              		.align	2
 485              	.L14:
 486 002c 00000000 		.word	_aTerminalId
 487              		.cfi_endproc
 488              	.LFE3:
 490              		.section	.text._GetAvailWriteSpace,"ax",%progbits
 491              		.align	2
 492              		.thumb
 493              		.thumb_func
 495              	_GetAvailWriteSpace:
 496              	.LFB4:
 423:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
ARM GAS  /tmp/ccjwrkYl.s 			page 17


 424:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 425:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 426:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 427:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 428:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 429:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 430:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    buffer without blocking.
 431:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 432:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 433:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 434:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 435:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 436:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 437:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 438:../../../SystemView/SEGGER/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 497              		.loc 1 438 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 24
 500              		@ frame_needed = 1, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 502 0000 80B4     		push	{r7}
 503              	.LCFI21:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 7, -4
 506 0002 87B0     		sub	sp, sp, #28
 507              	.LCFI22:
 508              		.cfi_def_cfa_offset 32
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI23:
 511              		.cfi_def_cfa_register 7
 512 0006 7860     		str	r0, [r7, #4]
 439:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 440:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 441:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned r;
 442:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 443:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 444:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 445:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 446:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 513              		.loc 1 446 0
 514 0008 7B68     		ldr	r3, [r7, #4]
 515 000a 1B69     		ldr	r3, [r3, #16]
 516 000c 3B61     		str	r3, [r7, #16]
 447:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 517              		.loc 1 447 0
 518 000e 7B68     		ldr	r3, [r7, #4]
 519 0010 DB68     		ldr	r3, [r3, #12]
 520 0012 FB60     		str	r3, [r7, #12]
 448:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 521              		.loc 1 448 0
 522 0014 3A69     		ldr	r2, [r7, #16]
 523 0016 FB68     		ldr	r3, [r7, #12]
 524 0018 9A42     		cmp	r2, r3
 525 001a 08D8     		bhi	.L17
 449:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 526              		.loc 1 449 0
 527 001c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjwrkYl.s 			page 18


 528 001e 9A68     		ldr	r2, [r3, #8]
 529 0020 FB68     		ldr	r3, [r7, #12]
 530 0022 D21A     		subs	r2, r2, r3
 531 0024 3B69     		ldr	r3, [r7, #16]
 532 0026 1344     		add	r3, r3, r2
 533 0028 013B     		subs	r3, r3, #1
 534 002a 7B61     		str	r3, [r7, #20]
 535 002c 04E0     		b	.L18
 536              	.L17:
 450:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 451:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 537              		.loc 1 451 0
 538 002e 3A69     		ldr	r2, [r7, #16]
 539 0030 FB68     		ldr	r3, [r7, #12]
 540 0032 D31A     		subs	r3, r2, r3
 541 0034 013B     		subs	r3, r3, #1
 542 0036 7B61     		str	r3, [r7, #20]
 543              	.L18:
 452:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 453:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 544              		.loc 1 453 0
 545 0038 7B69     		ldr	r3, [r7, #20]
 454:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 546              		.loc 1 454 0
 547 003a 1846     		mov	r0, r3
 548 003c 1C37     		adds	r7, r7, #28
 549              	.LCFI24:
 550              		.cfi_def_cfa_offset 4
 551 003e BD46     		mov	sp, r7
 552              	.LCFI25:
 553              		.cfi_def_cfa_register 13
 554              		@ sp needed
 555 0040 5DF8047B 		ldr	r7, [sp], #4
 556              	.LCFI26:
 557              		.cfi_restore 7
 558              		.cfi_def_cfa_offset 0
 559 0044 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE4:
 563 0046 00BF     		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 564              		.align	2
 565              		.global	SEGGER_RTT_ReadNoLock
 566              		.thumb
 567              		.thumb_func
 569              	SEGGER_RTT_ReadNoLock:
 570              	.LFB5:
 455:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 456:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 457:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 458:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Public code
 459:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 460:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 461:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 462:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 463:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 464:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 465:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccjwrkYl.s 			page 19


 466:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 467:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 468:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    which have been previously stored by the host.
 469:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 470:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 471:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 472:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 473:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 474:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 475:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 476:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 477:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes that have been read.
 478:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 479:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 571              		.loc 1 479 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 40
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575 0000 80B5     		push	{r7, lr}
 576              	.LCFI27:
 577              		.cfi_def_cfa_offset 8
 578              		.cfi_offset 7, -8
 579              		.cfi_offset 14, -4
 580 0002 8AB0     		sub	sp, sp, #40
 581              	.LCFI28:
 582              		.cfi_def_cfa_offset 48
 583 0004 00AF     		add	r7, sp, #0
 584              	.LCFI29:
 585              		.cfi_def_cfa_register 7
 586 0006 F860     		str	r0, [r7, #12]
 587 0008 B960     		str	r1, [r7, #8]
 588 000a 7A60     		str	r2, [r7, #4]
 480:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 481:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 482:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                RdOff;
 483:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                WrOff;
 484:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 485:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 486:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 487:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 589              		.loc 1 487 0
 590 000c 3C4B     		ldr	r3, .L26
 591 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 592 0010 002B     		cmp	r3, #0
 593 0012 01D1     		bne	.L21
 594              		.loc 1 487 0 is_stmt 0 discriminator 1
 595 0014 FFF7FEFF 		bl	_DoInit
 596              	.L21:
 488:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 597              		.loc 1 488 0 is_stmt 1
 598 0018 FA68     		ldr	r2, [r7, #12]
 599 001a 1346     		mov	r3, r2
 600 001c 5B00     		lsls	r3, r3, #1
 601 001e 1344     		add	r3, r3, r2
 602 0020 DB00     		lsls	r3, r3, #3
 603 0022 6033     		adds	r3, r3, #96
 604 0024 364A     		ldr	r2, .L26
ARM GAS  /tmp/ccjwrkYl.s 			page 20


 605 0026 1344     		add	r3, r3, r2
 606 0028 BB61     		str	r3, [r7, #24]
 489:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 607              		.loc 1 489 0
 608 002a BB68     		ldr	r3, [r7, #8]
 609 002c FB61     		str	r3, [r7, #28]
 490:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 610              		.loc 1 490 0
 611 002e BB69     		ldr	r3, [r7, #24]
 612 0030 1B69     		ldr	r3, [r3, #16]
 613 0032 3B62     		str	r3, [r7, #32]
 491:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 614              		.loc 1 491 0
 615 0034 BB69     		ldr	r3, [r7, #24]
 616 0036 DB68     		ldr	r3, [r3, #12]
 617 0038 7B61     		str	r3, [r7, #20]
 492:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRead = 0u;
 618              		.loc 1 492 0
 619 003a 0023     		movs	r3, #0
 620 003c 7B62     		str	r3, [r7, #36]
 493:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 494:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 495:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 496:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 621              		.loc 1 496 0
 622 003e 3A6A     		ldr	r2, [r7, #32]
 623 0040 7B69     		ldr	r3, [r7, #20]
 624 0042 9A42     		cmp	r2, r3
 625 0044 2AD9     		bls	.L22
 497:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 626              		.loc 1 497 0
 627 0046 BB69     		ldr	r3, [r7, #24]
 628 0048 9A68     		ldr	r2, [r3, #8]
 629 004a 3B6A     		ldr	r3, [r7, #32]
 630 004c D31A     		subs	r3, r2, r3
 631 004e 3B61     		str	r3, [r7, #16]
 498:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 632              		.loc 1 498 0
 633 0050 3A69     		ldr	r2, [r7, #16]
 634 0052 7B68     		ldr	r3, [r7, #4]
 635 0054 9342     		cmp	r3, r2
 636 0056 28BF     		it	cs
 637 0058 1346     		movcs	r3, r2
 638 005a 3B61     		str	r3, [r7, #16]
 499:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 639              		.loc 1 499 0
 640 005c BB69     		ldr	r3, [r7, #24]
 641 005e 5A68     		ldr	r2, [r3, #4]
 642 0060 3B6A     		ldr	r3, [r7, #32]
 643 0062 1344     		add	r3, r3, r2
 644 0064 F869     		ldr	r0, [r7, #28]
 645 0066 1946     		mov	r1, r3
 646 0068 3A69     		ldr	r2, [r7, #16]
 647 006a FFF7FEFF 		bl	memcpy
 500:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 648              		.loc 1 500 0
 649 006e 7A6A     		ldr	r2, [r7, #36]
ARM GAS  /tmp/ccjwrkYl.s 			page 21


 650 0070 3B69     		ldr	r3, [r7, #16]
 651 0072 1344     		add	r3, r3, r2
 652 0074 7B62     		str	r3, [r7, #36]
 501:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 653              		.loc 1 501 0
 654 0076 FA69     		ldr	r2, [r7, #28]
 655 0078 3B69     		ldr	r3, [r7, #16]
 656 007a 1344     		add	r3, r3, r2
 657 007c FB61     		str	r3, [r7, #28]
 502:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 658              		.loc 1 502 0
 659 007e 7A68     		ldr	r2, [r7, #4]
 660 0080 3B69     		ldr	r3, [r7, #16]
 661 0082 D31A     		subs	r3, r2, r3
 662 0084 7B60     		str	r3, [r7, #4]
 503:../../../SystemView/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 663              		.loc 1 503 0
 664 0086 3A6A     		ldr	r2, [r7, #32]
 665 0088 3B69     		ldr	r3, [r7, #16]
 666 008a 1344     		add	r3, r3, r2
 667 008c 3B62     		str	r3, [r7, #32]
 504:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 505:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 506:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 507:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 668              		.loc 1 507 0
 669 008e BB69     		ldr	r3, [r7, #24]
 670 0090 9A68     		ldr	r2, [r3, #8]
 671 0092 3B6A     		ldr	r3, [r7, #32]
 672 0094 9A42     		cmp	r2, r3
 673 0096 01D1     		bne	.L22
 508:../../../SystemView/SEGGER/SEGGER_RTT.c ****       RdOff = 0u;
 674              		.loc 1 508 0
 675 0098 0023     		movs	r3, #0
 676 009a 3B62     		str	r3, [r7, #32]
 677              	.L22:
 509:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 510:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 511:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 512:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Read remaining items of buffer
 513:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 514:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 678              		.loc 1 514 0
 679 009c 7A69     		ldr	r2, [r7, #20]
 680 009e 3B6A     		ldr	r3, [r7, #32]
 681 00a0 D31A     		subs	r3, r2, r3
 682 00a2 3B61     		str	r3, [r7, #16]
 515:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 683              		.loc 1 515 0
 684 00a4 3A69     		ldr	r2, [r7, #16]
 685 00a6 7B68     		ldr	r3, [r7, #4]
 686 00a8 9342     		cmp	r3, r2
 687 00aa 28BF     		it	cs
 688 00ac 1346     		movcs	r3, r2
 689 00ae 3B61     		str	r3, [r7, #16]
 516:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 690              		.loc 1 516 0
ARM GAS  /tmp/ccjwrkYl.s 			page 22


 691 00b0 3B69     		ldr	r3, [r7, #16]
 692 00b2 002B     		cmp	r3, #0
 693 00b4 18D0     		beq	.L23
 517:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 694              		.loc 1 517 0
 695 00b6 BB69     		ldr	r3, [r7, #24]
 696 00b8 5A68     		ldr	r2, [r3, #4]
 697 00ba 3B6A     		ldr	r3, [r7, #32]
 698 00bc 1344     		add	r3, r3, r2
 699 00be F869     		ldr	r0, [r7, #28]
 700 00c0 1946     		mov	r1, r3
 701 00c2 3A69     		ldr	r2, [r7, #16]
 702 00c4 FFF7FEFF 		bl	memcpy
 518:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 703              		.loc 1 518 0
 704 00c8 7A6A     		ldr	r2, [r7, #36]
 705 00ca 3B69     		ldr	r3, [r7, #16]
 706 00cc 1344     		add	r3, r3, r2
 707 00ce 7B62     		str	r3, [r7, #36]
 519:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 708              		.loc 1 519 0
 709 00d0 FA69     		ldr	r2, [r7, #28]
 710 00d2 3B69     		ldr	r3, [r7, #16]
 711 00d4 1344     		add	r3, r3, r2
 712 00d6 FB61     		str	r3, [r7, #28]
 520:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 713              		.loc 1 520 0
 714 00d8 7A68     		ldr	r2, [r7, #4]
 715 00da 3B69     		ldr	r3, [r7, #16]
 716 00dc D31A     		subs	r3, r2, r3
 717 00de 7B60     		str	r3, [r7, #4]
 521:../../../SystemView/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 718              		.loc 1 521 0
 719 00e0 3A6A     		ldr	r2, [r7, #32]
 720 00e2 3B69     		ldr	r3, [r7, #16]
 721 00e4 1344     		add	r3, r3, r2
 722 00e6 3B62     		str	r3, [r7, #32]
 723              	.L23:
 522:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 523:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (NumBytesRead) {
 724              		.loc 1 523 0
 725 00e8 7B6A     		ldr	r3, [r7, #36]
 726 00ea 002B     		cmp	r3, #0
 727 00ec 02D0     		beq	.L24
 524:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 728              		.loc 1 524 0
 729 00ee BB69     		ldr	r3, [r7, #24]
 730 00f0 3A6A     		ldr	r2, [r7, #32]
 731 00f2 1A61     		str	r2, [r3, #16]
 732              	.L24:
 525:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 526:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 527:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return NumBytesRead;
 733              		.loc 1 527 0
 734 00f4 7B6A     		ldr	r3, [r7, #36]
 528:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 735              		.loc 1 528 0
ARM GAS  /tmp/ccjwrkYl.s 			page 23


 736 00f6 1846     		mov	r0, r3
 737 00f8 2837     		adds	r7, r7, #40
 738              	.LCFI30:
 739              		.cfi_def_cfa_offset 8
 740 00fa BD46     		mov	sp, r7
 741              	.LCFI31:
 742              		.cfi_def_cfa_register 13
 743              		@ sp needed
 744 00fc 80BD     		pop	{r7, pc}
 745              	.L27:
 746 00fe 00BF     		.align	2
 747              	.L26:
 748 0100 00000000 		.word	_SEGGER_RTT
 749              		.cfi_endproc
 750              	.LFE5:
 752              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 753              		.align	2
 754              		.global	SEGGER_RTT_Read
 755              		.thumb
 756              		.thumb_func
 758              	SEGGER_RTT_Read:
 759              	.LFB6:
 529:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 530:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 531:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 532:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 533:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 534:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 535:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 536:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    which have been previously stored by the host.
 537:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 538:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 539:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 540:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 541:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 542:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 543:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 544:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes that have been read.
 545:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 546:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 760              		.loc 1 546 0
 761              		.cfi_startproc
 762              		@ args = 0, pretend = 0, frame = 24
 763              		@ frame_needed = 1, uses_anonymous_args = 0
 764 0000 80B5     		push	{r7, lr}
 765              	.LCFI32:
 766              		.cfi_def_cfa_offset 8
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 86B0     		sub	sp, sp, #24
 770              	.LCFI33:
 771              		.cfi_def_cfa_offset 32
 772 0004 00AF     		add	r7, sp, #0
 773              	.LCFI34:
 774              		.cfi_def_cfa_register 7
 775 0006 F860     		str	r0, [r7, #12]
 776 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccjwrkYl.s 			page 24


 777 000a 7A60     		str	r2, [r7, #4]
 778              	.LBB2:
 547:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesRead;
 548:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 549:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 779              		.loc 1 549 0
 780              	@ 549 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 781 000c EFF31183 		mrs   r3, basepri  
 782 0010 4FF02001 		mov   r1, #32       
 783 0014 81F31188 		msr   basepri, r1  
 784              		
 785              	@ 0 "" 2
 786              		.thumb
 787 0018 7B61     		str	r3, [r7, #20]
 550:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 551:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Call the non-locking read function
 552:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 553:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 788              		.loc 1 553 0
 789 001a F868     		ldr	r0, [r7, #12]
 790 001c B968     		ldr	r1, [r7, #8]
 791 001e 7A68     		ldr	r2, [r7, #4]
 792 0020 FFF7FEFF 		bl	SEGGER_RTT_ReadNoLock
 793 0024 3861     		str	r0, [r7, #16]
 554:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 555:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish up.
 556:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 557:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 794              		.loc 1 557 0
 795 0026 7B69     		ldr	r3, [r7, #20]
 796              	@ 557 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 797 0028 83F31188 		msr   basepri, r3  
 798              		
 799              	@ 0 "" 2
 800              		.thumb
 801              	.LBE2:
 558:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 559:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return NumBytesRead;
 802              		.loc 1 559 0
 803 002c 3B69     		ldr	r3, [r7, #16]
 560:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 804              		.loc 1 560 0
 805 002e 1846     		mov	r0, r3
 806 0030 1837     		adds	r7, r7, #24
 807              	.LCFI35:
 808              		.cfi_def_cfa_offset 8
 809 0032 BD46     		mov	sp, r7
 810              	.LCFI36:
 811              		.cfi_def_cfa_register 13
 812              		@ sp needed
 813 0034 80BD     		pop	{r7, pc}
 814              		.cfi_endproc
 815              	.LFE6:
 817 0036 00BF     		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 818              		.align	2
 819              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 820              		.thumb
ARM GAS  /tmp/ccjwrkYl.s 			page 25


 821              		.thumb_func
 823              	SEGGER_RTT_WriteWithOverwriteNoLock:
 824              	.LFB7:
 561:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 562:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 563:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 564:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 565:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 566:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 567:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 568:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block.
 569:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 570:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 571:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 572:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 573:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 574:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 575:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 576:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 577:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 578:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 579:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 580:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 581:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 582:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 583:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        connection reads RTT data.
 584:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 585:../../../SystemView/SEGGER/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 825              		.loc 1 585 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 32
 828              		@ frame_needed = 1, uses_anonymous_args = 0
 829 0000 80B5     		push	{r7, lr}
 830              	.LCFI37:
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 7, -8
 833              		.cfi_offset 14, -4
 834 0002 88B0     		sub	sp, sp, #32
 835              	.LCFI38:
 836              		.cfi_def_cfa_offset 40
 837 0004 00AF     		add	r7, sp, #0
 838              	.LCFI39:
 839              		.cfi_def_cfa_register 7
 840 0006 F860     		str	r0, [r7, #12]
 841 0008 B960     		str	r1, [r7, #8]
 842 000a 7A60     		str	r2, [r7, #4]
 586:../../../SystemView/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 587:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 588:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 589:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 590:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 843              		.loc 1 590 0
 844 000c BB68     		ldr	r3, [r7, #8]
 845 000e FB61     		str	r3, [r7, #28]
 591:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 592:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 593:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
ARM GAS  /tmp/ccjwrkYl.s 			page 26


 594:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 846              		.loc 1 594 0
 847 0010 FB68     		ldr	r3, [r7, #12]
 848 0012 5A1C     		adds	r2, r3, #1
 849 0014 1346     		mov	r3, r2
 850 0016 5B00     		lsls	r3, r3, #1
 851 0018 1344     		add	r3, r3, r2
 852 001a DB00     		lsls	r3, r3, #3
 853 001c 414A     		ldr	r2, .L41
 854 001e 1344     		add	r3, r3, r2
 855 0020 3B61     		str	r3, [r7, #16]
 595:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 596:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 597:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 598:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 856              		.loc 1 598 0
 857 0022 3B69     		ldr	r3, [r7, #16]
 858 0024 DA68     		ldr	r2, [r3, #12]
 859 0026 3B69     		ldr	r3, [r7, #16]
 860 0028 1B69     		ldr	r3, [r3, #16]
 861 002a 9A42     		cmp	r2, r3
 862 002c 04D1     		bne	.L31
 599:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 863              		.loc 1 599 0
 864 002e 3B69     		ldr	r3, [r7, #16]
 865 0030 9B68     		ldr	r3, [r3, #8]
 866 0032 013B     		subs	r3, r3, #1
 867 0034 BB61     		str	r3, [r7, #24]
 868 0036 17E0     		b	.L32
 869              	.L31:
 600:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 870              		.loc 1 600 0
 871 0038 3B69     		ldr	r3, [r7, #16]
 872 003a DA68     		ldr	r2, [r3, #12]
 873 003c 3B69     		ldr	r3, [r7, #16]
 874 003e 1B69     		ldr	r3, [r3, #16]
 875 0040 9A42     		cmp	r2, r3
 876 0042 07D2     		bcs	.L33
 601:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 877              		.loc 1 601 0
 878 0044 3B69     		ldr	r3, [r7, #16]
 879 0046 1A69     		ldr	r2, [r3, #16]
 880 0048 3B69     		ldr	r3, [r7, #16]
 881 004a DB68     		ldr	r3, [r3, #12]
 882 004c D31A     		subs	r3, r2, r3
 883 004e 013B     		subs	r3, r3, #1
 884 0050 BB61     		str	r3, [r7, #24]
 885 0052 09E0     		b	.L32
 886              	.L33:
 602:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 603:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 887              		.loc 1 603 0
 888 0054 3B69     		ldr	r3, [r7, #16]
 889 0056 1A69     		ldr	r2, [r3, #16]
 890 0058 3B69     		ldr	r3, [r7, #16]
 891 005a DB68     		ldr	r3, [r3, #12]
 892 005c D21A     		subs	r2, r2, r3
ARM GAS  /tmp/ccjwrkYl.s 			page 27


 893 005e 3B69     		ldr	r3, [r7, #16]
 894 0060 9B68     		ldr	r3, [r3, #8]
 895 0062 1344     		add	r3, r3, r2
 896 0064 013B     		subs	r3, r3, #1
 897 0066 BB61     		str	r3, [r7, #24]
 898              	.L32:
 604:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 605:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (NumBytes > Avail) {
 899              		.loc 1 605 0
 900 0068 7A68     		ldr	r2, [r7, #4]
 901 006a BB69     		ldr	r3, [r7, #24]
 902 006c 9A42     		cmp	r2, r3
 903 006e 15D9     		bls	.L34
 606:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 904              		.loc 1 606 0
 905 0070 3B69     		ldr	r3, [r7, #16]
 906 0072 1A69     		ldr	r2, [r3, #16]
 907 0074 7968     		ldr	r1, [r7, #4]
 908 0076 BB69     		ldr	r3, [r7, #24]
 909 0078 CB1A     		subs	r3, r1, r3
 910 007a 1A44     		add	r2, r2, r3
 911 007c 3B69     		ldr	r3, [r7, #16]
 912 007e 1A61     		str	r2, [r3, #16]
 607:../../../SystemView/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 913              		.loc 1 607 0
 914 0080 06E0     		b	.L35
 915              	.L36:
 608:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 916              		.loc 1 608 0
 917 0082 3B69     		ldr	r3, [r7, #16]
 918 0084 1A69     		ldr	r2, [r3, #16]
 919 0086 3B69     		ldr	r3, [r7, #16]
 920 0088 9B68     		ldr	r3, [r3, #8]
 921 008a D21A     		subs	r2, r2, r3
 922 008c 3B69     		ldr	r3, [r7, #16]
 923 008e 1A61     		str	r2, [r3, #16]
 924              	.L35:
 607:../../../SystemView/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 925              		.loc 1 607 0
 926 0090 3B69     		ldr	r3, [r7, #16]
 927 0092 1A69     		ldr	r2, [r3, #16]
 928 0094 3B69     		ldr	r3, [r7, #16]
 929 0096 9B68     		ldr	r3, [r3, #8]
 930 0098 9A42     		cmp	r2, r3
 931 009a F2D2     		bcs	.L36
 932              	.L34:
 609:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 610:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 611:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 612:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 613:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 614:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 933              		.loc 1 614 0
 934 009c 3B69     		ldr	r3, [r7, #16]
 935 009e 9A68     		ldr	r2, [r3, #8]
 936 00a0 3B69     		ldr	r3, [r7, #16]
 937 00a2 DB68     		ldr	r3, [r3, #12]
ARM GAS  /tmp/ccjwrkYl.s 			page 28


 938 00a4 D31A     		subs	r3, r2, r3
 939 00a6 BB61     		str	r3, [r7, #24]
 940              	.L40:
 615:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
 616:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 941              		.loc 1 616 0
 942 00a8 BA69     		ldr	r2, [r7, #24]
 943 00aa 7B68     		ldr	r3, [r7, #4]
 944 00ac 9A42     		cmp	r2, r3
 945 00ae 1AD9     		bls	.L37
 946              	.LBB3:
 617:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 618:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // Last round
 619:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 620:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if 1 // memcpy() is good for large amounts of data, but the overhead is too big for small amounts.
 621:../../../SystemView/SEGGER/SEGGER_RTT.c ****       char* pDst;
 622:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pDst = pRing->pBuffer + pRing->WrOff;
 947              		.loc 1 622 0
 948 00b0 3B69     		ldr	r3, [r7, #16]
 949 00b2 5A68     		ldr	r2, [r3, #4]
 950 00b4 3B69     		ldr	r3, [r7, #16]
 951 00b6 DB68     		ldr	r3, [r3, #12]
 952 00b8 1344     		add	r3, r3, r2
 953 00ba 7B61     		str	r3, [r7, #20]
 623:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 954              		.loc 1 623 0
 955 00bc 3B69     		ldr	r3, [r7, #16]
 956 00be DA68     		ldr	r2, [r3, #12]
 957 00c0 7B68     		ldr	r3, [r7, #4]
 958 00c2 1A44     		add	r2, r2, r3
 959 00c4 3B69     		ldr	r3, [r7, #16]
 960 00c6 DA60     		str	r2, [r3, #12]
 961              	.L38:
 624:../../../SystemView/SEGGER/SEGGER_RTT.c ****       do {
 625:../../../SystemView/SEGGER/SEGGER_RTT.c ****         *pDst++ = *pData++;
 962              		.loc 1 625 0 discriminator 1
 963 00c8 7B69     		ldr	r3, [r7, #20]
 964 00ca 5A1C     		adds	r2, r3, #1
 965 00cc 7A61     		str	r2, [r7, #20]
 966 00ce FA69     		ldr	r2, [r7, #28]
 967 00d0 511C     		adds	r1, r2, #1
 968 00d2 F961     		str	r1, [r7, #28]
 969 00d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 970 00d6 1A70     		strb	r2, [r3]
 626:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } while (--NumBytes);
 971              		.loc 1 626 0 discriminator 1
 972 00d8 7B68     		ldr	r3, [r7, #4]
 973 00da 013B     		subs	r3, r3, #1
 974 00dc 7B60     		str	r3, [r7, #4]
 975 00de 7B68     		ldr	r3, [r7, #4]
 976 00e0 002B     		cmp	r3, #0
 977 00e2 F1D1     		bne	.L38
 627:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 628:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 629:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 630:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 631:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;  //Alternatively: NumBytes = 0;
ARM GAS  /tmp/ccjwrkYl.s 			page 29


 978              		.loc 1 631 0
 979 00e4 1BE0     		b	.L30
 980              	.L37:
 981              	.LBE3:
 632:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {
 633:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 634:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 635:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 636:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + pRing->WrOff, pData, Avail);
 982              		.loc 1 636 0
 983 00e6 3B69     		ldr	r3, [r7, #16]
 984 00e8 5A68     		ldr	r2, [r3, #4]
 985 00ea 3B69     		ldr	r3, [r7, #16]
 986 00ec DB68     		ldr	r3, [r3, #12]
 987 00ee 1344     		add	r3, r3, r2
 988 00f0 1846     		mov	r0, r3
 989 00f2 F969     		ldr	r1, [r7, #28]
 990 00f4 BA69     		ldr	r2, [r7, #24]
 991 00f6 FFF7FEFF 		bl	memcpy
 637:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pData += Avail;
 992              		.loc 1 637 0
 993 00fa FA69     		ldr	r2, [r7, #28]
 994 00fc BB69     		ldr	r3, [r7, #24]
 995 00fe 1344     		add	r3, r3, r2
 996 0100 FB61     		str	r3, [r7, #28]
 638:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = 0;
 997              		.loc 1 638 0
 998 0102 3B69     		ldr	r3, [r7, #16]
 999 0104 0022     		movs	r2, #0
 1000 0106 DA60     		str	r2, [r3, #12]
 639:../../../SystemView/SEGGER/SEGGER_RTT.c ****       NumBytes -= Avail;
 1001              		.loc 1 639 0
 1002 0108 7A68     		ldr	r2, [r7, #4]
 1003 010a BB69     		ldr	r3, [r7, #24]
 1004 010c D31A     		subs	r3, r2, r3
 1005 010e 7B60     		str	r3, [r7, #4]
 640:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 1006              		.loc 1 640 0
 1007 0110 3B69     		ldr	r3, [r7, #16]
 1008 0112 9B68     		ldr	r3, [r3, #8]
 1009 0114 013B     		subs	r3, r3, #1
 1010 0116 BB61     		str	r3, [r7, #24]
 641:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 642:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (NumBytes);
 1011              		.loc 1 642 0
 1012 0118 7B68     		ldr	r3, [r7, #4]
 1013 011a 002B     		cmp	r3, #0
 1014 011c C4D1     		bne	.L40
 1015              	.L30:
 643:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1016              		.loc 1 643 0
 1017 011e 2037     		adds	r7, r7, #32
 1018              	.LCFI40:
 1019              		.cfi_def_cfa_offset 8
 1020 0120 BD46     		mov	sp, r7
 1021              	.LCFI41:
 1022              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccjwrkYl.s 			page 30


 1023              		@ sp needed
 1024 0122 80BD     		pop	{r7, pc}
 1025              	.L42:
 1026              		.align	2
 1027              	.L41:
 1028 0124 00000000 		.word	_SEGGER_RTT
 1029              		.cfi_endproc
 1030              	.LFE7:
 1032              		.section	.text.SEGGER_RTT_WriteSkipNoLock,"ax",%progbits
 1033              		.align	2
 1034              		.global	SEGGER_RTT_WriteSkipNoLock
 1035              		.thumb
 1036              		.thumb_func
 1038              	SEGGER_RTT_WriteSkipNoLock:
 1039              	.LFB8:
 644:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 645:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 646:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 647:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 648:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 649:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 650:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 651:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 652:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 653:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 654:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 655:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 656:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 657:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 658:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 659:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 660:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 661:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 662:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 663:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 664:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 665:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 666:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 667:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 668:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 669:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1040              		.loc 1 669 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 48
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044 0000 80B5     		push	{r7, lr}
 1045              	.LCFI42:
 1046              		.cfi_def_cfa_offset 8
 1047              		.cfi_offset 7, -8
 1048              		.cfi_offset 14, -4
 1049 0002 8CB0     		sub	sp, sp, #48
 1050              	.LCFI43:
 1051              		.cfi_def_cfa_offset 56
 1052 0004 00AF     		add	r7, sp, #0
 1053              	.LCFI44:
 1054              		.cfi_def_cfa_register 7
 1055 0006 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccjwrkYl.s 			page 31


 1056 0008 B960     		str	r1, [r7, #8]
 1057 000a 7A60     		str	r2, [r7, #4]
 670:../../../SystemView/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 671:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 672:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 673:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              RdOff;
 674:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              WrOff;
 675:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Rem;
 676:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 677:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1058              		.loc 1 677 0
 1059 000c BB68     		ldr	r3, [r7, #8]
 1060 000e FB62     		str	r3, [r7, #44]
 678:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 679:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 680:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 681:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1061              		.loc 1 681 0
 1062 0010 FB68     		ldr	r3, [r7, #12]
 1063 0012 5A1C     		adds	r2, r3, #1
 1064 0014 1346     		mov	r3, r2
 1065 0016 5B00     		lsls	r3, r3, #1
 1066 0018 1344     		add	r3, r3, r2
 1067 001a DB00     		lsls	r3, r3, #3
 1068 001c 464A     		ldr	r2, .L51
 1069 001e 1344     		add	r3, r3, r2
 1070 0020 7B62     		str	r3, [r7, #36]
 682:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1071              		.loc 1 682 0
 1072 0022 7B6A     		ldr	r3, [r7, #36]
 1073 0024 1B69     		ldr	r3, [r3, #16]
 1074 0026 3B62     		str	r3, [r7, #32]
 683:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1075              		.loc 1 683 0
 1076 0028 7B6A     		ldr	r3, [r7, #36]
 1077 002a DB68     		ldr	r3, [r3, #12]
 1078 002c FB61     		str	r3, [r7, #28]
 684:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 685:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Handle the most common cases fastest.
 686:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Which is:
 687:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    RdOff <= WrOff -> Space until wrap around is free.
 688:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //  AND
 689:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    WrOff + NumBytes < SizeOfBuffer -> No Wrap around necessary.
 690:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 691:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //  OR
 692:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 693:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    RdOff > WrOff -> Space until RdOff - 1 is free.
 694:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //  AND
 695:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    WrOff + NumBytes < RdOff -> Data fits into buffer
 696:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 697:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 1079              		.loc 1 697 0
 1080 002e 3A6A     		ldr	r2, [r7, #32]
 1081 0030 FB69     		ldr	r3, [r7, #28]
 1082 0032 9A42     		cmp	r2, r3
 1083 0034 62D8     		bhi	.L44
 698:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
ARM GAS  /tmp/ccjwrkYl.s 			page 32


 699:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Get space until WrOff will be at wrap around.
 700:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 701:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u - WrOff ;
 1084              		.loc 1 701 0
 1085 0036 7B6A     		ldr	r3, [r7, #36]
 1086 0038 9A68     		ldr	r2, [r3, #8]
 1087 003a FB69     		ldr	r3, [r7, #28]
 1088 003c D31A     		subs	r3, r2, r3
 1089 003e 013B     		subs	r3, r3, #1
 1090 0040 BB61     		str	r3, [r7, #24]
 702:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1091              		.loc 1 702 0
 1092 0042 BA69     		ldr	r2, [r7, #24]
 1093 0044 7B68     		ldr	r3, [r7, #4]
 1094 0046 9A42     		cmp	r2, r3
 1095 0048 1DD3     		bcc	.L45
 1096              	.LBB4:
 703:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if 1 // memcpy() is good for large amounts of data, but the overhead is too big for small amounts.
 704:../../../SystemView/SEGGER/SEGGER_RTT.c ****       char* pDst;
 705:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pDst = pRing->pBuffer + WrOff;
 1097              		.loc 1 705 0
 1098 004a 7B6A     		ldr	r3, [r7, #36]
 1099 004c 5A68     		ldr	r2, [r3, #4]
 1100 004e FB69     		ldr	r3, [r7, #28]
 1101 0050 1344     		add	r3, r3, r2
 1102 0052 BB62     		str	r3, [r7, #40]
 706:../../../SystemView/SEGGER/SEGGER_RTT.c ****       WrOff += NumBytes;
 1103              		.loc 1 706 0
 1104 0054 FA69     		ldr	r2, [r7, #28]
 1105 0056 7B68     		ldr	r3, [r7, #4]
 1106 0058 1344     		add	r3, r3, r2
 1107 005a FB61     		str	r3, [r7, #28]
 1108              	.L46:
 707:../../../SystemView/SEGGER/SEGGER_RTT.c ****       do {
 708:../../../SystemView/SEGGER/SEGGER_RTT.c ****         *pDst++ = *pData++;
 1109              		.loc 1 708 0 discriminator 1
 1110 005c BB6A     		ldr	r3, [r7, #40]
 1111 005e 5A1C     		adds	r2, r3, #1
 1112 0060 BA62     		str	r2, [r7, #40]
 1113 0062 FA6A     		ldr	r2, [r7, #44]
 1114 0064 511C     		adds	r1, r2, #1
 1115 0066 F962     		str	r1, [r7, #44]
 1116 0068 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1117 006a 1A70     		strb	r2, [r3]
 709:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } while (--NumBytes);
 1118              		.loc 1 709 0 discriminator 1
 1119 006c 7B68     		ldr	r3, [r7, #4]
 1120 006e 013B     		subs	r3, r3, #1
 1121 0070 7B60     		str	r3, [r7, #4]
 1122 0072 7B68     		ldr	r3, [r7, #4]
 1123 0074 002B     		cmp	r3, #0
 1124 0076 F1D1     		bne	.L46
 710:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 1125              		.loc 1 710 0
 1126 0078 FA69     		ldr	r2, [r7, #28]
 1127 007a 7B68     		ldr	r3, [r7, #4]
 1128 007c 1A44     		add	r2, r2, r3
ARM GAS  /tmp/ccjwrkYl.s 			page 33


 1129 007e 7B6A     		ldr	r3, [r7, #36]
 1130 0080 DA60     		str	r2, [r3, #12]
 711:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 712:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 713:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 714:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 715:../../../SystemView/SEGGER/SEGGER_RTT.c ****       return 1;
 1131              		.loc 1 715 0
 1132 0082 0123     		movs	r3, #1
 1133 0084 54E0     		b	.L47
 1134              	.L45:
 1135              	.LBE4:
 716:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 717:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 718:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If data did not fit into space until wrap around calculate complete space in buffer.
 719:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 720:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail += RdOff;
 1136              		.loc 1 720 0
 1137 0086 BA69     		ldr	r2, [r7, #24]
 1138 0088 3B6A     		ldr	r3, [r7, #32]
 1139 008a 1344     		add	r3, r3, r2
 1140 008c BB61     		str	r3, [r7, #24]
 721:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 722:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If there is still no space for the whole of this output, don't bother.
 723:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 724:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1141              		.loc 1 724 0
 1142 008e BA69     		ldr	r2, [r7, #24]
 1143 0090 7B68     		ldr	r3, [r7, #4]
 1144 0092 9A42     		cmp	r2, r3
 1145 0094 4BD3     		bcc	.L48
 725:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 726:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //  OK, we have enough space in buffer. Copy in one or 2 chunks
 727:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 728:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;      // Space until end of buffer
 1146              		.loc 1 728 0
 1147 0096 7B6A     		ldr	r3, [r7, #36]
 1148 0098 9A68     		ldr	r2, [r3, #8]
 1149 009a FB69     		ldr	r3, [r7, #28]
 1150 009c D31A     		subs	r3, r2, r3
 1151 009e 7B61     		str	r3, [r7, #20]
 729:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Rem > NumBytes) {
 1152              		.loc 1 729 0
 1153 00a0 7A69     		ldr	r2, [r7, #20]
 1154 00a2 7B68     		ldr	r3, [r7, #4]
 1155 00a4 9A42     		cmp	r2, r3
 1156 00a6 0ED9     		bls	.L49
 730:../../../SystemView/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 1157              		.loc 1 730 0
 1158 00a8 7B6A     		ldr	r3, [r7, #36]
 1159 00aa 5A68     		ldr	r2, [r3, #4]
 1160 00ac FB69     		ldr	r3, [r7, #28]
 1161 00ae 1344     		add	r3, r3, r2
 1162 00b0 1846     		mov	r0, r3
 1163 00b2 F96A     		ldr	r1, [r7, #44]
 1164 00b4 7A68     		ldr	r2, [r7, #4]
 1165 00b6 FFF7FEFF 		bl	memcpy
ARM GAS  /tmp/ccjwrkYl.s 			page 34


 731:../../../SystemView/SEGGER/SEGGER_RTT.c ****         pRing->WrOff = WrOff + NumBytes;
 1166              		.loc 1 731 0
 1167 00ba FA69     		ldr	r2, [r7, #28]
 1168 00bc 7B68     		ldr	r3, [r7, #4]
 1169 00be 1A44     		add	r2, r2, r3
 1170 00c0 7B6A     		ldr	r3, [r7, #36]
 1171 00c2 DA60     		str	r2, [r3, #12]
 1172 00c4 18E0     		b	.L50
 1173              	.L49:
 732:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
 733:../../../SystemView/SEGGER/SEGGER_RTT.c ****         //
 734:../../../SystemView/SEGGER/SEGGER_RTT.c ****         // We reach the end of the buffer, so need to wrap around
 735:../../../SystemView/SEGGER/SEGGER_RTT.c ****         //
 736:../../../SystemView/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer + WrOff, pData, Rem);
 1174              		.loc 1 736 0
 1175 00c6 7B6A     		ldr	r3, [r7, #36]
 1176 00c8 5A68     		ldr	r2, [r3, #4]
 1177 00ca FB69     		ldr	r3, [r7, #28]
 1178 00cc 1344     		add	r3, r3, r2
 1179 00ce 1846     		mov	r0, r3
 1180 00d0 F96A     		ldr	r1, [r7, #44]
 1181 00d2 7A69     		ldr	r2, [r7, #20]
 1182 00d4 FFF7FEFF 		bl	memcpy
 737:../../../SystemView/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer, pData + Rem, NumBytes - Rem);
 1183              		.loc 1 737 0
 1184 00d8 7B6A     		ldr	r3, [r7, #36]
 1185 00da 5868     		ldr	r0, [r3, #4]
 1186 00dc FA6A     		ldr	r2, [r7, #44]
 1187 00de 7B69     		ldr	r3, [r7, #20]
 1188 00e0 D118     		adds	r1, r2, r3
 1189 00e2 7A68     		ldr	r2, [r7, #4]
 1190 00e4 7B69     		ldr	r3, [r7, #20]
 1191 00e6 D31A     		subs	r3, r2, r3
 1192 00e8 1A46     		mov	r2, r3
 1193 00ea FFF7FEFF 		bl	memcpy
 738:../../../SystemView/SEGGER/SEGGER_RTT.c ****         pRing->WrOff = NumBytes - Rem;
 1194              		.loc 1 738 0
 1195 00ee 7A68     		ldr	r2, [r7, #4]
 1196 00f0 7B69     		ldr	r3, [r7, #20]
 1197 00f2 D21A     		subs	r2, r2, r3
 1198 00f4 7B6A     		ldr	r3, [r7, #36]
 1199 00f6 DA60     		str	r2, [r3, #12]
 1200              	.L50:
 739:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
 740:../../../SystemView/SEGGER/SEGGER_RTT.c ****       return 1;
 1201              		.loc 1 740 0
 1202 00f8 0123     		movs	r3, #1
 1203 00fa 19E0     		b	.L47
 1204              	.L44:
 741:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 742:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 743:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 1205              		.loc 1 743 0
 1206 00fc 3A6A     		ldr	r2, [r7, #32]
 1207 00fe FB69     		ldr	r3, [r7, #28]
 1208 0100 D31A     		subs	r3, r2, r3
 1209 0102 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccjwrkYl.s 			page 35


 1210 0104 BB61     		str	r3, [r7, #24]
 744:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1211              		.loc 1 744 0
 1212 0106 BA69     		ldr	r2, [r7, #24]
 1213 0108 7B68     		ldr	r3, [r7, #4]
 1214 010a 9A42     		cmp	r2, r3
 1215 010c 0FD3     		bcc	.L48
 745:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 1216              		.loc 1 745 0
 1217 010e 7B6A     		ldr	r3, [r7, #36]
 1218 0110 5A68     		ldr	r2, [r3, #4]
 1219 0112 FB69     		ldr	r3, [r7, #28]
 1220 0114 1344     		add	r3, r3, r2
 1221 0116 1846     		mov	r0, r3
 1222 0118 F96A     		ldr	r1, [r7, #44]
 1223 011a 7A68     		ldr	r2, [r7, #4]
 1224 011c FFF7FEFF 		bl	memcpy
 746:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 1225              		.loc 1 746 0
 1226 0120 FA69     		ldr	r2, [r7, #28]
 1227 0122 7B68     		ldr	r3, [r7, #4]
 1228 0124 1A44     		add	r2, r2, r3
 1229 0126 7B6A     		ldr	r3, [r7, #36]
 1230 0128 DA60     		str	r2, [r3, #12]
 747:../../../SystemView/SEGGER/SEGGER_RTT.c ****       return 1;
 1231              		.loc 1 747 0
 1232 012a 0123     		movs	r3, #1
 1233 012c 00E0     		b	.L47
 1234              	.L48:
 748:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 749:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 750:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 751:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // If we reach this point no data has been written
 752:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 753:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return 0;
 1235              		.loc 1 753 0
 1236 012e 0023     		movs	r3, #0
 1237              	.L47:
 754:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1238              		.loc 1 754 0
 1239 0130 1846     		mov	r0, r3
 1240 0132 3037     		adds	r7, r7, #48
 1241              	.LCFI45:
 1242              		.cfi_def_cfa_offset 8
 1243 0134 BD46     		mov	sp, r7
 1244              	.LCFI46:
 1245              		.cfi_def_cfa_register 13
 1246              		@ sp needed
 1247 0136 80BD     		pop	{r7, pc}
 1248              	.L52:
 1249              		.align	2
 1250              	.L51:
 1251 0138 00000000 		.word	_SEGGER_RTT
 1252              		.cfi_endproc
 1253              	.LFE8:
 1255              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 1256              		.align	2
ARM GAS  /tmp/ccjwrkYl.s 			page 36


 1257              		.global	SEGGER_RTT_WriteNoLock
 1258              		.thumb
 1259              		.thumb_func
 1261              	SEGGER_RTT_WriteNoLock:
 1262              	.LFB9:
 755:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 756:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 757:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 758:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
 759:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 760:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 761:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 762:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 763:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
 764:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 765:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 766:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 767:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 768:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 769:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 770:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 771:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 772:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 773:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 774:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, remaining characters of pBuffer are dropp
 775:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 776:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 777:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 778:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 779:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1263              		.loc 1 779 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 32
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267 0000 80B5     		push	{r7, lr}
 1268              	.LCFI47:
 1269              		.cfi_def_cfa_offset 8
 1270              		.cfi_offset 7, -8
 1271              		.cfi_offset 14, -4
 1272 0002 88B0     		sub	sp, sp, #32
 1273              	.LCFI48:
 1274              		.cfi_def_cfa_offset 40
 1275 0004 00AF     		add	r7, sp, #0
 1276              	.LCFI49:
 1277              		.cfi_def_cfa_register 7
 1278 0006 F860     		str	r0, [r7, #12]
 1279 0008 B960     		str	r1, [r7, #8]
 1280 000a 7A60     		str	r2, [r7, #4]
 780:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Status;
 781:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 782:../../../SystemView/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 783:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 784:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 785:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1281              		.loc 1 785 0
 1282 000c BB68     		ldr	r3, [r7, #8]
 1283 000e BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccjwrkYl.s 			page 37


 786:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 787:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
 788:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 789:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1284              		.loc 1 789 0
 1285 0010 FB68     		ldr	r3, [r7, #12]
 1286 0012 5A1C     		adds	r2, r3, #1
 1287 0014 1346     		mov	r3, r2
 1288 0016 5B00     		lsls	r3, r3, #1
 1289 0018 1344     		add	r3, r3, r2
 1290 001a DB00     		lsls	r3, r3, #3
 1291 001c 1E4A     		ldr	r2, .L63
 1292 001e 1344     		add	r3, r3, r2
 1293 0020 7B61     		str	r3, [r7, #20]
 790:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 791:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // How we output depends upon the mode...
 792:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 793:../../../SystemView/SEGGER/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1294              		.loc 1 793 0
 1295 0022 7B69     		ldr	r3, [r7, #20]
 1296 0024 5B69     		ldr	r3, [r3, #20]
 1297 0026 012B     		cmp	r3, #1
 1298 0028 17D0     		beq	.L55
 1299 002a 012B     		cmp	r3, #1
 1300 002c 02D3     		bcc	.L56
 1301 002e 022B     		cmp	r3, #2
 1302 0030 23D0     		beq	.L57
 1303 0032 29E0     		b	.L62
 1304              	.L56:
 794:../../../SystemView/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 795:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 796:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
 797:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // of this output, don't bother.
 798:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 799:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1305              		.loc 1 799 0
 1306 0034 7869     		ldr	r0, [r7, #20]
 1307 0036 FFF7FEFF 		bl	_GetAvailWriteSpace
 1308 003a 3861     		str	r0, [r7, #16]
 800:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1309              		.loc 1 800 0
 1310 003c 3A69     		ldr	r2, [r7, #16]
 1311 003e 7B68     		ldr	r3, [r7, #4]
 1312 0040 9A42     		cmp	r2, r3
 1313 0042 02D2     		bcs	.L58
 801:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = 0u;
 1314              		.loc 1 801 0
 1315 0044 0023     		movs	r3, #0
 1316 0046 FB61     		str	r3, [r7, #28]
 802:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {
 803:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = NumBytes;
 804:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 805:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 806:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1317              		.loc 1 806 0
 1318 0048 21E0     		b	.L60
 1319              	.L58:
ARM GAS  /tmp/ccjwrkYl.s 			page 38


 803:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1320              		.loc 1 803 0
 1321 004a 7B68     		ldr	r3, [r7, #4]
 1322 004c FB61     		str	r3, [r7, #28]
 804:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 1323              		.loc 1 804 0
 1324 004e 7869     		ldr	r0, [r7, #20]
 1325 0050 B969     		ldr	r1, [r7, #24]
 1326 0052 7A68     		ldr	r2, [r7, #4]
 1327 0054 FFF7FEFF 		bl	_WriteNoCheck
 1328              		.loc 1 806 0
 1329 0058 19E0     		b	.L60
 1330              	.L55:
 807:../../../SystemView/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
 808:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 809:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
 810:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 811:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1331              		.loc 1 811 0
 1332 005a 7869     		ldr	r0, [r7, #20]
 1333 005c FFF7FEFF 		bl	_GetAvailWriteSpace
 1334 0060 3861     		str	r0, [r7, #16]
 812:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1335              		.loc 1 812 0
 1336 0062 7A68     		ldr	r2, [r7, #4]
 1337 0064 3B69     		ldr	r3, [r7, #16]
 1338 0066 9342     		cmp	r3, r2
 1339 0068 28BF     		it	cs
 1340 006a 1346     		movcs	r3, r2
 1341 006c FB61     		str	r3, [r7, #28]
 813:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1342              		.loc 1 813 0
 1343 006e 7869     		ldr	r0, [r7, #20]
 1344 0070 B969     		ldr	r1, [r7, #24]
 1345 0072 FA69     		ldr	r2, [r7, #28]
 1346 0074 FFF7FEFF 		bl	_WriteNoCheck
 814:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1347              		.loc 1 814 0
 1348 0078 09E0     		b	.L60
 1349              	.L57:
 815:../../../SystemView/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 816:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 817:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
 818:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 819:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
 1350              		.loc 1 819 0
 1351 007a 7869     		ldr	r0, [r7, #20]
 1352 007c B969     		ldr	r1, [r7, #24]
 1353 007e 7A68     		ldr	r2, [r7, #4]
 1354 0080 FFF7FEFF 		bl	_WriteBlocking
 1355 0084 F861     		str	r0, [r7, #28]
 820:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1356              		.loc 1 820 0
 1357 0086 02E0     		b	.L60
 1358              	.L62:
 821:../../../SystemView/SEGGER/SEGGER_RTT.c ****   default:
 822:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = 0u;
ARM GAS  /tmp/ccjwrkYl.s 			page 39


 1359              		.loc 1 822 0
 1360 0088 0023     		movs	r3, #0
 1361 008a FB61     		str	r3, [r7, #28]
 823:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1362              		.loc 1 823 0
 1363 008c 00BF     		nop
 1364              	.L60:
 824:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 825:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 826:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish up.
 827:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 828:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return Status;
 1365              		.loc 1 828 0
 1366 008e FB69     		ldr	r3, [r7, #28]
 829:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1367              		.loc 1 829 0
 1368 0090 1846     		mov	r0, r3
 1369 0092 2037     		adds	r7, r7, #32
 1370              	.LCFI50:
 1371              		.cfi_def_cfa_offset 8
 1372 0094 BD46     		mov	sp, r7
 1373              	.LCFI51:
 1374              		.cfi_def_cfa_register 13
 1375              		@ sp needed
 1376 0096 80BD     		pop	{r7, pc}
 1377              	.L64:
 1378              		.align	2
 1379              	.L63:
 1380 0098 00000000 		.word	_SEGGER_RTT
 1381              		.cfi_endproc
 1382              	.LFE9:
 1384              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 1385              		.align	2
 1386              		.global	SEGGER_RTT_Write
 1387              		.thumb
 1388              		.thumb_func
 1390              	SEGGER_RTT_Write:
 1391              	.LFB10:
 830:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 831:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 832:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 833:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Write
 834:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 835:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 836:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 837:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 838:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 839:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 840:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 841:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 842:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 843:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 844:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 845:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 846:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 847:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 848:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, remaining characters of pBuffer are dropp
ARM GAS  /tmp/ccjwrkYl.s 			page 40


 849:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 850:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1392              		.loc 1 850 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 24
 1395              		@ frame_needed = 1, uses_anonymous_args = 0
 1396 0000 80B5     		push	{r7, lr}
 1397              	.LCFI52:
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 86B0     		sub	sp, sp, #24
 1402              	.LCFI53:
 1403              		.cfi_def_cfa_offset 32
 1404 0004 00AF     		add	r7, sp, #0
 1405              	.LCFI54:
 1406              		.cfi_def_cfa_register 7
 1407 0006 F860     		str	r0, [r7, #12]
 1408 0008 B960     		str	r1, [r7, #8]
 1409 000a 7A60     		str	r2, [r7, #4]
 851:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Status;
 852:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 853:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1410              		.loc 1 853 0
 1411 000c 0D4B     		ldr	r3, .L68
 1412 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1413 0010 002B     		cmp	r3, #0
 1414 0012 01D1     		bne	.L66
 1415              		.loc 1 853 0 is_stmt 0 discriminator 1
 1416 0014 FFF7FEFF 		bl	_DoInit
 1417              	.L66:
 1418              	.LBB5:
 854:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1419              		.loc 1 854 0 is_stmt 1
 1420              	@ 854 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1421 0018 EFF31183 		mrs   r3, basepri  
 1422 001c 4FF02001 		mov   r1, #32       
 1423 0020 81F31188 		msr   basepri, r1  
 1424              		
 1425              	@ 0 "" 2
 1426              		.thumb
 1427 0024 7B61     		str	r3, [r7, #20]
 855:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 856:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Call the non-locking write function
 857:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 858:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);
 1428              		.loc 1 858 0
 1429 0026 F868     		ldr	r0, [r7, #12]
 1430 0028 B968     		ldr	r1, [r7, #8]
 1431 002a 7A68     		ldr	r2, [r7, #4]
 1432 002c FFF7FEFF 		bl	SEGGER_RTT_WriteNoLock
 1433 0030 3861     		str	r0, [r7, #16]
 859:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 860:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish up.
 861:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 862:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1434              		.loc 1 862 0
ARM GAS  /tmp/ccjwrkYl.s 			page 41


 1435 0032 7B69     		ldr	r3, [r7, #20]
 1436              	@ 862 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1437 0034 83F31188 		msr   basepri, r3  
 1438              		
 1439              	@ 0 "" 2
 1440              		.thumb
 1441              	.LBE5:
 863:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 864:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return Status;
 1442              		.loc 1 864 0
 1443 0038 3B69     		ldr	r3, [r7, #16]
 865:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1444              		.loc 1 865 0
 1445 003a 1846     		mov	r0, r3
 1446 003c 1837     		adds	r7, r7, #24
 1447              	.LCFI55:
 1448              		.cfi_def_cfa_offset 8
 1449 003e BD46     		mov	sp, r7
 1450              	.LCFI56:
 1451              		.cfi_def_cfa_register 13
 1452              		@ sp needed
 1453 0040 80BD     		pop	{r7, pc}
 1454              	.L69:
 1455 0042 00BF     		.align	2
 1456              	.L68:
 1457 0044 00000000 		.word	_SEGGER_RTT
 1458              		.cfi_endproc
 1459              	.LFE10:
 1461              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
 1462              		.align	2
 1463              		.global	SEGGER_RTT_WriteString
 1464              		.thumb
 1465              		.thumb_func
 1467              	SEGGER_RTT_WriteString:
 1468              	.LFB11:
 866:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 867:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 868:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 869:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
 870:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 871:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 872:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
 873:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This data is read by the host.
 874:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 875:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 876:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 877:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    s            Pointer to string.
 878:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 879:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 880:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 881:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 882:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 883:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, depending on configuration,
 884:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        remaining characters may be dropped or RTT module waits until there is more space in the b
 885:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
 886:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
 887:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
ARM GAS  /tmp/ccjwrkYl.s 			page 42


 888:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 1469              		.loc 1 888 0
 1470              		.cfi_startproc
 1471              		@ args = 0, pretend = 0, frame = 16
 1472              		@ frame_needed = 1, uses_anonymous_args = 0
 1473 0000 80B5     		push	{r7, lr}
 1474              	.LCFI57:
 1475              		.cfi_def_cfa_offset 8
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 0002 84B0     		sub	sp, sp, #16
 1479              	.LCFI58:
 1480              		.cfi_def_cfa_offset 24
 1481 0004 00AF     		add	r7, sp, #0
 1482              	.LCFI59:
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
 1485 0008 3960     		str	r1, [r7]
 889:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Len;
 890:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 891:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Len = STRLEN(s);
 1486              		.loc 1 891 0
 1487 000a 3868     		ldr	r0, [r7]
 1488 000c FFF7FEFF 		bl	strlen
 1489 0010 F860     		str	r0, [r7, #12]
 892:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 1490              		.loc 1 892 0
 1491 0012 7868     		ldr	r0, [r7, #4]
 1492 0014 3968     		ldr	r1, [r7]
 1493 0016 FA68     		ldr	r2, [r7, #12]
 1494 0018 FFF7FEFF 		bl	SEGGER_RTT_Write
 1495 001c 0346     		mov	r3, r0
 893:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1496              		.loc 1 893 0
 1497 001e 1846     		mov	r0, r3
 1498 0020 1037     		adds	r7, r7, #16
 1499              	.LCFI60:
 1500              		.cfi_def_cfa_offset 8
 1501 0022 BD46     		mov	sp, r7
 1502              	.LCFI61:
 1503              		.cfi_def_cfa_register 13
 1504              		@ sp needed
 1505 0024 80BD     		pop	{r7, pc}
 1506              		.cfi_endproc
 1507              	.LFE11:
 1509 0026 00BF     		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 1510              		.align	2
 1511              		.global	SEGGER_RTT_GetKey
 1512              		.thumb
 1513              		.thumb_func
 1515              	SEGGER_RTT_GetKey:
 1516              	.LFB12:
 894:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 895:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 896:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 897:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
 898:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccjwrkYl.s 			page 43


 899:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 900:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
 901:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Host has previously stored data there.
 902:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 903:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 904:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
 905:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
 906:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 907:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 908:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
 909:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 910:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 1517              		.loc 1 910 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 8
 1520              		@ frame_needed = 1, uses_anonymous_args = 0
 1521 0000 80B5     		push	{r7, lr}
 1522              	.LCFI62:
 1523              		.cfi_def_cfa_offset 8
 1524              		.cfi_offset 7, -8
 1525              		.cfi_offset 14, -4
 1526 0002 82B0     		sub	sp, sp, #8
 1527              	.LCFI63:
 1528              		.cfi_def_cfa_offset 16
 1529 0004 00AF     		add	r7, sp, #0
 1530              	.LCFI64:
 1531              		.cfi_def_cfa_register 7
 911:../../../SystemView/SEGGER/SEGGER_RTT.c ****   char c;
 912:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
 913:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 914:../../../SystemView/SEGGER/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 1532              		.loc 1 914 0
 1533 0006 FB1C     		adds	r3, r7, #3
 1534 0008 0020     		movs	r0, #0
 1535 000a 1946     		mov	r1, r3
 1536 000c 0122     		movs	r2, #1
 1537 000e FFF7FEFF 		bl	SEGGER_RTT_Read
 1538 0012 0346     		mov	r3, r0
 1539 0014 7B60     		str	r3, [r7, #4]
 915:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (r == 1) {
 1540              		.loc 1 915 0
 1541 0016 7B68     		ldr	r3, [r7, #4]
 1542 0018 012B     		cmp	r3, #1
 1543 001a 02D1     		bne	.L73
 916:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 1544              		.loc 1 916 0
 1545 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1546 001e 7B60     		str	r3, [r7, #4]
 1547 0020 02E0     		b	.L74
 1548              	.L73:
 917:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 918:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 1549              		.loc 1 918 0
 1550 0022 4FF0FF33 		mov	r3, #-1
 1551 0026 7B60     		str	r3, [r7, #4]
 1552              	.L74:
 919:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
ARM GAS  /tmp/ccjwrkYl.s 			page 44


 920:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 1553              		.loc 1 920 0
 1554 0028 7B68     		ldr	r3, [r7, #4]
 921:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1555              		.loc 1 921 0
 1556 002a 1846     		mov	r0, r3
 1557 002c 0837     		adds	r7, r7, #8
 1558              	.LCFI65:
 1559              		.cfi_def_cfa_offset 8
 1560 002e BD46     		mov	sp, r7
 1561              	.LCFI66:
 1562              		.cfi_def_cfa_register 13
 1563              		@ sp needed
 1564 0030 80BD     		pop	{r7, pc}
 1565              		.cfi_endproc
 1566              	.LFE12:
 1568 0032 00BF     		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 1569              		.align	2
 1570              		.global	SEGGER_RTT_WaitKey
 1571              		.thumb
 1572              		.thumb_func
 1574              	SEGGER_RTT_WaitKey:
 1575              	.LFB13:
 922:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 923:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 924:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 925:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
 926:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 927:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 928:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
 929:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
 930:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 931:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 932:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
 933:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 934:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 935:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
 936:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
 937:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 938:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 1576              		.loc 1 938 0
 1577              		.cfi_startproc
 1578              		@ args = 0, pretend = 0, frame = 8
 1579              		@ frame_needed = 1, uses_anonymous_args = 0
 1580 0000 80B5     		push	{r7, lr}
 1581              	.LCFI67:
 1582              		.cfi_def_cfa_offset 8
 1583              		.cfi_offset 7, -8
 1584              		.cfi_offset 14, -4
 1585 0002 82B0     		sub	sp, sp, #8
 1586              	.LCFI68:
 1587              		.cfi_def_cfa_offset 16
 1588 0004 00AF     		add	r7, sp, #0
 1589              	.LCFI69:
 1590              		.cfi_def_cfa_register 7
 1591              	.L77:
 939:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
ARM GAS  /tmp/ccjwrkYl.s 			page 45


 940:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 941:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
 942:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 1592              		.loc 1 942 0 discriminator 1
 1593 0006 FFF7FEFF 		bl	SEGGER_RTT_GetKey
 1594 000a 7860     		str	r0, [r7, #4]
 943:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (r < 0);
 1595              		.loc 1 943 0 discriminator 1
 1596 000c 7B68     		ldr	r3, [r7, #4]
 1597 000e 002B     		cmp	r3, #0
 1598 0010 F9DB     		blt	.L77
 944:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 1599              		.loc 1 944 0
 1600 0012 7B68     		ldr	r3, [r7, #4]
 945:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1601              		.loc 1 945 0
 1602 0014 1846     		mov	r0, r3
 1603 0016 0837     		adds	r7, r7, #8
 1604              	.LCFI70:
 1605              		.cfi_def_cfa_offset 8
 1606 0018 BD46     		mov	sp, r7
 1607              	.LCFI71:
 1608              		.cfi_def_cfa_register 13
 1609              		@ sp needed
 1610 001a 80BD     		pop	{r7, pc}
 1611              		.cfi_endproc
 1612              	.LFE13:
 1614              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 1615              		.align	2
 1616              		.global	SEGGER_RTT_HasKey
 1617              		.thumb
 1618              		.thumb_func
 1620              	SEGGER_RTT_HasKey:
 1621              	.LFB14:
 946:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 947:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 948:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 949:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
 950:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 951:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 952:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
 953:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 954:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 955:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
 956:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
 957:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 958:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 959:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
 960:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 961:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 1622              		.loc 1 961 0
 1623              		.cfi_startproc
 1624              		@ args = 0, pretend = 0, frame = 8
 1625              		@ frame_needed = 1, uses_anonymous_args = 0
 1626 0000 80B5     		push	{r7, lr}
 1627              	.LCFI72:
 1628              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccjwrkYl.s 			page 46


 1629              		.cfi_offset 7, -8
 1630              		.cfi_offset 14, -4
 1631 0002 82B0     		sub	sp, sp, #8
 1632              	.LCFI73:
 1633              		.cfi_def_cfa_offset 16
 1634 0004 00AF     		add	r7, sp, #0
 1635              	.LCFI74:
 1636              		.cfi_def_cfa_register 7
 962:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 963:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
 964:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 965:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1637              		.loc 1 965 0
 1638 0006 0C4B     		ldr	r3, .L84
 1639 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1640 000a 002B     		cmp	r3, #0
 1641 000c 01D1     		bne	.L80
 1642              		.loc 1 965 0 is_stmt 0 discriminator 1
 1643 000e FFF7FEFF 		bl	_DoInit
 1644              	.L80:
 966:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = _SEGGER_RTT.aDown[0].RdOff;
 1645              		.loc 1 966 0 is_stmt 1
 1646 0012 094B     		ldr	r3, .L84
 1647 0014 1B6F     		ldr	r3, [r3, #112]
 1648 0016 3B60     		str	r3, [r7]
 967:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff != _SEGGER_RTT.aDown[0].WrOff) {
 1649              		.loc 1 967 0
 1650 0018 074B     		ldr	r3, .L84
 1651 001a DA6E     		ldr	r2, [r3, #108]
 1652 001c 3B68     		ldr	r3, [r7]
 1653 001e 9A42     		cmp	r2, r3
 1654 0020 02D0     		beq	.L81
 968:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = 1;
 1655              		.loc 1 968 0
 1656 0022 0123     		movs	r3, #1
 1657 0024 7B60     		str	r3, [r7, #4]
 1658 0026 01E0     		b	.L82
 1659              	.L81:
 969:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 970:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = 0;
 1660              		.loc 1 970 0
 1661 0028 0023     		movs	r3, #0
 1662 002a 7B60     		str	r3, [r7, #4]
 1663              	.L82:
 971:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 972:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 1664              		.loc 1 972 0
 1665 002c 7B68     		ldr	r3, [r7, #4]
 973:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1666              		.loc 1 973 0
 1667 002e 1846     		mov	r0, r3
 1668 0030 0837     		adds	r7, r7, #8
 1669              	.LCFI75:
 1670              		.cfi_def_cfa_offset 8
 1671 0032 BD46     		mov	sp, r7
 1672              	.LCFI76:
 1673              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccjwrkYl.s 			page 47


 1674              		@ sp needed
 1675 0034 80BD     		pop	{r7, pc}
 1676              	.L85:
 1677 0036 00BF     		.align	2
 1678              	.L84:
 1679 0038 00000000 		.word	_SEGGER_RTT
 1680              		.cfi_endproc
 1681              	.LFE14:
 1683              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 1684              		.align	2
 1685              		.global	SEGGER_RTT_HasData
 1686              		.thumb
 1687              		.thumb_func
 1689              	SEGGER_RTT_HasData:
 1690              	.LFB15:
 974:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 975:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 976:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 977:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
 978:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 979:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 980:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
 981:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 982:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value:
 983:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  ==0:  No data
 984:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  !=0:  Data in buffer
 985:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 986:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 987:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 1691              		.loc 1 987 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 16
 1694              		@ frame_needed = 1, uses_anonymous_args = 0
 1695              		@ link register save eliminated.
 1696 0000 80B4     		push	{r7}
 1697              	.LCFI77:
 1698              		.cfi_def_cfa_offset 4
 1699              		.cfi_offset 7, -4
 1700 0002 85B0     		sub	sp, sp, #20
 1701              	.LCFI78:
 1702              		.cfi_def_cfa_offset 24
 1703 0004 00AF     		add	r7, sp, #0
 1704              	.LCFI79:
 1705              		.cfi_def_cfa_register 7
 1706 0006 7860     		str	r0, [r7, #4]
 988:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 989:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                v;
 990:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 991:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 1707              		.loc 1 991 0
 1708 0008 7A68     		ldr	r2, [r7, #4]
 1709 000a 1346     		mov	r3, r2
 1710 000c 5B00     		lsls	r3, r3, #1
 1711 000e 1344     		add	r3, r3, r2
 1712 0010 DB00     		lsls	r3, r3, #3
 1713 0012 6033     		adds	r3, r3, #96
 1714 0014 074A     		ldr	r2, .L88
ARM GAS  /tmp/ccjwrkYl.s 			page 48


 1715 0016 1344     		add	r3, r3, r2
 1716 0018 FB60     		str	r3, [r7, #12]
 992:../../../SystemView/SEGGER/SEGGER_RTT.c ****   v = pRing->WrOff;
 1717              		.loc 1 992 0
 1718 001a FB68     		ldr	r3, [r7, #12]
 1719 001c DB68     		ldr	r3, [r3, #12]
 1720 001e BB60     		str	r3, [r7, #8]
 993:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return v - pRing->RdOff;
 1721              		.loc 1 993 0
 1722 0020 FB68     		ldr	r3, [r7, #12]
 1723 0022 1B69     		ldr	r3, [r3, #16]
 1724 0024 BA68     		ldr	r2, [r7, #8]
 1725 0026 D31A     		subs	r3, r2, r3
 994:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1726              		.loc 1 994 0
 1727 0028 1846     		mov	r0, r3
 1728 002a 1437     		adds	r7, r7, #20
 1729              	.LCFI80:
 1730              		.cfi_def_cfa_offset 4
 1731 002c BD46     		mov	sp, r7
 1732              	.LCFI81:
 1733              		.cfi_def_cfa_register 13
 1734              		@ sp needed
 1735 002e 5DF8047B 		ldr	r7, [sp], #4
 1736              	.LCFI82:
 1737              		.cfi_restore 7
 1738              		.cfi_def_cfa_offset 0
 1739 0032 7047     		bx	lr
 1740              	.L89:
 1741              		.align	2
 1742              	.L88:
 1743 0034 00000000 		.word	_SEGGER_RTT
 1744              		.cfi_endproc
 1745              	.LFE15:
 1747              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 1748              		.align	2
 1749              		.global	SEGGER_RTT_AllocDownBuffer
 1750              		.thumb
 1751              		.thumb_func
 1753              	SEGGER_RTT_AllocDownBuffer:
 1754              	.LFB16:
 995:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 996:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 997:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 998:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
 999:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1000:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1001:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1002:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1003:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1004:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1005:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1006:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1007:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1008:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1009:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1010:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccjwrkYl.s 			page 49


1011:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1012:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1013:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1014:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1015:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 1755              		.loc 1 1015 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 24
 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759 0000 80B5     		push	{r7, lr}
 1760              	.LCFI83:
 1761              		.cfi_def_cfa_offset 8
 1762              		.cfi_offset 7, -8
 1763              		.cfi_offset 14, -4
 1764 0002 86B0     		sub	sp, sp, #24
 1765              	.LCFI84:
 1766              		.cfi_def_cfa_offset 32
 1767 0004 00AF     		add	r7, sp, #0
 1768              	.LCFI85:
 1769              		.cfi_def_cfa_register 7
 1770 0006 F860     		str	r0, [r7, #12]
 1771 0008 B960     		str	r1, [r7, #8]
 1772 000a 7A60     		str	r2, [r7, #4]
 1773 000c 3B60     		str	r3, [r7]
1016:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int BufferIndex;
1017:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1018:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1774              		.loc 1 1018 0
 1775 000e 384B     		ldr	r3, .L98
 1776 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1777 0012 002B     		cmp	r3, #0
 1778 0014 01D1     		bne	.L91
 1779              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1780 0016 FFF7FEFF 		bl	_DoInit
 1781              	.L91:
 1782              	.LBB6:
1019:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1783              		.loc 1 1019 0 is_stmt 1
 1784              	@ 1019 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1785 001a EFF31183 		mrs   r3, basepri  
 1786 001e 4FF02001 		mov   r1, #32       
 1787 0022 81F31188 		msr   basepri, r1  
 1788              		
 1789              	@ 0 "" 2
 1790              		.thumb
 1791 0026 3B61     		str	r3, [r7, #16]
1020:../../../SystemView/SEGGER/SEGGER_RTT.c ****   BufferIndex = 0;
 1792              		.loc 1 1020 0
 1793 0028 0023     		movs	r3, #0
 1794 002a 7B61     		str	r3, [r7, #20]
 1795              	.L94:
1021:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
1022:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (_SEGGER_RTT.aDown[BufferIndex].pBuffer == NULL) {
 1796              		.loc 1 1022 0
 1797 002c 3049     		ldr	r1, .L98
 1798 002e 7A69     		ldr	r2, [r7, #20]
 1799 0030 1346     		mov	r3, r2
ARM GAS  /tmp/ccjwrkYl.s 			page 50


 1800 0032 5B00     		lsls	r3, r3, #1
 1801 0034 1344     		add	r3, r3, r2
 1802 0036 DB00     		lsls	r3, r3, #3
 1803 0038 0B44     		add	r3, r3, r1
 1804 003a 6033     		adds	r3, r3, #96
 1805 003c 5B68     		ldr	r3, [r3, #4]
 1806 003e 002B     		cmp	r3, #0
 1807 0040 00D1     		bne	.L92
1023:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 1808              		.loc 1 1023 0
 1809 0042 07E0     		b	.L93
 1810              	.L92:
1024:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1025:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex++;
 1811              		.loc 1 1025 0
 1812 0044 7B69     		ldr	r3, [r7, #20]
 1813 0046 0133     		adds	r3, r3, #1
 1814 0048 7B61     		str	r3, [r7, #20]
1026:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers);
 1815              		.loc 1 1026 0
 1816 004a 294B     		ldr	r3, .L98
 1817 004c 5A69     		ldr	r2, [r3, #20]
 1818 004e 7B69     		ldr	r3, [r7, #20]
 1819 0050 9A42     		cmp	r2, r3
 1820 0052 EBDC     		bgt	.L94
 1821              	.L93:
1027:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers) {
 1822              		.loc 1 1027 0
 1823 0054 264B     		ldr	r3, .L98
 1824 0056 5A69     		ldr	r2, [r3, #20]
 1825 0058 7B69     		ldr	r3, [r7, #20]
 1826 005a 9A42     		cmp	r2, r3
 1827 005c 3CDD     		ble	.L95
1028:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 1828              		.loc 1 1028 0
 1829 005e 2449     		ldr	r1, .L98
 1830 0060 7A69     		ldr	r2, [r7, #20]
 1831 0062 1346     		mov	r3, r2
 1832 0064 5B00     		lsls	r3, r3, #1
 1833 0066 1344     		add	r3, r3, r2
 1834 0068 DB00     		lsls	r3, r3, #3
 1835 006a 0B44     		add	r3, r3, r1
 1836 006c 6033     		adds	r3, r3, #96
 1837 006e FA68     		ldr	r2, [r7, #12]
 1838 0070 1A60     		str	r2, [r3]
1029:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 1839              		.loc 1 1029 0
 1840 0072 1F49     		ldr	r1, .L98
 1841 0074 7A69     		ldr	r2, [r7, #20]
 1842 0076 1346     		mov	r3, r2
 1843 0078 5B00     		lsls	r3, r3, #1
 1844 007a 1344     		add	r3, r3, r2
 1845 007c DB00     		lsls	r3, r3, #3
 1846 007e 0B44     		add	r3, r3, r1
 1847 0080 6033     		adds	r3, r3, #96
 1848 0082 BA68     		ldr	r2, [r7, #8]
 1849 0084 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccjwrkYl.s 			page 51


1030:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 1850              		.loc 1 1030 0
 1851 0086 1A49     		ldr	r1, .L98
 1852 0088 7A69     		ldr	r2, [r7, #20]
 1853 008a 1346     		mov	r3, r2
 1854 008c 5B00     		lsls	r3, r3, #1
 1855 008e 1344     		add	r3, r3, r2
 1856 0090 DB00     		lsls	r3, r3, #3
 1857 0092 0B44     		add	r3, r3, r1
 1858 0094 6833     		adds	r3, r3, #104
 1859 0096 7A68     		ldr	r2, [r7, #4]
 1860 0098 1A60     		str	r2, [r3]
1031:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 1861              		.loc 1 1031 0
 1862 009a 1549     		ldr	r1, .L98
 1863 009c 7A69     		ldr	r2, [r7, #20]
 1864 009e 1346     		mov	r3, r2
 1865 00a0 5B00     		lsls	r3, r3, #1
 1866 00a2 1344     		add	r3, r3, r2
 1867 00a4 DB00     		lsls	r3, r3, #3
 1868 00a6 0B44     		add	r3, r3, r1
 1869 00a8 7033     		adds	r3, r3, #112
 1870 00aa 0022     		movs	r2, #0
 1871 00ac 1A60     		str	r2, [r3]
1032:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 1872              		.loc 1 1032 0
 1873 00ae 1049     		ldr	r1, .L98
 1874 00b0 7A69     		ldr	r2, [r7, #20]
 1875 00b2 1346     		mov	r3, r2
 1876 00b4 5B00     		lsls	r3, r3, #1
 1877 00b6 1344     		add	r3, r3, r2
 1878 00b8 DB00     		lsls	r3, r3, #3
 1879 00ba 0B44     		add	r3, r3, r1
 1880 00bc 6833     		adds	r3, r3, #104
 1881 00be 0022     		movs	r2, #0
 1882 00c0 5A60     		str	r2, [r3, #4]
1033:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags        = Flags;
 1883              		.loc 1 1033 0
 1884 00c2 0B49     		ldr	r1, .L98
 1885 00c4 7A69     		ldr	r2, [r7, #20]
 1886 00c6 1346     		mov	r3, r2
 1887 00c8 5B00     		lsls	r3, r3, #1
 1888 00ca 1344     		add	r3, r3, r2
 1889 00cc DB00     		lsls	r3, r3, #3
 1890 00ce 0B44     		add	r3, r3, r1
 1891 00d0 7033     		adds	r3, r3, #112
 1892 00d2 3A68     		ldr	r2, [r7]
 1893 00d4 5A60     		str	r2, [r3, #4]
 1894 00d6 02E0     		b	.L96
 1895              	.L95:
1034:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1035:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex = -1;
 1896              		.loc 1 1035 0
 1897 00d8 4FF0FF33 		mov	r3, #-1
 1898 00dc 7B61     		str	r3, [r7, #20]
 1899              	.L96:
1036:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
ARM GAS  /tmp/ccjwrkYl.s 			page 52


1037:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1900              		.loc 1 1037 0
 1901 00de 3B69     		ldr	r3, [r7, #16]
 1902              	@ 1037 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1903 00e0 83F31188 		msr   basepri, r3  
 1904              		
 1905              	@ 0 "" 2
 1906              		.thumb
 1907              	.LBE6:
1038:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return BufferIndex;
 1908              		.loc 1 1038 0
 1909 00e4 7B69     		ldr	r3, [r7, #20]
1039:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1910              		.loc 1 1039 0
 1911 00e6 1846     		mov	r0, r3
 1912 00e8 1837     		adds	r7, r7, #24
 1913              	.LCFI86:
 1914              		.cfi_def_cfa_offset 8
 1915 00ea BD46     		mov	sp, r7
 1916              	.LCFI87:
 1917              		.cfi_def_cfa_register 13
 1918              		@ sp needed
 1919 00ec 80BD     		pop	{r7, pc}
 1920              	.L99:
 1921 00ee 00BF     		.align	2
 1922              	.L98:
 1923 00f0 00000000 		.word	_SEGGER_RTT
 1924              		.cfi_endproc
 1925              	.LFE16:
 1927              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 1928              		.align	2
 1929              		.global	SEGGER_RTT_AllocUpBuffer
 1930              		.thumb
 1931              		.thumb_func
 1933              	SEGGER_RTT_AllocUpBuffer:
 1934              	.LFB17:
1040:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1041:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1042:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1043:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1044:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1045:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1046:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1047:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1048:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1049:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1050:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1051:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1052:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1053:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1054:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1055:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1056:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1057:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1058:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1059:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1060:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
ARM GAS  /tmp/ccjwrkYl.s 			page 53


 1935              		.loc 1 1060 0
 1936              		.cfi_startproc
 1937              		@ args = 0, pretend = 0, frame = 24
 1938              		@ frame_needed = 1, uses_anonymous_args = 0
 1939 0000 80B5     		push	{r7, lr}
 1940              	.LCFI88:
 1941              		.cfi_def_cfa_offset 8
 1942              		.cfi_offset 7, -8
 1943              		.cfi_offset 14, -4
 1944 0002 86B0     		sub	sp, sp, #24
 1945              	.LCFI89:
 1946              		.cfi_def_cfa_offset 32
 1947 0004 00AF     		add	r7, sp, #0
 1948              	.LCFI90:
 1949              		.cfi_def_cfa_register 7
 1950 0006 F860     		str	r0, [r7, #12]
 1951 0008 B960     		str	r1, [r7, #8]
 1952 000a 7A60     		str	r2, [r7, #4]
 1953 000c 3B60     		str	r3, [r7]
1061:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int BufferIndex;
1062:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1063:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1954              		.loc 1 1063 0
 1955 000e 384B     		ldr	r3, .L108
 1956 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1957 0012 002B     		cmp	r3, #0
 1958 0014 01D1     		bne	.L101
 1959              		.loc 1 1063 0 is_stmt 0 discriminator 1
 1960 0016 FFF7FEFF 		bl	_DoInit
 1961              	.L101:
 1962              	.LBB7:
1064:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1963              		.loc 1 1064 0 is_stmt 1
 1964              	@ 1064 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1965 001a EFF31183 		mrs   r3, basepri  
 1966 001e 4FF02001 		mov   r1, #32       
 1967 0022 81F31188 		msr   basepri, r1  
 1968              		
 1969              	@ 0 "" 2
 1970              		.thumb
 1971 0026 3B61     		str	r3, [r7, #16]
1065:../../../SystemView/SEGGER/SEGGER_RTT.c ****   BufferIndex = 0;
 1972              		.loc 1 1065 0
 1973 0028 0023     		movs	r3, #0
 1974 002a 7B61     		str	r3, [r7, #20]
 1975              	.L104:
1066:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
1067:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (_SEGGER_RTT.aUp[BufferIndex].pBuffer == NULL) {
 1976              		.loc 1 1067 0
 1977 002c 3049     		ldr	r1, .L108
 1978 002e 7B69     		ldr	r3, [r7, #20]
 1979 0030 5A1C     		adds	r2, r3, #1
 1980 0032 1346     		mov	r3, r2
 1981 0034 5B00     		lsls	r3, r3, #1
 1982 0036 1344     		add	r3, r3, r2
 1983 0038 DB00     		lsls	r3, r3, #3
 1984 003a 0B44     		add	r3, r3, r1
ARM GAS  /tmp/ccjwrkYl.s 			page 54


 1985 003c 5B68     		ldr	r3, [r3, #4]
 1986 003e 002B     		cmp	r3, #0
 1987 0040 00D1     		bne	.L102
1068:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 1988              		.loc 1 1068 0
 1989 0042 07E0     		b	.L103
 1990              	.L102:
1069:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1070:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex++;
 1991              		.loc 1 1070 0
 1992 0044 7B69     		ldr	r3, [r7, #20]
 1993 0046 0133     		adds	r3, r3, #1
 1994 0048 7B61     		str	r3, [r7, #20]
1071:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers);
 1995              		.loc 1 1071 0
 1996 004a 294B     		ldr	r3, .L108
 1997 004c 1A69     		ldr	r2, [r3, #16]
 1998 004e 7B69     		ldr	r3, [r7, #20]
 1999 0050 9A42     		cmp	r2, r3
 2000 0052 EBDC     		bgt	.L104
 2001              	.L103:
1072:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers) {
 2002              		.loc 1 1072 0
 2003 0054 264B     		ldr	r3, .L108
 2004 0056 1A69     		ldr	r2, [r3, #16]
 2005 0058 7B69     		ldr	r3, [r7, #20]
 2006 005a 9A42     		cmp	r2, r3
 2007 005c 3CDD     		ble	.L105
1073:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 2008              		.loc 1 1073 0
 2009 005e 2449     		ldr	r1, .L108
 2010 0060 7B69     		ldr	r3, [r7, #20]
 2011 0062 5A1C     		adds	r2, r3, #1
 2012 0064 1346     		mov	r3, r2
 2013 0066 5B00     		lsls	r3, r3, #1
 2014 0068 1344     		add	r3, r3, r2
 2015 006a DB00     		lsls	r3, r3, #3
 2016 006c 0B44     		add	r3, r3, r1
 2017 006e FA68     		ldr	r2, [r7, #12]
 2018 0070 1A60     		str	r2, [r3]
1074:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2019              		.loc 1 1074 0
 2020 0072 1F49     		ldr	r1, .L108
 2021 0074 7B69     		ldr	r3, [r7, #20]
 2022 0076 5A1C     		adds	r2, r3, #1
 2023 0078 1346     		mov	r3, r2
 2024 007a 5B00     		lsls	r3, r3, #1
 2025 007c 1344     		add	r3, r3, r2
 2026 007e DB00     		lsls	r3, r3, #3
 2027 0080 0B44     		add	r3, r3, r1
 2028 0082 BA68     		ldr	r2, [r7, #8]
 2029 0084 5A60     		str	r2, [r3, #4]
1075:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2030              		.loc 1 1075 0
 2031 0086 1A49     		ldr	r1, .L108
 2032 0088 7A69     		ldr	r2, [r7, #20]
 2033 008a 1346     		mov	r3, r2
ARM GAS  /tmp/ccjwrkYl.s 			page 55


 2034 008c 5B00     		lsls	r3, r3, #1
 2035 008e 1344     		add	r3, r3, r2
 2036 0090 DB00     		lsls	r3, r3, #3
 2037 0092 0B44     		add	r3, r3, r1
 2038 0094 2033     		adds	r3, r3, #32
 2039 0096 7A68     		ldr	r2, [r7, #4]
 2040 0098 1A60     		str	r2, [r3]
1076:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 2041              		.loc 1 1076 0
 2042 009a 1549     		ldr	r1, .L108
 2043 009c 7A69     		ldr	r2, [r7, #20]
 2044 009e 1346     		mov	r3, r2
 2045 00a0 5B00     		lsls	r3, r3, #1
 2046 00a2 1344     		add	r3, r3, r2
 2047 00a4 DB00     		lsls	r3, r3, #3
 2048 00a6 0B44     		add	r3, r3, r1
 2049 00a8 2833     		adds	r3, r3, #40
 2050 00aa 0022     		movs	r2, #0
 2051 00ac 1A60     		str	r2, [r3]
1077:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2052              		.loc 1 1077 0
 2053 00ae 1049     		ldr	r1, .L108
 2054 00b0 7A69     		ldr	r2, [r7, #20]
 2055 00b2 1346     		mov	r3, r2
 2056 00b4 5B00     		lsls	r3, r3, #1
 2057 00b6 1344     		add	r3, r3, r2
 2058 00b8 DB00     		lsls	r3, r3, #3
 2059 00ba 0B44     		add	r3, r3, r1
 2060 00bc 2033     		adds	r3, r3, #32
 2061 00be 0022     		movs	r2, #0
 2062 00c0 5A60     		str	r2, [r3, #4]
1078:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags        = Flags;
 2063              		.loc 1 1078 0
 2064 00c2 0B49     		ldr	r1, .L108
 2065 00c4 7A69     		ldr	r2, [r7, #20]
 2066 00c6 1346     		mov	r3, r2
 2067 00c8 5B00     		lsls	r3, r3, #1
 2068 00ca 1344     		add	r3, r3, r2
 2069 00cc DB00     		lsls	r3, r3, #3
 2070 00ce 0B44     		add	r3, r3, r1
 2071 00d0 2833     		adds	r3, r3, #40
 2072 00d2 3A68     		ldr	r2, [r7]
 2073 00d4 5A60     		str	r2, [r3, #4]
 2074 00d6 02E0     		b	.L106
 2075              	.L105:
1079:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1080:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex = -1;
 2076              		.loc 1 1080 0
 2077 00d8 4FF0FF33 		mov	r3, #-1
 2078 00dc 7B61     		str	r3, [r7, #20]
 2079              	.L106:
1081:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1082:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2080              		.loc 1 1082 0
 2081 00de 3B69     		ldr	r3, [r7, #16]
 2082              	@ 1082 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2083 00e0 83F31188 		msr   basepri, r3  
ARM GAS  /tmp/ccjwrkYl.s 			page 56


 2084              		
 2085              	@ 0 "" 2
 2086              		.thumb
 2087              	.LBE7:
1083:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return BufferIndex;
 2088              		.loc 1 1083 0
 2089 00e4 7B69     		ldr	r3, [r7, #20]
1084:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2090              		.loc 1 1084 0
 2091 00e6 1846     		mov	r0, r3
 2092 00e8 1837     		adds	r7, r7, #24
 2093              	.LCFI91:
 2094              		.cfi_def_cfa_offset 8
 2095 00ea BD46     		mov	sp, r7
 2096              	.LCFI92:
 2097              		.cfi_def_cfa_register 13
 2098              		@ sp needed
 2099 00ec 80BD     		pop	{r7, pc}
 2100              	.L109:
 2101 00ee 00BF     		.align	2
 2102              	.L108:
 2103 00f0 00000000 		.word	_SEGGER_RTT
 2104              		.cfi_endproc
 2105              	.LFE17:
 2107              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 2108              		.align	2
 2109              		.global	SEGGER_RTT_ConfigUpBuffer
 2110              		.thumb
 2111              		.thumb_func
 2113              	SEGGER_RTT_ConfigUpBuffer:
 2114              	.LFB18:
1085:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1086:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1087:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1088:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1089:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1090:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1091:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1092:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1093:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1094:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1095:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1096:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1097:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1098:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1099:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1100:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1101:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1102:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1103:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K.
1104:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1105:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1106:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Additional information
1107:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1108:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    May only be called once per buffer.
1109:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1110:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
ARM GAS  /tmp/ccjwrkYl.s 			page 57


1111:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 2115              		.loc 1 1111 0
 2116              		.cfi_startproc
 2117              		@ args = 4, pretend = 0, frame = 24
 2118              		@ frame_needed = 1, uses_anonymous_args = 0
 2119 0000 80B5     		push	{r7, lr}
 2120              	.LCFI93:
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 7, -8
 2123              		.cfi_offset 14, -4
 2124 0002 86B0     		sub	sp, sp, #24
 2125              	.LCFI94:
 2126              		.cfi_def_cfa_offset 32
 2127 0004 00AF     		add	r7, sp, #0
 2128              	.LCFI95:
 2129              		.cfi_def_cfa_register 7
 2130 0006 F860     		str	r0, [r7, #12]
 2131 0008 B960     		str	r1, [r7, #8]
 2132 000a 7A60     		str	r2, [r7, #4]
 2133 000c 3B60     		str	r3, [r7]
1112:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1113:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1114:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2134              		.loc 1 1114 0
 2135 000e 304B     		ldr	r3, .L116
 2136 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2137 0012 002B     		cmp	r3, #0
 2138 0014 01D1     		bne	.L111
 2139              		.loc 1 1114 0 is_stmt 0 discriminator 1
 2140 0016 FFF7FEFF 		bl	_DoInit
 2141              	.L111:
1115:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2142              		.loc 1 1115 0 is_stmt 1
 2143 001a 2D4B     		ldr	r3, .L116
 2144 001c 1B69     		ldr	r3, [r3, #16]
 2145 001e 1A46     		mov	r2, r3
 2146 0020 FB68     		ldr	r3, [r7, #12]
 2147 0022 9A42     		cmp	r2, r3
 2148 0024 4BD9     		bls	.L112
 2149              	.LBB8:
1116:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2150              		.loc 1 1116 0
 2151              	@ 1116 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2152 0026 EFF31183 		mrs   r3, basepri  
 2153 002a 4FF02001 		mov   r1, #32       
 2154 002e 81F31188 		msr   basepri, r1  
 2155              		
 2156              	@ 0 "" 2
 2157              		.thumb
 2158 0032 3B61     		str	r3, [r7, #16]
1117:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 2159              		.loc 1 1117 0
 2160 0034 FB68     		ldr	r3, [r7, #12]
 2161 0036 002B     		cmp	r3, #0
 2162 0038 31D0     		beq	.L113
1118:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 2163              		.loc 1 1118 0
ARM GAS  /tmp/ccjwrkYl.s 			page 58


 2164 003a 2549     		ldr	r1, .L116
 2165 003c FB68     		ldr	r3, [r7, #12]
 2166 003e 5A1C     		adds	r2, r3, #1
 2167 0040 1346     		mov	r3, r2
 2168 0042 5B00     		lsls	r3, r3, #1
 2169 0044 1344     		add	r3, r3, r2
 2170 0046 DB00     		lsls	r3, r3, #3
 2171 0048 0B44     		add	r3, r3, r1
 2172 004a BA68     		ldr	r2, [r7, #8]
 2173 004c 1A60     		str	r2, [r3]
1119:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2174              		.loc 1 1119 0
 2175 004e 2049     		ldr	r1, .L116
 2176 0050 FB68     		ldr	r3, [r7, #12]
 2177 0052 5A1C     		adds	r2, r3, #1
 2178 0054 1346     		mov	r3, r2
 2179 0056 5B00     		lsls	r3, r3, #1
 2180 0058 1344     		add	r3, r3, r2
 2181 005a DB00     		lsls	r3, r3, #3
 2182 005c 0B44     		add	r3, r3, r1
 2183 005e 7A68     		ldr	r2, [r7, #4]
 2184 0060 5A60     		str	r2, [r3, #4]
1120:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2185              		.loc 1 1120 0
 2186 0062 1B49     		ldr	r1, .L116
 2187 0064 FA68     		ldr	r2, [r7, #12]
 2188 0066 1346     		mov	r3, r2
 2189 0068 5B00     		lsls	r3, r3, #1
 2190 006a 1344     		add	r3, r3, r2
 2191 006c DB00     		lsls	r3, r3, #3
 2192 006e 0B44     		add	r3, r3, r1
 2193 0070 2033     		adds	r3, r3, #32
 2194 0072 3A68     		ldr	r2, [r7]
 2195 0074 1A60     		str	r2, [r3]
1121:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 2196              		.loc 1 1121 0
 2197 0076 1649     		ldr	r1, .L116
 2198 0078 FA68     		ldr	r2, [r7, #12]
 2199 007a 1346     		mov	r3, r2
 2200 007c 5B00     		lsls	r3, r3, #1
 2201 007e 1344     		add	r3, r3, r2
 2202 0080 DB00     		lsls	r3, r3, #3
 2203 0082 0B44     		add	r3, r3, r1
 2204 0084 2833     		adds	r3, r3, #40
 2205 0086 0022     		movs	r2, #0
 2206 0088 1A60     		str	r2, [r3]
1122:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2207              		.loc 1 1122 0
 2208 008a 1149     		ldr	r1, .L116
 2209 008c FA68     		ldr	r2, [r7, #12]
 2210 008e 1346     		mov	r3, r2
 2211 0090 5B00     		lsls	r3, r3, #1
 2212 0092 1344     		add	r3, r3, r2
 2213 0094 DB00     		lsls	r3, r3, #3
 2214 0096 0B44     		add	r3, r3, r1
 2215 0098 2033     		adds	r3, r3, #32
 2216 009a 0022     		movs	r2, #0
ARM GAS  /tmp/ccjwrkYl.s 			page 59


 2217 009c 5A60     		str	r2, [r3, #4]
 2218              	.L113:
1123:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1124:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags          = Flags;
 2219              		.loc 1 1124 0
 2220 009e 0C49     		ldr	r1, .L116
 2221 00a0 FA68     		ldr	r2, [r7, #12]
 2222 00a2 1346     		mov	r3, r2
 2223 00a4 5B00     		lsls	r3, r3, #1
 2224 00a6 1344     		add	r3, r3, r2
 2225 00a8 DB00     		lsls	r3, r3, #3
 2226 00aa 0B44     		add	r3, r3, r1
 2227 00ac 2833     		adds	r3, r3, #40
 2228 00ae 3A6A     		ldr	r2, [r7, #32]
 2229 00b0 5A60     		str	r2, [r3, #4]
1125:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2230              		.loc 1 1125 0
 2231 00b2 3B69     		ldr	r3, [r7, #16]
 2232              	@ 1125 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2233 00b4 83F31188 		msr   basepri, r3  
 2234              		
 2235              	@ 0 "" 2
 2236              		.thumb
 2237              	.LBE8:
1126:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2238              		.loc 1 1126 0
 2239 00b8 0023     		movs	r3, #0
 2240 00ba 7B61     		str	r3, [r7, #20]
 2241 00bc 02E0     		b	.L114
 2242              	.L112:
1127:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1128:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2243              		.loc 1 1128 0
 2244 00be 4FF0FF33 		mov	r3, #-1
 2245 00c2 7B61     		str	r3, [r7, #20]
 2246              	.L114:
1129:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1130:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2247              		.loc 1 1130 0
 2248 00c4 7B69     		ldr	r3, [r7, #20]
1131:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2249              		.loc 1 1131 0
 2250 00c6 1846     		mov	r0, r3
 2251 00c8 1837     		adds	r7, r7, #24
 2252              	.LCFI96:
 2253              		.cfi_def_cfa_offset 8
 2254 00ca BD46     		mov	sp, r7
 2255              	.LCFI97:
 2256              		.cfi_def_cfa_register 13
 2257              		@ sp needed
 2258 00cc 80BD     		pop	{r7, pc}
 2259              	.L117:
 2260 00ce 00BF     		.align	2
 2261              	.L116:
 2262 00d0 00000000 		.word	_SEGGER_RTT
 2263              		.cfi_endproc
 2264              	.LFE18:
ARM GAS  /tmp/ccjwrkYl.s 			page 60


 2266              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 2267              		.align	2
 2268              		.global	SEGGER_RTT_ConfigDownBuffer
 2269              		.thumb
 2270              		.thumb_func
 2272              	SEGGER_RTT_ConfigDownBuffer:
 2273              	.LFB19:
1132:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1133:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1134:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1135:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1136:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1137:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1138:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1139:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1140:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1141:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1142:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1143:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1144:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1145:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1146:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1147:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1148:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1149:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1150:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1151:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1152:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1153:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Additional information
1154:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1155:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    May only be called once per buffer.
1156:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1157:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1158:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 2274              		.loc 1 1158 0
 2275              		.cfi_startproc
 2276              		@ args = 4, pretend = 0, frame = 24
 2277              		@ frame_needed = 1, uses_anonymous_args = 0
 2278 0000 80B5     		push	{r7, lr}
 2279              	.LCFI98:
 2280              		.cfi_def_cfa_offset 8
 2281              		.cfi_offset 7, -8
 2282              		.cfi_offset 14, -4
 2283 0002 86B0     		sub	sp, sp, #24
 2284              	.LCFI99:
 2285              		.cfi_def_cfa_offset 32
 2286 0004 00AF     		add	r7, sp, #0
 2287              	.LCFI100:
 2288              		.cfi_def_cfa_register 7
 2289 0006 F860     		str	r0, [r7, #12]
 2290 0008 B960     		str	r1, [r7, #8]
 2291 000a 7A60     		str	r2, [r7, #4]
 2292 000c 3B60     		str	r3, [r7]
1159:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1160:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1161:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2293              		.loc 1 1161 0
ARM GAS  /tmp/ccjwrkYl.s 			page 61


 2294 000e 304B     		ldr	r3, .L124
 2295 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2296 0012 002B     		cmp	r3, #0
 2297 0014 01D1     		bne	.L119
 2298              		.loc 1 1161 0 is_stmt 0 discriminator 1
 2299 0016 FFF7FEFF 		bl	_DoInit
 2300              	.L119:
1162:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2301              		.loc 1 1162 0 is_stmt 1
 2302 001a 2D4B     		ldr	r3, .L124
 2303 001c 5B69     		ldr	r3, [r3, #20]
 2304 001e 1A46     		mov	r2, r3
 2305 0020 FB68     		ldr	r3, [r7, #12]
 2306 0022 9A42     		cmp	r2, r3
 2307 0024 4BD9     		bls	.L120
 2308              	.LBB9:
1163:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2309              		.loc 1 1163 0
 2310              	@ 1163 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2311 0026 EFF31183 		mrs   r3, basepri  
 2312 002a 4FF02001 		mov   r1, #32       
 2313 002e 81F31188 		msr   basepri, r1  
 2314              		
 2315              	@ 0 "" 2
 2316              		.thumb
 2317 0032 3B61     		str	r3, [r7, #16]
1164:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 2318              		.loc 1 1164 0
 2319 0034 FB68     		ldr	r3, [r7, #12]
 2320 0036 002B     		cmp	r3, #0
 2321 0038 31D0     		beq	.L121
1165:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 2322              		.loc 1 1165 0
 2323 003a 2549     		ldr	r1, .L124
 2324 003c FA68     		ldr	r2, [r7, #12]
 2325 003e 1346     		mov	r3, r2
 2326 0040 5B00     		lsls	r3, r3, #1
 2327 0042 1344     		add	r3, r3, r2
 2328 0044 DB00     		lsls	r3, r3, #3
 2329 0046 0B44     		add	r3, r3, r1
 2330 0048 6033     		adds	r3, r3, #96
 2331 004a BA68     		ldr	r2, [r7, #8]
 2332 004c 1A60     		str	r2, [r3]
1166:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2333              		.loc 1 1166 0
 2334 004e 2049     		ldr	r1, .L124
 2335 0050 FA68     		ldr	r2, [r7, #12]
 2336 0052 1346     		mov	r3, r2
 2337 0054 5B00     		lsls	r3, r3, #1
 2338 0056 1344     		add	r3, r3, r2
 2339 0058 DB00     		lsls	r3, r3, #3
 2340 005a 0B44     		add	r3, r3, r1
 2341 005c 6033     		adds	r3, r3, #96
 2342 005e 7A68     		ldr	r2, [r7, #4]
 2343 0060 5A60     		str	r2, [r3, #4]
1167:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2344              		.loc 1 1167 0
ARM GAS  /tmp/ccjwrkYl.s 			page 62


 2345 0062 1B49     		ldr	r1, .L124
 2346 0064 FA68     		ldr	r2, [r7, #12]
 2347 0066 1346     		mov	r3, r2
 2348 0068 5B00     		lsls	r3, r3, #1
 2349 006a 1344     		add	r3, r3, r2
 2350 006c DB00     		lsls	r3, r3, #3
 2351 006e 0B44     		add	r3, r3, r1
 2352 0070 6833     		adds	r3, r3, #104
 2353 0072 3A68     		ldr	r2, [r7]
 2354 0074 1A60     		str	r2, [r3]
1168:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 2355              		.loc 1 1168 0
 2356 0076 1649     		ldr	r1, .L124
 2357 0078 FA68     		ldr	r2, [r7, #12]
 2358 007a 1346     		mov	r3, r2
 2359 007c 5B00     		lsls	r3, r3, #1
 2360 007e 1344     		add	r3, r3, r2
 2361 0080 DB00     		lsls	r3, r3, #3
 2362 0082 0B44     		add	r3, r3, r1
 2363 0084 7033     		adds	r3, r3, #112
 2364 0086 0022     		movs	r2, #0
 2365 0088 1A60     		str	r2, [r3]
1169:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 2366              		.loc 1 1169 0
 2367 008a 1149     		ldr	r1, .L124
 2368 008c FA68     		ldr	r2, [r7, #12]
 2369 008e 1346     		mov	r3, r2
 2370 0090 5B00     		lsls	r3, r3, #1
 2371 0092 1344     		add	r3, r3, r2
 2372 0094 DB00     		lsls	r3, r3, #3
 2373 0096 0B44     		add	r3, r3, r1
 2374 0098 6833     		adds	r3, r3, #104
 2375 009a 0022     		movs	r2, #0
 2376 009c 5A60     		str	r2, [r3, #4]
 2377              	.L121:
1170:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1171:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags          = Flags;
 2378              		.loc 1 1171 0
 2379 009e 0C49     		ldr	r1, .L124
 2380 00a0 FA68     		ldr	r2, [r7, #12]
 2381 00a2 1346     		mov	r3, r2
 2382 00a4 5B00     		lsls	r3, r3, #1
 2383 00a6 1344     		add	r3, r3, r2
 2384 00a8 DB00     		lsls	r3, r3, #3
 2385 00aa 0B44     		add	r3, r3, r1
 2386 00ac 7033     		adds	r3, r3, #112
 2387 00ae 3A6A     		ldr	r2, [r7, #32]
 2388 00b0 5A60     		str	r2, [r3, #4]
1172:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2389              		.loc 1 1172 0
 2390 00b2 3B69     		ldr	r3, [r7, #16]
 2391              	@ 1172 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2392 00b4 83F31188 		msr   basepri, r3  
 2393              		
 2394              	@ 0 "" 2
 2395              		.thumb
 2396              	.LBE9:
ARM GAS  /tmp/ccjwrkYl.s 			page 63


1173:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2397              		.loc 1 1173 0
 2398 00b8 0023     		movs	r3, #0
 2399 00ba 7B61     		str	r3, [r7, #20]
 2400 00bc 02E0     		b	.L122
 2401              	.L120:
1174:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1175:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2402              		.loc 1 1175 0
 2403 00be 4FF0FF33 		mov	r3, #-1
 2404 00c2 7B61     		str	r3, [r7, #20]
 2405              	.L122:
1176:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1177:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2406              		.loc 1 1177 0
 2407 00c4 7B69     		ldr	r3, [r7, #20]
1178:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2408              		.loc 1 1178 0
 2409 00c6 1846     		mov	r0, r3
 2410 00c8 1837     		adds	r7, r7, #24
 2411              	.LCFI101:
 2412              		.cfi_def_cfa_offset 8
 2413 00ca BD46     		mov	sp, r7
 2414              	.LCFI102:
 2415              		.cfi_def_cfa_register 13
 2416              		@ sp needed
 2417 00cc 80BD     		pop	{r7, pc}
 2418              	.L125:
 2419 00ce 00BF     		.align	2
 2420              	.L124:
 2421 00d0 00000000 		.word	_SEGGER_RTT
 2422              		.cfi_endproc
 2423              	.LFE19:
 2425              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 2426              		.align	2
 2427              		.global	SEGGER_RTT_SetNameUpBuffer
 2428              		.thumb
 2429              		.thumb_func
 2431              	SEGGER_RTT_SetNameUpBuffer:
 2432              	.LFB20:
1179:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1180:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1181:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1182:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1183:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1184:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1185:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1186:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1187:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1188:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1189:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1190:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1191:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1192:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1193:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1194:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1195:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
ARM GAS  /tmp/ccjwrkYl.s 			page 64


1196:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 2433              		.loc 1 1196 0
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 16
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437 0000 80B5     		push	{r7, lr}
 2438              	.LCFI103:
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 84B0     		sub	sp, sp, #16
 2443              	.LCFI104:
 2444              		.cfi_def_cfa_offset 24
 2445 0004 00AF     		add	r7, sp, #0
 2446              	.LCFI105:
 2447              		.cfi_def_cfa_register 7
 2448 0006 7860     		str	r0, [r7, #4]
 2449 0008 3960     		str	r1, [r7]
1197:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1198:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1199:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2450              		.loc 1 1199 0
 2451 000a 154B     		ldr	r3, .L131
 2452 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2453 000e 002B     		cmp	r3, #0
 2454 0010 01D1     		bne	.L127
 2455              		.loc 1 1199 0 is_stmt 0 discriminator 1
 2456 0012 FFF7FEFF 		bl	_DoInit
 2457              	.L127:
1200:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2458              		.loc 1 1200 0 is_stmt 1
 2459 0016 124B     		ldr	r3, .L131
 2460 0018 1B69     		ldr	r3, [r3, #16]
 2461 001a 1A46     		mov	r2, r3
 2462 001c 7B68     		ldr	r3, [r7, #4]
 2463 001e 9A42     		cmp	r2, r3
 2464 0020 16D9     		bls	.L128
 2465              	.LBB10:
1201:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2466              		.loc 1 1201 0
 2467              	@ 1201 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2468 0022 EFF31183 		mrs   r3, basepri  
 2469 0026 4FF02001 		mov   r1, #32       
 2470 002a 81F31188 		msr   basepri, r1  
 2471              		
 2472              	@ 0 "" 2
 2473              		.thumb
 2474 002e BB60     		str	r3, [r7, #8]
1202:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName = sName;
 2475              		.loc 1 1202 0
 2476 0030 0B49     		ldr	r1, .L131
 2477 0032 7B68     		ldr	r3, [r7, #4]
 2478 0034 5A1C     		adds	r2, r3, #1
 2479 0036 1346     		mov	r3, r2
 2480 0038 5B00     		lsls	r3, r3, #1
 2481 003a 1344     		add	r3, r3, r2
 2482 003c DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/ccjwrkYl.s 			page 65


 2483 003e 0B44     		add	r3, r3, r1
 2484 0040 3A68     		ldr	r2, [r7]
 2485 0042 1A60     		str	r2, [r3]
1203:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2486              		.loc 1 1203 0
 2487 0044 BB68     		ldr	r3, [r7, #8]
 2488              	@ 1203 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2489 0046 83F31188 		msr   basepri, r3  
 2490              		
 2491              	@ 0 "" 2
 2492              		.thumb
 2493              	.LBE10:
1204:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2494              		.loc 1 1204 0
 2495 004a 0023     		movs	r3, #0
 2496 004c FB60     		str	r3, [r7, #12]
 2497 004e 02E0     		b	.L129
 2498              	.L128:
1205:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1206:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2499              		.loc 1 1206 0
 2500 0050 4FF0FF33 		mov	r3, #-1
 2501 0054 FB60     		str	r3, [r7, #12]
 2502              	.L129:
1207:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1208:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2503              		.loc 1 1208 0
 2504 0056 FB68     		ldr	r3, [r7, #12]
1209:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2505              		.loc 1 1209 0
 2506 0058 1846     		mov	r0, r3
 2507 005a 1037     		adds	r7, r7, #16
 2508              	.LCFI106:
 2509              		.cfi_def_cfa_offset 8
 2510 005c BD46     		mov	sp, r7
 2511              	.LCFI107:
 2512              		.cfi_def_cfa_register 13
 2513              		@ sp needed
 2514 005e 80BD     		pop	{r7, pc}
 2515              	.L132:
 2516              		.align	2
 2517              	.L131:
 2518 0060 00000000 		.word	_SEGGER_RTT
 2519              		.cfi_endproc
 2520              	.LFE20:
 2522              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 2523              		.align	2
 2524              		.global	SEGGER_RTT_SetNameDownBuffer
 2525              		.thumb
 2526              		.thumb_func
 2528              	SEGGER_RTT_SetNameDownBuffer:
 2529              	.LFB21:
1210:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1211:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1212:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1213:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1214:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccjwrkYl.s 			page 66


1215:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1216:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1217:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1218:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1219:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1220:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1221:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1222:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1223:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1224:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1225:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1226:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1227:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 2530              		.loc 1 1227 0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 16
 2533              		@ frame_needed = 1, uses_anonymous_args = 0
 2534 0000 80B5     		push	{r7, lr}
 2535              	.LCFI108:
 2536              		.cfi_def_cfa_offset 8
 2537              		.cfi_offset 7, -8
 2538              		.cfi_offset 14, -4
 2539 0002 84B0     		sub	sp, sp, #16
 2540              	.LCFI109:
 2541              		.cfi_def_cfa_offset 24
 2542 0004 00AF     		add	r7, sp, #0
 2543              	.LCFI110:
 2544              		.cfi_def_cfa_register 7
 2545 0006 7860     		str	r0, [r7, #4]
 2546 0008 3960     		str	r1, [r7]
1228:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1229:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1230:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2547              		.loc 1 1230 0
 2548 000a 154B     		ldr	r3, .L138
 2549 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2550 000e 002B     		cmp	r3, #0
 2551 0010 01D1     		bne	.L134
 2552              		.loc 1 1230 0 is_stmt 0 discriminator 1
 2553 0012 FFF7FEFF 		bl	_DoInit
 2554              	.L134:
1231:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2555              		.loc 1 1231 0 is_stmt 1
 2556 0016 124B     		ldr	r3, .L138
 2557 0018 5B69     		ldr	r3, [r3, #20]
 2558 001a 1A46     		mov	r2, r3
 2559 001c 7B68     		ldr	r3, [r7, #4]
 2560 001e 9A42     		cmp	r2, r3
 2561 0020 16D9     		bls	.L135
 2562              	.LBB11:
1232:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2563              		.loc 1 1232 0
 2564              	@ 1232 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2565 0022 EFF31183 		mrs   r3, basepri  
 2566 0026 4FF02001 		mov   r1, #32       
 2567 002a 81F31188 		msr   basepri, r1  
 2568              		
ARM GAS  /tmp/ccjwrkYl.s 			page 67


 2569              	@ 0 "" 2
 2570              		.thumb
 2571 002e BB60     		str	r3, [r7, #8]
1233:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName = sName;
 2572              		.loc 1 1233 0
 2573 0030 0B49     		ldr	r1, .L138
 2574 0032 7A68     		ldr	r2, [r7, #4]
 2575 0034 1346     		mov	r3, r2
 2576 0036 5B00     		lsls	r3, r3, #1
 2577 0038 1344     		add	r3, r3, r2
 2578 003a DB00     		lsls	r3, r3, #3
 2579 003c 0B44     		add	r3, r3, r1
 2580 003e 6033     		adds	r3, r3, #96
 2581 0040 3A68     		ldr	r2, [r7]
 2582 0042 1A60     		str	r2, [r3]
1234:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2583              		.loc 1 1234 0
 2584 0044 BB68     		ldr	r3, [r7, #8]
 2585              	@ 1234 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2586 0046 83F31188 		msr   basepri, r3  
 2587              		
 2588              	@ 0 "" 2
 2589              		.thumb
 2590              	.LBE11:
1235:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2591              		.loc 1 1235 0
 2592 004a 0023     		movs	r3, #0
 2593 004c FB60     		str	r3, [r7, #12]
 2594 004e 02E0     		b	.L136
 2595              	.L135:
1236:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1237:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2596              		.loc 1 1237 0
 2597 0050 4FF0FF33 		mov	r3, #-1
 2598 0054 FB60     		str	r3, [r7, #12]
 2599              	.L136:
1238:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1239:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2600              		.loc 1 1239 0
 2601 0056 FB68     		ldr	r3, [r7, #12]
1240:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2602              		.loc 1 1240 0
 2603 0058 1846     		mov	r0, r3
 2604 005a 1037     		adds	r7, r7, #16
 2605              	.LCFI111:
 2606              		.cfi_def_cfa_offset 8
 2607 005c BD46     		mov	sp, r7
 2608              	.LCFI112:
 2609              		.cfi_def_cfa_register 13
 2610              		@ sp needed
 2611 005e 80BD     		pop	{r7, pc}
 2612              	.L139:
 2613              		.align	2
 2614              	.L138:
 2615 0060 00000000 		.word	_SEGGER_RTT
 2616              		.cfi_endproc
 2617              	.LFE21:
ARM GAS  /tmp/ccjwrkYl.s 			page 68


 2619              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 2620              		.align	2
 2621              		.global	SEGGER_RTT_SetFlagsUpBuffer
 2622              		.thumb
 2623              		.thumb_func
 2625              	SEGGER_RTT_SetFlagsUpBuffer:
 2626              	.LFB22:
1241:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1242:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1243:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1244:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1245:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1246:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1247:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1248:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1249:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1250:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1251:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1252:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1253:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1254:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1255:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1256:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1257:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1258:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 2627              		.loc 1 1258 0
 2628              		.cfi_startproc
 2629              		@ args = 0, pretend = 0, frame = 16
 2630              		@ frame_needed = 1, uses_anonymous_args = 0
 2631 0000 80B5     		push	{r7, lr}
 2632              	.LCFI113:
 2633              		.cfi_def_cfa_offset 8
 2634              		.cfi_offset 7, -8
 2635              		.cfi_offset 14, -4
 2636 0002 84B0     		sub	sp, sp, #16
 2637              	.LCFI114:
 2638              		.cfi_def_cfa_offset 24
 2639 0004 00AF     		add	r7, sp, #0
 2640              	.LCFI115:
 2641              		.cfi_def_cfa_register 7
 2642 0006 7860     		str	r0, [r7, #4]
 2643 0008 3960     		str	r1, [r7]
1259:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1260:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1261:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2644              		.loc 1 1261 0
 2645 000a 154B     		ldr	r3, .L145
 2646 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2647 000e 002B     		cmp	r3, #0
 2648 0010 01D1     		bne	.L141
 2649              		.loc 1 1261 0 is_stmt 0 discriminator 1
 2650 0012 FFF7FEFF 		bl	_DoInit
 2651              	.L141:
1262:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2652              		.loc 1 1262 0 is_stmt 1
 2653 0016 124B     		ldr	r3, .L145
 2654 0018 1B69     		ldr	r3, [r3, #16]
ARM GAS  /tmp/ccjwrkYl.s 			page 69


 2655 001a 1A46     		mov	r2, r3
 2656 001c 7B68     		ldr	r3, [r7, #4]
 2657 001e 9A42     		cmp	r2, r3
 2658 0020 16D9     		bls	.L142
 2659              	.LBB12:
1263:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2660              		.loc 1 1263 0
 2661              	@ 1263 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2662 0022 EFF31183 		mrs   r3, basepri  
 2663 0026 4FF02001 		mov   r1, #32       
 2664 002a 81F31188 		msr   basepri, r1  
 2665              		
 2666              	@ 0 "" 2
 2667              		.thumb
 2668 002e BB60     		str	r3, [r7, #8]
1264:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags = Flags;
 2669              		.loc 1 1264 0
 2670 0030 0B49     		ldr	r1, .L145
 2671 0032 7A68     		ldr	r2, [r7, #4]
 2672 0034 1346     		mov	r3, r2
 2673 0036 5B00     		lsls	r3, r3, #1
 2674 0038 1344     		add	r3, r3, r2
 2675 003a DB00     		lsls	r3, r3, #3
 2676 003c 0B44     		add	r3, r3, r1
 2677 003e 2833     		adds	r3, r3, #40
 2678 0040 3A68     		ldr	r2, [r7]
 2679 0042 5A60     		str	r2, [r3, #4]
1265:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2680              		.loc 1 1265 0
 2681 0044 BB68     		ldr	r3, [r7, #8]
 2682              	@ 1265 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2683 0046 83F31188 		msr   basepri, r3  
 2684              		
 2685              	@ 0 "" 2
 2686              		.thumb
 2687              	.LBE12:
1266:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2688              		.loc 1 1266 0
 2689 004a 0023     		movs	r3, #0
 2690 004c FB60     		str	r3, [r7, #12]
 2691 004e 02E0     		b	.L143
 2692              	.L142:
1267:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1268:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2693              		.loc 1 1268 0
 2694 0050 4FF0FF33 		mov	r3, #-1
 2695 0054 FB60     		str	r3, [r7, #12]
 2696              	.L143:
1269:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1270:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2697              		.loc 1 1270 0
 2698 0056 FB68     		ldr	r3, [r7, #12]
1271:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2699              		.loc 1 1271 0
 2700 0058 1846     		mov	r0, r3
 2701 005a 1037     		adds	r7, r7, #16
 2702              	.LCFI116:
ARM GAS  /tmp/ccjwrkYl.s 			page 70


 2703              		.cfi_def_cfa_offset 8
 2704 005c BD46     		mov	sp, r7
 2705              	.LCFI117:
 2706              		.cfi_def_cfa_register 13
 2707              		@ sp needed
 2708 005e 80BD     		pop	{r7, pc}
 2709              	.L146:
 2710              		.align	2
 2711              	.L145:
 2712 0060 00000000 		.word	_SEGGER_RTT
 2713              		.cfi_endproc
 2714              	.LFE22:
 2716              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 2717              		.align	2
 2718              		.global	SEGGER_RTT_SetFlagsDownBuffer
 2719              		.thumb
 2720              		.thumb_func
 2722              	SEGGER_RTT_SetFlagsDownBuffer:
 2723              	.LFB23:
1272:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1273:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1274:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1275:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1276:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1277:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1278:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1279:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1280:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1281:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1282:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1283:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1284:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1285:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1286:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1287:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1288:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1289:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 2724              		.loc 1 1289 0
 2725              		.cfi_startproc
 2726              		@ args = 0, pretend = 0, frame = 16
 2727              		@ frame_needed = 1, uses_anonymous_args = 0
 2728 0000 80B5     		push	{r7, lr}
 2729              	.LCFI118:
 2730              		.cfi_def_cfa_offset 8
 2731              		.cfi_offset 7, -8
 2732              		.cfi_offset 14, -4
 2733 0002 84B0     		sub	sp, sp, #16
 2734              	.LCFI119:
 2735              		.cfi_def_cfa_offset 24
 2736 0004 00AF     		add	r7, sp, #0
 2737              	.LCFI120:
 2738              		.cfi_def_cfa_register 7
 2739 0006 7860     		str	r0, [r7, #4]
 2740 0008 3960     		str	r1, [r7]
1290:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1291:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1292:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
ARM GAS  /tmp/ccjwrkYl.s 			page 71


 2741              		.loc 1 1292 0
 2742 000a 154B     		ldr	r3, .L152
 2743 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2744 000e 002B     		cmp	r3, #0
 2745 0010 01D1     		bne	.L148
 2746              		.loc 1 1292 0 is_stmt 0 discriminator 1
 2747 0012 FFF7FEFF 		bl	_DoInit
 2748              	.L148:
1293:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2749              		.loc 1 1293 0 is_stmt 1
 2750 0016 124B     		ldr	r3, .L152
 2751 0018 5B69     		ldr	r3, [r3, #20]
 2752 001a 1A46     		mov	r2, r3
 2753 001c 7B68     		ldr	r3, [r7, #4]
 2754 001e 9A42     		cmp	r2, r3
 2755 0020 16D9     		bls	.L149
 2756              	.LBB13:
1294:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2757              		.loc 1 1294 0
 2758              	@ 1294 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2759 0022 EFF31183 		mrs   r3, basepri  
 2760 0026 4FF02001 		mov   r1, #32       
 2761 002a 81F31188 		msr   basepri, r1  
 2762              		
 2763              	@ 0 "" 2
 2764              		.thumb
 2765 002e BB60     		str	r3, [r7, #8]
1295:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags = Flags;
 2766              		.loc 1 1295 0
 2767 0030 0B49     		ldr	r1, .L152
 2768 0032 7A68     		ldr	r2, [r7, #4]
 2769 0034 1346     		mov	r3, r2
 2770 0036 5B00     		lsls	r3, r3, #1
 2771 0038 1344     		add	r3, r3, r2
 2772 003a DB00     		lsls	r3, r3, #3
 2773 003c 0B44     		add	r3, r3, r1
 2774 003e 7033     		adds	r3, r3, #112
 2775 0040 3A68     		ldr	r2, [r7]
 2776 0042 5A60     		str	r2, [r3, #4]
1296:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2777              		.loc 1 1296 0
 2778 0044 BB68     		ldr	r3, [r7, #8]
 2779              	@ 1296 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2780 0046 83F31188 		msr   basepri, r3  
 2781              		
 2782              	@ 0 "" 2
 2783              		.thumb
 2784              	.LBE13:
1297:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2785              		.loc 1 1297 0
 2786 004a 0023     		movs	r3, #0
 2787 004c FB60     		str	r3, [r7, #12]
 2788 004e 02E0     		b	.L150
 2789              	.L149:
1298:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1299:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2790              		.loc 1 1299 0
ARM GAS  /tmp/ccjwrkYl.s 			page 72


 2791 0050 4FF0FF33 		mov	r3, #-1
 2792 0054 FB60     		str	r3, [r7, #12]
 2793              	.L150:
1300:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1301:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2794              		.loc 1 1301 0
 2795 0056 FB68     		ldr	r3, [r7, #12]
1302:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2796              		.loc 1 1302 0
 2797 0058 1846     		mov	r0, r3
 2798 005a 1037     		adds	r7, r7, #16
 2799              	.LCFI121:
 2800              		.cfi_def_cfa_offset 8
 2801 005c BD46     		mov	sp, r7
 2802              	.LCFI122:
 2803              		.cfi_def_cfa_register 13
 2804              		@ sp needed
 2805 005e 80BD     		pop	{r7, pc}
 2806              	.L153:
 2807              		.align	2
 2808              	.L152:
 2809 0060 00000000 		.word	_SEGGER_RTT
 2810              		.cfi_endproc
 2811              	.LFE23:
 2813              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 2814              		.align	2
 2815              		.global	SEGGER_RTT_Init
 2816              		.thumb
 2817              		.thumb_func
 2819              	SEGGER_RTT_Init:
 2820              	.LFB24:
1303:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1304:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1305:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1306:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1307:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1308:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1309:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1310:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1311:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1312:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1313:../../../SystemView/SEGGER/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 2821              		.loc 1 1313 0
 2822              		.cfi_startproc
 2823              		@ args = 0, pretend = 0, frame = 0
 2824              		@ frame_needed = 1, uses_anonymous_args = 0
 2825 0000 80B5     		push	{r7, lr}
 2826              	.LCFI123:
 2827              		.cfi_def_cfa_offset 8
 2828              		.cfi_offset 7, -8
 2829              		.cfi_offset 14, -4
 2830 0002 00AF     		add	r7, sp, #0
 2831              	.LCFI124:
 2832              		.cfi_def_cfa_register 7
1314:../../../SystemView/SEGGER/SEGGER_RTT.c ****   _DoInit();
 2833              		.loc 1 1314 0
 2834 0004 FFF7FEFF 		bl	_DoInit
ARM GAS  /tmp/ccjwrkYl.s 			page 73


1315:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2835              		.loc 1 1315 0
 2836 0008 80BD     		pop	{r7, pc}
 2837              		.cfi_endproc
 2838              	.LFE24:
 2840 000a 00BF     		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 2841              		.align	2
 2842              		.global	SEGGER_RTT_SetTerminal
 2843              		.thumb
 2844              		.thumb_func
 2846              	SEGGER_RTT_SetTerminal:
 2847              	.LFB25:
1316:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1317:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1318:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1319:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1320:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1321:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1322:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1323:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1324:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1325:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1326:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1327:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1328:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1329:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1330:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1331:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (char TerminalId) {
 2848              		.loc 1 1331 0
 2849              		.cfi_startproc
 2850              		@ args = 0, pretend = 0, frame = 32
 2851              		@ frame_needed = 1, uses_anonymous_args = 0
 2852 0000 80B5     		push	{r7, lr}
 2853              	.LCFI125:
 2854              		.cfi_def_cfa_offset 8
 2855              		.cfi_offset 7, -8
 2856              		.cfi_offset 14, -4
 2857 0002 88B0     		sub	sp, sp, #32
 2858              	.LCFI126:
 2859              		.cfi_def_cfa_offset 40
 2860 0004 00AF     		add	r7, sp, #0
 2861              	.LCFI127:
 2862              		.cfi_def_cfa_register 7
 2863 0006 0346     		mov	r3, r0
 2864 0008 FB71     		strb	r3, [r7, #7]
1332:../../../SystemView/SEGGER/SEGGER_RTT.c ****   char                  ac[2];
1333:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1334:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Avail;
1335:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1336:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1337:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2865              		.loc 1 1337 0
 2866 000a 264B     		ldr	r3, .L163
 2867 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2868 000e 002B     		cmp	r3, #0
 2869 0010 01D1     		bne	.L156
 2870              		.loc 1 1337 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/ccjwrkYl.s 			page 74


 2871 0012 FFF7FEFF 		bl	_DoInit
 2872              	.L156:
1338:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1339:../../../SystemView/SEGGER/SEGGER_RTT.c ****   r = 0;
 2873              		.loc 1 1339 0 is_stmt 1
 2874 0016 0023     		movs	r3, #0
 2875 0018 FB61     		str	r3, [r7, #28]
1340:../../../SystemView/SEGGER/SEGGER_RTT.c ****   ac[0] = 0xFFU;
 2876              		.loc 1 1340 0
 2877 001a FF23     		movs	r3, #255
 2878 001c 3B73     		strb	r3, [r7, #12]
1341:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if ((unsigned char)TerminalId < (unsigned char)sizeof(_aTerminalId)) { // We only support a certa
 2879              		.loc 1 1341 0
 2880 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2881 0020 0F2B     		cmp	r3, #15
 2882 0022 36D8     		bhi	.L157
1342:../../../SystemView/SEGGER/SEGGER_RTT.c ****     ac[1] = _aTerminalId[(unsigned char)TerminalId];
 2883              		.loc 1 1342 0
 2884 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2885 0026 204A     		ldr	r2, .L163+4
 2886 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2887 002a 7B73     		strb	r3, [r7, #13]
1343:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];    // Buffer 0 is always reserved for terminal I/O, so we can use 
 2888              		.loc 1 1343 0
 2889 002c 1F4B     		ldr	r3, .L163+8
 2890 002e BB61     		str	r3, [r7, #24]
 2891              	.LBB14:
1344:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();    // Lock to make sure that no other task is writing into buffer, while we 
 2892              		.loc 1 1344 0
 2893              	@ 1344 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2894 0030 EFF31183 		mrs   r3, basepri  
 2895 0034 4FF02001 		mov   r1, #32       
 2896 0038 81F31188 		msr   basepri, r1  
 2897              		
 2898              	@ 0 "" 2
 2899              		.thumb
 2900 003c 7B61     		str	r3, [r7, #20]
1345:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 2901              		.loc 1 1345 0
 2902 003e BB69     		ldr	r3, [r7, #24]
 2903 0040 5B69     		ldr	r3, [r3, #20]
 2904 0042 03F00303 		and	r3, r3, #3
 2905 0046 022B     		cmp	r3, #2
 2906 0048 0AD1     		bne	.L158
1346:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
 2907              		.loc 1 1346 0
 2908 004a 194A     		ldr	r2, .L163+12
 2909 004c FB79     		ldrb	r3, [r7, #7]
 2910 004e 1370     		strb	r3, [r2]
1347:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _WriteBlocking(pRing, ac, 2u);
 2911              		.loc 1 1347 0
 2912 0050 07F10C03 		add	r3, r7, #12
 2913 0054 B869     		ldr	r0, [r7, #24]
 2914 0056 1946     		mov	r1, r3
 2915 0058 0222     		movs	r2, #2
 2916 005a FFF7FEFF 		bl	_WriteBlocking
 2917 005e 14E0     		b	.L159
ARM GAS  /tmp/ccjwrkYl.s 			page 75


 2918              	.L158:
1348:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1349:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 2919              		.loc 1 1349 0
 2920 0060 B869     		ldr	r0, [r7, #24]
 2921 0062 FFF7FEFF 		bl	_GetAvailWriteSpace
 2922 0066 3861     		str	r0, [r7, #16]
1350:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Avail >= 2) {
 2923              		.loc 1 1350 0
 2924 0068 3B69     		ldr	r3, [r7, #16]
 2925 006a 012B     		cmp	r3, #1
 2926 006c 0AD9     		bls	.L160
1351:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
 2927              		.loc 1 1351 0
 2928 006e 104A     		ldr	r2, .L163+12
 2929 0070 FB79     		ldrb	r3, [r7, #7]
 2930 0072 1370     		strb	r3, [r2]
1352:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _WriteNoCheck(pRing, ac, 2u);
 2931              		.loc 1 1352 0
 2932 0074 07F10C03 		add	r3, r7, #12
 2933 0078 B869     		ldr	r0, [r7, #24]
 2934 007a 1946     		mov	r1, r3
 2935 007c 0222     		movs	r2, #2
 2936 007e FFF7FEFF 		bl	_WriteNoCheck
 2937 0082 02E0     		b	.L159
 2938              	.L160:
1353:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
1354:../../../SystemView/SEGGER/SEGGER_RTT.c ****         r = -1;
 2939              		.loc 1 1354 0
 2940 0084 4FF0FF33 		mov	r3, #-1
 2941 0088 FB61     		str	r3, [r7, #28]
 2942              	.L159:
1355:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
1356:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1357:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2943              		.loc 1 1357 0
 2944 008a 7B69     		ldr	r3, [r7, #20]
 2945              	@ 1357 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2946 008c 83F31188 		msr   basepri, r3  
 2947              		
 2948              	@ 0 "" 2
 2949              		.thumb
 2950              	.LBE14:
 2951 0090 02E0     		b	.L161
 2952              	.L157:
1358:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1359:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2953              		.loc 1 1359 0
 2954 0092 4FF0FF33 		mov	r3, #-1
 2955 0096 FB61     		str	r3, [r7, #28]
 2956              	.L161:
1360:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1361:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2957              		.loc 1 1361 0
 2958 0098 FB69     		ldr	r3, [r7, #28]
1362:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2959              		.loc 1 1362 0
ARM GAS  /tmp/ccjwrkYl.s 			page 76


 2960 009a 1846     		mov	r0, r3
 2961 009c 2037     		adds	r7, r7, #32
 2962              	.LCFI128:
 2963              		.cfi_def_cfa_offset 8
 2964 009e BD46     		mov	sp, r7
 2965              	.LCFI129:
 2966              		.cfi_def_cfa_register 13
 2967              		@ sp needed
 2968 00a0 80BD     		pop	{r7, pc}
 2969              	.L164:
 2970 00a2 00BF     		.align	2
 2971              	.L163:
 2972 00a4 00000000 		.word	_SEGGER_RTT
 2973 00a8 00000000 		.word	_aTerminalId
 2974 00ac 18000000 		.word	_SEGGER_RTT+24
 2975 00b0 00000000 		.word	_ActiveTerminal
 2976              		.cfi_endproc
 2977              	.LFE25:
 2979              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
 2980              		.align	2
 2981              		.global	SEGGER_RTT_TerminalOut
 2982              		.thumb
 2983              		.thumb_func
 2985              	SEGGER_RTT_TerminalOut:
 2986              	.LFB26:
1363:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1364:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1365:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1366:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1367:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1368:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1369:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Writes a string to the given terminal
1370:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1371:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1372:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1373:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1374:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1375:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1376:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1377:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1378:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error.
1379:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1380:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1381:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (char TerminalId, const char* s) {
 2987              		.loc 1 1381 0
 2988              		.cfi_startproc
 2989              		@ args = 0, pretend = 0, frame = 32
 2990              		@ frame_needed = 1, uses_anonymous_args = 0
 2991 0000 80B5     		push	{r7, lr}
 2992              	.LCFI130:
 2993              		.cfi_def_cfa_offset 8
 2994              		.cfi_offset 7, -8
 2995              		.cfi_offset 14, -4
 2996 0002 88B0     		sub	sp, sp, #32
 2997              	.LCFI131:
 2998              		.cfi_def_cfa_offset 40
 2999 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccjwrkYl.s 			page 77


 3000              	.LCFI132:
 3001              		.cfi_def_cfa_register 7
 3002 0006 0346     		mov	r3, r0
 3003 0008 3960     		str	r1, [r7]
 3004 000a FB71     		strb	r3, [r7, #7]
1382:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int                   Status;
1383:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              FragLen;
1384:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
1385:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1386:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1387:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 3005              		.loc 1 1387 0
 3006 000c 414B     		ldr	r3, .L180
 3007 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3008 0010 002B     		cmp	r3, #0
 3009 0012 01D1     		bne	.L166
 3010              		.loc 1 1387 0 is_stmt 0 discriminator 1
 3011 0014 FFF7FEFF 		bl	_DoInit
 3012              	.L166:
1388:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1389:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Validate terminal ID.
1390:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1391:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 3013              		.loc 1 1391 0 is_stmt 1
 3014 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3015 001a 0F2B     		cmp	r3, #15
 3016 001c 71D8     		bhi	.L167
1392:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1393:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1394:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1395:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];
 3017              		.loc 1 1395 0
 3018 001e 3E4B     		ldr	r3, .L180+4
 3019 0020 BB61     		str	r3, [r7, #24]
1396:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1397:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1398:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1399:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1400:../../../SystemView/SEGGER/SEGGER_RTT.c ****     FragLen = strlen(s);
 3020              		.loc 1 1400 0
 3021 0022 3868     		ldr	r0, [r7]
 3022 0024 FFF7FEFF 		bl	strlen
 3023 0028 7861     		str	r0, [r7, #20]
 3024              	.LBB15:
1401:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1402:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // How we output depends upon the mode...
1403:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1404:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3025              		.loc 1 1404 0
 3026              	@ 1404 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 3027 002a EFF31183 		mrs   r3, basepri  
 3028 002e 4FF02001 		mov   r1, #32       
 3029 0032 81F31188 		msr   basepri, r1  
 3030              		
 3031              	@ 0 "" 2
 3032              		.thumb
 3033 0036 3B61     		str	r3, [r7, #16]
ARM GAS  /tmp/ccjwrkYl.s 			page 78


1405:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 3034              		.loc 1 1405 0
 3035 0038 B869     		ldr	r0, [r7, #24]
 3036 003a FFF7FEFF 		bl	_GetAvailWriteSpace
 3037 003e F860     		str	r0, [r7, #12]
1406:../../../SystemView/SEGGER/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 3038              		.loc 1 1406 0
 3039 0040 BB69     		ldr	r3, [r7, #24]
 3040 0042 5B69     		ldr	r3, [r3, #20]
 3041 0044 03F00303 		and	r3, r3, #3
 3042 0048 012B     		cmp	r3, #1
 3043 004a 1FD0     		beq	.L169
 3044 004c 012B     		cmp	r3, #1
 3045 004e 02D3     		bcc	.L170
 3046 0050 022B     		cmp	r3, #2
 3047 0052 3BD0     		beq	.L171
 3048 0054 4DE0     		b	.L179
 3049              	.L170:
1407:../../../SystemView/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1408:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1409:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1410:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1411:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1412:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
 3050              		.loc 1 1412 0
 3051 0056 7B69     		ldr	r3, [r7, #20]
 3052 0058 1A1D     		adds	r2, r3, #4
 3053 005a FB68     		ldr	r3, [r7, #12]
 3054 005c 9A42     		cmp	r2, r3
 3055 005e 02D9     		bls	.L172
1413:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = 0;
 3056              		.loc 1 1413 0
 3057 0060 0023     		movs	r3, #0
 3058 0062 FB61     		str	r3, [r7, #28]
1414:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
1415:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1416:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
1417:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1418:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
1419:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3059              		.loc 1 1419 0
 3060 0064 49E0     		b	.L174
 3061              	.L172:
1415:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3062              		.loc 1 1415 0
 3063 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3064 0068 B869     		ldr	r0, [r7, #24]
 3065 006a 1946     		mov	r1, r3
 3066 006c FFF7FEFF 		bl	_PostTerminalSwitch
1416:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3067              		.loc 1 1416 0
 3068 0070 B869     		ldr	r0, [r7, #24]
 3069 0072 3968     		ldr	r1, [r7]
 3070 0074 7A69     		ldr	r2, [r7, #20]
 3071 0076 FFF7FEFF 		bl	_WriteBlocking
 3072 007a 0346     		mov	r3, r0
 3073 007c FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccjwrkYl.s 			page 79


1417:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
 3074              		.loc 1 1417 0
 3075 007e 274B     		ldr	r3, .L180+8
 3076 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3077 0082 B869     		ldr	r0, [r7, #24]
 3078 0084 1946     		mov	r1, r3
 3079 0086 FFF7FEFF 		bl	_PostTerminalSwitch
 3080              		.loc 1 1419 0
 3081 008a 36E0     		b	.L174
 3082              	.L169:
1420:../../../SystemView/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1421:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1422:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
1423:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
1424:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
1425:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1426:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Avail < 4u) {
 3083              		.loc 1 1426 0
 3084 008c FB68     		ldr	r3, [r7, #12]
 3085 008e 032B     		cmp	r3, #3
 3086 0090 03D8     		bhi	.L175
1427:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = -1;
 3087              		.loc 1 1427 0
 3088 0092 4FF0FF33 		mov	r3, #-1
 3089 0096 FB61     		str	r3, [r7, #28]
1428:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
1429:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1430:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
1431:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1432:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
1433:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3090              		.loc 1 1433 0
 3091 0098 2FE0     		b	.L174
 3092              	.L175:
1429:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 3093              		.loc 1 1429 0
 3094 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3095 009c B869     		ldr	r0, [r7, #24]
 3096 009e 1946     		mov	r1, r3
 3097 00a0 FFF7FEFF 		bl	_PostTerminalSwitch
1430:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3098              		.loc 1 1430 0
 3099 00a4 FB68     		ldr	r3, [r7, #12]
 3100 00a6 1A1F     		subs	r2, r3, #4
 3101 00a8 7B69     		ldr	r3, [r7, #20]
 3102 00aa 9342     		cmp	r3, r2
 3103 00ac 28BF     		it	cs
 3104 00ae 1346     		movcs	r3, r2
 3105 00b0 B869     		ldr	r0, [r7, #24]
 3106 00b2 3968     		ldr	r1, [r7]
 3107 00b4 1A46     		mov	r2, r3
 3108 00b6 FFF7FEFF 		bl	_WriteBlocking
 3109 00ba 0346     		mov	r3, r0
 3110 00bc FB61     		str	r3, [r7, #28]
1431:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
 3111              		.loc 1 1431 0
 3112 00be 174B     		ldr	r3, .L180+8
ARM GAS  /tmp/ccjwrkYl.s 			page 80


 3113 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3114 00c2 B869     		ldr	r0, [r7, #24]
 3115 00c4 1946     		mov	r1, r3
 3116 00c6 FFF7FEFF 		bl	_PostTerminalSwitch
 3117              		.loc 1 1433 0
 3118 00ca 16E0     		b	.L174
 3119              	.L171:
1434:../../../SystemView/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
1435:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1436:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
1437:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1438:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
 3120              		.loc 1 1438 0
 3121 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3122 00ce B869     		ldr	r0, [r7, #24]
 3123 00d0 1946     		mov	r1, r3
 3124 00d2 FFF7FEFF 		bl	_PostTerminalSwitch
1439:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 3125              		.loc 1 1439 0
 3126 00d6 B869     		ldr	r0, [r7, #24]
 3127 00d8 3968     		ldr	r1, [r7]
 3128 00da 7A69     		ldr	r2, [r7, #20]
 3129 00dc FFF7FEFF 		bl	_WriteBlocking
 3130 00e0 0346     		mov	r3, r0
 3131 00e2 FB61     		str	r3, [r7, #28]
1440:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 3132              		.loc 1 1440 0
 3133 00e4 0D4B     		ldr	r3, .L180+8
 3134 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3135 00e8 B869     		ldr	r0, [r7, #24]
 3136 00ea 1946     		mov	r1, r3
 3137 00ec FFF7FEFF 		bl	_PostTerminalSwitch
1441:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3138              		.loc 1 1441 0
 3139 00f0 03E0     		b	.L174
 3140              	.L179:
1442:../../../SystemView/SEGGER/SEGGER_RTT.c ****     default:
1443:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = -1;
 3141              		.loc 1 1443 0
 3142 00f2 4FF0FF33 		mov	r3, #-1
 3143 00f6 FB61     		str	r3, [r7, #28]
1444:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3144              		.loc 1 1444 0
 3145 00f8 00BF     		nop
 3146              	.L174:
1445:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1446:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1447:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Finish up.
1448:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1449:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3147              		.loc 1 1449 0
 3148 00fa 3B69     		ldr	r3, [r7, #16]
 3149              	@ 1449 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 3150 00fc 83F31188 		msr   basepri, r3  
 3151              		
 3152              	@ 0 "" 2
 3153              		.thumb
ARM GAS  /tmp/ccjwrkYl.s 			page 81


 3154              	.LBE15:
 3155 0100 02E0     		b	.L177
 3156              	.L167:
1450:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1451:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = -1;
 3157              		.loc 1 1451 0
 3158 0102 4FF0FF33 		mov	r3, #-1
 3159 0106 FB61     		str	r3, [r7, #28]
 3160              	.L177:
1452:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1453:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return Status;
 3161              		.loc 1 1453 0
 3162 0108 FB69     		ldr	r3, [r7, #28]
1454:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 3163              		.loc 1 1454 0
 3164 010a 1846     		mov	r0, r3
 3165 010c 2037     		adds	r7, r7, #32
 3166              	.LCFI133:
 3167              		.cfi_def_cfa_offset 8
 3168 010e BD46     		mov	sp, r7
 3169              	.LCFI134:
 3170              		.cfi_def_cfa_register 13
 3171              		@ sp needed
 3172 0110 80BD     		pop	{r7, pc}
 3173              	.L181:
 3174 0112 00BF     		.align	2
 3175              	.L180:
 3176 0114 00000000 		.word	_SEGGER_RTT
 3177 0118 18000000 		.word	_SEGGER_RTT+24
 3178 011c 00000000 		.word	_ActiveTerminal
 3179              		.cfi_endproc
 3180              	.LFE26:
 3182              		.text
 3183              	.Letext0:
 3184              		.file 2 "../../../SystemView/SEGGER/SEGGER_RTT.h"
ARM GAS  /tmp/ccjwrkYl.s 			page 82


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SEGGER_RTT.c
     /tmp/ccjwrkYl.s:21     .data._aTerminalId:0000000000000000 $d
     /tmp/ccjwrkYl.s:24     .data._aTerminalId:0000000000000000 _aTerminalId
                            *COM*:00000000000000a8 _SEGGER_RTT
     /tmp/ccjwrkYl.s:43     .bss._acUpBuffer:0000000000000000 $d
     /tmp/ccjwrkYl.s:46     .bss._acUpBuffer:0000000000000000 _acUpBuffer
     /tmp/ccjwrkYl.s:49     .bss._acDownBuffer:0000000000000000 $d
     /tmp/ccjwrkYl.s:52     .bss._acDownBuffer:0000000000000000 _acDownBuffer
     /tmp/ccjwrkYl.s:57     .bss._ActiveTerminal:0000000000000000 _ActiveTerminal
     /tmp/ccjwrkYl.s:58     .bss._ActiveTerminal:0000000000000000 $d
     /tmp/ccjwrkYl.s:60     .rodata:0000000000000000 $d
     /tmp/ccjwrkYl.s:70     .text._DoInit:0000000000000000 $t
     /tmp/ccjwrkYl.s:74     .text._DoInit:0000000000000000 _DoInit
     /tmp/ccjwrkYl.s:186    .text._DoInit:000000000000008c $d
     /tmp/ccjwrkYl.s:196    .text._WriteBlocking:0000000000000000 $t
     /tmp/ccjwrkYl.s:200    .text._WriteBlocking:0000000000000000 _WriteBlocking
     /tmp/ccjwrkYl.s:335    .text._WriteNoCheck:0000000000000000 $t
     /tmp/ccjwrkYl.s:339    .text._WriteNoCheck:0000000000000000 _WriteNoCheck
     /tmp/ccjwrkYl.s:436    .text._PostTerminalSwitch:0000000000000000 $t
     /tmp/ccjwrkYl.s:440    .text._PostTerminalSwitch:0000000000000000 _PostTerminalSwitch
     /tmp/ccjwrkYl.s:486    .text._PostTerminalSwitch:000000000000002c $d
     /tmp/ccjwrkYl.s:491    .text._GetAvailWriteSpace:0000000000000000 $t
     /tmp/ccjwrkYl.s:495    .text._GetAvailWriteSpace:0000000000000000 _GetAvailWriteSpace
     /tmp/ccjwrkYl.s:564    .text.SEGGER_RTT_ReadNoLock:0000000000000000 $t
     /tmp/ccjwrkYl.s:569    .text.SEGGER_RTT_ReadNoLock:0000000000000000 SEGGER_RTT_ReadNoLock
     /tmp/ccjwrkYl.s:748    .text.SEGGER_RTT_ReadNoLock:0000000000000100 $d
     /tmp/ccjwrkYl.s:753    .text.SEGGER_RTT_Read:0000000000000000 $t
     /tmp/ccjwrkYl.s:758    .text.SEGGER_RTT_Read:0000000000000000 SEGGER_RTT_Read
     /tmp/ccjwrkYl.s:818    .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 $t
     /tmp/ccjwrkYl.s:823    .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 SEGGER_RTT_WriteWithOverwriteNoLock
     /tmp/ccjwrkYl.s:1028   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000124 $d
     /tmp/ccjwrkYl.s:1033   .text.SEGGER_RTT_WriteSkipNoLock:0000000000000000 $t
     /tmp/ccjwrkYl.s:1038   .text.SEGGER_RTT_WriteSkipNoLock:0000000000000000 SEGGER_RTT_WriteSkipNoLock
     /tmp/ccjwrkYl.s:1251   .text.SEGGER_RTT_WriteSkipNoLock:0000000000000138 $d
     /tmp/ccjwrkYl.s:1256   .text.SEGGER_RTT_WriteNoLock:0000000000000000 $t
     /tmp/ccjwrkYl.s:1261   .text.SEGGER_RTT_WriteNoLock:0000000000000000 SEGGER_RTT_WriteNoLock
     /tmp/ccjwrkYl.s:1380   .text.SEGGER_RTT_WriteNoLock:0000000000000098 $d
     /tmp/ccjwrkYl.s:1385   .text.SEGGER_RTT_Write:0000000000000000 $t
     /tmp/ccjwrkYl.s:1390   .text.SEGGER_RTT_Write:0000000000000000 SEGGER_RTT_Write
     /tmp/ccjwrkYl.s:1457   .text.SEGGER_RTT_Write:0000000000000044 $d
     /tmp/ccjwrkYl.s:1462   .text.SEGGER_RTT_WriteString:0000000000000000 $t
     /tmp/ccjwrkYl.s:1467   .text.SEGGER_RTT_WriteString:0000000000000000 SEGGER_RTT_WriteString
     /tmp/ccjwrkYl.s:1510   .text.SEGGER_RTT_GetKey:0000000000000000 $t
     /tmp/ccjwrkYl.s:1515   .text.SEGGER_RTT_GetKey:0000000000000000 SEGGER_RTT_GetKey
     /tmp/ccjwrkYl.s:1569   .text.SEGGER_RTT_WaitKey:0000000000000000 $t
     /tmp/ccjwrkYl.s:1574   .text.SEGGER_RTT_WaitKey:0000000000000000 SEGGER_RTT_WaitKey
     /tmp/ccjwrkYl.s:1615   .text.SEGGER_RTT_HasKey:0000000000000000 $t
     /tmp/ccjwrkYl.s:1620   .text.SEGGER_RTT_HasKey:0000000000000000 SEGGER_RTT_HasKey
     /tmp/ccjwrkYl.s:1679   .text.SEGGER_RTT_HasKey:0000000000000038 $d
     /tmp/ccjwrkYl.s:1684   .text.SEGGER_RTT_HasData:0000000000000000 $t
     /tmp/ccjwrkYl.s:1689   .text.SEGGER_RTT_HasData:0000000000000000 SEGGER_RTT_HasData
     /tmp/ccjwrkYl.s:1743   .text.SEGGER_RTT_HasData:0000000000000034 $d
     /tmp/ccjwrkYl.s:1748   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:1753   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 SEGGER_RTT_AllocDownBuffer
     /tmp/ccjwrkYl.s:1923   .text.SEGGER_RTT_AllocDownBuffer:00000000000000f0 $d
     /tmp/ccjwrkYl.s:1928   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 $t
ARM GAS  /tmp/ccjwrkYl.s 			page 83


     /tmp/ccjwrkYl.s:1933   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 SEGGER_RTT_AllocUpBuffer
     /tmp/ccjwrkYl.s:2103   .text.SEGGER_RTT_AllocUpBuffer:00000000000000f0 $d
     /tmp/ccjwrkYl.s:2108   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:2113   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 SEGGER_RTT_ConfigUpBuffer
     /tmp/ccjwrkYl.s:2262   .text.SEGGER_RTT_ConfigUpBuffer:00000000000000d0 $d
     /tmp/ccjwrkYl.s:2267   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:2272   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 SEGGER_RTT_ConfigDownBuffer
     /tmp/ccjwrkYl.s:2421   .text.SEGGER_RTT_ConfigDownBuffer:00000000000000d0 $d
     /tmp/ccjwrkYl.s:2426   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:2431   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 SEGGER_RTT_SetNameUpBuffer
     /tmp/ccjwrkYl.s:2518   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000060 $d
     /tmp/ccjwrkYl.s:2523   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:2528   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 SEGGER_RTT_SetNameDownBuffer
     /tmp/ccjwrkYl.s:2615   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000060 $d
     /tmp/ccjwrkYl.s:2620   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:2625   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 SEGGER_RTT_SetFlagsUpBuffer
     /tmp/ccjwrkYl.s:2712   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000060 $d
     /tmp/ccjwrkYl.s:2717   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 $t
     /tmp/ccjwrkYl.s:2722   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 SEGGER_RTT_SetFlagsDownBuffer
     /tmp/ccjwrkYl.s:2809   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000060 $d
     /tmp/ccjwrkYl.s:2814   .text.SEGGER_RTT_Init:0000000000000000 $t
     /tmp/ccjwrkYl.s:2819   .text.SEGGER_RTT_Init:0000000000000000 SEGGER_RTT_Init
     /tmp/ccjwrkYl.s:2841   .text.SEGGER_RTT_SetTerminal:0000000000000000 $t
     /tmp/ccjwrkYl.s:2846   .text.SEGGER_RTT_SetTerminal:0000000000000000 SEGGER_RTT_SetTerminal
     /tmp/ccjwrkYl.s:2972   .text.SEGGER_RTT_SetTerminal:00000000000000a4 $d
     /tmp/ccjwrkYl.s:2980   .text.SEGGER_RTT_TerminalOut:0000000000000000 $t
     /tmp/ccjwrkYl.s:2985   .text.SEGGER_RTT_TerminalOut:0000000000000000 SEGGER_RTT_TerminalOut
     /tmp/ccjwrkYl.s:3176   .text.SEGGER_RTT_TerminalOut:0000000000000114 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memcpy
strlen
