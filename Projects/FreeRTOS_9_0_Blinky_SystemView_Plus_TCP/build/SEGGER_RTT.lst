ARM GAS  /tmp/ccRPMSaP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"SEGGER_RTT.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.data._aTerminalId,"aw",%progbits
  21              		.align	2
  24              	_aTerminalId:
  25 0000 30       		.byte	48
  26 0001 31       		.byte	49
  27 0002 32       		.byte	50
  28 0003 33       		.byte	51
  29 0004 34       		.byte	52
  30 0005 35       		.byte	53
  31 0006 36       		.byte	54
  32 0007 37       		.byte	55
  33 0008 38       		.byte	56
  34 0009 39       		.byte	57
  35 000a 41       		.byte	65
  36 000b 42       		.byte	66
  37 000c 43       		.byte	67
  38 000d 44       		.byte	68
  39 000e 45       		.byte	69
  40 000f 46       		.byte	70
  41              		.comm	_SEGGER_RTT,168,4
  42              		.section	.bss._acUpBuffer,"aw",%nobits
  43              		.align	2
  46              	_acUpBuffer:
  47 0000 00000000 		.space	1024
  47      00000000 
  47      00000000 
  47      00000000 
  47      00000000 
  48              		.section	.bss._acDownBuffer,"aw",%nobits
  49              		.align	2
  52              	_acDownBuffer:
  53 0000 00000000 		.space	16
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.section	.bss._ActiveTerminal,"aw",%nobits
  57              	_ActiveTerminal:
  58 0000 00       		.space	1
ARM GAS  /tmp/ccRPMSaP.s 			page 2


  59              		.section	.rodata
  60              		.align	2
  61              	.LC0:
  62 0000 5465726D 		.ascii	"Terminal\000"
  62      696E616C 
  62      00
  63 0009 000000   		.align	2
  64              	.LC1:
  65 000c 52545400 		.ascii	"RTT\000"
  66              		.align	2
  67              	.LC2:
  68 0010 53454747 		.ascii	"SEGGER\000"
  68      455200
  69              		.section	.text._DoInit,"ax",%progbits
  70              		.align	2
  71              		.thumb
  72              		.thumb_func
  74              	_DoInit:
  75              	.LFB0:
  76              		.file 1 "../../../SystemView/SEGGER/SEGGER_RTT.c"
   1:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
   2:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                SEGGER Microcontroller GmbH & Co. KG                *
   3:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                        The Embedded Experts                        *
   4:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
   5:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
   6:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       (c) 2015 - 2017  SEGGER Microcontroller GmbH & Co. KG        *
   7:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
   8:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       www.segger.com     Support: support@segger.com               *
   9:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  10:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  11:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  12:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER SystemView * Real-time application analysis           *
  13:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  14:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  15:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  16:../../../SystemView/SEGGER/SEGGER_RTT.c **** * All rights reserved.                                               *
  17:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  18:../../../SystemView/SEGGER/SEGGER_RTT.c **** * SEGGER strongly recommends to not make any changes                 *
  19:../../../SystemView/SEGGER/SEGGER_RTT.c **** * to or modify the source code of this software in order to stay     *
  20:../../../SystemView/SEGGER/SEGGER_RTT.c **** * compatible with the RTT protocol and J-Link.                       *
  21:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  22:../../../SystemView/SEGGER/SEGGER_RTT.c **** * Redistribution and use in source and binary forms, with or         *
  23:../../../SystemView/SEGGER/SEGGER_RTT.c **** * without modification, are permitted provided that the following    *
  24:../../../SystemView/SEGGER/SEGGER_RTT.c **** * conditions are met:                                                *
  25:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  26:../../../SystemView/SEGGER/SEGGER_RTT.c **** * o Redistributions of source code must retain the above copyright   *
  27:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   notice, this list of conditions and the following disclaimer.    *
  28:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  29:../../../SystemView/SEGGER/SEGGER_RTT.c **** * o Redistributions in binary form must reproduce the above          *
  30:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   copyright notice, this list of conditions and the following      *
  31:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   disclaimer in the documentation and/or other materials provided  *
  32:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   with the distribution.                                           *
  33:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  34:../../../SystemView/SEGGER/SEGGER_RTT.c **** * o Neither the name of SEGGER Microcontroller GmbH & Co. KG         *
  35:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   nor the names of its contributors may be used to endorse or      *
  36:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   promote products derived from this software without specific     *
  37:../../../SystemView/SEGGER/SEGGER_RTT.c **** *   prior written permission.                                        *
ARM GAS  /tmp/ccRPMSaP.s 			page 3


  38:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  39:../../../SystemView/SEGGER/SEGGER_RTT.c **** * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND             *
  40:../../../SystemView/SEGGER/SEGGER_RTT.c **** * CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,        *
  41:../../../SystemView/SEGGER/SEGGER_RTT.c **** * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF           *
  42:../../../SystemView/SEGGER/SEGGER_RTT.c **** * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE           *
  43:../../../SystemView/SEGGER/SEGGER_RTT.c **** * DISCLAIMED. IN NO EVENT SHALL SEGGER Microcontroller BE LIABLE FOR *
  44:../../../SystemView/SEGGER/SEGGER_RTT.c **** * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR           *
  45:../../../SystemView/SEGGER/SEGGER_RTT.c **** * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT  *
  46:../../../SystemView/SEGGER/SEGGER_RTT.c **** * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;    *
  47:../../../SystemView/SEGGER/SEGGER_RTT.c **** * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF      *
  48:../../../SystemView/SEGGER/SEGGER_RTT.c **** * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT          *
  49:../../../SystemView/SEGGER/SEGGER_RTT.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE  *
  50:../../../SystemView/SEGGER/SEGGER_RTT.c **** * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH   *
  51:../../../SystemView/SEGGER/SEGGER_RTT.c **** * DAMAGE.                                                            *
  52:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  53:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  54:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  55:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SystemView version: V2.50                                    *
  56:../../../SystemView/SEGGER/SEGGER_RTT.c **** *                                                                    *
  57:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
  58:../../../SystemView/SEGGER/SEGGER_RTT.c **** ---------------------------END-OF-HEADER------------------------------
  59:../../../SystemView/SEGGER/SEGGER_RTT.c **** File    : SEGGER_RTT.c
  60:../../../SystemView/SEGGER/SEGGER_RTT.c **** Purpose : Implementation of SEGGER real-time transfer (RTT) which
  61:../../../SystemView/SEGGER/SEGGER_RTT.c ****           allows real-time communication on targets which support
  62:../../../SystemView/SEGGER/SEGGER_RTT.c ****           debugger memory accesses while the CPU is running.
  63:../../../SystemView/SEGGER/SEGGER_RTT.c **** Revision: $Rev: 6249 $
  64:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  65:../../../SystemView/SEGGER/SEGGER_RTT.c **** Additional information:
  66:../../../SystemView/SEGGER/SEGGER_RTT.c ****           Type "int" is assumed to be 32-bits in size
  67:../../../SystemView/SEGGER/SEGGER_RTT.c ****           H->T    Host to target communication
  68:../../../SystemView/SEGGER/SEGGER_RTT.c ****           T->H    Target to host communication
  69:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  70:../../../SystemView/SEGGER/SEGGER_RTT.c ****           RTT channel 0 is always present and reserved for Terminal usage.
  71:../../../SystemView/SEGGER/SEGGER_RTT.c ****           Name is fixed to "Terminal"
  72:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  73:../../../SystemView/SEGGER/SEGGER_RTT.c ****           Effective buffer size: SizeOfBuffer - 1
  74:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  75:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff == RdOff:       Buffer is empty
  76:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff == (RdOff - 1): Buffer is full
  77:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff >  RdOff:       Free space includes wrap-around
  78:../../../SystemView/SEGGER/SEGGER_RTT.c ****           WrOff <  RdOff:       Used space includes wrap-around
  79:../../../SystemView/SEGGER/SEGGER_RTT.c ****           (WrOff == (SizeOfBuffer - 1)) && (RdOff == 0):  
  80:../../../SystemView/SEGGER/SEGGER_RTT.c ****                                 Buffer full and wrap-around after next byte
  81:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  82:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  83:../../../SystemView/SEGGER/SEGGER_RTT.c **** ----------------------------------------------------------------------
  84:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
  85:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  86:../../../SystemView/SEGGER/SEGGER_RTT.c **** #include "SEGGER_RTT.h"
  87:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  88:../../../SystemView/SEGGER/SEGGER_RTT.c **** #include <string.h>                 // for memcpy
  89:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  90:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
  91:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
  92:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Configuration, default values
  93:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
  94:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
ARM GAS  /tmp/ccRPMSaP.s 			page 4


  95:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
  96:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
  97:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_UP
  98:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define BUFFER_SIZE_UP                                  1024  // Size of the buffer for terminal 
  99:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 100:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 101:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   BUFFER_SIZE_DOWN
 102:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define BUFFER_SIZE_DOWN                                16    // Size of the buffer for terminal 
 103:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 104:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 105:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_UP_BUFFERS
 106:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_UP_BUFFERS                    2    // Number of up-buffers (T->H) avai
 107:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 108:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 109:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MAX_NUM_DOWN_BUFFERS
 110:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MAX_NUM_DOWN_BUFFERS                  2    // Number of down-buffers (H->T) av
 111:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 112:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 113:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef SEGGER_RTT_BUFFER_SECTION
 114:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #if defined(SEGGER_RTT_SECTION)
 115:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_BUFFER_SECTION SEGGER_RTT_SECTION
 116:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #endif
 117:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 118:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 119:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_ALIGNMENT
 120:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGNMENT                            0
 121:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 122:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 123:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_BUFFER_ALIGNMENT
 124:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGNMENT                     0
 125:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 126:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 127:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_MODE_DEFAULT
 128:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_MODE_DEFAULT                         SEGGER_RTT_MODE_NO_BLOCK_SKIP
 129:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 130:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 131:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_LOCK
 132:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_LOCK()
 133:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 134:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 135:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   SEGGER_RTT_UNLOCK
 136:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_UNLOCK()
 137:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 138:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 139:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   STRLEN
 140:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define STRLEN(a)                                       strlen((a))
 141:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 142:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 143:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   MEMCPY
 144:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define MEMCPY(pDest, pSrc, NumBytes)                   memcpy((pDest), (pSrc), (NumBytes))
 145:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 146:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 147:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   MIN
 148:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define MIN(a, b)         (((a) < (b)) ? (a) : (b))
 149:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 150:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 151:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef   MAX
ARM GAS  /tmp/ccRPMSaP.s 			page 5


 152:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define MAX(a, b)         (((a) > (b)) ? (a) : (b))
 153:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 154:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 155:../../../SystemView/SEGGER/SEGGER_RTT.c **** // For some environments, NULL may not be defined until certain headers are included
 156:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 157:../../../SystemView/SEGGER/SEGGER_RTT.c **** #ifndef NULL
 158:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define NULL 0
 159:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 160:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 161:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 162:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 163:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Defines, fixed
 164:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 165:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 166:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 167:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if (defined __ICCARM__) || (defined __ICCRX__)
 168:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define RTT_PRAGMA(P) _Pragma(#P)
 169:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 170:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 171:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT || SEGGER_RTT_BUFFER_ALIGNMENT
 172:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #if (defined __GNUC__)
 173:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 174:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 175:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define PRAGMA(A) _Pragma(#A)
 176:../../../SystemView/SEGGER/SEGGER_RTT.c **** #define SEGGER_RTT_ALIGN(Var, Alignment) RTT_PRAGMA(data_alignment=Alignment) \
 177:../../../SystemView/SEGGER/SEGGER_RTT.c ****                                   Var
 178:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 179:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_ALIGN(Var, Alignment) Var __attribute__ ((aligned (Alignment)))
 180:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #else
 181:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #error "Alignment not supported for this compiler."
 182:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #endif
 183:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 184:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_ALIGN(Var, Alignment) Var
 185:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 186:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 187:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION) || defined (SEGGER_RTT_BUFFER_SECTION)
 188:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #if (defined __GNUC__)
 189:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section))) Var
 190:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __ICCARM__) || (defined __ICCRX__)
 191:../../../SystemView/SEGGER/SEGGER_RTT.c **** #define SEGGER_RTT_PUT_SECTION(Var, Section) RTT_PRAGMA(location=Section) \
 192:../../../SystemView/SEGGER/SEGGER_RTT.c ****                                         Var
 193:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #elif (defined __CC_ARM)
 194:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #define SEGGER_RTT_PUT_SECTION(Var, Section) __attribute__ ((section (Section), zero_init))  Va
 195:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #else
 196:../../../SystemView/SEGGER/SEGGER_RTT.c ****     #error "Section placement not supported for this compiler."
 197:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #endif
 198:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 199:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_SECTION(Var, Section) Var
 200:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 201:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 202:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 203:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_ALIGNMENT
 204:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_ALIGNMENT)
 205:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 206:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_CB_ALIGN(Var)  Var
 207:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 208:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
ARM GAS  /tmp/ccRPMSaP.s 			page 6


 209:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if SEGGER_RTT_BUFFER_ALIGNMENT
 210:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  SEGGER_RTT_ALIGN(Var, SEGGER_RTT_BUFFER_ALIGNMENT)
 211:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 212:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_BUFFER_ALIGN(Var)  Var
 213:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 214:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 215:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 216:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_SECTION)
 217:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_SECTION)
 218:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 219:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_CB_SECTION(Var) Var
 220:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 221:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 222:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if defined(SEGGER_RTT_BUFFER_SECTION)
 223:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) SEGGER_RTT_PUT_SECTION(Var, SEGGER_RTT_BUFFER_SECTION)
 224:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 225:../../../SystemView/SEGGER/SEGGER_RTT.c ****   #define SEGGER_RTT_PUT_BUFFER_SECTION(Var) Var
 226:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 227:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 228:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 229:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 230:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Static const data
 231:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 232:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 233:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 234:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 235:../../../SystemView/SEGGER/SEGGER_RTT.c **** static unsigned char _aTerminalId[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B
 236:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 237:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 238:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 239:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Static data
 240:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 241:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 242:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 243:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 244:../../../SystemView/SEGGER/SEGGER_RTT.c **** // RTT Control Block and allocate buffers for channel 0
 245:../../../SystemView/SEGGER/SEGGER_RTT.c **** //
 246:../../../SystemView/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_CB_SECTION(SEGGER_RTT_CB_ALIGN(SEGGER_RTT_CB _SEGGER_RTT));
 247:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 248:../../../SystemView/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acUpBuffer  [BUFFER_SIZE_UP]));
 249:../../../SystemView/SEGGER/SEGGER_RTT.c **** SEGGER_RTT_PUT_BUFFER_SECTION(SEGGER_RTT_BUFFER_ALIGN(static char _acDownBuffer[BUFFER_SIZE_DOWN]))
 250:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 251:../../../SystemView/SEGGER/SEGGER_RTT.c **** static char _ActiveTerminal;
 252:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 253:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 254:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 255:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Static functions
 256:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 257:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 258:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 259:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 260:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 261:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 262:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _DoInit()
 263:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 264:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 265:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Initializes the control block an buffers.
ARM GAS  /tmp/ccRPMSaP.s 			page 7


 266:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    May only be called via INIT() to avoid overriding settings.
 267:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 268:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 269:../../../SystemView/SEGGER/SEGGER_RTT.c **** #define INIT()  do {                                            \
 270:../../../SystemView/SEGGER/SEGGER_RTT.c ****                   if (_SEGGER_RTT.acID[0] == '\0') { _DoInit(); }  \
 271:../../../SystemView/SEGGER/SEGGER_RTT.c ****                 } while (0)
 272:../../../SystemView/SEGGER/SEGGER_RTT.c **** static void _DoInit(void) {
  77              		.loc 1 272 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 1, uses_anonymous_args = 0
  81 0000 80B5     		push	{r7, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 82B0     		sub	sp, sp, #8
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 16
  89 0004 00AF     		add	r7, sp, #0
  90              	.LCFI2:
  91              		.cfi_def_cfa_register 7
 273:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_CB* p;
 274:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 275:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Initialize control block
 276:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 277:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p = &_SEGGER_RTT;
  92              		.loc 1 277 0
  93 0006 1F4B     		ldr	r3, .L2
  94 0008 7B60     		str	r3, [r7, #4]
 278:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->MaxNumUpBuffers    = SEGGER_RTT_MAX_NUM_UP_BUFFERS;
  95              		.loc 1 278 0
  96 000a 7B68     		ldr	r3, [r7, #4]
  97 000c 0322     		movs	r2, #3
  98 000e 1A61     		str	r2, [r3, #16]
 279:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->MaxNumDownBuffers  = SEGGER_RTT_MAX_NUM_DOWN_BUFFERS;
  99              		.loc 1 279 0
 100 0010 7B68     		ldr	r3, [r7, #4]
 101 0012 0322     		movs	r2, #3
 102 0014 5A61     		str	r2, [r3, #20]
 280:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 281:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Initialize up buffer 0
 282:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 283:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].sName         = "Terminal";
 103              		.loc 1 283 0
 104 0016 7B68     		ldr	r3, [r7, #4]
 105 0018 1B4A     		ldr	r2, .L2+4
 106 001a 9A61     		str	r2, [r3, #24]
 284:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].pBuffer       = _acUpBuffer;
 107              		.loc 1 284 0
 108 001c 7B68     		ldr	r3, [r7, #4]
 109 001e 1B4A     		ldr	r2, .L2+8
 110 0020 DA61     		str	r2, [r3, #28]
 285:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].SizeOfBuffer  = sizeof(_acUpBuffer);
 111              		.loc 1 285 0
 112 0022 7B68     		ldr	r3, [r7, #4]
 113 0024 4FF48062 		mov	r2, #1024
ARM GAS  /tmp/ccRPMSaP.s 			page 8


 114 0028 1A62     		str	r2, [r3, #32]
 286:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].RdOff         = 0u;
 115              		.loc 1 286 0
 116 002a 7B68     		ldr	r3, [r7, #4]
 117 002c 0022     		movs	r2, #0
 118 002e 9A62     		str	r2, [r3, #40]
 287:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].WrOff         = 0u;
 119              		.loc 1 287 0
 120 0030 7B68     		ldr	r3, [r7, #4]
 121 0032 0022     		movs	r2, #0
 122 0034 5A62     		str	r2, [r3, #36]
 288:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aUp[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 123              		.loc 1 288 0
 124 0036 7B68     		ldr	r3, [r7, #4]
 125 0038 0022     		movs	r2, #0
 126 003a DA62     		str	r2, [r3, #44]
 289:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 290:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Initialize down buffer 0
 291:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 292:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].sName         = "Terminal";
 127              		.loc 1 292 0
 128 003c 7B68     		ldr	r3, [r7, #4]
 129 003e 124A     		ldr	r2, .L2+4
 130 0040 1A66     		str	r2, [r3, #96]
 293:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].pBuffer       = _acDownBuffer;
 131              		.loc 1 293 0
 132 0042 7B68     		ldr	r3, [r7, #4]
 133 0044 124A     		ldr	r2, .L2+12
 134 0046 5A66     		str	r2, [r3, #100]
 294:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].SizeOfBuffer  = sizeof(_acDownBuffer);
 135              		.loc 1 294 0
 136 0048 7B68     		ldr	r3, [r7, #4]
 137 004a 1022     		movs	r2, #16
 138 004c 9A66     		str	r2, [r3, #104]
 295:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].RdOff         = 0u;
 139              		.loc 1 295 0
 140 004e 7B68     		ldr	r3, [r7, #4]
 141 0050 0022     		movs	r2, #0
 142 0052 1A67     		str	r2, [r3, #112]
 296:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].WrOff         = 0u;
 143              		.loc 1 296 0
 144 0054 7B68     		ldr	r3, [r7, #4]
 145 0056 0022     		movs	r2, #0
 146 0058 DA66     		str	r2, [r3, #108]
 297:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->aDown[0].Flags         = SEGGER_RTT_MODE_DEFAULT;
 147              		.loc 1 297 0
 148 005a 7B68     		ldr	r3, [r7, #4]
 149 005c 0022     		movs	r2, #0
 150 005e 5A67     		str	r2, [r3, #116]
 298:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 299:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish initialization of the control block.
 300:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Copy Id string in three steps to make sure "SEGGER RTT" is not found
 301:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // in initializer memory (usually flash) by J-Link
 302:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 303:../../../SystemView/SEGGER/SEGGER_RTT.c ****   strcpy(&p->acID[7], "RTT");
 151              		.loc 1 303 0
 152 0060 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRPMSaP.s 			page 9


 153 0062 0733     		adds	r3, r3, #7
 154 0064 1846     		mov	r0, r3
 155 0066 0B49     		ldr	r1, .L2+16
 156 0068 FFF7FEFF 		bl	strcpy
 304:../../../SystemView/SEGGER/SEGGER_RTT.c ****   strcpy(&p->acID[0], "SEGGER");
 157              		.loc 1 304 0
 158 006c 7B68     		ldr	r3, [r7, #4]
 159 006e 1846     		mov	r0, r3
 160 0070 0949     		ldr	r1, .L2+20
 161 0072 FFF7FEFF 		bl	strcpy
 305:../../../SystemView/SEGGER/SEGGER_RTT.c ****   p->acID[6] = ' ';
 162              		.loc 1 305 0
 163 0076 7B68     		ldr	r3, [r7, #4]
 164 0078 2022     		movs	r2, #32
 165 007a 9A71     		strb	r2, [r3, #6]
 306:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 166              		.loc 1 306 0
 167 007c 0837     		adds	r7, r7, #8
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170 007e BD46     		mov	sp, r7
 171              	.LCFI4:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed
 174 0080 80BD     		pop	{r7, pc}
 175              	.L3:
 176 0082 00BF     		.align	2
 177              	.L2:
 178 0084 00000000 		.word	_SEGGER_RTT
 179 0088 00000000 		.word	.LC0
 180 008c 00000000 		.word	_acUpBuffer
 181 0090 00000000 		.word	_acDownBuffer
 182 0094 0C000000 		.word	.LC1
 183 0098 10000000 		.word	.LC2
 184              		.cfi_endproc
 185              	.LFE0:
 187              		.section	.text._WriteBlocking,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 192              	_WriteBlocking:
 193              	.LFB1:
 307:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 308:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 309:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 310:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _WriteBlocking()
 311:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 312:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 313:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 314:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 315:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    read by the host.
 316:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    The caller is responsible for managing the write chunk sizes as
 317:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    _WriteBlocking() will block until all data has been posted successfully.
 318:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 319:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 320:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 321:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
ARM GAS  /tmp/ccRPMSaP.s 			page 10


 322:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 323:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 324:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 325:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - Number of bytes written into buffer.
 326:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 327:../../../SystemView/SEGGER/SEGGER_RTT.c **** static unsigned _WriteBlocking(SEGGER_RTT_BUFFER_UP* pRing, const char* pBuffer, unsigned NumBytes)
 194              		.loc 1 327 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 32
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              	.LCFI5:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 88B0     		sub	sp, sp, #32
 204              	.LCFI6:
 205              		.cfi_def_cfa_offset 40
 206 0004 00AF     		add	r7, sp, #0
 207              	.LCFI7:
 208              		.cfi_def_cfa_register 7
 209 0006 F860     		str	r0, [r7, #12]
 210 0008 B960     		str	r1, [r7, #8]
 211 000a 7A60     		str	r2, [r7, #4]
 328:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesToWrite;
 329:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesWritten;
 330:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 331:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 332:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 333:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Write data to buffer and handle wrap-around if necessary
 334:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 335:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesWritten = 0u;
 212              		.loc 1 335 0
 213 000c 0023     		movs	r3, #0
 214 000e BB61     		str	r3, [r7, #24]
 336:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 215              		.loc 1 336 0
 216 0010 FB68     		ldr	r3, [r7, #12]
 217 0012 DB68     		ldr	r3, [r3, #12]
 218 0014 7B61     		str	r3, [r7, #20]
 219              	.L8:
 337:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
 338:../../../SystemView/SEGGER/SEGGER_RTT.c ****     RdOff = pRing->RdOff;                         // May be changed by host (debug probe) in the me
 220              		.loc 1 338 0
 221 0016 FB68     		ldr	r3, [r7, #12]
 222 0018 1B69     		ldr	r3, [r3, #16]
 223 001a 3B61     		str	r3, [r7, #16]
 339:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (RdOff > WrOff) {
 224              		.loc 1 339 0
 225 001c 3A69     		ldr	r2, [r7, #16]
 226 001e 7B69     		ldr	r3, [r7, #20]
 227 0020 9A42     		cmp	r2, r3
 228 0022 05D9     		bls	.L5
 340:../../../SystemView/SEGGER/SEGGER_RTT.c ****       NumBytesToWrite = RdOff - WrOff - 1u;
 229              		.loc 1 340 0
 230 0024 3A69     		ldr	r2, [r7, #16]
 231 0026 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccRPMSaP.s 			page 11


 232 0028 D31A     		subs	r3, r2, r3
 233 002a 013B     		subs	r3, r3, #1
 234 002c FB61     		str	r3, [r7, #28]
 235 002e 07E0     		b	.L6
 236              	.L5:
 341:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {
 342:../../../SystemView/SEGGER/SEGGER_RTT.c ****       NumBytesToWrite = pRing->SizeOfBuffer - (WrOff - RdOff + 1u);
 237              		.loc 1 342 0
 238 0030 FB68     		ldr	r3, [r7, #12]
 239 0032 9A68     		ldr	r2, [r3, #8]
 240 0034 3969     		ldr	r1, [r7, #16]
 241 0036 7B69     		ldr	r3, [r7, #20]
 242 0038 CB1A     		subs	r3, r1, r3
 243 003a 1344     		add	r3, r3, r2
 244 003c 013B     		subs	r3, r3, #1
 245 003e FB61     		str	r3, [r7, #28]
 246              	.L6:
 343:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 344:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, (pRing->SizeOfBuffer - WrOff));      // Number of bytes 
 247              		.loc 1 344 0
 248 0040 FB68     		ldr	r3, [r7, #12]
 249 0042 9A68     		ldr	r2, [r3, #8]
 250 0044 7B69     		ldr	r3, [r7, #20]
 251 0046 D31A     		subs	r3, r2, r3
 252 0048 FA69     		ldr	r2, [r7, #28]
 253 004a 9342     		cmp	r3, r2
 254 004c 28BF     		it	cs
 255 004e 1346     		movcs	r3, r2
 256 0050 FB61     		str	r3, [r7, #28]
 345:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesToWrite = MIN(NumBytesToWrite, NumBytes);
 257              		.loc 1 345 0
 258 0052 FA69     		ldr	r2, [r7, #28]
 259 0054 7B68     		ldr	r3, [r7, #4]
 260 0056 9342     		cmp	r3, r2
 261 0058 28BF     		it	cs
 262 005a 1346     		movcs	r3, r2
 263 005c FB61     		str	r3, [r7, #28]
 346:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer + WrOff, pBuffer, NumBytesToWrite);
 264              		.loc 1 346 0
 265 005e FB68     		ldr	r3, [r7, #12]
 266 0060 5A68     		ldr	r2, [r3, #4]
 267 0062 7B69     		ldr	r3, [r7, #20]
 268 0064 1344     		add	r3, r3, r2
 269 0066 1846     		mov	r0, r3
 270 0068 B968     		ldr	r1, [r7, #8]
 271 006a FA69     		ldr	r2, [r7, #28]
 272 006c FFF7FEFF 		bl	memcpy
 347:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesWritten += NumBytesToWrite;
 273              		.loc 1 347 0
 274 0070 BA69     		ldr	r2, [r7, #24]
 275 0072 FB69     		ldr	r3, [r7, #28]
 276 0074 1344     		add	r3, r3, r2
 277 0076 BB61     		str	r3, [r7, #24]
 348:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pBuffer         += NumBytesToWrite;
 278              		.loc 1 348 0
 279 0078 BA68     		ldr	r2, [r7, #8]
 280 007a FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccRPMSaP.s 			page 12


 281 007c 1344     		add	r3, r3, r2
 282 007e BB60     		str	r3, [r7, #8]
 349:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytes        -= NumBytesToWrite;
 283              		.loc 1 349 0
 284 0080 7A68     		ldr	r2, [r7, #4]
 285 0082 FB69     		ldr	r3, [r7, #28]
 286 0084 D31A     		subs	r3, r2, r3
 287 0086 7B60     		str	r3, [r7, #4]
 350:../../../SystemView/SEGGER/SEGGER_RTT.c ****     WrOff           += NumBytesToWrite;
 288              		.loc 1 350 0
 289 0088 7A69     		ldr	r2, [r7, #20]
 290 008a FB69     		ldr	r3, [r7, #28]
 291 008c 1344     		add	r3, r3, r2
 292 008e 7B61     		str	r3, [r7, #20]
 351:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (WrOff == pRing->SizeOfBuffer) {
 293              		.loc 1 351 0
 294 0090 FB68     		ldr	r3, [r7, #12]
 295 0092 9A68     		ldr	r2, [r3, #8]
 296 0094 7B69     		ldr	r3, [r7, #20]
 297 0096 9A42     		cmp	r2, r3
 298 0098 01D1     		bne	.L7
 352:../../../SystemView/SEGGER/SEGGER_RTT.c ****       WrOff = 0u;
 299              		.loc 1 352 0
 300 009a 0023     		movs	r3, #0
 301 009c 7B61     		str	r3, [r7, #20]
 302              	.L7:
 353:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 354:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff;
 303              		.loc 1 354 0
 304 009e FB68     		ldr	r3, [r7, #12]
 305 00a0 7A69     		ldr	r2, [r7, #20]
 306 00a2 DA60     		str	r2, [r3, #12]
 355:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (NumBytes);
 307              		.loc 1 355 0
 308 00a4 7B68     		ldr	r3, [r7, #4]
 309 00a6 002B     		cmp	r3, #0
 310 00a8 B5D1     		bne	.L8
 356:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 357:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return NumBytesWritten;
 311              		.loc 1 357 0
 312 00aa BB69     		ldr	r3, [r7, #24]
 358:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 313              		.loc 1 358 0
 314 00ac 1846     		mov	r0, r3
 315 00ae 2037     		adds	r7, r7, #32
 316              	.LCFI8:
 317              		.cfi_def_cfa_offset 8
 318 00b0 BD46     		mov	sp, r7
 319              	.LCFI9:
 320              		.cfi_def_cfa_register 13
 321              		@ sp needed
 322 00b2 80BD     		pop	{r7, pc}
 323              		.cfi_endproc
 324              	.LFE1:
 326              		.section	.text._WriteNoCheck,"ax",%progbits
 327              		.align	2
 328              		.thumb
ARM GAS  /tmp/ccRPMSaP.s 			page 13


 329              		.thumb_func
 331              	_WriteNoCheck:
 332              	.LFB2:
 359:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 360:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 361:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 362:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _WriteNoCheck()
 363:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 364:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 365:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT ring buffer
 366:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    and updates the associated write pointer which is periodically
 367:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    read by the host.
 368:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    It is callers responsibility to make sure data actually fits in buffer.
 369:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 370:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 371:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 372:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 373:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 374:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 375:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 376:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there might not be enough space in the "Up"-buffer, call _WriteBlocking
 377:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 378:../../../SystemView/SEGGER/SEGGER_RTT.c **** static void _WriteNoCheck(SEGGER_RTT_BUFFER_UP* pRing, const char* pData, unsigned NumBytes) {
 333              		.loc 1 378 0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 32
 336              		@ frame_needed = 1, uses_anonymous_args = 0
 337 0000 80B5     		push	{r7, lr}
 338              	.LCFI10:
 339              		.cfi_def_cfa_offset 8
 340              		.cfi_offset 7, -8
 341              		.cfi_offset 14, -4
 342 0002 88B0     		sub	sp, sp, #32
 343              	.LCFI11:
 344              		.cfi_def_cfa_offset 40
 345 0004 00AF     		add	r7, sp, #0
 346              	.LCFI12:
 347              		.cfi_def_cfa_register 7
 348 0006 F860     		str	r0, [r7, #12]
 349 0008 B960     		str	r1, [r7, #8]
 350 000a 7A60     		str	r2, [r7, #4]
 379:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesAtOnce;
 380:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 381:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Rem;
 382:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 383:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 351              		.loc 1 383 0
 352 000c FB68     		ldr	r3, [r7, #12]
 353 000e DB68     		ldr	r3, [r3, #12]
 354 0010 FB61     		str	r3, [r7, #28]
 384:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Rem = pRing->SizeOfBuffer - WrOff;
 355              		.loc 1 384 0
 356 0012 FB68     		ldr	r3, [r7, #12]
 357 0014 9A68     		ldr	r2, [r3, #8]
 358 0016 FB69     		ldr	r3, [r7, #28]
 359 0018 D31A     		subs	r3, r2, r3
 360 001a BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccRPMSaP.s 			page 14


 385:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (Rem > NumBytes) {
 361              		.loc 1 385 0
 362 001c BA69     		ldr	r2, [r7, #24]
 363 001e 7B68     		ldr	r3, [r7, #4]
 364 0020 9A42     		cmp	r2, r3
 365 0022 0ED9     		bls	.L11
 386:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 387:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // All data fits before wrap around
 388:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 389:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 366              		.loc 1 389 0
 367 0024 FB68     		ldr	r3, [r7, #12]
 368 0026 5A68     		ldr	r2, [r3, #4]
 369 0028 FB69     		ldr	r3, [r7, #28]
 370 002a 1344     		add	r3, r3, r2
 371 002c 1846     		mov	r0, r3
 372 002e B968     		ldr	r1, [r7, #8]
 373 0030 7A68     		ldr	r2, [r7, #4]
 374 0032 FFF7FEFF 		bl	memcpy
 390:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = WrOff + NumBytes;
 375              		.loc 1 390 0
 376 0036 FA69     		ldr	r2, [r7, #28]
 377 0038 7B68     		ldr	r3, [r7, #4]
 378 003a 1A44     		add	r2, r2, r3
 379 003c FB68     		ldr	r3, [r7, #12]
 380 003e DA60     		str	r2, [r3, #12]
 381 0040 1BE0     		b	.L10
 382              	.L11:
 391:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 392:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 393:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // We reach the end of the buffer, so need to wrap around
 394:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 395:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = Rem;
 383              		.loc 1 395 0
 384 0042 BB69     		ldr	r3, [r7, #24]
 385 0044 7B61     		str	r3, [r7, #20]
 396:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer + WrOff, pData, NumBytesAtOnce);
 386              		.loc 1 396 0
 387 0046 FB68     		ldr	r3, [r7, #12]
 388 0048 5A68     		ldr	r2, [r3, #4]
 389 004a FB69     		ldr	r3, [r7, #28]
 390 004c 1344     		add	r3, r3, r2
 391 004e 1846     		mov	r0, r3
 392 0050 B968     		ldr	r1, [r7, #8]
 393 0052 7A69     		ldr	r2, [r7, #20]
 394 0054 FFF7FEFF 		bl	memcpy
 397:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesAtOnce = NumBytes - Rem;
 395              		.loc 1 397 0
 396 0058 7A68     		ldr	r2, [r7, #4]
 397 005a BB69     		ldr	r3, [r7, #24]
 398 005c D31A     		subs	r3, r2, r3
 399 005e 7B61     		str	r3, [r7, #20]
 398:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pRing->pBuffer, pData + Rem, NumBytesAtOnce);
 400              		.loc 1 398 0
 401 0060 FB68     		ldr	r3, [r7, #12]
 402 0062 5968     		ldr	r1, [r3, #4]
 403 0064 BA68     		ldr	r2, [r7, #8]
ARM GAS  /tmp/ccRPMSaP.s 			page 15


 404 0066 BB69     		ldr	r3, [r7, #24]
 405 0068 1344     		add	r3, r3, r2
 406 006a 0846     		mov	r0, r1
 407 006c 1946     		mov	r1, r3
 408 006e 7A69     		ldr	r2, [r7, #20]
 409 0070 FFF7FEFF 		bl	memcpy
 399:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->WrOff = NumBytesAtOnce;
 410              		.loc 1 399 0
 411 0074 FB68     		ldr	r3, [r7, #12]
 412 0076 7A69     		ldr	r2, [r7, #20]
 413 0078 DA60     		str	r2, [r3, #12]
 414              	.L10:
 400:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 401:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 415              		.loc 1 401 0
 416 007a 2037     		adds	r7, r7, #32
 417              	.LCFI13:
 418              		.cfi_def_cfa_offset 8
 419 007c BD46     		mov	sp, r7
 420              	.LCFI14:
 421              		.cfi_def_cfa_register 13
 422              		@ sp needed
 423 007e 80BD     		pop	{r7, pc}
 424              		.cfi_endproc
 425              	.LFE2:
 427              		.section	.text._PostTerminalSwitch,"ax",%progbits
 428              		.align	2
 429              		.thumb
 430              		.thumb_func
 432              	_PostTerminalSwitch:
 433              	.LFB3:
 402:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 403:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 404:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 405:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _PostTerminalSwitch()
 406:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 407:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 408:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Switch terminal to the given terminal ID.  It is the caller's
 409:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    responsibility to ensure the terminal ID is correct and there is
 410:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    enough space in the buffer for this to complete successfully.
 411:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 412:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 413:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to post to.
 414:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    TerminalId   Terminal ID to switch to.
 415:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 416:../../../SystemView/SEGGER/SEGGER_RTT.c **** static void _PostTerminalSwitch(SEGGER_RTT_BUFFER_UP* pRing, unsigned char TerminalId) {
 434              		.loc 1 416 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 16
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438 0000 80B5     		push	{r7, lr}
 439              	.LCFI15:
 440              		.cfi_def_cfa_offset 8
 441              		.cfi_offset 7, -8
 442              		.cfi_offset 14, -4
 443 0002 84B0     		sub	sp, sp, #16
 444              	.LCFI16:
ARM GAS  /tmp/ccRPMSaP.s 			page 16


 445              		.cfi_def_cfa_offset 24
 446 0004 00AF     		add	r7, sp, #0
 447              	.LCFI17:
 448              		.cfi_def_cfa_register 7
 449 0006 7860     		str	r0, [r7, #4]
 450 0008 0B46     		mov	r3, r1
 451 000a FB70     		strb	r3, [r7, #3]
 417:../../../SystemView/SEGGER/SEGGER_RTT.c ****   char ac[2];
 418:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 419:../../../SystemView/SEGGER/SEGGER_RTT.c ****   ac[0] = 0xFFu;
 452              		.loc 1 419 0
 453 000c FF23     		movs	r3, #255
 454 000e 3B73     		strb	r3, [r7, #12]
 420:../../../SystemView/SEGGER/SEGGER_RTT.c ****   ac[1] = _aTerminalId[TerminalId];  // Caller made already sure that TerminalId does not exceed ou
 455              		.loc 1 420 0
 456 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 457 0012 064A     		ldr	r2, .L14
 458 0014 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 459 0016 7B73     		strb	r3, [r7, #13]
 421:../../../SystemView/SEGGER/SEGGER_RTT.c ****   _WriteBlocking(pRing, ac, 2u);
 460              		.loc 1 421 0
 461 0018 07F10C03 		add	r3, r7, #12
 462 001c 7868     		ldr	r0, [r7, #4]
 463 001e 1946     		mov	r1, r3
 464 0020 0222     		movs	r2, #2
 465 0022 FFF7FEFF 		bl	_WriteBlocking
 422:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 466              		.loc 1 422 0
 467 0026 1037     		adds	r7, r7, #16
 468              	.LCFI18:
 469              		.cfi_def_cfa_offset 8
 470 0028 BD46     		mov	sp, r7
 471              	.LCFI19:
 472              		.cfi_def_cfa_register 13
 473              		@ sp needed
 474 002a 80BD     		pop	{r7, pc}
 475              	.L15:
 476              		.align	2
 477              	.L14:
 478 002c 00000000 		.word	_aTerminalId
 479              		.cfi_endproc
 480              	.LFE3:
 482              		.section	.text._GetAvailWriteSpace,"ax",%progbits
 483              		.align	2
 484              		.thumb
 485              		.thumb_func
 487              	_GetAvailWriteSpace:
 488              	.LFB4:
 423:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 424:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 425:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 426:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       _GetAvailWriteSpace()
 427:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 428:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 429:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Returns the number of bytes that can be written to the ring
 430:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    buffer without blocking.
 431:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccRPMSaP.s 			page 17


 432:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 433:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pRing        Ring buffer to check.
 434:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 435:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 436:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes that are free in the buffer.
 437:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 438:../../../SystemView/SEGGER/SEGGER_RTT.c **** static unsigned _GetAvailWriteSpace(SEGGER_RTT_BUFFER_UP* pRing) {
 489              		.loc 1 438 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 24
 492              		@ frame_needed = 1, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494 0000 80B4     		push	{r7}
 495              	.LCFI20:
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 87B0     		sub	sp, sp, #28
 499              	.LCFI21:
 500              		.cfi_def_cfa_offset 32
 501 0004 00AF     		add	r7, sp, #0
 502              	.LCFI22:
 503              		.cfi_def_cfa_register 7
 504 0006 7860     		str	r0, [r7, #4]
 439:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 440:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned WrOff;
 441:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned r;
 442:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 443:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Avoid warnings regarding volatile access order.  It's not a problem
 444:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // in this case, but dampen compiler enthusiasm.
 445:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 446:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 505              		.loc 1 446 0
 506 0008 7B68     		ldr	r3, [r7, #4]
 507 000a 1B69     		ldr	r3, [r3, #16]
 508 000c 3B61     		str	r3, [r7, #16]
 447:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 509              		.loc 1 447 0
 510 000e 7B68     		ldr	r3, [r7, #4]
 511 0010 DB68     		ldr	r3, [r3, #12]
 512 0012 FB60     		str	r3, [r7, #12]
 448:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 513              		.loc 1 448 0
 514 0014 3A69     		ldr	r2, [r7, #16]
 515 0016 FB68     		ldr	r3, [r7, #12]
 516 0018 9A42     		cmp	r2, r3
 517 001a 08D8     		bhi	.L17
 449:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = pRing->SizeOfBuffer - 1u - WrOff + RdOff;
 518              		.loc 1 449 0
 519 001c 7B68     		ldr	r3, [r7, #4]
 520 001e 9A68     		ldr	r2, [r3, #8]
 521 0020 FB68     		ldr	r3, [r7, #12]
 522 0022 D21A     		subs	r2, r2, r3
 523 0024 3B69     		ldr	r3, [r7, #16]
 524 0026 1344     		add	r3, r3, r2
 525 0028 013B     		subs	r3, r3, #1
 526 002a 7B61     		str	r3, [r7, #20]
 527 002c 04E0     		b	.L18
ARM GAS  /tmp/ccRPMSaP.s 			page 18


 528              	.L17:
 450:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 451:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = RdOff - WrOff - 1u;
 529              		.loc 1 451 0
 530 002e 3A69     		ldr	r2, [r7, #16]
 531 0030 FB68     		ldr	r3, [r7, #12]
 532 0032 D31A     		subs	r3, r2, r3
 533 0034 013B     		subs	r3, r3, #1
 534 0036 7B61     		str	r3, [r7, #20]
 535              	.L18:
 452:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 453:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 536              		.loc 1 453 0
 537 0038 7B69     		ldr	r3, [r7, #20]
 454:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 538              		.loc 1 454 0
 539 003a 1846     		mov	r0, r3
 540 003c 1C37     		adds	r7, r7, #28
 541              	.LCFI23:
 542              		.cfi_def_cfa_offset 4
 543 003e BD46     		mov	sp, r7
 544              	.LCFI24:
 545              		.cfi_def_cfa_register 13
 546              		@ sp needed
 547 0040 5DF8047B 		ldr	r7, [sp], #4
 548              	.LCFI25:
 549              		.cfi_restore 7
 550              		.cfi_def_cfa_offset 0
 551 0044 7047     		bx	lr
 552              		.cfi_endproc
 553              	.LFE4:
 555 0046 00BF     		.section	.text.SEGGER_RTT_ReadNoLock,"ax",%progbits
 556              		.align	2
 557              		.global	SEGGER_RTT_ReadNoLock
 558              		.thumb
 559              		.thumb_func
 561              	SEGGER_RTT_ReadNoLock:
 562              	.LFB5:
 455:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 456:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 457:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 458:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       Public code
 459:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 460:../../../SystemView/SEGGER/SEGGER_RTT.c **** **********************************************************************
 461:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 462:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 463:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 464:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ReadNoLock()
 465:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 466:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 467:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 468:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    which have been previously stored by the host.
 469:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Do not lock against interrupts and multiple access.
 470:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 471:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 472:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 473:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
ARM GAS  /tmp/ccRPMSaP.s 			page 19


 474:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 475:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 476:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 477:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes that have been read.
 478:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 479:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_ReadNoLock(unsigned BufferIndex, void* pData, unsigned BufferSize) {
 563              		.loc 1 479 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 40
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              	.LCFI26:
 569              		.cfi_def_cfa_offset 8
 570              		.cfi_offset 7, -8
 571              		.cfi_offset 14, -4
 572 0002 8AB0     		sub	sp, sp, #40
 573              	.LCFI27:
 574              		.cfi_def_cfa_offset 48
 575 0004 00AF     		add	r7, sp, #0
 576              	.LCFI28:
 577              		.cfi_def_cfa_register 7
 578 0006 F860     		str	r0, [r7, #12]
 579 0008 B960     		str	r1, [r7, #8]
 580 000a 7A60     		str	r2, [r7, #4]
 480:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                NumBytesRem;
 481:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                NumBytesRead;
 482:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                RdOff;
 483:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                WrOff;
 484:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned char*          pBuffer;
 485:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 486:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 487:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 581              		.loc 1 487 0
 582 000c 3C4B     		ldr	r3, .L26
 583 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 584 0010 002B     		cmp	r3, #0
 585 0012 01D1     		bne	.L21
 586              		.loc 1 487 0 is_stmt 0 discriminator 1
 587 0014 FFF7FEFF 		bl	_DoInit
 588              	.L21:
 488:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 589              		.loc 1 488 0 is_stmt 1
 590 0018 FA68     		ldr	r2, [r7, #12]
 591 001a 1346     		mov	r3, r2
 592 001c 5B00     		lsls	r3, r3, #1
 593 001e 1344     		add	r3, r3, r2
 594 0020 DB00     		lsls	r3, r3, #3
 595 0022 6033     		adds	r3, r3, #96
 596 0024 364A     		ldr	r2, .L26
 597 0026 1344     		add	r3, r3, r2
 598 0028 BB61     		str	r3, [r7, #24]
 489:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pBuffer = (unsigned char*)pData;
 599              		.loc 1 489 0
 600 002a BB68     		ldr	r3, [r7, #8]
 601 002c FB61     		str	r3, [r7, #28]
 490:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 602              		.loc 1 490 0
ARM GAS  /tmp/ccRPMSaP.s 			page 20


 603 002e BB69     		ldr	r3, [r7, #24]
 604 0030 1B69     		ldr	r3, [r3, #16]
 605 0032 3B62     		str	r3, [r7, #32]
 491:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 606              		.loc 1 491 0
 607 0034 BB69     		ldr	r3, [r7, #24]
 608 0036 DB68     		ldr	r3, [r3, #12]
 609 0038 7B61     		str	r3, [r7, #20]
 492:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRead = 0u;
 610              		.loc 1 492 0
 611 003a 0023     		movs	r3, #0
 612 003c 7B62     		str	r3, [r7, #36]
 493:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 494:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Read from current read position to wrap-around of buffer, first
 495:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 496:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff > WrOff) {
 613              		.loc 1 496 0
 614 003e 3A6A     		ldr	r2, [r7, #32]
 615 0040 7B69     		ldr	r3, [r7, #20]
 616 0042 9A42     		cmp	r2, r3
 617 0044 2AD9     		bls	.L22
 497:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRem = pRing->SizeOfBuffer - RdOff;
 618              		.loc 1 497 0
 619 0046 BB69     		ldr	r3, [r7, #24]
 620 0048 9A68     		ldr	r2, [r3, #8]
 621 004a 3B6A     		ldr	r3, [r7, #32]
 622 004c D31A     		subs	r3, r2, r3
 623 004e 3B61     		str	r3, [r7, #16]
 498:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRem = MIN(NumBytesRem, BufferSize);
 624              		.loc 1 498 0
 625 0050 3A69     		ldr	r2, [r7, #16]
 626 0052 7B68     		ldr	r3, [r7, #4]
 627 0054 9342     		cmp	r3, r2
 628 0056 28BF     		it	cs
 629 0058 1346     		movcs	r3, r2
 630 005a 3B61     		str	r3, [r7, #16]
 499:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 631              		.loc 1 499 0
 632 005c BB69     		ldr	r3, [r7, #24]
 633 005e 5A68     		ldr	r2, [r3, #4]
 634 0060 3B6A     		ldr	r3, [r7, #32]
 635 0062 1344     		add	r3, r3, r2
 636 0064 F869     		ldr	r0, [r7, #28]
 637 0066 1946     		mov	r1, r3
 638 0068 3A69     		ldr	r2, [r7, #16]
 639 006a FFF7FEFF 		bl	memcpy
 500:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 640              		.loc 1 500 0
 641 006e 7A6A     		ldr	r2, [r7, #36]
 642 0070 3B69     		ldr	r3, [r7, #16]
 643 0072 1344     		add	r3, r3, r2
 644 0074 7B62     		str	r3, [r7, #36]
 501:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 645              		.loc 1 501 0
 646 0076 FA69     		ldr	r2, [r7, #28]
 647 0078 3B69     		ldr	r3, [r7, #16]
 648 007a 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccRPMSaP.s 			page 21


 649 007c FB61     		str	r3, [r7, #28]
 502:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 650              		.loc 1 502 0
 651 007e 7A68     		ldr	r2, [r7, #4]
 652 0080 3B69     		ldr	r3, [r7, #16]
 653 0082 D31A     		subs	r3, r2, r3
 654 0084 7B60     		str	r3, [r7, #4]
 503:../../../SystemView/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 655              		.loc 1 503 0
 656 0086 3A6A     		ldr	r2, [r7, #32]
 657 0088 3B69     		ldr	r3, [r7, #16]
 658 008a 1344     		add	r3, r3, r2
 659 008c 3B62     		str	r3, [r7, #32]
 504:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 505:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Handle wrap-around of buffer
 506:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 507:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (RdOff == pRing->SizeOfBuffer) {
 660              		.loc 1 507 0
 661 008e BB69     		ldr	r3, [r7, #24]
 662 0090 9A68     		ldr	r2, [r3, #8]
 663 0092 3B6A     		ldr	r3, [r7, #32]
 664 0094 9A42     		cmp	r2, r3
 665 0096 01D1     		bne	.L22
 508:../../../SystemView/SEGGER/SEGGER_RTT.c ****       RdOff = 0u;
 666              		.loc 1 508 0
 667 0098 0023     		movs	r3, #0
 668 009a 3B62     		str	r3, [r7, #32]
 669              	.L22:
 509:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 510:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 511:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 512:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Read remaining items of buffer
 513:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 514:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRem = WrOff - RdOff;
 670              		.loc 1 514 0
 671 009c 7A69     		ldr	r2, [r7, #20]
 672 009e 3B6A     		ldr	r3, [r7, #32]
 673 00a0 D31A     		subs	r3, r2, r3
 674 00a2 3B61     		str	r3, [r7, #16]
 515:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRem = MIN(NumBytesRem, BufferSize);
 675              		.loc 1 515 0
 676 00a4 3A69     		ldr	r2, [r7, #16]
 677 00a6 7B68     		ldr	r3, [r7, #4]
 678 00a8 9342     		cmp	r3, r2
 679 00aa 28BF     		it	cs
 680 00ac 1346     		movcs	r3, r2
 681 00ae 3B61     		str	r3, [r7, #16]
 516:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (NumBytesRem > 0u) {
 682              		.loc 1 516 0
 683 00b0 3B69     		ldr	r3, [r7, #16]
 684 00b2 002B     		cmp	r3, #0
 685 00b4 18D0     		beq	.L23
 517:../../../SystemView/SEGGER/SEGGER_RTT.c ****     memcpy(pBuffer, pRing->pBuffer + RdOff, NumBytesRem);
 686              		.loc 1 517 0
 687 00b6 BB69     		ldr	r3, [r7, #24]
 688 00b8 5A68     		ldr	r2, [r3, #4]
 689 00ba 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /tmp/ccRPMSaP.s 			page 22


 690 00bc 1344     		add	r3, r3, r2
 691 00be F869     		ldr	r0, [r7, #28]
 692 00c0 1946     		mov	r1, r3
 693 00c2 3A69     		ldr	r2, [r7, #16]
 694 00c4 FFF7FEFF 		bl	memcpy
 518:../../../SystemView/SEGGER/SEGGER_RTT.c ****     NumBytesRead += NumBytesRem;
 695              		.loc 1 518 0
 696 00c8 7A6A     		ldr	r2, [r7, #36]
 697 00ca 3B69     		ldr	r3, [r7, #16]
 698 00cc 1344     		add	r3, r3, r2
 699 00ce 7B62     		str	r3, [r7, #36]
 519:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pBuffer      += NumBytesRem;
 700              		.loc 1 519 0
 701 00d0 FA69     		ldr	r2, [r7, #28]
 702 00d2 3B69     		ldr	r3, [r7, #16]
 703 00d4 1344     		add	r3, r3, r2
 704 00d6 FB61     		str	r3, [r7, #28]
 520:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferSize   -= NumBytesRem;
 705              		.loc 1 520 0
 706 00d8 7A68     		ldr	r2, [r7, #4]
 707 00da 3B69     		ldr	r3, [r7, #16]
 708 00dc D31A     		subs	r3, r2, r3
 709 00de 7B60     		str	r3, [r7, #4]
 521:../../../SystemView/SEGGER/SEGGER_RTT.c ****     RdOff        += NumBytesRem;
 710              		.loc 1 521 0
 711 00e0 3A6A     		ldr	r2, [r7, #32]
 712 00e2 3B69     		ldr	r3, [r7, #16]
 713 00e4 1344     		add	r3, r3, r2
 714 00e6 3B62     		str	r3, [r7, #32]
 715              	.L23:
 522:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 523:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (NumBytesRead) {
 716              		.loc 1 523 0
 717 00e8 7B6A     		ldr	r3, [r7, #36]
 718 00ea 002B     		cmp	r3, #0
 719 00ec 02D0     		beq	.L24
 524:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->RdOff = RdOff;
 720              		.loc 1 524 0
 721 00ee BB69     		ldr	r3, [r7, #24]
 722 00f0 3A6A     		ldr	r2, [r7, #32]
 723 00f2 1A61     		str	r2, [r3, #16]
 724              	.L24:
 525:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 526:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 527:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return NumBytesRead;
 725              		.loc 1 527 0
 726 00f4 7B6A     		ldr	r3, [r7, #36]
 528:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 727              		.loc 1 528 0
 728 00f6 1846     		mov	r0, r3
 729 00f8 2837     		adds	r7, r7, #40
 730              	.LCFI29:
 731              		.cfi_def_cfa_offset 8
 732 00fa BD46     		mov	sp, r7
 733              	.LCFI30:
 734              		.cfi_def_cfa_register 13
 735              		@ sp needed
ARM GAS  /tmp/ccRPMSaP.s 			page 23


 736 00fc 80BD     		pop	{r7, pc}
 737              	.L27:
 738 00fe 00BF     		.align	2
 739              	.L26:
 740 0100 00000000 		.word	_SEGGER_RTT
 741              		.cfi_endproc
 742              	.LFE5:
 744              		.section	.text.SEGGER_RTT_Read,"ax",%progbits
 745              		.align	2
 746              		.global	SEGGER_RTT_Read
 747              		.thumb
 748              		.thumb_func
 750              	SEGGER_RTT_Read:
 751              	.LFB6:
 529:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 530:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 531:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 532:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Read
 533:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 534:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 535:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Reads characters from SEGGER real-time-terminal control block
 536:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    which have been previously stored by the host.
 537:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 538:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 539:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of Down-buffer to be used (e.g. 0 for "Terminal").
 540:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to buffer provided by target application, to copy characters from RTT-dow
 541:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the target application buffer.
 542:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 543:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 544:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes that have been read.
 545:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 546:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_Read(unsigned BufferIndex, void* pBuffer, unsigned BufferSize) {
 752              		.loc 1 546 0
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 24
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756 0000 80B5     		push	{r7, lr}
 757              	.LCFI31:
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 86B0     		sub	sp, sp, #24
 762              	.LCFI32:
 763              		.cfi_def_cfa_offset 32
 764 0004 00AF     		add	r7, sp, #0
 765              	.LCFI33:
 766              		.cfi_def_cfa_register 7
 767 0006 F860     		str	r0, [r7, #12]
 768 0008 B960     		str	r1, [r7, #8]
 769 000a 7A60     		str	r2, [r7, #4]
 770              	.LBB2:
 547:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned NumBytesRead;
 548:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 549:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 771              		.loc 1 549 0
 772              	@ 549 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 773 000c EFF31183 		mrs   r3, basepri  
ARM GAS  /tmp/ccRPMSaP.s 			page 24


 774 0010 4FF02001 		mov   r1, #32       
 775 0014 81F31188 		msr   basepri, r1  
 776              		
 777              	@ 0 "" 2
 778              		.thumb
 779 0018 7B61     		str	r3, [r7, #20]
 550:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 551:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Call the non-locking read function
 552:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 553:../../../SystemView/SEGGER/SEGGER_RTT.c ****   NumBytesRead = SEGGER_RTT_ReadNoLock(BufferIndex, pBuffer, BufferSize);
 780              		.loc 1 553 0
 781 001a F868     		ldr	r0, [r7, #12]
 782 001c B968     		ldr	r1, [r7, #8]
 783 001e 7A68     		ldr	r2, [r7, #4]
 784 0020 FFF7FEFF 		bl	SEGGER_RTT_ReadNoLock
 785 0024 3861     		str	r0, [r7, #16]
 554:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 555:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish up.
 556:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 557:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 786              		.loc 1 557 0
 787 0026 7B69     		ldr	r3, [r7, #20]
 788              	@ 557 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 789 0028 83F31188 		msr   basepri, r3  
 790              		
 791              	@ 0 "" 2
 792              		.thumb
 793              	.LBE2:
 558:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 559:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return NumBytesRead;
 794              		.loc 1 559 0
 795 002c 3B69     		ldr	r3, [r7, #16]
 560:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 796              		.loc 1 560 0
 797 002e 1846     		mov	r0, r3
 798 0030 1837     		adds	r7, r7, #24
 799              	.LCFI34:
 800              		.cfi_def_cfa_offset 8
 801 0032 BD46     		mov	sp, r7
 802              	.LCFI35:
 803              		.cfi_def_cfa_register 13
 804              		@ sp needed
 805 0034 80BD     		pop	{r7, pc}
 806              		.cfi_endproc
 807              	.LFE6:
 809 0036 00BF     		.section	.text.SEGGER_RTT_WriteWithOverwriteNoLock,"ax",%progbits
 810              		.align	2
 811              		.global	SEGGER_RTT_WriteWithOverwriteNoLock
 812              		.thumb
 813              		.thumb_func
 815              	SEGGER_RTT_WriteWithOverwriteNoLock:
 816              	.LFB7:
 561:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 562:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 563:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 564:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteWithOverwriteNoLock
 565:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccRPMSaP.s 			page 25


 566:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 567:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 568:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block.
 569:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteWithOverwriteNoLock does not lock the application 
 570:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    and overwrites data if the data does not fit into the buffer.
 571:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 572:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 573:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 574:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 575:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 576:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 577:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 578:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, data is overwritten.
 579:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 580:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 581:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 582:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (3) Do not use SEGGER_RTT_WriteWithOverwriteNoLock if a J-Link 
 583:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        connection reads RTT data.
 584:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 585:../../../SystemView/SEGGER/SEGGER_RTT.c **** void SEGGER_RTT_WriteWithOverwriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumByt
 817              		.loc 1 585 0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 32
 820              		@ frame_needed = 1, uses_anonymous_args = 0
 821 0000 80B5     		push	{r7, lr}
 822              	.LCFI36:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 88B0     		sub	sp, sp, #32
 827              	.LCFI37:
 828              		.cfi_def_cfa_offset 40
 829 0004 00AF     		add	r7, sp, #0
 830              	.LCFI38:
 831              		.cfi_def_cfa_register 7
 832 0006 F860     		str	r0, [r7, #12]
 833 0008 B960     		str	r1, [r7, #8]
 834 000a 7A60     		str	r2, [r7, #4]
 586:../../../SystemView/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 587:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 588:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 589:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 590:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 835              		.loc 1 590 0
 836 000c BB68     		ldr	r3, [r7, #8]
 837 000e FB61     		str	r3, [r7, #28]
 591:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 592:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 593:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 594:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 838              		.loc 1 594 0
 839 0010 FB68     		ldr	r3, [r7, #12]
 840 0012 5A1C     		adds	r2, r3, #1
 841 0014 1346     		mov	r3, r2
 842 0016 5B00     		lsls	r3, r3, #1
 843 0018 1344     		add	r3, r3, r2
 844 001a DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/ccRPMSaP.s 			page 26


 845 001c 414A     		ldr	r2, .L41
 846 001e 1344     		add	r3, r3, r2
 847 0020 3B61     		str	r3, [r7, #16]
 595:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 596:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Check if we will overwrite data and need to adjust the RdOff.
 597:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 598:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (pRing->WrOff == pRing->RdOff) {
 848              		.loc 1 598 0
 849 0022 3B69     		ldr	r3, [r7, #16]
 850 0024 DA68     		ldr	r2, [r3, #12]
 851 0026 3B69     		ldr	r3, [r7, #16]
 852 0028 1B69     		ldr	r3, [r3, #16]
 853 002a 9A42     		cmp	r2, r3
 854 002c 04D1     		bne	.L31
 599:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u;
 855              		.loc 1 599 0
 856 002e 3B69     		ldr	r3, [r7, #16]
 857 0030 9B68     		ldr	r3, [r3, #8]
 858 0032 013B     		subs	r3, r3, #1
 859 0034 BB61     		str	r3, [r7, #24]
 860 0036 17E0     		b	.L32
 861              	.L31:
 600:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else if ( pRing->WrOff < pRing->RdOff) {
 862              		.loc 1 600 0
 863 0038 3B69     		ldr	r3, [r7, #16]
 864 003a DA68     		ldr	r2, [r3, #12]
 865 003c 3B69     		ldr	r3, [r7, #16]
 866 003e 1B69     		ldr	r3, [r3, #16]
 867 0040 9A42     		cmp	r2, r3
 868 0042 07D2     		bcs	.L33
 601:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u;
 869              		.loc 1 601 0
 870 0044 3B69     		ldr	r3, [r7, #16]
 871 0046 1A69     		ldr	r2, [r3, #16]
 872 0048 3B69     		ldr	r3, [r7, #16]
 873 004a DB68     		ldr	r3, [r3, #12]
 874 004c D31A     		subs	r3, r2, r3
 875 004e 013B     		subs	r3, r3, #1
 876 0050 BB61     		str	r3, [r7, #24]
 877 0052 09E0     		b	.L32
 878              	.L33:
 602:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 603:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->RdOff - pRing->WrOff - 1u + pRing->SizeOfBuffer;
 879              		.loc 1 603 0
 880 0054 3B69     		ldr	r3, [r7, #16]
 881 0056 1A69     		ldr	r2, [r3, #16]
 882 0058 3B69     		ldr	r3, [r7, #16]
 883 005a DB68     		ldr	r3, [r3, #12]
 884 005c D21A     		subs	r2, r2, r3
 885 005e 3B69     		ldr	r3, [r7, #16]
 886 0060 9B68     		ldr	r3, [r3, #8]
 887 0062 1344     		add	r3, r3, r2
 888 0064 013B     		subs	r3, r3, #1
 889 0066 BB61     		str	r3, [r7, #24]
 890              	.L32:
 604:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 605:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (NumBytes > Avail) {
ARM GAS  /tmp/ccRPMSaP.s 			page 27


 891              		.loc 1 605 0
 892 0068 7A68     		ldr	r2, [r7, #4]
 893 006a BB69     		ldr	r3, [r7, #24]
 894 006c 9A42     		cmp	r2, r3
 895 006e 15D9     		bls	.L34
 606:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing->RdOff += (NumBytes - Avail);
 896              		.loc 1 606 0
 897 0070 3B69     		ldr	r3, [r7, #16]
 898 0072 1A69     		ldr	r2, [r3, #16]
 899 0074 7968     		ldr	r1, [r7, #4]
 900 0076 BB69     		ldr	r3, [r7, #24]
 901 0078 CB1A     		subs	r3, r1, r3
 902 007a 1A44     		add	r2, r2, r3
 903 007c 3B69     		ldr	r3, [r7, #16]
 904 007e 1A61     		str	r2, [r3, #16]
 607:../../../SystemView/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 905              		.loc 1 607 0
 906 0080 06E0     		b	.L35
 907              	.L36:
 608:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->RdOff -= pRing->SizeOfBuffer;
 908              		.loc 1 608 0
 909 0082 3B69     		ldr	r3, [r7, #16]
 910 0084 1A69     		ldr	r2, [r3, #16]
 911 0086 3B69     		ldr	r3, [r7, #16]
 912 0088 9B68     		ldr	r3, [r3, #8]
 913 008a D21A     		subs	r2, r2, r3
 914 008c 3B69     		ldr	r3, [r7, #16]
 915 008e 1A61     		str	r2, [r3, #16]
 916              	.L35:
 607:../../../SystemView/SEGGER/SEGGER_RTT.c ****     while (pRing->RdOff >= pRing->SizeOfBuffer) {
 917              		.loc 1 607 0
 918 0090 3B69     		ldr	r3, [r7, #16]
 919 0092 1A69     		ldr	r2, [r3, #16]
 920 0094 3B69     		ldr	r3, [r7, #16]
 921 0096 9B68     		ldr	r3, [r3, #8]
 922 0098 9A42     		cmp	r2, r3
 923 009a F2D2     		bcs	.L36
 924              	.L34:
 609:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 610:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 611:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 612:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Write all data, no need to check the RdOff, but possibly handle multiple wrap-arounds
 613:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 614:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Avail = pRing->SizeOfBuffer - pRing->WrOff;
 925              		.loc 1 614 0
 926 009c 3B69     		ldr	r3, [r7, #16]
 927 009e 9A68     		ldr	r2, [r3, #8]
 928 00a0 3B69     		ldr	r3, [r7, #16]
 929 00a2 DB68     		ldr	r3, [r3, #12]
 930 00a4 D31A     		subs	r3, r2, r3
 931 00a6 BB61     		str	r3, [r7, #24]
 932              	.L40:
 615:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
 616:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail > NumBytes) {
 933              		.loc 1 616 0
 934 00a8 BA69     		ldr	r2, [r7, #24]
 935 00aa 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccRPMSaP.s 			page 28


 936 00ac 9A42     		cmp	r2, r3
 937 00ae 1AD9     		bls	.L37
 938              	.LBB3:
 617:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 618:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // Last round
 619:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 620:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if 1 // memcpy() is good for large amounts of data, but the overhead is too big for small amounts.
 621:../../../SystemView/SEGGER/SEGGER_RTT.c ****       char* pDst;
 622:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pDst = pRing->pBuffer + pRing->WrOff;
 939              		.loc 1 622 0
 940 00b0 3B69     		ldr	r3, [r7, #16]
 941 00b2 5A68     		ldr	r2, [r3, #4]
 942 00b4 3B69     		ldr	r3, [r7, #16]
 943 00b6 DB68     		ldr	r3, [r3, #12]
 944 00b8 1344     		add	r3, r3, r2
 945 00ba 7B61     		str	r3, [r7, #20]
 623:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 946              		.loc 1 623 0
 947 00bc 3B69     		ldr	r3, [r7, #16]
 948 00be DA68     		ldr	r2, [r3, #12]
 949 00c0 7B68     		ldr	r3, [r7, #4]
 950 00c2 1A44     		add	r2, r2, r3
 951 00c4 3B69     		ldr	r3, [r7, #16]
 952 00c6 DA60     		str	r2, [r3, #12]
 953              	.L38:
 624:../../../SystemView/SEGGER/SEGGER_RTT.c ****       do {
 625:../../../SystemView/SEGGER/SEGGER_RTT.c ****         *pDst++ = *pData++;
 954              		.loc 1 625 0 discriminator 1
 955 00c8 7B69     		ldr	r3, [r7, #20]
 956 00ca 5A1C     		adds	r2, r3, #1
 957 00cc 7A61     		str	r2, [r7, #20]
 958 00ce FA69     		ldr	r2, [r7, #28]
 959 00d0 511C     		adds	r1, r2, #1
 960 00d2 F961     		str	r1, [r7, #28]
 961 00d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 962 00d6 1A70     		strb	r2, [r3]
 626:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } while (--NumBytes);
 963              		.loc 1 626 0 discriminator 1
 964 00d8 7B68     		ldr	r3, [r7, #4]
 965 00da 013B     		subs	r3, r3, #1
 966 00dc 7B60     		str	r3, [r7, #4]
 967 00de 7B68     		ldr	r3, [r7, #4]
 968 00e0 002B     		cmp	r3, #0
 969 00e2 F1D1     		bne	.L38
 627:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 628:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 629:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff += NumBytes;
 630:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 631:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;  //Alternatively: NumBytes = 0;
 970              		.loc 1 631 0
 971 00e4 1BE0     		b	.L30
 972              	.L37:
 973              	.LBE3:
 632:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {
 633:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 634:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //  Wrap-around necessary, write until wrap-around and reset WrOff
 635:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
ARM GAS  /tmp/ccRPMSaP.s 			page 29


 636:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + pRing->WrOff, pData, Avail);
 974              		.loc 1 636 0
 975 00e6 3B69     		ldr	r3, [r7, #16]
 976 00e8 5A68     		ldr	r2, [r3, #4]
 977 00ea 3B69     		ldr	r3, [r7, #16]
 978 00ec DB68     		ldr	r3, [r3, #12]
 979 00ee 1344     		add	r3, r3, r2
 980 00f0 1846     		mov	r0, r3
 981 00f2 F969     		ldr	r1, [r7, #28]
 982 00f4 BA69     		ldr	r2, [r7, #24]
 983 00f6 FFF7FEFF 		bl	memcpy
 637:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pData += Avail;
 984              		.loc 1 637 0
 985 00fa FA69     		ldr	r2, [r7, #28]
 986 00fc BB69     		ldr	r3, [r7, #24]
 987 00fe 1344     		add	r3, r3, r2
 988 0100 FB61     		str	r3, [r7, #28]
 638:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = 0;
 989              		.loc 1 638 0
 990 0102 3B69     		ldr	r3, [r7, #16]
 991 0104 0022     		movs	r2, #0
 992 0106 DA60     		str	r2, [r3, #12]
 639:../../../SystemView/SEGGER/SEGGER_RTT.c ****       NumBytes -= Avail;
 993              		.loc 1 639 0
 994 0108 7A68     		ldr	r2, [r7, #4]
 995 010a BB69     		ldr	r3, [r7, #24]
 996 010c D31A     		subs	r3, r2, r3
 997 010e 7B60     		str	r3, [r7, #4]
 640:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Avail = (pRing->SizeOfBuffer - 1);
 998              		.loc 1 640 0
 999 0110 3B69     		ldr	r3, [r7, #16]
 1000 0112 9B68     		ldr	r3, [r3, #8]
 1001 0114 013B     		subs	r3, r3, #1
 1002 0116 BB61     		str	r3, [r7, #24]
 641:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 642:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (NumBytes);
 1003              		.loc 1 642 0
 1004 0118 7B68     		ldr	r3, [r7, #4]
 1005 011a 002B     		cmp	r3, #0
 1006 011c C4D1     		bne	.L40
 1007              	.L30:
 643:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1008              		.loc 1 643 0
 1009 011e 2037     		adds	r7, r7, #32
 1010              	.LCFI39:
 1011              		.cfi_def_cfa_offset 8
 1012 0120 BD46     		mov	sp, r7
 1013              	.LCFI40:
 1014              		.cfi_def_cfa_register 13
 1015              		@ sp needed
 1016 0122 80BD     		pop	{r7, pc}
 1017              	.L42:
 1018              		.align	2
 1019              	.L41:
 1020 0124 00000000 		.word	_SEGGER_RTT
 1021              		.cfi_endproc
 1022              	.LFE7:
ARM GAS  /tmp/ccRPMSaP.s 			page 30


 1024              		.section	.text.SEGGER_RTT_WriteSkipNoLock,"ax",%progbits
 1025              		.align	2
 1026              		.global	SEGGER_RTT_WriteSkipNoLock
 1027              		.thumb
 1028              		.thumb_func
 1030              	SEGGER_RTT_WriteSkipNoLock:
 1031              	.LFB8:
 644:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 645:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 646:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 647:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteSkipNoLock
 648:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 649:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 650:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 651:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 652:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteSkipNoLock does not lock the application and
 653:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    skips all data, if the data does not fit into the buffer.
 654:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 655:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 656:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 657:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 658:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 659:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 660:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 661:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 662:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 663:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 664:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, all data is dropped.
 665:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 666:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 667:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 668:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 669:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteSkipNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1032              		.loc 1 669 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 48
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036 0000 80B5     		push	{r7, lr}
 1037              	.LCFI41:
 1038              		.cfi_def_cfa_offset 8
 1039              		.cfi_offset 7, -8
 1040              		.cfi_offset 14, -4
 1041 0002 8CB0     		sub	sp, sp, #48
 1042              	.LCFI42:
 1043              		.cfi_def_cfa_offset 56
 1044 0004 00AF     		add	r7, sp, #0
 1045              	.LCFI43:
 1046              		.cfi_def_cfa_register 7
 1047 0006 F860     		str	r0, [r7, #12]
 1048 0008 B960     		str	r1, [r7, #8]
 1049 000a 7A60     		str	r2, [r7, #4]
 670:../../../SystemView/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 671:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 672:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 673:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              RdOff;
 674:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              WrOff;
 675:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Rem;
ARM GAS  /tmp/ccRPMSaP.s 			page 31


 676:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 677:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1050              		.loc 1 677 0
 1051 000c BB68     		ldr	r3, [r7, #8]
 1052 000e FB62     		str	r3, [r7, #44]
 678:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 679:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer and copy some elements into local variables.
 680:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 681:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1053              		.loc 1 681 0
 1054 0010 FB68     		ldr	r3, [r7, #12]
 1055 0012 5A1C     		adds	r2, r3, #1
 1056 0014 1346     		mov	r3, r2
 1057 0016 5B00     		lsls	r3, r3, #1
 1058 0018 1344     		add	r3, r3, r2
 1059 001a DB00     		lsls	r3, r3, #3
 1060 001c 464A     		ldr	r2, .L51
 1061 001e 1344     		add	r3, r3, r2
 1062 0020 7B62     		str	r3, [r7, #36]
 682:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = pRing->RdOff;
 1063              		.loc 1 682 0
 1064 0022 7B6A     		ldr	r3, [r7, #36]
 1065 0024 1B69     		ldr	r3, [r3, #16]
 1066 0026 3B62     		str	r3, [r7, #32]
 683:../../../SystemView/SEGGER/SEGGER_RTT.c ****   WrOff = pRing->WrOff;
 1067              		.loc 1 683 0
 1068 0028 7B6A     		ldr	r3, [r7, #36]
 1069 002a DB68     		ldr	r3, [r3, #12]
 1070 002c FB61     		str	r3, [r7, #28]
 684:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 685:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Handle the most common cases fastest.
 686:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Which is:
 687:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    RdOff <= WrOff -> Space until wrap around is free.
 688:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //  AND
 689:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    WrOff + NumBytes < SizeOfBuffer -> No Wrap around necessary.
 690:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 691:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //  OR
 692:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 693:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    RdOff > WrOff -> Space until RdOff - 1 is free.
 694:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //  AND
 695:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //    WrOff + NumBytes < RdOff -> Data fits into buffer
 696:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 697:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff <= WrOff) {
 1071              		.loc 1 697 0
 1072 002e 3A6A     		ldr	r2, [r7, #32]
 1073 0030 FB69     		ldr	r3, [r7, #28]
 1074 0032 9A42     		cmp	r2, r3
 1075 0034 62D8     		bhi	.L44
 698:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 699:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Get space until WrOff will be at wrap around.
 700:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 701:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = pRing->SizeOfBuffer - 1u - WrOff ;
 1076              		.loc 1 701 0
 1077 0036 7B6A     		ldr	r3, [r7, #36]
 1078 0038 9A68     		ldr	r2, [r3, #8]
 1079 003a FB69     		ldr	r3, [r7, #28]
 1080 003c D31A     		subs	r3, r2, r3
ARM GAS  /tmp/ccRPMSaP.s 			page 32


 1081 003e 013B     		subs	r3, r3, #1
 1082 0040 BB61     		str	r3, [r7, #24]
 702:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1083              		.loc 1 702 0
 1084 0042 BA69     		ldr	r2, [r7, #24]
 1085 0044 7B68     		ldr	r3, [r7, #4]
 1086 0046 9A42     		cmp	r2, r3
 1087 0048 1DD3     		bcc	.L45
 1088              	.LBB4:
 703:../../../SystemView/SEGGER/SEGGER_RTT.c **** #if 1 // memcpy() is good for large amounts of data, but the overhead is too big for small amounts.
 704:../../../SystemView/SEGGER/SEGGER_RTT.c ****       char* pDst;
 705:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pDst = pRing->pBuffer + WrOff;
 1089              		.loc 1 705 0
 1090 004a 7B6A     		ldr	r3, [r7, #36]
 1091 004c 5A68     		ldr	r2, [r3, #4]
 1092 004e FB69     		ldr	r3, [r7, #28]
 1093 0050 1344     		add	r3, r3, r2
 1094 0052 BB62     		str	r3, [r7, #40]
 706:../../../SystemView/SEGGER/SEGGER_RTT.c ****       WrOff += NumBytes;
 1095              		.loc 1 706 0
 1096 0054 FA69     		ldr	r2, [r7, #28]
 1097 0056 7B68     		ldr	r3, [r7, #4]
 1098 0058 1344     		add	r3, r3, r2
 1099 005a FB61     		str	r3, [r7, #28]
 1100              	.L46:
 707:../../../SystemView/SEGGER/SEGGER_RTT.c ****       do {
 708:../../../SystemView/SEGGER/SEGGER_RTT.c ****         *pDst++ = *pData++;
 1101              		.loc 1 708 0 discriminator 1
 1102 005c BB6A     		ldr	r3, [r7, #40]
 1103 005e 5A1C     		adds	r2, r3, #1
 1104 0060 BA62     		str	r2, [r7, #40]
 1105 0062 FA6A     		ldr	r2, [r7, #44]
 1106 0064 511C     		adds	r1, r2, #1
 1107 0066 F962     		str	r1, [r7, #44]
 1108 0068 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1109 006a 1A70     		strb	r2, [r3]
 709:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } while (--NumBytes);
 1110              		.loc 1 709 0 discriminator 1
 1111 006c 7B68     		ldr	r3, [r7, #4]
 1112 006e 013B     		subs	r3, r3, #1
 1113 0070 7B60     		str	r3, [r7, #4]
 1114 0072 7B68     		ldr	r3, [r7, #4]
 1115 0074 002B     		cmp	r3, #0
 1116 0076 F1D1     		bne	.L46
 710:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 1117              		.loc 1 710 0
 1118 0078 FA69     		ldr	r2, [r7, #28]
 1119 007a 7B68     		ldr	r3, [r7, #4]
 1120 007c 1A44     		add	r2, r2, r3
 1121 007e 7B6A     		ldr	r3, [r7, #36]
 1122 0080 DA60     		str	r2, [r3, #12]
 711:../../../SystemView/SEGGER/SEGGER_RTT.c **** #else
 712:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 713:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 714:../../../SystemView/SEGGER/SEGGER_RTT.c **** #endif
 715:../../../SystemView/SEGGER/SEGGER_RTT.c ****       return 1;
 1123              		.loc 1 715 0
ARM GAS  /tmp/ccRPMSaP.s 			page 33


 1124 0082 0123     		movs	r3, #1
 1125 0084 54E0     		b	.L47
 1126              	.L45:
 1127              	.LBE4:
 716:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 717:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 718:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If data did not fit into space until wrap around calculate complete space in buffer.
 719:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 720:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail += RdOff;
 1128              		.loc 1 720 0
 1129 0086 BA69     		ldr	r2, [r7, #24]
 1130 0088 3B6A     		ldr	r3, [r7, #32]
 1131 008a 1344     		add	r3, r3, r2
 1132 008c BB61     		str	r3, [r7, #24]
 721:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 722:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If there is still no space for the whole of this output, don't bother.
 723:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 724:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1133              		.loc 1 724 0
 1134 008e BA69     		ldr	r2, [r7, #24]
 1135 0090 7B68     		ldr	r3, [r7, #4]
 1136 0092 9A42     		cmp	r2, r3
 1137 0094 4BD3     		bcc	.L48
 725:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 726:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //  OK, we have enough space in buffer. Copy in one or 2 chunks
 727:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
 728:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Rem = pRing->SizeOfBuffer - WrOff;      // Space until end of buffer
 1138              		.loc 1 728 0
 1139 0096 7B6A     		ldr	r3, [r7, #36]
 1140 0098 9A68     		ldr	r2, [r3, #8]
 1141 009a FB69     		ldr	r3, [r7, #28]
 1142 009c D31A     		subs	r3, r2, r3
 1143 009e 7B61     		str	r3, [r7, #20]
 729:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Rem > NumBytes) {
 1144              		.loc 1 729 0
 1145 00a0 7A69     		ldr	r2, [r7, #20]
 1146 00a2 7B68     		ldr	r3, [r7, #4]
 1147 00a4 9A42     		cmp	r2, r3
 1148 00a6 0ED9     		bls	.L49
 730:../../../SystemView/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
 1149              		.loc 1 730 0
 1150 00a8 7B6A     		ldr	r3, [r7, #36]
 1151 00aa 5A68     		ldr	r2, [r3, #4]
 1152 00ac FB69     		ldr	r3, [r7, #28]
 1153 00ae 1344     		add	r3, r3, r2
 1154 00b0 1846     		mov	r0, r3
 1155 00b2 F96A     		ldr	r1, [r7, #44]
 1156 00b4 7A68     		ldr	r2, [r7, #4]
 1157 00b6 FFF7FEFF 		bl	memcpy
 731:../../../SystemView/SEGGER/SEGGER_RTT.c ****         pRing->WrOff = WrOff + NumBytes;
 1158              		.loc 1 731 0
 1159 00ba FA69     		ldr	r2, [r7, #28]
 1160 00bc 7B68     		ldr	r3, [r7, #4]
 1161 00be 1A44     		add	r2, r2, r3
 1162 00c0 7B6A     		ldr	r3, [r7, #36]
 1163 00c2 DA60     		str	r2, [r3, #12]
 1164 00c4 18E0     		b	.L50
ARM GAS  /tmp/ccRPMSaP.s 			page 34


 1165              	.L49:
 732:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
 733:../../../SystemView/SEGGER/SEGGER_RTT.c ****         //
 734:../../../SystemView/SEGGER/SEGGER_RTT.c ****         // We reach the end of the buffer, so need to wrap around
 735:../../../SystemView/SEGGER/SEGGER_RTT.c ****         //
 736:../../../SystemView/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer + WrOff, pData, Rem);
 1166              		.loc 1 736 0
 1167 00c6 7B6A     		ldr	r3, [r7, #36]
 1168 00c8 5A68     		ldr	r2, [r3, #4]
 1169 00ca FB69     		ldr	r3, [r7, #28]
 1170 00cc 1344     		add	r3, r3, r2
 1171 00ce 1846     		mov	r0, r3
 1172 00d0 F96A     		ldr	r1, [r7, #44]
 1173 00d2 7A69     		ldr	r2, [r7, #20]
 1174 00d4 FFF7FEFF 		bl	memcpy
 737:../../../SystemView/SEGGER/SEGGER_RTT.c ****         memcpy(pRing->pBuffer, pData + Rem, NumBytes - Rem);
 1175              		.loc 1 737 0
 1176 00d8 7B6A     		ldr	r3, [r7, #36]
 1177 00da 5868     		ldr	r0, [r3, #4]
 1178 00dc FA6A     		ldr	r2, [r7, #44]
 1179 00de 7B69     		ldr	r3, [r7, #20]
 1180 00e0 D118     		adds	r1, r2, r3
 1181 00e2 7A68     		ldr	r2, [r7, #4]
 1182 00e4 7B69     		ldr	r3, [r7, #20]
 1183 00e6 D31A     		subs	r3, r2, r3
 1184 00e8 1A46     		mov	r2, r3
 1185 00ea FFF7FEFF 		bl	memcpy
 738:../../../SystemView/SEGGER/SEGGER_RTT.c ****         pRing->WrOff = NumBytes - Rem;
 1186              		.loc 1 738 0
 1187 00ee 7A68     		ldr	r2, [r7, #4]
 1188 00f0 7B69     		ldr	r3, [r7, #20]
 1189 00f2 D21A     		subs	r2, r2, r3
 1190 00f4 7B6A     		ldr	r3, [r7, #36]
 1191 00f6 DA60     		str	r2, [r3, #12]
 1192              	.L50:
 739:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
 740:../../../SystemView/SEGGER/SEGGER_RTT.c ****       return 1;
 1193              		.loc 1 740 0
 1194 00f8 0123     		movs	r3, #1
 1195 00fa 19E0     		b	.L47
 1196              	.L44:
 741:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 742:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 743:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = RdOff - WrOff - 1u;
 1197              		.loc 1 743 0
 1198 00fc 3A6A     		ldr	r2, [r7, #32]
 1199 00fe FB69     		ldr	r3, [r7, #28]
 1200 0100 D31A     		subs	r3, r2, r3
 1201 0102 013B     		subs	r3, r3, #1
 1202 0104 BB61     		str	r3, [r7, #24]
 744:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail >= NumBytes) {
 1203              		.loc 1 744 0
 1204 0106 BA69     		ldr	r2, [r7, #24]
 1205 0108 7B68     		ldr	r3, [r7, #4]
 1206 010a 9A42     		cmp	r2, r3
 1207 010c 0FD3     		bcc	.L48
 745:../../../SystemView/SEGGER/SEGGER_RTT.c ****       memcpy(pRing->pBuffer + WrOff, pData, NumBytes);
ARM GAS  /tmp/ccRPMSaP.s 			page 35


 1208              		.loc 1 745 0
 1209 010e 7B6A     		ldr	r3, [r7, #36]
 1210 0110 5A68     		ldr	r2, [r3, #4]
 1211 0112 FB69     		ldr	r3, [r7, #28]
 1212 0114 1344     		add	r3, r3, r2
 1213 0116 1846     		mov	r0, r3
 1214 0118 F96A     		ldr	r1, [r7, #44]
 1215 011a 7A68     		ldr	r2, [r7, #4]
 1216 011c FFF7FEFF 		bl	memcpy
 746:../../../SystemView/SEGGER/SEGGER_RTT.c ****       pRing->WrOff = WrOff + NumBytes;
 1217              		.loc 1 746 0
 1218 0120 FA69     		ldr	r2, [r7, #28]
 1219 0122 7B68     		ldr	r3, [r7, #4]
 1220 0124 1A44     		add	r2, r2, r3
 1221 0126 7B6A     		ldr	r3, [r7, #36]
 1222 0128 DA60     		str	r2, [r3, #12]
 747:../../../SystemView/SEGGER/SEGGER_RTT.c ****       return 1;
 1223              		.loc 1 747 0
 1224 012a 0123     		movs	r3, #1
 1225 012c 00E0     		b	.L47
 1226              	.L48:
 748:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 749:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 750:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 751:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // If we reach this point no data has been written
 752:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 753:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return 0;
 1227              		.loc 1 753 0
 1228 012e 0023     		movs	r3, #0
 1229              	.L47:
 754:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1230              		.loc 1 754 0
 1231 0130 1846     		mov	r0, r3
 1232 0132 3037     		adds	r7, r7, #48
 1233              	.LCFI44:
 1234              		.cfi_def_cfa_offset 8
 1235 0134 BD46     		mov	sp, r7
 1236              	.LCFI45:
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed
 1239 0136 80BD     		pop	{r7, pc}
 1240              	.L52:
 1241              		.align	2
 1242              	.L51:
 1243 0138 00000000 		.word	_SEGGER_RTT
 1244              		.cfi_endproc
 1245              	.LFE8:
 1247              		.section	.text.SEGGER_RTT_WriteNoLock,"ax",%progbits
 1248              		.align	2
 1249              		.global	SEGGER_RTT_WriteNoLock
 1250              		.thumb
 1251              		.thumb_func
 1253              	SEGGER_RTT_WriteNoLock:
 1254              	.LFB9:
 755:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 756:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 757:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccRPMSaP.s 			page 36


 758:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteNoLock
 759:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 760:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 761:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 762:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 763:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    SEGGER_RTT_WriteNoLock does not lock the application.
 764:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 765:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 766:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 767:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 768:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 769:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 770:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 771:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 772:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 773:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 774:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, remaining characters of pBuffer are dropp
 775:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) For performance reasons this function does not call Init()
 776:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        and may only be called after RTT has been initialized.
 777:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        Either by calling SEGGER_RTT_Init() or calling another RTT API function first.
 778:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 779:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteNoLock(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1255              		.loc 1 779 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 32
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0000 80B5     		push	{r7, lr}
 1260              	.LCFI46:
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 88B0     		sub	sp, sp, #32
 1265              	.LCFI47:
 1266              		.cfi_def_cfa_offset 40
 1267 0004 00AF     		add	r7, sp, #0
 1268              	.LCFI48:
 1269              		.cfi_def_cfa_register 7
 1270 0006 F860     		str	r0, [r7, #12]
 1271 0008 B960     		str	r1, [r7, #8]
 1272 000a 7A60     		str	r2, [r7, #4]
 780:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Status;
 781:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
 782:../../../SystemView/SEGGER/SEGGER_RTT.c ****   const char*           pData;
 783:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
 784:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 785:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pData = (const char *)pBuffer;
 1273              		.loc 1 785 0
 1274 000c BB68     		ldr	r3, [r7, #8]
 1275 000e BB61     		str	r3, [r7, #24]
 786:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 787:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Get "to-host" ring buffer.
 788:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 789:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aUp[BufferIndex];
 1276              		.loc 1 789 0
 1277 0010 FB68     		ldr	r3, [r7, #12]
 1278 0012 5A1C     		adds	r2, r3, #1
 1279 0014 1346     		mov	r3, r2
ARM GAS  /tmp/ccRPMSaP.s 			page 37


 1280 0016 5B00     		lsls	r3, r3, #1
 1281 0018 1344     		add	r3, r3, r2
 1282 001a DB00     		lsls	r3, r3, #3
 1283 001c 1E4A     		ldr	r2, .L63
 1284 001e 1344     		add	r3, r3, r2
 1285 0020 7B61     		str	r3, [r7, #20]
 790:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 791:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // How we output depends upon the mode...
 792:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 793:../../../SystemView/SEGGER/SEGGER_RTT.c ****   switch (pRing->Flags) {
 1286              		.loc 1 793 0
 1287 0022 7B69     		ldr	r3, [r7, #20]
 1288 0024 5B69     		ldr	r3, [r3, #20]
 1289 0026 012B     		cmp	r3, #1
 1290 0028 17D0     		beq	.L55
 1291 002a 012B     		cmp	r3, #1
 1292 002c 02D3     		bcc	.L56
 1293 002e 022B     		cmp	r3, #2
 1294 0030 23D0     		beq	.L57
 1295 0032 29E0     		b	.L62
 1296              	.L56:
 794:../../../SystemView/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
 795:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 796:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If we are in skip mode and there is no space for the whole
 797:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // of this output, don't bother.
 798:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 799:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1297              		.loc 1 799 0
 1298 0034 7869     		ldr	r0, [r7, #20]
 1299 0036 FFF7FEFF 		bl	_GetAvailWriteSpace
 1300 003a 3861     		str	r0, [r7, #16]
 800:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (Avail < NumBytes) {
 1301              		.loc 1 800 0
 1302 003c 3A69     		ldr	r2, [r7, #16]
 1303 003e 7B68     		ldr	r3, [r7, #4]
 1304 0040 9A42     		cmp	r2, r3
 1305 0042 02D2     		bcs	.L58
 801:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = 0u;
 1306              		.loc 1 801 0
 1307 0044 0023     		movs	r3, #0
 1308 0046 FB61     		str	r3, [r7, #28]
 802:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {
 803:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = NumBytes;
 804:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 805:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 806:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1309              		.loc 1 806 0
 1310 0048 21E0     		b	.L60
 1311              	.L58:
 803:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _WriteNoCheck(pRing, pData, NumBytes);
 1312              		.loc 1 803 0
 1313 004a 7B68     		ldr	r3, [r7, #4]
 1314 004c FB61     		str	r3, [r7, #28]
 804:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
 1315              		.loc 1 804 0
 1316 004e 7869     		ldr	r0, [r7, #20]
 1317 0050 B969     		ldr	r1, [r7, #24]
ARM GAS  /tmp/ccRPMSaP.s 			page 38


 1318 0052 7A68     		ldr	r2, [r7, #4]
 1319 0054 FFF7FEFF 		bl	_WriteNoCheck
 1320              		.loc 1 806 0
 1321 0058 19E0     		b	.L60
 1322              	.L55:
 807:../../../SystemView/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
 808:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 809:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If we are in trim mode, trim to what we can output without blocking.
 810:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 811:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 1323              		.loc 1 811 0
 1324 005a 7869     		ldr	r0, [r7, #20]
 1325 005c FFF7FEFF 		bl	_GetAvailWriteSpace
 1326 0060 3861     		str	r0, [r7, #16]
 812:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = Avail < NumBytes ? Avail : NumBytes;
 1327              		.loc 1 812 0
 1328 0062 7A68     		ldr	r2, [r7, #4]
 1329 0064 3B69     		ldr	r3, [r7, #16]
 1330 0066 9342     		cmp	r3, r2
 1331 0068 28BF     		it	cs
 1332 006a 1346     		movcs	r3, r2
 1333 006c FB61     		str	r3, [r7, #28]
 813:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _WriteNoCheck(pRing, pData, Status);
 1334              		.loc 1 813 0
 1335 006e 7869     		ldr	r0, [r7, #20]
 1336 0070 B969     		ldr	r1, [r7, #24]
 1337 0072 FA69     		ldr	r2, [r7, #28]
 1338 0074 FFF7FEFF 		bl	_WriteNoCheck
 814:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1339              		.loc 1 814 0
 1340 0078 09E0     		b	.L60
 1341              	.L57:
 815:../../../SystemView/SEGGER/SEGGER_RTT.c ****   case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
 816:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 817:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // If we are in blocking mode, output everything.
 818:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
 819:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = _WriteBlocking(pRing, pData, NumBytes);
 1342              		.loc 1 819 0
 1343 007a 7869     		ldr	r0, [r7, #20]
 1344 007c B969     		ldr	r1, [r7, #24]
 1345 007e 7A68     		ldr	r2, [r7, #4]
 1346 0080 FFF7FEFF 		bl	_WriteBlocking
 1347 0084 F861     		str	r0, [r7, #28]
 820:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1348              		.loc 1 820 0
 1349 0086 02E0     		b	.L60
 1350              	.L62:
 821:../../../SystemView/SEGGER/SEGGER_RTT.c ****   default:
 822:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = 0u;
 1351              		.loc 1 822 0
 1352 0088 0023     		movs	r3, #0
 1353 008a FB61     		str	r3, [r7, #28]
 823:../../../SystemView/SEGGER/SEGGER_RTT.c ****     break;
 1354              		.loc 1 823 0
 1355 008c 00BF     		nop
 1356              	.L60:
 824:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
ARM GAS  /tmp/ccRPMSaP.s 			page 39


 825:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 826:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish up.
 827:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 828:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return Status;
 1357              		.loc 1 828 0
 1358 008e FB69     		ldr	r3, [r7, #28]
 829:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1359              		.loc 1 829 0
 1360 0090 1846     		mov	r0, r3
 1361 0092 2037     		adds	r7, r7, #32
 1362              	.LCFI49:
 1363              		.cfi_def_cfa_offset 8
 1364 0094 BD46     		mov	sp, r7
 1365              	.LCFI50:
 1366              		.cfi_def_cfa_register 13
 1367              		@ sp needed
 1368 0096 80BD     		pop	{r7, pc}
 1369              	.L64:
 1370              		.align	2
 1371              	.L63:
 1372 0098 00000000 		.word	_SEGGER_RTT
 1373              		.cfi_endproc
 1374              	.LFE9:
 1376              		.section	.text.SEGGER_RTT_Write,"ax",%progbits
 1377              		.align	2
 1378              		.global	SEGGER_RTT_Write
 1379              		.thumb
 1380              		.thumb_func
 1382              	SEGGER_RTT_Write:
 1383              	.LFB10:
 830:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 831:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 832:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 833:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Write
 834:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 835:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 836:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores a specified number of characters in SEGGER RTT
 837:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    control block which is then read by the host.
 838:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 839:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 840:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 841:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to character array. Does not need to point to a \0 terminated string.
 842:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    NumBytes     Number of bytes to be stored in the SEGGER RTT control block.
 843:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 844:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 845:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 846:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 847:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 848:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, remaining characters of pBuffer are dropp
 849:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 850:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_Write(unsigned BufferIndex, const void* pBuffer, unsigned NumBytes) {
 1384              		.loc 1 850 0
 1385              		.cfi_startproc
 1386              		@ args = 0, pretend = 0, frame = 24
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0000 80B5     		push	{r7, lr}
 1389              	.LCFI51:
ARM GAS  /tmp/ccRPMSaP.s 			page 40


 1390              		.cfi_def_cfa_offset 8
 1391              		.cfi_offset 7, -8
 1392              		.cfi_offset 14, -4
 1393 0002 86B0     		sub	sp, sp, #24
 1394              	.LCFI52:
 1395              		.cfi_def_cfa_offset 32
 1396 0004 00AF     		add	r7, sp, #0
 1397              	.LCFI53:
 1398              		.cfi_def_cfa_register 7
 1399 0006 F860     		str	r0, [r7, #12]
 1400 0008 B960     		str	r1, [r7, #8]
 1401 000a 7A60     		str	r2, [r7, #4]
 851:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Status;
 852:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 853:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1402              		.loc 1 853 0
 1403 000c 0D4B     		ldr	r3, .L68
 1404 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1405 0010 002B     		cmp	r3, #0
 1406 0012 01D1     		bne	.L66
 1407              		.loc 1 853 0 is_stmt 0 discriminator 1
 1408 0014 FFF7FEFF 		bl	_DoInit
 1409              	.L66:
 1410              	.LBB5:
 854:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1411              		.loc 1 854 0 is_stmt 1
 1412              	@ 854 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1413 0018 EFF31183 		mrs   r3, basepri  
 1414 001c 4FF02001 		mov   r1, #32       
 1415 0020 81F31188 		msr   basepri, r1  
 1416              		
 1417              	@ 0 "" 2
 1418              		.thumb
 1419 0024 7B61     		str	r3, [r7, #20]
 855:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 856:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Call the non-locking write function
 857:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 858:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Status = SEGGER_RTT_WriteNoLock(BufferIndex, pBuffer, NumBytes);
 1420              		.loc 1 858 0
 1421 0026 F868     		ldr	r0, [r7, #12]
 1422 0028 B968     		ldr	r1, [r7, #8]
 1423 002a 7A68     		ldr	r2, [r7, #4]
 1424 002c FFF7FEFF 		bl	SEGGER_RTT_WriteNoLock
 1425 0030 3861     		str	r0, [r7, #16]
 859:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 860:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Finish up.
 861:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
 862:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1426              		.loc 1 862 0
 1427 0032 7B69     		ldr	r3, [r7, #20]
 1428              	@ 862 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1429 0034 83F31188 		msr   basepri, r3  
 1430              		
 1431              	@ 0 "" 2
 1432              		.thumb
 1433              	.LBE5:
 863:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
ARM GAS  /tmp/ccRPMSaP.s 			page 41


 864:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return Status;
 1434              		.loc 1 864 0
 1435 0038 3B69     		ldr	r3, [r7, #16]
 865:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1436              		.loc 1 865 0
 1437 003a 1846     		mov	r0, r3
 1438 003c 1837     		adds	r7, r7, #24
 1439              	.LCFI54:
 1440              		.cfi_def_cfa_offset 8
 1441 003e BD46     		mov	sp, r7
 1442              	.LCFI55:
 1443              		.cfi_def_cfa_register 13
 1444              		@ sp needed
 1445 0040 80BD     		pop	{r7, pc}
 1446              	.L69:
 1447 0042 00BF     		.align	2
 1448              	.L68:
 1449 0044 00000000 		.word	_SEGGER_RTT
 1450              		.cfi_endproc
 1451              	.LFE10:
 1453              		.section	.text.SEGGER_RTT_WriteString,"ax",%progbits
 1454              		.align	2
 1455              		.global	SEGGER_RTT_WriteString
 1456              		.thumb
 1457              		.thumb_func
 1459              	SEGGER_RTT_WriteString:
 1460              	.LFB11:
 866:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 867:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 868:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 869:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WriteString
 870:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 871:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 872:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Stores string in SEGGER RTT control block.
 873:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This data is read by the host.
 874:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 875:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
 876:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of "Up"-buffer to be used (e.g. 0 for "Terminal").
 877:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    s            Pointer to string.
 878:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 879:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 880:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Number of bytes which have been stored in the "Up"-buffer.
 881:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 882:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 883:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) If there is not enough space in the "Up"-buffer, depending on configuration,
 884:../../../SystemView/SEGGER/SEGGER_RTT.c **** *        remaining characters may be dropped or RTT module waits until there is more space in the b
 885:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) String passed to this function has to be \0 terminated
 886:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (3) \0 termination character is *not* stored in RTT buffer
 887:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 888:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_WriteString(unsigned BufferIndex, const char* s) {
 1461              		.loc 1 888 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 16
 1464              		@ frame_needed = 1, uses_anonymous_args = 0
 1465 0000 80B5     		push	{r7, lr}
 1466              	.LCFI56:
 1467              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccRPMSaP.s 			page 42


 1468              		.cfi_offset 7, -8
 1469              		.cfi_offset 14, -4
 1470 0002 84B0     		sub	sp, sp, #16
 1471              	.LCFI57:
 1472              		.cfi_def_cfa_offset 24
 1473 0004 00AF     		add	r7, sp, #0
 1474              	.LCFI58:
 1475              		.cfi_def_cfa_register 7
 1476 0006 7860     		str	r0, [r7, #4]
 1477 0008 3960     		str	r1, [r7]
 889:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Len;
 890:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 891:../../../SystemView/SEGGER/SEGGER_RTT.c ****   Len = STRLEN(s);
 1478              		.loc 1 891 0
 1479 000a 3868     		ldr	r0, [r7]
 1480 000c FFF7FEFF 		bl	strlen
 1481 0010 F860     		str	r0, [r7, #12]
 892:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return SEGGER_RTT_Write(BufferIndex, s, Len);
 1482              		.loc 1 892 0
 1483 0012 7868     		ldr	r0, [r7, #4]
 1484 0014 3968     		ldr	r1, [r7]
 1485 0016 FA68     		ldr	r2, [r7, #12]
 1486 0018 FFF7FEFF 		bl	SEGGER_RTT_Write
 1487 001c 0346     		mov	r3, r0
 893:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1488              		.loc 1 893 0
 1489 001e 1846     		mov	r0, r3
 1490 0020 1037     		adds	r7, r7, #16
 1491              	.LCFI59:
 1492              		.cfi_def_cfa_offset 8
 1493 0022 BD46     		mov	sp, r7
 1494              	.LCFI60:
 1495              		.cfi_def_cfa_register 13
 1496              		@ sp needed
 1497 0024 80BD     		pop	{r7, pc}
 1498              		.cfi_endproc
 1499              	.LFE11:
 1501 0026 00BF     		.section	.text.SEGGER_RTT_GetKey,"ax",%progbits
 1502              		.align	2
 1503              		.global	SEGGER_RTT_GetKey
 1504              		.thumb
 1505              		.thumb_func
 1507              	SEGGER_RTT_GetKey:
 1508              	.LFB12:
 894:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 895:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 896:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 897:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_GetKey
 898:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 899:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 900:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Reads one character from the SEGGER RTT buffer.
 901:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Host has previously stored data there.
 902:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 903:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 904:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    <  0 -   No character available (buffer empty).
 905:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 -   Character which has been read. (Possible values: 0 - 255)
 906:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccRPMSaP.s 			page 43


 907:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 908:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0.
 909:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 910:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_GetKey(void) {
 1509              		.loc 1 910 0
 1510              		.cfi_startproc
 1511              		@ args = 0, pretend = 0, frame = 8
 1512              		@ frame_needed = 1, uses_anonymous_args = 0
 1513 0000 80B5     		push	{r7, lr}
 1514              	.LCFI61:
 1515              		.cfi_def_cfa_offset 8
 1516              		.cfi_offset 7, -8
 1517              		.cfi_offset 14, -4
 1518 0002 82B0     		sub	sp, sp, #8
 1519              	.LCFI62:
 1520              		.cfi_def_cfa_offset 16
 1521 0004 00AF     		add	r7, sp, #0
 1522              	.LCFI63:
 1523              		.cfi_def_cfa_register 7
 911:../../../SystemView/SEGGER/SEGGER_RTT.c ****   char c;
 912:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
 913:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 914:../../../SystemView/SEGGER/SEGGER_RTT.c ****   r = (int)SEGGER_RTT_Read(0u, &c, 1u);
 1524              		.loc 1 914 0
 1525 0006 FB1C     		adds	r3, r7, #3
 1526 0008 0020     		movs	r0, #0
 1527 000a 1946     		mov	r1, r3
 1528 000c 0122     		movs	r2, #1
 1529 000e FFF7FEFF 		bl	SEGGER_RTT_Read
 1530 0012 0346     		mov	r3, r0
 1531 0014 7B60     		str	r3, [r7, #4]
 915:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (r == 1) {
 1532              		.loc 1 915 0
 1533 0016 7B68     		ldr	r3, [r7, #4]
 1534 0018 012B     		cmp	r3, #1
 1535 001a 02D1     		bne	.L73
 916:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = (int)(unsigned char)c;
 1536              		.loc 1 916 0
 1537 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1538 001e 7B60     		str	r3, [r7, #4]
 1539 0020 02E0     		b	.L74
 1540              	.L73:
 917:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 918:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 1541              		.loc 1 918 0
 1542 0022 4FF0FF33 		mov	r3, #-1
 1543 0026 7B60     		str	r3, [r7, #4]
 1544              	.L74:
 919:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 920:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 1545              		.loc 1 920 0
 1546 0028 7B68     		ldr	r3, [r7, #4]
 921:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1547              		.loc 1 921 0
 1548 002a 1846     		mov	r0, r3
 1549 002c 0837     		adds	r7, r7, #8
 1550              	.LCFI64:
ARM GAS  /tmp/ccRPMSaP.s 			page 44


 1551              		.cfi_def_cfa_offset 8
 1552 002e BD46     		mov	sp, r7
 1553              	.LCFI65:
 1554              		.cfi_def_cfa_register 13
 1555              		@ sp needed
 1556 0030 80BD     		pop	{r7, pc}
 1557              		.cfi_endproc
 1558              	.LFE12:
 1560 0032 00BF     		.section	.text.SEGGER_RTT_WaitKey,"ax",%progbits
 1561              		.align	2
 1562              		.global	SEGGER_RTT_WaitKey
 1563              		.thumb
 1564              		.thumb_func
 1566              	SEGGER_RTT_WaitKey:
 1567              	.LFB13:
 922:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 923:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 924:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 925:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_WaitKey
 926:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 927:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 928:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Waits until at least one character is avaible in the SEGGER RTT buffer.
 929:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Once a character is available, it is read and this function returns.
 930:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 931:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 932:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >=0 -   Character which has been read.
 933:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 934:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 935:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
 936:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (2) This function is blocking if no character is present in RTT buffer
 937:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 938:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_WaitKey(void) {
 1568              		.loc 1 938 0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 8
 1571              		@ frame_needed = 1, uses_anonymous_args = 0
 1572 0000 80B5     		push	{r7, lr}
 1573              	.LCFI66:
 1574              		.cfi_def_cfa_offset 8
 1575              		.cfi_offset 7, -8
 1576              		.cfi_offset 14, -4
 1577 0002 82B0     		sub	sp, sp, #8
 1578              	.LCFI67:
 1579              		.cfi_def_cfa_offset 16
 1580 0004 00AF     		add	r7, sp, #0
 1581              	.LCFI68:
 1582              		.cfi_def_cfa_register 7
 1583              	.L77:
 939:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
 940:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 941:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
 942:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = SEGGER_RTT_GetKey();
 1584              		.loc 1 942 0 discriminator 1
 1585 0006 FFF7FEFF 		bl	SEGGER_RTT_GetKey
 1586 000a 7860     		str	r0, [r7, #4]
 943:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (r < 0);
 1587              		.loc 1 943 0 discriminator 1
ARM GAS  /tmp/ccRPMSaP.s 			page 45


 1588 000c 7B68     		ldr	r3, [r7, #4]
 1589 000e 002B     		cmp	r3, #0
 1590 0010 F9DB     		blt	.L77
 944:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 1591              		.loc 1 944 0
 1592 0012 7B68     		ldr	r3, [r7, #4]
 945:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1593              		.loc 1 945 0
 1594 0014 1846     		mov	r0, r3
 1595 0016 0837     		adds	r7, r7, #8
 1596              	.LCFI69:
 1597              		.cfi_def_cfa_offset 8
 1598 0018 BD46     		mov	sp, r7
 1599              	.LCFI70:
 1600              		.cfi_def_cfa_register 13
 1601              		@ sp needed
 1602 001a 80BD     		pop	{r7, pc}
 1603              		.cfi_endproc
 1604              	.LFE13:
 1606              		.section	.text.SEGGER_RTT_HasKey,"ax",%progbits
 1607              		.align	2
 1608              		.global	SEGGER_RTT_HasKey
 1609              		.thumb
 1610              		.thumb_func
 1612              	SEGGER_RTT_HasKey:
 1613              	.LFB14:
 946:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 947:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 948:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 949:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasKey
 950:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 951:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 952:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Checks if at least one character for reading is available in the SEGGER RTT buffer.
 953:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 954:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
 955:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    == 0 -     No characters are available to read.
 956:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    == 1 -     At least one character is available.
 957:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 958:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Notes
 959:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    (1) This function is only specified for accesses to RTT buffer 0
 960:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 961:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_HasKey(void) {
 1614              		.loc 1 961 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 8
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618 0000 80B5     		push	{r7, lr}
 1619              	.LCFI71:
 1620              		.cfi_def_cfa_offset 8
 1621              		.cfi_offset 7, -8
 1622              		.cfi_offset 14, -4
 1623 0002 82B0     		sub	sp, sp, #8
 1624              	.LCFI72:
 1625              		.cfi_def_cfa_offset 16
 1626 0004 00AF     		add	r7, sp, #0
 1627              	.LCFI73:
 1628              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccRPMSaP.s 			page 46


 962:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned RdOff;
 963:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
 964:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 965:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1629              		.loc 1 965 0
 1630 0006 0C4B     		ldr	r3, .L84
 1631 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1632 000a 002B     		cmp	r3, #0
 1633 000c 01D1     		bne	.L80
 1634              		.loc 1 965 0 is_stmt 0 discriminator 1
 1635 000e FFF7FEFF 		bl	_DoInit
 1636              	.L80:
 966:../../../SystemView/SEGGER/SEGGER_RTT.c ****   RdOff = _SEGGER_RTT.aDown[0].RdOff;
 1637              		.loc 1 966 0 is_stmt 1
 1638 0012 094B     		ldr	r3, .L84
 1639 0014 1B6F     		ldr	r3, [r3, #112]
 1640 0016 3B60     		str	r3, [r7]
 967:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (RdOff != _SEGGER_RTT.aDown[0].WrOff) {
 1641              		.loc 1 967 0
 1642 0018 074B     		ldr	r3, .L84
 1643 001a DA6E     		ldr	r2, [r3, #108]
 1644 001c 3B68     		ldr	r3, [r7]
 1645 001e 9A42     		cmp	r2, r3
 1646 0020 02D0     		beq	.L81
 968:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = 1;
 1647              		.loc 1 968 0
 1648 0022 0123     		movs	r3, #1
 1649 0024 7B60     		str	r3, [r7, #4]
 1650 0026 01E0     		b	.L82
 1651              	.L81:
 969:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
 970:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = 0;
 1652              		.loc 1 970 0
 1653 0028 0023     		movs	r3, #0
 1654 002a 7B60     		str	r3, [r7, #4]
 1655              	.L82:
 971:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
 972:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 1656              		.loc 1 972 0
 1657 002c 7B68     		ldr	r3, [r7, #4]
 973:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1658              		.loc 1 973 0
 1659 002e 1846     		mov	r0, r3
 1660 0030 0837     		adds	r7, r7, #8
 1661              	.LCFI74:
 1662              		.cfi_def_cfa_offset 8
 1663 0032 BD46     		mov	sp, r7
 1664              	.LCFI75:
 1665              		.cfi_def_cfa_register 13
 1666              		@ sp needed
 1667 0034 80BD     		pop	{r7, pc}
 1668              	.L85:
 1669 0036 00BF     		.align	2
 1670              	.L84:
 1671 0038 00000000 		.word	_SEGGER_RTT
 1672              		.cfi_endproc
 1673              	.LFE14:
ARM GAS  /tmp/ccRPMSaP.s 			page 47


 1675              		.section	.text.SEGGER_RTT_HasData,"ax",%progbits
 1676              		.align	2
 1677              		.global	SEGGER_RTT_HasData
 1678              		.thumb
 1679              		.thumb_func
 1681              	SEGGER_RTT_HasData:
 1682              	.LFB15:
 974:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 975:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 976:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 977:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_HasData
 978:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 979:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
 980:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Check if there is data from the host in the given buffer.
 981:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 982:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value:
 983:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  ==0:  No data
 984:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  !=0:  Data in buffer
 985:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 986:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
 987:../../../SystemView/SEGGER/SEGGER_RTT.c **** unsigned SEGGER_RTT_HasData(unsigned BufferIndex) {
 1683              		.loc 1 987 0
 1684              		.cfi_startproc
 1685              		@ args = 0, pretend = 0, frame = 16
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687              		@ link register save eliminated.
 1688 0000 80B4     		push	{r7}
 1689              	.LCFI76:
 1690              		.cfi_def_cfa_offset 4
 1691              		.cfi_offset 7, -4
 1692 0002 85B0     		sub	sp, sp, #20
 1693              	.LCFI77:
 1694              		.cfi_def_cfa_offset 24
 1695 0004 00AF     		add	r7, sp, #0
 1696              	.LCFI78:
 1697              		.cfi_def_cfa_register 7
 1698 0006 7860     		str	r0, [r7, #4]
 988:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_DOWN* pRing;
 989:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned                v;
 990:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 991:../../../SystemView/SEGGER/SEGGER_RTT.c ****   pRing = &_SEGGER_RTT.aDown[BufferIndex];
 1699              		.loc 1 991 0
 1700 0008 7A68     		ldr	r2, [r7, #4]
 1701 000a 1346     		mov	r3, r2
 1702 000c 5B00     		lsls	r3, r3, #1
 1703 000e 1344     		add	r3, r3, r2
 1704 0010 DB00     		lsls	r3, r3, #3
 1705 0012 6033     		adds	r3, r3, #96
 1706 0014 074A     		ldr	r2, .L88
 1707 0016 1344     		add	r3, r3, r2
 1708 0018 FB60     		str	r3, [r7, #12]
 992:../../../SystemView/SEGGER/SEGGER_RTT.c ****   v = pRing->WrOff;
 1709              		.loc 1 992 0
 1710 001a FB68     		ldr	r3, [r7, #12]
 1711 001c DB68     		ldr	r3, [r3, #12]
 1712 001e BB60     		str	r3, [r7, #8]
 993:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return v - pRing->RdOff;
ARM GAS  /tmp/ccRPMSaP.s 			page 48


 1713              		.loc 1 993 0
 1714 0020 FB68     		ldr	r3, [r7, #12]
 1715 0022 1B69     		ldr	r3, [r3, #16]
 1716 0024 BA68     		ldr	r2, [r7, #8]
 1717 0026 D31A     		subs	r3, r2, r3
 994:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1718              		.loc 1 994 0
 1719 0028 1846     		mov	r0, r3
 1720 002a 1437     		adds	r7, r7, #20
 1721              	.LCFI79:
 1722              		.cfi_def_cfa_offset 4
 1723 002c BD46     		mov	sp, r7
 1724              	.LCFI80:
 1725              		.cfi_def_cfa_register 13
 1726              		@ sp needed
 1727 002e 5DF8047B 		ldr	r7, [sp], #4
 1728              	.LCFI81:
 1729              		.cfi_restore 7
 1730              		.cfi_def_cfa_offset 0
 1731 0032 7047     		bx	lr
 1732              	.L89:
 1733              		.align	2
 1734              	.L88:
 1735 0034 00000000 		.word	_SEGGER_RTT
 1736              		.cfi_endproc
 1737              	.LFE15:
 1739              		.section	.text.SEGGER_RTT_AllocDownBuffer,"ax",%progbits
 1740              		.align	2
 1741              		.global	SEGGER_RTT_AllocDownBuffer
 1742              		.thumb
 1743              		.thumb_func
 1745              	SEGGER_RTT_AllocDownBuffer:
 1746              	.LFB16:
 995:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
 996:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
 997:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
 998:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_AllocDownBuffer
 999:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1000:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1001:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of the next down-buffer (H->T).
1002:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1003:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1004:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1005:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1006:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1007:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1008:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1009:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1010:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1011:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1012:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1013:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1014:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1015:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_AllocDownBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flag
 1747              		.loc 1 1015 0
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 24
ARM GAS  /tmp/ccRPMSaP.s 			page 49


 1750              		@ frame_needed = 1, uses_anonymous_args = 0
 1751 0000 80B5     		push	{r7, lr}
 1752              	.LCFI82:
 1753              		.cfi_def_cfa_offset 8
 1754              		.cfi_offset 7, -8
 1755              		.cfi_offset 14, -4
 1756 0002 86B0     		sub	sp, sp, #24
 1757              	.LCFI83:
 1758              		.cfi_def_cfa_offset 32
 1759 0004 00AF     		add	r7, sp, #0
 1760              	.LCFI84:
 1761              		.cfi_def_cfa_register 7
 1762 0006 F860     		str	r0, [r7, #12]
 1763 0008 B960     		str	r1, [r7, #8]
 1764 000a 7A60     		str	r2, [r7, #4]
 1765 000c 3B60     		str	r3, [r7]
1016:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int BufferIndex;
1017:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1018:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1766              		.loc 1 1018 0
 1767 000e 384B     		ldr	r3, .L98
 1768 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 0012 002B     		cmp	r3, #0
 1770 0014 01D1     		bne	.L91
 1771              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1772 0016 FFF7FEFF 		bl	_DoInit
 1773              	.L91:
 1774              	.LBB6:
1019:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1775              		.loc 1 1019 0 is_stmt 1
 1776              	@ 1019 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1777 001a EFF31183 		mrs   r3, basepri  
 1778 001e 4FF02001 		mov   r1, #32       
 1779 0022 81F31188 		msr   basepri, r1  
 1780              		
 1781              	@ 0 "" 2
 1782              		.thumb
 1783 0026 3B61     		str	r3, [r7, #16]
1020:../../../SystemView/SEGGER/SEGGER_RTT.c ****   BufferIndex = 0;
 1784              		.loc 1 1020 0
 1785 0028 0023     		movs	r3, #0
 1786 002a 7B61     		str	r3, [r7, #20]
 1787              	.L94:
1021:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
1022:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (_SEGGER_RTT.aDown[BufferIndex].pBuffer == NULL) {
 1788              		.loc 1 1022 0
 1789 002c 3049     		ldr	r1, .L98
 1790 002e 7A69     		ldr	r2, [r7, #20]
 1791 0030 1346     		mov	r3, r2
 1792 0032 5B00     		lsls	r3, r3, #1
 1793 0034 1344     		add	r3, r3, r2
 1794 0036 DB00     		lsls	r3, r3, #3
 1795 0038 0B44     		add	r3, r3, r1
 1796 003a 6033     		adds	r3, r3, #96
 1797 003c 5B68     		ldr	r3, [r3, #4]
 1798 003e 002B     		cmp	r3, #0
 1799 0040 00D1     		bne	.L92
ARM GAS  /tmp/ccRPMSaP.s 			page 50


1023:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 1800              		.loc 1 1023 0
 1801 0042 07E0     		b	.L93
 1802              	.L92:
1024:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1025:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex++;
 1803              		.loc 1 1025 0
 1804 0044 7B69     		ldr	r3, [r7, #20]
 1805 0046 0133     		adds	r3, r3, #1
 1806 0048 7B61     		str	r3, [r7, #20]
1026:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers);
 1807              		.loc 1 1026 0
 1808 004a 294B     		ldr	r3, .L98
 1809 004c 5A69     		ldr	r2, [r3, #20]
 1810 004e 7B69     		ldr	r3, [r7, #20]
 1811 0050 9A42     		cmp	r2, r3
 1812 0052 EBDC     		bgt	.L94
 1813              	.L93:
1027:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumDownBuffers) {
 1814              		.loc 1 1027 0
 1815 0054 264B     		ldr	r3, .L98
 1816 0056 5A69     		ldr	r2, [r3, #20]
 1817 0058 7B69     		ldr	r3, [r7, #20]
 1818 005a 9A42     		cmp	r2, r3
 1819 005c 3CDD     		ble	.L95
1028:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 1820              		.loc 1 1028 0
 1821 005e 2449     		ldr	r1, .L98
 1822 0060 7A69     		ldr	r2, [r7, #20]
 1823 0062 1346     		mov	r3, r2
 1824 0064 5B00     		lsls	r3, r3, #1
 1825 0066 1344     		add	r3, r3, r2
 1826 0068 DB00     		lsls	r3, r3, #3
 1827 006a 0B44     		add	r3, r3, r1
 1828 006c 6033     		adds	r3, r3, #96
 1829 006e FA68     		ldr	r2, [r7, #12]
 1830 0070 1A60     		str	r2, [r3]
1029:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 1831              		.loc 1 1029 0
 1832 0072 1F49     		ldr	r1, .L98
 1833 0074 7A69     		ldr	r2, [r7, #20]
 1834 0076 1346     		mov	r3, r2
 1835 0078 5B00     		lsls	r3, r3, #1
 1836 007a 1344     		add	r3, r3, r2
 1837 007c DB00     		lsls	r3, r3, #3
 1838 007e 0B44     		add	r3, r3, r1
 1839 0080 6033     		adds	r3, r3, #96
 1840 0082 BA68     		ldr	r2, [r7, #8]
 1841 0084 5A60     		str	r2, [r3, #4]
1030:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 1842              		.loc 1 1030 0
 1843 0086 1A49     		ldr	r1, .L98
 1844 0088 7A69     		ldr	r2, [r7, #20]
 1845 008a 1346     		mov	r3, r2
 1846 008c 5B00     		lsls	r3, r3, #1
 1847 008e 1344     		add	r3, r3, r2
 1848 0090 DB00     		lsls	r3, r3, #3
ARM GAS  /tmp/ccRPMSaP.s 			page 51


 1849 0092 0B44     		add	r3, r3, r1
 1850 0094 6833     		adds	r3, r3, #104
 1851 0096 7A68     		ldr	r2, [r7, #4]
 1852 0098 1A60     		str	r2, [r3]
1031:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 1853              		.loc 1 1031 0
 1854 009a 1549     		ldr	r1, .L98
 1855 009c 7A69     		ldr	r2, [r7, #20]
 1856 009e 1346     		mov	r3, r2
 1857 00a0 5B00     		lsls	r3, r3, #1
 1858 00a2 1344     		add	r3, r3, r2
 1859 00a4 DB00     		lsls	r3, r3, #3
 1860 00a6 0B44     		add	r3, r3, r1
 1861 00a8 7033     		adds	r3, r3, #112
 1862 00aa 0022     		movs	r2, #0
 1863 00ac 1A60     		str	r2, [r3]
1032:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 1864              		.loc 1 1032 0
 1865 00ae 1049     		ldr	r1, .L98
 1866 00b0 7A69     		ldr	r2, [r7, #20]
 1867 00b2 1346     		mov	r3, r2
 1868 00b4 5B00     		lsls	r3, r3, #1
 1869 00b6 1344     		add	r3, r3, r2
 1870 00b8 DB00     		lsls	r3, r3, #3
 1871 00ba 0B44     		add	r3, r3, r1
 1872 00bc 6833     		adds	r3, r3, #104
 1873 00be 0022     		movs	r2, #0
 1874 00c0 5A60     		str	r2, [r3, #4]
1033:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags        = Flags;
 1875              		.loc 1 1033 0
 1876 00c2 0B49     		ldr	r1, .L98
 1877 00c4 7A69     		ldr	r2, [r7, #20]
 1878 00c6 1346     		mov	r3, r2
 1879 00c8 5B00     		lsls	r3, r3, #1
 1880 00ca 1344     		add	r3, r3, r2
 1881 00cc DB00     		lsls	r3, r3, #3
 1882 00ce 0B44     		add	r3, r3, r1
 1883 00d0 7033     		adds	r3, r3, #112
 1884 00d2 3A68     		ldr	r2, [r7]
 1885 00d4 5A60     		str	r2, [r3, #4]
 1886 00d6 02E0     		b	.L96
 1887              	.L95:
1034:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1035:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex = -1;
 1888              		.loc 1 1035 0
 1889 00d8 4FF0FF33 		mov	r3, #-1
 1890 00dc 7B61     		str	r3, [r7, #20]
 1891              	.L96:
1036:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1037:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 1892              		.loc 1 1037 0
 1893 00de 3B69     		ldr	r3, [r7, #16]
 1894              	@ 1037 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1895 00e0 83F31188 		msr   basepri, r3  
 1896              		
 1897              	@ 0 "" 2
 1898              		.thumb
ARM GAS  /tmp/ccRPMSaP.s 			page 52


 1899              	.LBE6:
1038:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return BufferIndex;
 1900              		.loc 1 1038 0
 1901 00e4 7B69     		ldr	r3, [r7, #20]
1039:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 1902              		.loc 1 1039 0
 1903 00e6 1846     		mov	r0, r3
 1904 00e8 1837     		adds	r7, r7, #24
 1905              	.LCFI85:
 1906              		.cfi_def_cfa_offset 8
 1907 00ea BD46     		mov	sp, r7
 1908              	.LCFI86:
 1909              		.cfi_def_cfa_register 13
 1910              		@ sp needed
 1911 00ec 80BD     		pop	{r7, pc}
 1912              	.L99:
 1913 00ee 00BF     		.align	2
 1914              	.L98:
 1915 00f0 00000000 		.word	_SEGGER_RTT
 1916              		.cfi_endproc
 1917              	.LFE16:
 1919              		.section	.text.SEGGER_RTT_AllocUpBuffer,"ax",%progbits
 1920              		.align	2
 1921              		.global	SEGGER_RTT_AllocUpBuffer
 1922              		.thumb
 1923              		.thumb_func
 1925              	SEGGER_RTT_AllocUpBuffer:
 1926              	.LFB17:
1040:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1041:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1042:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1043:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_AllocUpBuffer
1044:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1045:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1046:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of the next up-buffer (T->H).
1047:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    The next buffer, which is not used yet is configured.
1048:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1049:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1050:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1051:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1052:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1053:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1054:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1055:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1056:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1057:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K. Buffer Index
1058:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1059:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1060:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_AllocUpBuffer(const char* sName, void* pBuffer, unsigned BufferSize, unsigned Flags)
 1927              		.loc 1 1060 0
 1928              		.cfi_startproc
 1929              		@ args = 0, pretend = 0, frame = 24
 1930              		@ frame_needed = 1, uses_anonymous_args = 0
 1931 0000 80B5     		push	{r7, lr}
 1932              	.LCFI87:
 1933              		.cfi_def_cfa_offset 8
 1934              		.cfi_offset 7, -8
ARM GAS  /tmp/ccRPMSaP.s 			page 53


 1935              		.cfi_offset 14, -4
 1936 0002 86B0     		sub	sp, sp, #24
 1937              	.LCFI88:
 1938              		.cfi_def_cfa_offset 32
 1939 0004 00AF     		add	r7, sp, #0
 1940              	.LCFI89:
 1941              		.cfi_def_cfa_register 7
 1942 0006 F860     		str	r0, [r7, #12]
 1943 0008 B960     		str	r1, [r7, #8]
 1944 000a 7A60     		str	r2, [r7, #4]
 1945 000c 3B60     		str	r3, [r7]
1061:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int BufferIndex;
1062:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1063:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 1946              		.loc 1 1063 0
 1947 000e 384B     		ldr	r3, .L108
 1948 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1949 0012 002B     		cmp	r3, #0
 1950 0014 01D1     		bne	.L101
 1951              		.loc 1 1063 0 is_stmt 0 discriminator 1
 1952 0016 FFF7FEFF 		bl	_DoInit
 1953              	.L101:
 1954              	.LBB7:
1064:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_LOCK();
 1955              		.loc 1 1064 0 is_stmt 1
 1956              	@ 1064 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 1957 001a EFF31183 		mrs   r3, basepri  
 1958 001e 4FF02001 		mov   r1, #32       
 1959 0022 81F31188 		msr   basepri, r1  
 1960              		
 1961              	@ 0 "" 2
 1962              		.thumb
 1963 0026 3B61     		str	r3, [r7, #16]
1065:../../../SystemView/SEGGER/SEGGER_RTT.c ****   BufferIndex = 0;
 1964              		.loc 1 1065 0
 1965 0028 0023     		movs	r3, #0
 1966 002a 7B61     		str	r3, [r7, #20]
 1967              	.L104:
1066:../../../SystemView/SEGGER/SEGGER_RTT.c ****   do {
1067:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (_SEGGER_RTT.aUp[BufferIndex].pBuffer == NULL) {
 1968              		.loc 1 1067 0
 1969 002c 3049     		ldr	r1, .L108
 1970 002e 7B69     		ldr	r3, [r7, #20]
 1971 0030 5A1C     		adds	r2, r3, #1
 1972 0032 1346     		mov	r3, r2
 1973 0034 5B00     		lsls	r3, r3, #1
 1974 0036 1344     		add	r3, r3, r2
 1975 0038 DB00     		lsls	r3, r3, #3
 1976 003a 0B44     		add	r3, r3, r1
 1977 003c 5B68     		ldr	r3, [r3, #4]
 1978 003e 002B     		cmp	r3, #0
 1979 0040 00D1     		bne	.L102
1068:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 1980              		.loc 1 1068 0
 1981 0042 07E0     		b	.L103
 1982              	.L102:
1069:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
ARM GAS  /tmp/ccRPMSaP.s 			page 54


1070:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex++;
 1983              		.loc 1 1070 0
 1984 0044 7B69     		ldr	r3, [r7, #20]
 1985 0046 0133     		adds	r3, r3, #1
 1986 0048 7B61     		str	r3, [r7, #20]
1071:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } while (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers);
 1987              		.loc 1 1071 0
 1988 004a 294B     		ldr	r3, .L108
 1989 004c 1A69     		ldr	r2, [r3, #16]
 1990 004e 7B69     		ldr	r3, [r7, #20]
 1991 0050 9A42     		cmp	r2, r3
 1992 0052 EBDC     		bgt	.L104
 1993              	.L103:
1072:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < _SEGGER_RTT.MaxNumUpBuffers) {
 1994              		.loc 1 1072 0
 1995 0054 264B     		ldr	r3, .L108
 1996 0056 1A69     		ldr	r2, [r3, #16]
 1997 0058 7B69     		ldr	r3, [r7, #20]
 1998 005a 9A42     		cmp	r2, r3
 1999 005c 3CDD     		ble	.L105
1073:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 2000              		.loc 1 1073 0
 2001 005e 2449     		ldr	r1, .L108
 2002 0060 7B69     		ldr	r3, [r7, #20]
 2003 0062 5A1C     		adds	r2, r3, #1
 2004 0064 1346     		mov	r3, r2
 2005 0066 5B00     		lsls	r3, r3, #1
 2006 0068 1344     		add	r3, r3, r2
 2007 006a DB00     		lsls	r3, r3, #3
 2008 006c 0B44     		add	r3, r3, r1
 2009 006e FA68     		ldr	r2, [r7, #12]
 2010 0070 1A60     		str	r2, [r3]
1074:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2011              		.loc 1 1074 0
 2012 0072 1F49     		ldr	r1, .L108
 2013 0074 7B69     		ldr	r3, [r7, #20]
 2014 0076 5A1C     		adds	r2, r3, #1
 2015 0078 1346     		mov	r3, r2
 2016 007a 5B00     		lsls	r3, r3, #1
 2017 007c 1344     		add	r3, r3, r2
 2018 007e DB00     		lsls	r3, r3, #3
 2019 0080 0B44     		add	r3, r3, r1
 2020 0082 BA68     		ldr	r2, [r7, #8]
 2021 0084 5A60     		str	r2, [r3, #4]
1075:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2022              		.loc 1 1075 0
 2023 0086 1A49     		ldr	r1, .L108
 2024 0088 7A69     		ldr	r2, [r7, #20]
 2025 008a 1346     		mov	r3, r2
 2026 008c 5B00     		lsls	r3, r3, #1
 2027 008e 1344     		add	r3, r3, r2
 2028 0090 DB00     		lsls	r3, r3, #3
 2029 0092 0B44     		add	r3, r3, r1
 2030 0094 2033     		adds	r3, r3, #32
 2031 0096 7A68     		ldr	r2, [r7, #4]
 2032 0098 1A60     		str	r2, [r3]
1076:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
ARM GAS  /tmp/ccRPMSaP.s 			page 55


 2033              		.loc 1 1076 0
 2034 009a 1549     		ldr	r1, .L108
 2035 009c 7A69     		ldr	r2, [r7, #20]
 2036 009e 1346     		mov	r3, r2
 2037 00a0 5B00     		lsls	r3, r3, #1
 2038 00a2 1344     		add	r3, r3, r2
 2039 00a4 DB00     		lsls	r3, r3, #3
 2040 00a6 0B44     		add	r3, r3, r1
 2041 00a8 2833     		adds	r3, r3, #40
 2042 00aa 0022     		movs	r2, #0
 2043 00ac 1A60     		str	r2, [r3]
1077:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2044              		.loc 1 1077 0
 2045 00ae 1049     		ldr	r1, .L108
 2046 00b0 7A69     		ldr	r2, [r7, #20]
 2047 00b2 1346     		mov	r3, r2
 2048 00b4 5B00     		lsls	r3, r3, #1
 2049 00b6 1344     		add	r3, r3, r2
 2050 00b8 DB00     		lsls	r3, r3, #3
 2051 00ba 0B44     		add	r3, r3, r1
 2052 00bc 2033     		adds	r3, r3, #32
 2053 00be 0022     		movs	r2, #0
 2054 00c0 5A60     		str	r2, [r3, #4]
1078:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags        = Flags;
 2055              		.loc 1 1078 0
 2056 00c2 0B49     		ldr	r1, .L108
 2057 00c4 7A69     		ldr	r2, [r7, #20]
 2058 00c6 1346     		mov	r3, r2
 2059 00c8 5B00     		lsls	r3, r3, #1
 2060 00ca 1344     		add	r3, r3, r2
 2061 00cc DB00     		lsls	r3, r3, #3
 2062 00ce 0B44     		add	r3, r3, r1
 2063 00d0 2833     		adds	r3, r3, #40
 2064 00d2 3A68     		ldr	r2, [r7]
 2065 00d4 5A60     		str	r2, [r3, #4]
 2066 00d6 02E0     		b	.L106
 2067              	.L105:
1079:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1080:../../../SystemView/SEGGER/SEGGER_RTT.c ****     BufferIndex = -1;
 2068              		.loc 1 1080 0
 2069 00d8 4FF0FF33 		mov	r3, #-1
 2070 00dc 7B61     		str	r3, [r7, #20]
 2071              	.L106:
1081:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1082:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_UNLOCK();
 2072              		.loc 1 1082 0
 2073 00de 3B69     		ldr	r3, [r7, #16]
 2074              	@ 1082 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2075 00e0 83F31188 		msr   basepri, r3  
 2076              		
 2077              	@ 0 "" 2
 2078              		.thumb
 2079              	.LBE7:
1083:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return BufferIndex;
 2080              		.loc 1 1083 0
 2081 00e4 7B69     		ldr	r3, [r7, #20]
1084:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
ARM GAS  /tmp/ccRPMSaP.s 			page 56


 2082              		.loc 1 1084 0
 2083 00e6 1846     		mov	r0, r3
 2084 00e8 1837     		adds	r7, r7, #24
 2085              	.LCFI90:
 2086              		.cfi_def_cfa_offset 8
 2087 00ea BD46     		mov	sp, r7
 2088              	.LCFI91:
 2089              		.cfi_def_cfa_register 13
 2090              		@ sp needed
 2091 00ec 80BD     		pop	{r7, pc}
 2092              	.L109:
 2093 00ee 00BF     		.align	2
 2094              	.L108:
 2095 00f0 00000000 		.word	_SEGGER_RTT
 2096              		.cfi_endproc
 2097              	.LFE17:
 2099              		.section	.text.SEGGER_RTT_ConfigUpBuffer,"ax",%progbits
 2100              		.align	2
 2101              		.global	SEGGER_RTT_ConfigUpBuffer
 2102              		.thumb
 2103              		.thumb_func
 2105              	SEGGER_RTT_ConfigUpBuffer:
 2106              	.LFB18:
1085:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1086:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1087:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1088:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigUpBuffer
1089:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1090:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1091:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer (T->H).
1092:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1093:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1094:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1095:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1096:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1097:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1098:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1099:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1100:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1101:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1102:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1103:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - O.K.
1104:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error
1105:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1106:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Additional information
1107:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1108:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    May only be called once per buffer.
1109:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1110:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1111:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_ConfigUpBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Buff
 2107              		.loc 1 1111 0
 2108              		.cfi_startproc
 2109              		@ args = 4, pretend = 0, frame = 24
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111 0000 80B5     		push	{r7, lr}
 2112              	.LCFI92:
 2113              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccRPMSaP.s 			page 57


 2114              		.cfi_offset 7, -8
 2115              		.cfi_offset 14, -4
 2116 0002 86B0     		sub	sp, sp, #24
 2117              	.LCFI93:
 2118              		.cfi_def_cfa_offset 32
 2119 0004 00AF     		add	r7, sp, #0
 2120              	.LCFI94:
 2121              		.cfi_def_cfa_register 7
 2122 0006 F860     		str	r0, [r7, #12]
 2123 0008 B960     		str	r1, [r7, #8]
 2124 000a 7A60     		str	r2, [r7, #4]
 2125 000c 3B60     		str	r3, [r7]
1112:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1113:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1114:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2126              		.loc 1 1114 0
 2127 000e 304B     		ldr	r3, .L116
 2128 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2129 0012 002B     		cmp	r3, #0
 2130 0014 01D1     		bne	.L111
 2131              		.loc 1 1114 0 is_stmt 0 discriminator 1
 2132 0016 FFF7FEFF 		bl	_DoInit
 2133              	.L111:
1115:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2134              		.loc 1 1115 0 is_stmt 1
 2135 001a 2D4B     		ldr	r3, .L116
 2136 001c 1B69     		ldr	r3, [r3, #16]
 2137 001e 1A46     		mov	r2, r3
 2138 0020 FB68     		ldr	r3, [r7, #12]
 2139 0022 9A42     		cmp	r2, r3
 2140 0024 4BD9     		bls	.L112
 2141              	.LBB8:
1116:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2142              		.loc 1 1116 0
 2143              	@ 1116 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2144 0026 EFF31183 		mrs   r3, basepri  
 2145 002a 4FF02001 		mov   r1, #32       
 2146 002e 81F31188 		msr   basepri, r1  
 2147              		
 2148              	@ 0 "" 2
 2149              		.thumb
 2150 0032 3B61     		str	r3, [r7, #16]
1117:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 2151              		.loc 1 1117 0
 2152 0034 FB68     		ldr	r3, [r7, #12]
 2153 0036 002B     		cmp	r3, #0
 2154 0038 31D0     		beq	.L113
1118:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].sName        = sName;
 2155              		.loc 1 1118 0
 2156 003a 2549     		ldr	r1, .L116
 2157 003c FB68     		ldr	r3, [r7, #12]
 2158 003e 5A1C     		adds	r2, r3, #1
 2159 0040 1346     		mov	r3, r2
 2160 0042 5B00     		lsls	r3, r3, #1
 2161 0044 1344     		add	r3, r3, r2
 2162 0046 DB00     		lsls	r3, r3, #3
 2163 0048 0B44     		add	r3, r3, r1
ARM GAS  /tmp/ccRPMSaP.s 			page 58


 2164 004a BA68     		ldr	r2, [r7, #8]
 2165 004c 1A60     		str	r2, [r3]
1119:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].pBuffer      = (char*)pBuffer;
 2166              		.loc 1 1119 0
 2167 004e 2049     		ldr	r1, .L116
 2168 0050 FB68     		ldr	r3, [r7, #12]
 2169 0052 5A1C     		adds	r2, r3, #1
 2170 0054 1346     		mov	r3, r2
 2171 0056 5B00     		lsls	r3, r3, #1
 2172 0058 1344     		add	r3, r3, r2
 2173 005a DB00     		lsls	r3, r3, #3
 2174 005c 0B44     		add	r3, r3, r1
 2175 005e 7A68     		ldr	r2, [r7, #4]
 2176 0060 5A60     		str	r2, [r3, #4]
1120:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].SizeOfBuffer = BufferSize;
 2177              		.loc 1 1120 0
 2178 0062 1B49     		ldr	r1, .L116
 2179 0064 FA68     		ldr	r2, [r7, #12]
 2180 0066 1346     		mov	r3, r2
 2181 0068 5B00     		lsls	r3, r3, #1
 2182 006a 1344     		add	r3, r3, r2
 2183 006c DB00     		lsls	r3, r3, #3
 2184 006e 0B44     		add	r3, r3, r1
 2185 0070 2033     		adds	r3, r3, #32
 2186 0072 3A68     		ldr	r2, [r7]
 2187 0074 1A60     		str	r2, [r3]
1121:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].RdOff        = 0u;
 2188              		.loc 1 1121 0
 2189 0076 1649     		ldr	r1, .L116
 2190 0078 FA68     		ldr	r2, [r7, #12]
 2191 007a 1346     		mov	r3, r2
 2192 007c 5B00     		lsls	r3, r3, #1
 2193 007e 1344     		add	r3, r3, r2
 2194 0080 DB00     		lsls	r3, r3, #3
 2195 0082 0B44     		add	r3, r3, r1
 2196 0084 2833     		adds	r3, r3, #40
 2197 0086 0022     		movs	r2, #0
 2198 0088 1A60     		str	r2, [r3]
1122:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aUp[BufferIndex].WrOff        = 0u;
 2199              		.loc 1 1122 0
 2200 008a 1149     		ldr	r1, .L116
 2201 008c FA68     		ldr	r2, [r7, #12]
 2202 008e 1346     		mov	r3, r2
 2203 0090 5B00     		lsls	r3, r3, #1
 2204 0092 1344     		add	r3, r3, r2
 2205 0094 DB00     		lsls	r3, r3, #3
 2206 0096 0B44     		add	r3, r3, r1
 2207 0098 2033     		adds	r3, r3, #32
 2208 009a 0022     		movs	r2, #0
 2209 009c 5A60     		str	r2, [r3, #4]
 2210              	.L113:
1123:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1124:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags          = Flags;
 2211              		.loc 1 1124 0
 2212 009e 0C49     		ldr	r1, .L116
 2213 00a0 FA68     		ldr	r2, [r7, #12]
 2214 00a2 1346     		mov	r3, r2
ARM GAS  /tmp/ccRPMSaP.s 			page 59


 2215 00a4 5B00     		lsls	r3, r3, #1
 2216 00a6 1344     		add	r3, r3, r2
 2217 00a8 DB00     		lsls	r3, r3, #3
 2218 00aa 0B44     		add	r3, r3, r1
 2219 00ac 2833     		adds	r3, r3, #40
 2220 00ae 3A6A     		ldr	r2, [r7, #32]
 2221 00b0 5A60     		str	r2, [r3, #4]
1125:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2222              		.loc 1 1125 0
 2223 00b2 3B69     		ldr	r3, [r7, #16]
 2224              	@ 1125 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2225 00b4 83F31188 		msr   basepri, r3  
 2226              		
 2227              	@ 0 "" 2
 2228              		.thumb
 2229              	.LBE8:
1126:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2230              		.loc 1 1126 0
 2231 00b8 0023     		movs	r3, #0
 2232 00ba 7B61     		str	r3, [r7, #20]
 2233 00bc 02E0     		b	.L114
 2234              	.L112:
1127:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1128:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2235              		.loc 1 1128 0
 2236 00be 4FF0FF33 		mov	r3, #-1
 2237 00c2 7B61     		str	r3, [r7, #20]
 2238              	.L114:
1129:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1130:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2239              		.loc 1 1130 0
 2240 00c4 7B69     		ldr	r3, [r7, #20]
1131:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2241              		.loc 1 1131 0
 2242 00c6 1846     		mov	r0, r3
 2243 00c8 1837     		adds	r7, r7, #24
 2244              	.LCFI95:
 2245              		.cfi_def_cfa_offset 8
 2246 00ca BD46     		mov	sp, r7
 2247              	.LCFI96:
 2248              		.cfi_def_cfa_register 13
 2249              		@ sp needed
 2250 00cc 80BD     		pop	{r7, pc}
 2251              	.L117:
 2252 00ce 00BF     		.align	2
 2253              	.L116:
 2254 00d0 00000000 		.word	_SEGGER_RTT
 2255              		.cfi_endproc
 2256              	.LFE18:
 2258              		.section	.text.SEGGER_RTT_ConfigDownBuffer,"ax",%progbits
 2259              		.align	2
 2260              		.global	SEGGER_RTT_ConfigDownBuffer
 2261              		.thumb
 2262              		.thumb_func
 2264              	SEGGER_RTT_ConfigDownBuffer:
 2265              	.LFB19:
1132:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
ARM GAS  /tmp/ccRPMSaP.s 			page 60


1133:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1134:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1135:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_ConfigDownBuffer
1136:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1137:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1138:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific down-buffer (H->T).
1139:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1140:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    This includes: Buffer address, size, name, flags, ...
1141:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1142:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1143:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to configure.
1144:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1145:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    pBuffer      Pointer to a buffer to be used.
1146:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferSize   Size of the buffer.
1147:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Operating modes. Define behavior if buffer is full (not enough space for entire m
1148:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1149:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1150:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1151:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1152:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1153:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Additional information
1154:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer 0 is configured on compile-time.
1155:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    May only be called once per buffer.
1156:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer name and flags can be reconfigured using the appropriate functions.
1157:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1158:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_ConfigDownBuffer(unsigned BufferIndex, const char* sName, void* pBuffer, unsigned Bu
 2266              		.loc 1 1158 0
 2267              		.cfi_startproc
 2268              		@ args = 4, pretend = 0, frame = 24
 2269              		@ frame_needed = 1, uses_anonymous_args = 0
 2270 0000 80B5     		push	{r7, lr}
 2271              	.LCFI97:
 2272              		.cfi_def_cfa_offset 8
 2273              		.cfi_offset 7, -8
 2274              		.cfi_offset 14, -4
 2275 0002 86B0     		sub	sp, sp, #24
 2276              	.LCFI98:
 2277              		.cfi_def_cfa_offset 32
 2278 0004 00AF     		add	r7, sp, #0
 2279              	.LCFI99:
 2280              		.cfi_def_cfa_register 7
 2281 0006 F860     		str	r0, [r7, #12]
 2282 0008 B960     		str	r1, [r7, #8]
 2283 000a 7A60     		str	r2, [r7, #4]
 2284 000c 3B60     		str	r3, [r7]
1159:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1160:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1161:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2285              		.loc 1 1161 0
 2286 000e 304B     		ldr	r3, .L124
 2287 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2288 0012 002B     		cmp	r3, #0
 2289 0014 01D1     		bne	.L119
 2290              		.loc 1 1161 0 is_stmt 0 discriminator 1
 2291 0016 FFF7FEFF 		bl	_DoInit
 2292              	.L119:
1162:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
ARM GAS  /tmp/ccRPMSaP.s 			page 61


 2293              		.loc 1 1162 0 is_stmt 1
 2294 001a 2D4B     		ldr	r3, .L124
 2295 001c 5B69     		ldr	r3, [r3, #20]
 2296 001e 1A46     		mov	r2, r3
 2297 0020 FB68     		ldr	r3, [r7, #12]
 2298 0022 9A42     		cmp	r2, r3
 2299 0024 4BD9     		bls	.L120
 2300              	.LBB9:
1163:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2301              		.loc 1 1163 0
 2302              	@ 1163 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2303 0026 EFF31183 		mrs   r3, basepri  
 2304 002a 4FF02001 		mov   r1, #32       
 2305 002e 81F31188 		msr   basepri, r1  
 2306              		
 2307              	@ 0 "" 2
 2308              		.thumb
 2309 0032 3B61     		str	r3, [r7, #16]
1164:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if (BufferIndex > 0u) {
 2310              		.loc 1 1164 0
 2311 0034 FB68     		ldr	r3, [r7, #12]
 2312 0036 002B     		cmp	r3, #0
 2313 0038 31D0     		beq	.L121
1165:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].sName        = sName;
 2314              		.loc 1 1165 0
 2315 003a 2549     		ldr	r1, .L124
 2316 003c FA68     		ldr	r2, [r7, #12]
 2317 003e 1346     		mov	r3, r2
 2318 0040 5B00     		lsls	r3, r3, #1
 2319 0042 1344     		add	r3, r3, r2
 2320 0044 DB00     		lsls	r3, r3, #3
 2321 0046 0B44     		add	r3, r3, r1
 2322 0048 6033     		adds	r3, r3, #96
 2323 004a BA68     		ldr	r2, [r7, #8]
 2324 004c 1A60     		str	r2, [r3]
1166:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].pBuffer      = (char*)pBuffer;
 2325              		.loc 1 1166 0
 2326 004e 2049     		ldr	r1, .L124
 2327 0050 FA68     		ldr	r2, [r7, #12]
 2328 0052 1346     		mov	r3, r2
 2329 0054 5B00     		lsls	r3, r3, #1
 2330 0056 1344     		add	r3, r3, r2
 2331 0058 DB00     		lsls	r3, r3, #3
 2332 005a 0B44     		add	r3, r3, r1
 2333 005c 6033     		adds	r3, r3, #96
 2334 005e 7A68     		ldr	r2, [r7, #4]
 2335 0060 5A60     		str	r2, [r3, #4]
1167:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].SizeOfBuffer = BufferSize;
 2336              		.loc 1 1167 0
 2337 0062 1B49     		ldr	r1, .L124
 2338 0064 FA68     		ldr	r2, [r7, #12]
 2339 0066 1346     		mov	r3, r2
 2340 0068 5B00     		lsls	r3, r3, #1
 2341 006a 1344     		add	r3, r3, r2
 2342 006c DB00     		lsls	r3, r3, #3
 2343 006e 0B44     		add	r3, r3, r1
 2344 0070 6833     		adds	r3, r3, #104
ARM GAS  /tmp/ccRPMSaP.s 			page 62


 2345 0072 3A68     		ldr	r2, [r7]
 2346 0074 1A60     		str	r2, [r3]
1168:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].RdOff        = 0u;
 2347              		.loc 1 1168 0
 2348 0076 1649     		ldr	r1, .L124
 2349 0078 FA68     		ldr	r2, [r7, #12]
 2350 007a 1346     		mov	r3, r2
 2351 007c 5B00     		lsls	r3, r3, #1
 2352 007e 1344     		add	r3, r3, r2
 2353 0080 DB00     		lsls	r3, r3, #3
 2354 0082 0B44     		add	r3, r3, r1
 2355 0084 7033     		adds	r3, r3, #112
 2356 0086 0022     		movs	r2, #0
 2357 0088 1A60     		str	r2, [r3]
1169:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _SEGGER_RTT.aDown[BufferIndex].WrOff        = 0u;
 2358              		.loc 1 1169 0
 2359 008a 1149     		ldr	r1, .L124
 2360 008c FA68     		ldr	r2, [r7, #12]
 2361 008e 1346     		mov	r3, r2
 2362 0090 5B00     		lsls	r3, r3, #1
 2363 0092 1344     		add	r3, r3, r2
 2364 0094 DB00     		lsls	r3, r3, #3
 2365 0096 0B44     		add	r3, r3, r1
 2366 0098 6833     		adds	r3, r3, #104
 2367 009a 0022     		movs	r2, #0
 2368 009c 5A60     		str	r2, [r3, #4]
 2369              	.L121:
1170:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1171:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags          = Flags;
 2370              		.loc 1 1171 0
 2371 009e 0C49     		ldr	r1, .L124
 2372 00a0 FA68     		ldr	r2, [r7, #12]
 2373 00a2 1346     		mov	r3, r2
 2374 00a4 5B00     		lsls	r3, r3, #1
 2375 00a6 1344     		add	r3, r3, r2
 2376 00a8 DB00     		lsls	r3, r3, #3
 2377 00aa 0B44     		add	r3, r3, r1
 2378 00ac 7033     		adds	r3, r3, #112
 2379 00ae 3A6A     		ldr	r2, [r7, #32]
 2380 00b0 5A60     		str	r2, [r3, #4]
1172:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2381              		.loc 1 1172 0
 2382 00b2 3B69     		ldr	r3, [r7, #16]
 2383              	@ 1172 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2384 00b4 83F31188 		msr   basepri, r3  
 2385              		
 2386              	@ 0 "" 2
 2387              		.thumb
 2388              	.LBE9:
1173:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2389              		.loc 1 1173 0
 2390 00b8 0023     		movs	r3, #0
 2391 00ba 7B61     		str	r3, [r7, #20]
 2392 00bc 02E0     		b	.L122
 2393              	.L120:
1174:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1175:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
ARM GAS  /tmp/ccRPMSaP.s 			page 63


 2394              		.loc 1 1175 0
 2395 00be 4FF0FF33 		mov	r3, #-1
 2396 00c2 7B61     		str	r3, [r7, #20]
 2397              	.L122:
1176:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1177:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2398              		.loc 1 1177 0
 2399 00c4 7B69     		ldr	r3, [r7, #20]
1178:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2400              		.loc 1 1178 0
 2401 00c6 1846     		mov	r0, r3
 2402 00c8 1837     		adds	r7, r7, #24
 2403              	.LCFI100:
 2404              		.cfi_def_cfa_offset 8
 2405 00ca BD46     		mov	sp, r7
 2406              	.LCFI101:
 2407              		.cfi_def_cfa_register 13
 2408              		@ sp needed
 2409 00cc 80BD     		pop	{r7, pc}
 2410              	.L125:
 2411 00ce 00BF     		.align	2
 2412              	.L124:
 2413 00d0 00000000 		.word	_SEGGER_RTT
 2414              		.cfi_endproc
 2415              	.LFE19:
 2417              		.section	.text.SEGGER_RTT_SetNameUpBuffer,"ax",%progbits
 2418              		.align	2
 2419              		.global	SEGGER_RTT_SetNameUpBuffer
 2420              		.thumb
 2421              		.thumb_func
 2423              	SEGGER_RTT_SetNameUpBuffer:
 2424              	.LFB20:
1179:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1180:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1181:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1182:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameUpBuffer
1183:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1184:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1185:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific up-buffer name (T->H).
1186:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1187:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1188:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1189:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1190:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1191:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1192:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1193:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1194:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1195:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1196:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetNameUpBuffer(unsigned BufferIndex, const char* sName) {
 2425              		.loc 1 1196 0
 2426              		.cfi_startproc
 2427              		@ args = 0, pretend = 0, frame = 16
 2428              		@ frame_needed = 1, uses_anonymous_args = 0
 2429 0000 80B5     		push	{r7, lr}
 2430              	.LCFI102:
 2431              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccRPMSaP.s 			page 64


 2432              		.cfi_offset 7, -8
 2433              		.cfi_offset 14, -4
 2434 0002 84B0     		sub	sp, sp, #16
 2435              	.LCFI103:
 2436              		.cfi_def_cfa_offset 24
 2437 0004 00AF     		add	r7, sp, #0
 2438              	.LCFI104:
 2439              		.cfi_def_cfa_register 7
 2440 0006 7860     		str	r0, [r7, #4]
 2441 0008 3960     		str	r1, [r7]
1197:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1198:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1199:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2442              		.loc 1 1199 0
 2443 000a 154B     		ldr	r3, .L131
 2444 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2445 000e 002B     		cmp	r3, #0
 2446 0010 01D1     		bne	.L127
 2447              		.loc 1 1199 0 is_stmt 0 discriminator 1
 2448 0012 FFF7FEFF 		bl	_DoInit
 2449              	.L127:
1200:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2450              		.loc 1 1200 0 is_stmt 1
 2451 0016 124B     		ldr	r3, .L131
 2452 0018 1B69     		ldr	r3, [r3, #16]
 2453 001a 1A46     		mov	r2, r3
 2454 001c 7B68     		ldr	r3, [r7, #4]
 2455 001e 9A42     		cmp	r2, r3
 2456 0020 16D9     		bls	.L128
 2457              	.LBB10:
1201:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2458              		.loc 1 1201 0
 2459              	@ 1201 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2460 0022 EFF31183 		mrs   r3, basepri  
 2461 0026 4FF02001 		mov   r1, #32       
 2462 002a 81F31188 		msr   basepri, r1  
 2463              		
 2464              	@ 0 "" 2
 2465              		.thumb
 2466 002e BB60     		str	r3, [r7, #8]
1202:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].sName = sName;
 2467              		.loc 1 1202 0
 2468 0030 0B49     		ldr	r1, .L131
 2469 0032 7B68     		ldr	r3, [r7, #4]
 2470 0034 5A1C     		adds	r2, r3, #1
 2471 0036 1346     		mov	r3, r2
 2472 0038 5B00     		lsls	r3, r3, #1
 2473 003a 1344     		add	r3, r3, r2
 2474 003c DB00     		lsls	r3, r3, #3
 2475 003e 0B44     		add	r3, r3, r1
 2476 0040 3A68     		ldr	r2, [r7]
 2477 0042 1A60     		str	r2, [r3]
1203:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2478              		.loc 1 1203 0
 2479 0044 BB68     		ldr	r3, [r7, #8]
 2480              	@ 1203 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2481 0046 83F31188 		msr   basepri, r3  
ARM GAS  /tmp/ccRPMSaP.s 			page 65


 2482              		
 2483              	@ 0 "" 2
 2484              		.thumb
 2485              	.LBE10:
1204:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2486              		.loc 1 1204 0
 2487 004a 0023     		movs	r3, #0
 2488 004c FB60     		str	r3, [r7, #12]
 2489 004e 02E0     		b	.L129
 2490              	.L128:
1205:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1206:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2491              		.loc 1 1206 0
 2492 0050 4FF0FF33 		mov	r3, #-1
 2493 0054 FB60     		str	r3, [r7, #12]
 2494              	.L129:
1207:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1208:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2495              		.loc 1 1208 0
 2496 0056 FB68     		ldr	r3, [r7, #12]
1209:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2497              		.loc 1 1209 0
 2498 0058 1846     		mov	r0, r3
 2499 005a 1037     		adds	r7, r7, #16
 2500              	.LCFI105:
 2501              		.cfi_def_cfa_offset 8
 2502 005c BD46     		mov	sp, r7
 2503              	.LCFI106:
 2504              		.cfi_def_cfa_register 13
 2505              		@ sp needed
 2506 005e 80BD     		pop	{r7, pc}
 2507              	.L132:
 2508              		.align	2
 2509              	.L131:
 2510 0060 00000000 		.word	_SEGGER_RTT
 2511              		.cfi_endproc
 2512              	.LFE20:
 2514              		.section	.text.SEGGER_RTT_SetNameDownBuffer,"ax",%progbits
 2515              		.align	2
 2516              		.global	SEGGER_RTT_SetNameDownBuffer
 2517              		.thumb
 2518              		.thumb_func
 2520              	SEGGER_RTT_SetNameDownBuffer:
 2521              	.LFB21:
1210:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1211:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1212:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1213:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetNameDownBuffer
1214:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1215:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1216:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of a specific Down-buffer name (T->H).
1217:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1218:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1219:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1220:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1221:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    sName        Pointer to a constant name string.
1222:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
ARM GAS  /tmp/ccRPMSaP.s 			page 66


1223:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1224:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1225:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1226:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1227:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetNameDownBuffer(unsigned BufferIndex, const char* sName) {
 2522              		.loc 1 1227 0
 2523              		.cfi_startproc
 2524              		@ args = 0, pretend = 0, frame = 16
 2525              		@ frame_needed = 1, uses_anonymous_args = 0
 2526 0000 80B5     		push	{r7, lr}
 2527              	.LCFI107:
 2528              		.cfi_def_cfa_offset 8
 2529              		.cfi_offset 7, -8
 2530              		.cfi_offset 14, -4
 2531 0002 84B0     		sub	sp, sp, #16
 2532              	.LCFI108:
 2533              		.cfi_def_cfa_offset 24
 2534 0004 00AF     		add	r7, sp, #0
 2535              	.LCFI109:
 2536              		.cfi_def_cfa_register 7
 2537 0006 7860     		str	r0, [r7, #4]
 2538 0008 3960     		str	r1, [r7]
1228:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1229:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1230:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2539              		.loc 1 1230 0
 2540 000a 154B     		ldr	r3, .L138
 2541 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2542 000e 002B     		cmp	r3, #0
 2543 0010 01D1     		bne	.L134
 2544              		.loc 1 1230 0 is_stmt 0 discriminator 1
 2545 0012 FFF7FEFF 		bl	_DoInit
 2546              	.L134:
1231:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2547              		.loc 1 1231 0 is_stmt 1
 2548 0016 124B     		ldr	r3, .L138
 2549 0018 5B69     		ldr	r3, [r3, #20]
 2550 001a 1A46     		mov	r2, r3
 2551 001c 7B68     		ldr	r3, [r7, #4]
 2552 001e 9A42     		cmp	r2, r3
 2553 0020 16D9     		bls	.L135
 2554              	.LBB11:
1232:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2555              		.loc 1 1232 0
 2556              	@ 1232 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2557 0022 EFF31183 		mrs   r3, basepri  
 2558 0026 4FF02001 		mov   r1, #32       
 2559 002a 81F31188 		msr   basepri, r1  
 2560              		
 2561              	@ 0 "" 2
 2562              		.thumb
 2563 002e BB60     		str	r3, [r7, #8]
1233:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].sName = sName;
 2564              		.loc 1 1233 0
 2565 0030 0B49     		ldr	r1, .L138
 2566 0032 7A68     		ldr	r2, [r7, #4]
 2567 0034 1346     		mov	r3, r2
ARM GAS  /tmp/ccRPMSaP.s 			page 67


 2568 0036 5B00     		lsls	r3, r3, #1
 2569 0038 1344     		add	r3, r3, r2
 2570 003a DB00     		lsls	r3, r3, #3
 2571 003c 0B44     		add	r3, r3, r1
 2572 003e 6033     		adds	r3, r3, #96
 2573 0040 3A68     		ldr	r2, [r7]
 2574 0042 1A60     		str	r2, [r3]
1234:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2575              		.loc 1 1234 0
 2576 0044 BB68     		ldr	r3, [r7, #8]
 2577              	@ 1234 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2578 0046 83F31188 		msr   basepri, r3  
 2579              		
 2580              	@ 0 "" 2
 2581              		.thumb
 2582              	.LBE11:
1235:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2583              		.loc 1 1235 0
 2584 004a 0023     		movs	r3, #0
 2585 004c FB60     		str	r3, [r7, #12]
 2586 004e 02E0     		b	.L136
 2587              	.L135:
1236:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1237:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2588              		.loc 1 1237 0
 2589 0050 4FF0FF33 		mov	r3, #-1
 2590 0054 FB60     		str	r3, [r7, #12]
 2591              	.L136:
1238:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1239:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2592              		.loc 1 1239 0
 2593 0056 FB68     		ldr	r3, [r7, #12]
1240:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2594              		.loc 1 1240 0
 2595 0058 1846     		mov	r0, r3
 2596 005a 1037     		adds	r7, r7, #16
 2597              	.LCFI110:
 2598              		.cfi_def_cfa_offset 8
 2599 005c BD46     		mov	sp, r7
 2600              	.LCFI111:
 2601              		.cfi_def_cfa_register 13
 2602              		@ sp needed
 2603 005e 80BD     		pop	{r7, pc}
 2604              	.L139:
 2605              		.align	2
 2606              	.L138:
 2607 0060 00000000 		.word	_SEGGER_RTT
 2608              		.cfi_endproc
 2609              	.LFE21:
 2611              		.section	.text.SEGGER_RTT_SetFlagsUpBuffer,"ax",%progbits
 2612              		.align	2
 2613              		.global	SEGGER_RTT_SetFlagsUpBuffer
 2614              		.thumb
 2615              		.thumb_func
 2617              	SEGGER_RTT_SetFlagsUpBuffer:
 2618              	.LFB22:
1241:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
ARM GAS  /tmp/ccRPMSaP.s 			page 68


1242:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1243:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1244:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsUpBuffer
1245:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1246:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1247:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of specific up-buffer flags (T->H).
1248:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1249:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1250:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1251:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer.
1252:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1253:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1254:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1255:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1256:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1257:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1258:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsUpBuffer(unsigned BufferIndex, unsigned Flags) {
 2619              		.loc 1 1258 0
 2620              		.cfi_startproc
 2621              		@ args = 0, pretend = 0, frame = 16
 2622              		@ frame_needed = 1, uses_anonymous_args = 0
 2623 0000 80B5     		push	{r7, lr}
 2624              	.LCFI112:
 2625              		.cfi_def_cfa_offset 8
 2626              		.cfi_offset 7, -8
 2627              		.cfi_offset 14, -4
 2628 0002 84B0     		sub	sp, sp, #16
 2629              	.LCFI113:
 2630              		.cfi_def_cfa_offset 24
 2631 0004 00AF     		add	r7, sp, #0
 2632              	.LCFI114:
 2633              		.cfi_def_cfa_register 7
 2634 0006 7860     		str	r0, [r7, #4]
 2635 0008 3960     		str	r1, [r7]
1259:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1260:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1261:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2636              		.loc 1 1261 0
 2637 000a 154B     		ldr	r3, .L145
 2638 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2639 000e 002B     		cmp	r3, #0
 2640 0010 01D1     		bne	.L141
 2641              		.loc 1 1261 0 is_stmt 0 discriminator 1
 2642 0012 FFF7FEFF 		bl	_DoInit
 2643              	.L141:
1262:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumUpBuffers) {
 2644              		.loc 1 1262 0 is_stmt 1
 2645 0016 124B     		ldr	r3, .L145
 2646 0018 1B69     		ldr	r3, [r3, #16]
 2647 001a 1A46     		mov	r2, r3
 2648 001c 7B68     		ldr	r3, [r7, #4]
 2649 001e 9A42     		cmp	r2, r3
 2650 0020 16D9     		bls	.L142
 2651              	.LBB12:
1263:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2652              		.loc 1 1263 0
 2653              	@ 1263 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
ARM GAS  /tmp/ccRPMSaP.s 			page 69


 2654 0022 EFF31183 		mrs   r3, basepri  
 2655 0026 4FF02001 		mov   r1, #32       
 2656 002a 81F31188 		msr   basepri, r1  
 2657              		
 2658              	@ 0 "" 2
 2659              		.thumb
 2660 002e BB60     		str	r3, [r7, #8]
1264:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aUp[BufferIndex].Flags = Flags;
 2661              		.loc 1 1264 0
 2662 0030 0B49     		ldr	r1, .L145
 2663 0032 7A68     		ldr	r2, [r7, #4]
 2664 0034 1346     		mov	r3, r2
 2665 0036 5B00     		lsls	r3, r3, #1
 2666 0038 1344     		add	r3, r3, r2
 2667 003a DB00     		lsls	r3, r3, #3
 2668 003c 0B44     		add	r3, r3, r1
 2669 003e 2833     		adds	r3, r3, #40
 2670 0040 3A68     		ldr	r2, [r7]
 2671 0042 5A60     		str	r2, [r3, #4]
1265:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2672              		.loc 1 1265 0
 2673 0044 BB68     		ldr	r3, [r7, #8]
 2674              	@ 1265 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2675 0046 83F31188 		msr   basepri, r3  
 2676              		
 2677              	@ 0 "" 2
 2678              		.thumb
 2679              	.LBE12:
1266:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2680              		.loc 1 1266 0
 2681 004a 0023     		movs	r3, #0
 2682 004c FB60     		str	r3, [r7, #12]
 2683 004e 02E0     		b	.L143
 2684              	.L142:
1267:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1268:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2685              		.loc 1 1268 0
 2686 0050 4FF0FF33 		mov	r3, #-1
 2687 0054 FB60     		str	r3, [r7, #12]
 2688              	.L143:
1269:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1270:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2689              		.loc 1 1270 0
 2690 0056 FB68     		ldr	r3, [r7, #12]
1271:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2691              		.loc 1 1271 0
 2692 0058 1846     		mov	r0, r3
 2693 005a 1037     		adds	r7, r7, #16
 2694              	.LCFI115:
 2695              		.cfi_def_cfa_offset 8
 2696 005c BD46     		mov	sp, r7
 2697              	.LCFI116:
 2698              		.cfi_def_cfa_register 13
 2699              		@ sp needed
 2700 005e 80BD     		pop	{r7, pc}
 2701              	.L146:
 2702              		.align	2
ARM GAS  /tmp/ccRPMSaP.s 			page 70


 2703              	.L145:
 2704 0060 00000000 		.word	_SEGGER_RTT
 2705              		.cfi_endproc
 2706              	.LFE22:
 2708              		.section	.text.SEGGER_RTT_SetFlagsDownBuffer,"ax",%progbits
 2709              		.align	2
 2710              		.global	SEGGER_RTT_SetFlagsDownBuffer
 2711              		.thumb
 2712              		.thumb_func
 2714              	SEGGER_RTT_SetFlagsDownBuffer:
 2715              	.LFB23:
1272:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1273:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1274:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1275:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetFlagsDownBuffer
1276:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1277:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1278:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Run-time configuration of specific Down-buffer flags (T->H).
1279:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Buffer to be configured is specified by index.
1280:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1281:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1282:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    BufferIndex  Index of the buffer to renamed.
1283:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Flags        Flags to set for the buffer.
1284:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1285:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1286:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1287:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error
1288:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1289:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetFlagsDownBuffer(unsigned BufferIndex, unsigned Flags) {
 2716              		.loc 1 1289 0
 2717              		.cfi_startproc
 2718              		@ args = 0, pretend = 0, frame = 16
 2719              		@ frame_needed = 1, uses_anonymous_args = 0
 2720 0000 80B5     		push	{r7, lr}
 2721              	.LCFI117:
 2722              		.cfi_def_cfa_offset 8
 2723              		.cfi_offset 7, -8
 2724              		.cfi_offset 14, -4
 2725 0002 84B0     		sub	sp, sp, #16
 2726              	.LCFI118:
 2727              		.cfi_def_cfa_offset 24
 2728 0004 00AF     		add	r7, sp, #0
 2729              	.LCFI119:
 2730              		.cfi_def_cfa_register 7
 2731 0006 7860     		str	r0, [r7, #4]
 2732 0008 3960     		str	r1, [r7]
1290:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1291:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1292:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2733              		.loc 1 1292 0
 2734 000a 154B     		ldr	r3, .L152
 2735 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2736 000e 002B     		cmp	r3, #0
 2737 0010 01D1     		bne	.L148
 2738              		.loc 1 1292 0 is_stmt 0 discriminator 1
 2739 0012 FFF7FEFF 		bl	_DoInit
 2740              	.L148:
ARM GAS  /tmp/ccRPMSaP.s 			page 71


1293:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (BufferIndex < (unsigned)_SEGGER_RTT.MaxNumDownBuffers) {
 2741              		.loc 1 1293 0 is_stmt 1
 2742 0016 124B     		ldr	r3, .L152
 2743 0018 5B69     		ldr	r3, [r3, #20]
 2744 001a 1A46     		mov	r2, r3
 2745 001c 7B68     		ldr	r3, [r7, #4]
 2746 001e 9A42     		cmp	r2, r3
 2747 0020 16D9     		bls	.L149
 2748              	.LBB13:
1294:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 2749              		.loc 1 1294 0
 2750              	@ 1294 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2751 0022 EFF31183 		mrs   r3, basepri  
 2752 0026 4FF02001 		mov   r1, #32       
 2753 002a 81F31188 		msr   basepri, r1  
 2754              		
 2755              	@ 0 "" 2
 2756              		.thumb
 2757 002e BB60     		str	r3, [r7, #8]
1295:../../../SystemView/SEGGER/SEGGER_RTT.c ****     _SEGGER_RTT.aDown[BufferIndex].Flags = Flags;
 2758              		.loc 1 1295 0
 2759 0030 0B49     		ldr	r1, .L152
 2760 0032 7A68     		ldr	r2, [r7, #4]
 2761 0034 1346     		mov	r3, r2
 2762 0036 5B00     		lsls	r3, r3, #1
 2763 0038 1344     		add	r3, r3, r2
 2764 003a DB00     		lsls	r3, r3, #3
 2765 003c 0B44     		add	r3, r3, r1
 2766 003e 7033     		adds	r3, r3, #112
 2767 0040 3A68     		ldr	r2, [r7]
 2768 0042 5A60     		str	r2, [r3, #4]
1296:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2769              		.loc 1 1296 0
 2770 0044 BB68     		ldr	r3, [r7, #8]
 2771              	@ 1296 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2772 0046 83F31188 		msr   basepri, r3  
 2773              		
 2774              	@ 0 "" 2
 2775              		.thumb
 2776              	.LBE13:
1297:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r =  0;
 2777              		.loc 1 1297 0
 2778 004a 0023     		movs	r3, #0
 2779 004c FB60     		str	r3, [r7, #12]
 2780 004e 02E0     		b	.L150
 2781              	.L149:
1298:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1299:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2782              		.loc 1 1299 0
 2783 0050 4FF0FF33 		mov	r3, #-1
 2784 0054 FB60     		str	r3, [r7, #12]
 2785              	.L150:
1300:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1301:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2786              		.loc 1 1301 0
 2787 0056 FB68     		ldr	r3, [r7, #12]
1302:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
ARM GAS  /tmp/ccRPMSaP.s 			page 72


 2788              		.loc 1 1302 0
 2789 0058 1846     		mov	r0, r3
 2790 005a 1037     		adds	r7, r7, #16
 2791              	.LCFI120:
 2792              		.cfi_def_cfa_offset 8
 2793 005c BD46     		mov	sp, r7
 2794              	.LCFI121:
 2795              		.cfi_def_cfa_register 13
 2796              		@ sp needed
 2797 005e 80BD     		pop	{r7, pc}
 2798              	.L153:
 2799              		.align	2
 2800              	.L152:
 2801 0060 00000000 		.word	_SEGGER_RTT
 2802              		.cfi_endproc
 2803              	.LFE23:
 2805              		.section	.text.SEGGER_RTT_Init,"ax",%progbits
 2806              		.align	2
 2807              		.global	SEGGER_RTT_Init
 2808              		.thumb
 2809              		.thumb_func
 2811              	SEGGER_RTT_Init:
 2812              	.LFB24:
1303:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1304:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1305:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1306:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_Init
1307:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1308:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1309:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Initializes the RTT Control Block.
1310:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Should be used in RAM targets, at start of the application.
1311:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1312:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1313:../../../SystemView/SEGGER/SEGGER_RTT.c **** void SEGGER_RTT_Init (void) {
 2813              		.loc 1 1313 0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 1, uses_anonymous_args = 0
 2817 0000 80B5     		push	{r7, lr}
 2818              	.LCFI122:
 2819              		.cfi_def_cfa_offset 8
 2820              		.cfi_offset 7, -8
 2821              		.cfi_offset 14, -4
 2822 0002 00AF     		add	r7, sp, #0
 2823              	.LCFI123:
 2824              		.cfi_def_cfa_register 7
1314:../../../SystemView/SEGGER/SEGGER_RTT.c ****   _DoInit();
 2825              		.loc 1 1314 0
 2826 0004 FFF7FEFF 		bl	_DoInit
1315:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2827              		.loc 1 1315 0
 2828 0008 80BD     		pop	{r7, pc}
 2829              		.cfi_endproc
 2830              	.LFE24:
 2832 000a 00BF     		.section	.text.SEGGER_RTT_SetTerminal,"ax",%progbits
 2833              		.align	2
 2834              		.global	SEGGER_RTT_SetTerminal
ARM GAS  /tmp/ccRPMSaP.s 			page 73


 2835              		.thumb
 2836              		.thumb_func
 2838              	SEGGER_RTT_SetTerminal:
 2839              	.LFB25:
1316:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1317:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1318:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1319:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_SetTerminal
1320:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1321:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1322:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Sets the terminal to be used for output on channel 0.
1323:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1324:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1325:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    TerminalId  Index of the terminal.
1326:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1327:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1328:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0  O.K.
1329:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0  Error (e.g. if RTT is configured for non-blocking mode and there was no space in the buf
1330:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1331:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_SetTerminal (char TerminalId) {
 2840              		.loc 1 1331 0
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 32
 2843              		@ frame_needed = 1, uses_anonymous_args = 0
 2844 0000 80B5     		push	{r7, lr}
 2845              	.LCFI124:
 2846              		.cfi_def_cfa_offset 8
 2847              		.cfi_offset 7, -8
 2848              		.cfi_offset 14, -4
 2849 0002 88B0     		sub	sp, sp, #32
 2850              	.LCFI125:
 2851              		.cfi_def_cfa_offset 40
 2852 0004 00AF     		add	r7, sp, #0
 2853              	.LCFI126:
 2854              		.cfi_def_cfa_register 7
 2855 0006 0346     		mov	r3, r0
 2856 0008 FB71     		strb	r3, [r7, #7]
1332:../../../SystemView/SEGGER/SEGGER_RTT.c ****   char                  ac[2];
1333:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1334:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned Avail;
1335:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int r;
1336:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1337:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2857              		.loc 1 1337 0
 2858 000a 264B     		ldr	r3, .L163
 2859 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2860 000e 002B     		cmp	r3, #0
 2861 0010 01D1     		bne	.L156
 2862              		.loc 1 1337 0 is_stmt 0 discriminator 1
 2863 0012 FFF7FEFF 		bl	_DoInit
 2864              	.L156:
1338:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1339:../../../SystemView/SEGGER/SEGGER_RTT.c ****   r = 0;
 2865              		.loc 1 1339 0 is_stmt 1
 2866 0016 0023     		movs	r3, #0
 2867 0018 FB61     		str	r3, [r7, #28]
1340:../../../SystemView/SEGGER/SEGGER_RTT.c ****   ac[0] = 0xFFU;
ARM GAS  /tmp/ccRPMSaP.s 			page 74


 2868              		.loc 1 1340 0
 2869 001a FF23     		movs	r3, #255
 2870 001c 3B73     		strb	r3, [r7, #12]
1341:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if ((unsigned char)TerminalId < (unsigned char)sizeof(_aTerminalId)) { // We only support a certa
 2871              		.loc 1 1341 0
 2872 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2873 0020 0F2B     		cmp	r3, #15
 2874 0022 36D8     		bhi	.L157
1342:../../../SystemView/SEGGER/SEGGER_RTT.c ****     ac[1] = _aTerminalId[(unsigned char)TerminalId];
 2875              		.loc 1 1342 0
 2876 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2877 0026 204A     		ldr	r2, .L163+4
 2878 0028 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2879 002a 7B73     		strb	r3, [r7, #13]
1343:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];    // Buffer 0 is always reserved for terminal I/O, so we can use 
 2880              		.loc 1 1343 0
 2881 002c 1F4B     		ldr	r3, .L163+8
 2882 002e BB61     		str	r3, [r7, #24]
 2883              	.LBB14:
1344:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();    // Lock to make sure that no other task is writing into buffer, while we 
 2884              		.loc 1 1344 0
 2885              	@ 1344 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2886 0030 EFF31183 		mrs   r3, basepri  
 2887 0034 4FF02001 		mov   r1, #32       
 2888 0038 81F31188 		msr   basepri, r1  
 2889              		
 2890              	@ 0 "" 2
 2891              		.thumb
 2892 003c 7B61     		str	r3, [r7, #20]
1345:../../../SystemView/SEGGER/SEGGER_RTT.c ****     if ((pRing->Flags & SEGGER_RTT_MODE_MASK) == SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL) {
 2893              		.loc 1 1345 0
 2894 003e BB69     		ldr	r3, [r7, #24]
 2895 0040 5B69     		ldr	r3, [r3, #20]
 2896 0042 03F00303 		and	r3, r3, #3
 2897 0046 022B     		cmp	r3, #2
 2898 0048 0AD1     		bne	.L158
1346:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _ActiveTerminal = TerminalId;
 2899              		.loc 1 1346 0
 2900 004a 194A     		ldr	r2, .L163+12
 2901 004c FB79     		ldrb	r3, [r7, #7]
 2902 004e 1370     		strb	r3, [r2]
1347:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _WriteBlocking(pRing, ac, 2u);
 2903              		.loc 1 1347 0
 2904 0050 07F10C03 		add	r3, r7, #12
 2905 0054 B869     		ldr	r0, [r7, #24]
 2906 0056 1946     		mov	r1, r3
 2907 0058 0222     		movs	r2, #2
 2908 005a FFF7FEFF 		bl	_WriteBlocking
 2909 005e 14E0     		b	.L159
 2910              	.L158:
1348:../../../SystemView/SEGGER/SEGGER_RTT.c ****     } else {                                                                            // Skipping
1349:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Avail = _GetAvailWriteSpace(pRing);
 2911              		.loc 1 1349 0
 2912 0060 B869     		ldr	r0, [r7, #24]
 2913 0062 FFF7FEFF 		bl	_GetAvailWriteSpace
 2914 0066 3861     		str	r0, [r7, #16]
1350:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Avail >= 2) {
ARM GAS  /tmp/ccRPMSaP.s 			page 75


 2915              		.loc 1 1350 0
 2916 0068 3B69     		ldr	r3, [r7, #16]
 2917 006a 012B     		cmp	r3, #1
 2918 006c 0AD9     		bls	.L160
1351:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _ActiveTerminal = TerminalId;    // Only change active terminal in case of success
 2919              		.loc 1 1351 0
 2920 006e 104A     		ldr	r2, .L163+12
 2921 0070 FB79     		ldrb	r3, [r7, #7]
 2922 0072 1370     		strb	r3, [r2]
1352:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _WriteNoCheck(pRing, ac, 2u);
 2923              		.loc 1 1352 0
 2924 0074 07F10C03 		add	r3, r7, #12
 2925 0078 B869     		ldr	r0, [r7, #24]
 2926 007a 1946     		mov	r1, r3
 2927 007c 0222     		movs	r2, #2
 2928 007e FFF7FEFF 		bl	_WriteNoCheck
 2929 0082 02E0     		b	.L159
 2930              	.L160:
1353:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
1354:../../../SystemView/SEGGER/SEGGER_RTT.c ****         r = -1;
 2931              		.loc 1 1354 0
 2932 0084 4FF0FF33 		mov	r3, #-1
 2933 0088 FB61     		str	r3, [r7, #28]
 2934              	.L159:
1355:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
1356:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1357:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 2935              		.loc 1 1357 0
 2936 008a 7B69     		ldr	r3, [r7, #20]
 2937              	@ 1357 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 2938 008c 83F31188 		msr   basepri, r3  
 2939              		
 2940              	@ 0 "" 2
 2941              		.thumb
 2942              	.LBE14:
 2943 0090 02E0     		b	.L161
 2944              	.L157:
1358:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1359:../../../SystemView/SEGGER/SEGGER_RTT.c ****     r = -1;
 2945              		.loc 1 1359 0
 2946 0092 4FF0FF33 		mov	r3, #-1
 2947 0096 FB61     		str	r3, [r7, #28]
 2948              	.L161:
1360:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1361:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return r;
 2949              		.loc 1 1361 0
 2950 0098 FB69     		ldr	r3, [r7, #28]
1362:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 2951              		.loc 1 1362 0
 2952 009a 1846     		mov	r0, r3
 2953 009c 2037     		adds	r7, r7, #32
 2954              	.LCFI127:
 2955              		.cfi_def_cfa_offset 8
 2956 009e BD46     		mov	sp, r7
 2957              	.LCFI128:
 2958              		.cfi_def_cfa_register 13
 2959              		@ sp needed
ARM GAS  /tmp/ccRPMSaP.s 			page 76


 2960 00a0 80BD     		pop	{r7, pc}
 2961              	.L164:
 2962 00a2 00BF     		.align	2
 2963              	.L163:
 2964 00a4 00000000 		.word	_SEGGER_RTT
 2965 00a8 00000000 		.word	_aTerminalId
 2966 00ac 18000000 		.word	_SEGGER_RTT+24
 2967 00b0 00000000 		.word	_ActiveTerminal
 2968              		.cfi_endproc
 2969              	.LFE25:
 2971              		.section	.text.SEGGER_RTT_TerminalOut,"ax",%progbits
 2972              		.align	2
 2973              		.global	SEGGER_RTT_TerminalOut
 2974              		.thumb
 2975              		.thumb_func
 2977              	SEGGER_RTT_TerminalOut:
 2978              	.LFB26:
1363:../../../SystemView/SEGGER/SEGGER_RTT.c **** 
1364:../../../SystemView/SEGGER/SEGGER_RTT.c **** /*********************************************************************
1365:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1366:../../../SystemView/SEGGER/SEGGER_RTT.c **** *       SEGGER_RTT_TerminalOut
1367:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1368:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Function description
1369:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    Writes a string to the given terminal
1370:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     without changing the terminal for channel 0.
1371:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1372:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Parameters
1373:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    TerminalId   Index of the terminal.
1374:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    s            String to be printed on the terminal.
1375:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1376:../../../SystemView/SEGGER/SEGGER_RTT.c **** *  Return value
1377:../../../SystemView/SEGGER/SEGGER_RTT.c **** *    >= 0 - Number of bytes written.
1378:../../../SystemView/SEGGER/SEGGER_RTT.c **** *     < 0 - Error.
1379:../../../SystemView/SEGGER/SEGGER_RTT.c **** *
1380:../../../SystemView/SEGGER/SEGGER_RTT.c **** */
1381:../../../SystemView/SEGGER/SEGGER_RTT.c **** int SEGGER_RTT_TerminalOut (char TerminalId, const char* s) {
 2979              		.loc 1 1381 0
 2980              		.cfi_startproc
 2981              		@ args = 0, pretend = 0, frame = 32
 2982              		@ frame_needed = 1, uses_anonymous_args = 0
 2983 0000 80B5     		push	{r7, lr}
 2984              	.LCFI129:
 2985              		.cfi_def_cfa_offset 8
 2986              		.cfi_offset 7, -8
 2987              		.cfi_offset 14, -4
 2988 0002 88B0     		sub	sp, sp, #32
 2989              	.LCFI130:
 2990              		.cfi_def_cfa_offset 40
 2991 0004 00AF     		add	r7, sp, #0
 2992              	.LCFI131:
 2993              		.cfi_def_cfa_register 7
 2994 0006 0346     		mov	r3, r0
 2995 0008 3960     		str	r1, [r7]
 2996 000a FB71     		strb	r3, [r7, #7]
1382:../../../SystemView/SEGGER/SEGGER_RTT.c ****   int                   Status;
1383:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              FragLen;
1384:../../../SystemView/SEGGER/SEGGER_RTT.c ****   unsigned              Avail;
ARM GAS  /tmp/ccRPMSaP.s 			page 77


1385:../../../SystemView/SEGGER/SEGGER_RTT.c ****   SEGGER_RTT_BUFFER_UP* pRing;
1386:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1387:../../../SystemView/SEGGER/SEGGER_RTT.c ****   INIT();
 2997              		.loc 1 1387 0
 2998 000c 414B     		ldr	r3, .L180
 2999 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3000 0010 002B     		cmp	r3, #0
 3001 0012 01D1     		bne	.L166
 3002              		.loc 1 1387 0 is_stmt 0 discriminator 1
 3003 0014 FFF7FEFF 		bl	_DoInit
 3004              	.L166:
1388:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1389:../../../SystemView/SEGGER/SEGGER_RTT.c ****   // Validate terminal ID.
1390:../../../SystemView/SEGGER/SEGGER_RTT.c ****   //
1391:../../../SystemView/SEGGER/SEGGER_RTT.c ****   if (TerminalId < (char)sizeof(_aTerminalId)) { // We only support a certain number of channels
 3005              		.loc 1 1391 0 is_stmt 1
 3006 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3007 001a 0F2B     		cmp	r3, #15
 3008 001c 71D8     		bhi	.L167
1392:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1393:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Get "to-host" ring buffer.
1394:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1395:../../../SystemView/SEGGER/SEGGER_RTT.c ****     pRing = &_SEGGER_RTT.aUp[0];
 3009              		.loc 1 1395 0
 3010 001e 3E4B     		ldr	r3, .L180+4
 3011 0020 BB61     		str	r3, [r7, #24]
1396:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1397:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Need to be able to change terminal, write data, change back.
1398:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Compute the fixed and variable sizes.
1399:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1400:../../../SystemView/SEGGER/SEGGER_RTT.c ****     FragLen = strlen(s);
 3012              		.loc 1 1400 0
 3013 0022 3868     		ldr	r0, [r7]
 3014 0024 FFF7FEFF 		bl	strlen
 3015 0028 7861     		str	r0, [r7, #20]
 3016              	.LBB15:
1401:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1402:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // How we output depends upon the mode...
1403:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1404:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_LOCK();
 3017              		.loc 1 1404 0
 3018              	@ 1404 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 3019 002a EFF31183 		mrs   r3, basepri  
 3020 002e 4FF02001 		mov   r1, #32       
 3021 0032 81F31188 		msr   basepri, r1  
 3022              		
 3023              	@ 0 "" 2
 3024              		.thumb
 3025 0036 3B61     		str	r3, [r7, #16]
1405:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Avail = _GetAvailWriteSpace(pRing);
 3026              		.loc 1 1405 0
 3027 0038 B869     		ldr	r0, [r7, #24]
 3028 003a FFF7FEFF 		bl	_GetAvailWriteSpace
 3029 003e F860     		str	r0, [r7, #12]
1406:../../../SystemView/SEGGER/SEGGER_RTT.c ****     switch (pRing->Flags & SEGGER_RTT_MODE_MASK) {
 3030              		.loc 1 1406 0
 3031 0040 BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccRPMSaP.s 			page 78


 3032 0042 5B69     		ldr	r3, [r3, #20]
 3033 0044 03F00303 		and	r3, r3, #3
 3034 0048 012B     		cmp	r3, #1
 3035 004a 1FD0     		beq	.L169
 3036 004c 012B     		cmp	r3, #1
 3037 004e 02D3     		bcc	.L170
 3038 0050 022B     		cmp	r3, #2
 3039 0052 3BD0     		beq	.L171
 3040 0054 4DE0     		b	.L179
 3041              	.L170:
1407:../../../SystemView/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_SKIP:
1408:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1409:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // If we are in skip mode and there is no space for the whole
1410:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // of this output, don't bother switching terminals at all.
1411:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1412:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Avail < (FragLen + 4u)) {
 3042              		.loc 1 1412 0
 3043 0056 7B69     		ldr	r3, [r7, #20]
 3044 0058 1A1D     		adds	r2, r3, #4
 3045 005a FB68     		ldr	r3, [r7, #12]
 3046 005c 9A42     		cmp	r2, r3
 3047 005e 02D9     		bls	.L172
1413:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = 0;
 3048              		.loc 1 1413 0
 3049 0060 0023     		movs	r3, #0
 3050 0062 FB61     		str	r3, [r7, #28]
1414:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
1415:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1416:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
1417:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1418:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
1419:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3051              		.loc 1 1419 0
 3052 0064 49E0     		b	.L174
 3053              	.L172:
1415:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, FragLen);
 3054              		.loc 1 1415 0
 3055 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3056 0068 B869     		ldr	r0, [r7, #24]
 3057 006a 1946     		mov	r1, r3
 3058 006c FFF7FEFF 		bl	_PostTerminalSwitch
1416:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3059              		.loc 1 1416 0
 3060 0070 B869     		ldr	r0, [r7, #24]
 3061 0072 3968     		ldr	r1, [r7]
 3062 0074 7A69     		ldr	r2, [r7, #20]
 3063 0076 FFF7FEFF 		bl	_WriteBlocking
 3064 007a 0346     		mov	r3, r0
 3065 007c FB61     		str	r3, [r7, #28]
1417:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
 3066              		.loc 1 1417 0
 3067 007e 274B     		ldr	r3, .L180+8
 3068 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3069 0082 B869     		ldr	r0, [r7, #24]
 3070 0084 1946     		mov	r1, r3
 3071 0086 FFF7FEFF 		bl	_PostTerminalSwitch
 3072              		.loc 1 1419 0
ARM GAS  /tmp/ccRPMSaP.s 			page 79


 3073 008a 36E0     		b	.L174
 3074              	.L169:
1420:../../../SystemView/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_NO_BLOCK_TRIM:
1421:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1422:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // If we are in trim mode and there is not enough space for everything,
1423:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // trim the output but always include the terminal switch.  If no room
1424:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // for terminal switch, skip that totally.
1425:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1426:../../../SystemView/SEGGER/SEGGER_RTT.c ****       if (Avail < 4u) {
 3075              		.loc 1 1426 0
 3076 008c FB68     		ldr	r3, [r7, #12]
 3077 008e 032B     		cmp	r3, #3
 3078 0090 03D8     		bhi	.L175
1427:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = -1;
 3079              		.loc 1 1427 0
 3080 0092 4FF0FF33 		mov	r3, #-1
 3081 0096 FB61     		str	r3, [r7, #28]
1428:../../../SystemView/SEGGER/SEGGER_RTT.c ****       } else {
1429:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, TerminalId);
1430:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
1431:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
1432:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
1433:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3082              		.loc 1 1433 0
 3083 0098 2FE0     		b	.L174
 3084              	.L175:
1429:../../../SystemView/SEGGER/SEGGER_RTT.c ****         Status = (int)_WriteBlocking(pRing, s, (FragLen < (Avail - 4u)) ? FragLen : (Avail - 4u));
 3085              		.loc 1 1429 0
 3086 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3087 009c B869     		ldr	r0, [r7, #24]
 3088 009e 1946     		mov	r1, r3
 3089 00a0 FFF7FEFF 		bl	_PostTerminalSwitch
1430:../../../SystemView/SEGGER/SEGGER_RTT.c ****         _PostTerminalSwitch(pRing, _ActiveTerminal);
 3090              		.loc 1 1430 0
 3091 00a4 FB68     		ldr	r3, [r7, #12]
 3092 00a6 1A1F     		subs	r2, r3, #4
 3093 00a8 7B69     		ldr	r3, [r7, #20]
 3094 00aa 9342     		cmp	r3, r2
 3095 00ac 28BF     		it	cs
 3096 00ae 1346     		movcs	r3, r2
 3097 00b0 B869     		ldr	r0, [r7, #24]
 3098 00b2 3968     		ldr	r1, [r7]
 3099 00b4 1A46     		mov	r2, r3
 3100 00b6 FFF7FEFF 		bl	_WriteBlocking
 3101 00ba 0346     		mov	r3, r0
 3102 00bc FB61     		str	r3, [r7, #28]
1431:../../../SystemView/SEGGER/SEGGER_RTT.c ****       }
 3103              		.loc 1 1431 0
 3104 00be 174B     		ldr	r3, .L180+8
 3105 00c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3106 00c2 B869     		ldr	r0, [r7, #24]
 3107 00c4 1946     		mov	r1, r3
 3108 00c6 FFF7FEFF 		bl	_PostTerminalSwitch
 3109              		.loc 1 1433 0
 3110 00ca 16E0     		b	.L174
 3111              	.L171:
1434:../../../SystemView/SEGGER/SEGGER_RTT.c ****     case SEGGER_RTT_MODE_BLOCK_IF_FIFO_FULL:
ARM GAS  /tmp/ccRPMSaP.s 			page 80


1435:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1436:../../../SystemView/SEGGER/SEGGER_RTT.c ****       // If we are in blocking mode, output everything.
1437:../../../SystemView/SEGGER/SEGGER_RTT.c ****       //
1438:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, TerminalId);
 3112              		.loc 1 1438 0
 3113 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3114 00ce B869     		ldr	r0, [r7, #24]
 3115 00d0 1946     		mov	r1, r3
 3116 00d2 FFF7FEFF 		bl	_PostTerminalSwitch
1439:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = (int)_WriteBlocking(pRing, s, FragLen);
 3117              		.loc 1 1439 0
 3118 00d6 B869     		ldr	r0, [r7, #24]
 3119 00d8 3968     		ldr	r1, [r7]
 3120 00da 7A69     		ldr	r2, [r7, #20]
 3121 00dc FFF7FEFF 		bl	_WriteBlocking
 3122 00e0 0346     		mov	r3, r0
 3123 00e2 FB61     		str	r3, [r7, #28]
1440:../../../SystemView/SEGGER/SEGGER_RTT.c ****       _PostTerminalSwitch(pRing, _ActiveTerminal);
 3124              		.loc 1 1440 0
 3125 00e4 0D4B     		ldr	r3, .L180+8
 3126 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3127 00e8 B869     		ldr	r0, [r7, #24]
 3128 00ea 1946     		mov	r1, r3
 3129 00ec FFF7FEFF 		bl	_PostTerminalSwitch
1441:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3130              		.loc 1 1441 0
 3131 00f0 03E0     		b	.L174
 3132              	.L179:
1442:../../../SystemView/SEGGER/SEGGER_RTT.c ****     default:
1443:../../../SystemView/SEGGER/SEGGER_RTT.c ****       Status = -1;
 3133              		.loc 1 1443 0
 3134 00f2 4FF0FF33 		mov	r3, #-1
 3135 00f6 FB61     		str	r3, [r7, #28]
1444:../../../SystemView/SEGGER/SEGGER_RTT.c ****       break;
 3136              		.loc 1 1444 0
 3137 00f8 00BF     		nop
 3138              	.L174:
1445:../../../SystemView/SEGGER/SEGGER_RTT.c ****     }
1446:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1447:../../../SystemView/SEGGER/SEGGER_RTT.c ****     // Finish up.
1448:../../../SystemView/SEGGER/SEGGER_RTT.c ****     //
1449:../../../SystemView/SEGGER/SEGGER_RTT.c ****     SEGGER_RTT_UNLOCK();
 3139              		.loc 1 1449 0
 3140 00fa 3B69     		ldr	r3, [r7, #16]
 3141              	@ 1449 "../../../SystemView/SEGGER/SEGGER_RTT.c" 1
 3142 00fc 83F31188 		msr   basepri, r3  
 3143              		
 3144              	@ 0 "" 2
 3145              		.thumb
 3146              	.LBE15:
 3147 0100 02E0     		b	.L177
 3148              	.L167:
1450:../../../SystemView/SEGGER/SEGGER_RTT.c ****   } else {
1451:../../../SystemView/SEGGER/SEGGER_RTT.c ****     Status = -1;
 3149              		.loc 1 1451 0
 3150 0102 4FF0FF33 		mov	r3, #-1
 3151 0106 FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccRPMSaP.s 			page 81


 3152              	.L177:
1452:../../../SystemView/SEGGER/SEGGER_RTT.c ****   }
1453:../../../SystemView/SEGGER/SEGGER_RTT.c ****   return Status;
 3153              		.loc 1 1453 0
 3154 0108 FB69     		ldr	r3, [r7, #28]
1454:../../../SystemView/SEGGER/SEGGER_RTT.c **** }
 3155              		.loc 1 1454 0
 3156 010a 1846     		mov	r0, r3
 3157 010c 2037     		adds	r7, r7, #32
 3158              	.LCFI132:
 3159              		.cfi_def_cfa_offset 8
 3160 010e BD46     		mov	sp, r7
 3161              	.LCFI133:
 3162              		.cfi_def_cfa_register 13
 3163              		@ sp needed
 3164 0110 80BD     		pop	{r7, pc}
 3165              	.L181:
 3166 0112 00BF     		.align	2
 3167              	.L180:
 3168 0114 00000000 		.word	_SEGGER_RTT
 3169 0118 18000000 		.word	_SEGGER_RTT+24
 3170 011c 00000000 		.word	_ActiveTerminal
 3171              		.cfi_endproc
 3172              	.LFE26:
 3174              		.text
 3175              	.Letext0:
 3176              		.file 2 "../../../SystemView/SEGGER/SEGGER_RTT.h"
ARM GAS  /tmp/ccRPMSaP.s 			page 82


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SEGGER_RTT.c
     /tmp/ccRPMSaP.s:21     .data._aTerminalId:0000000000000000 $d
     /tmp/ccRPMSaP.s:24     .data._aTerminalId:0000000000000000 _aTerminalId
                            *COM*:00000000000000a8 _SEGGER_RTT
     /tmp/ccRPMSaP.s:43     .bss._acUpBuffer:0000000000000000 $d
     /tmp/ccRPMSaP.s:46     .bss._acUpBuffer:0000000000000000 _acUpBuffer
     /tmp/ccRPMSaP.s:49     .bss._acDownBuffer:0000000000000000 $d
     /tmp/ccRPMSaP.s:52     .bss._acDownBuffer:0000000000000000 _acDownBuffer
     /tmp/ccRPMSaP.s:57     .bss._ActiveTerminal:0000000000000000 _ActiveTerminal
     /tmp/ccRPMSaP.s:58     .bss._ActiveTerminal:0000000000000000 $d
     /tmp/ccRPMSaP.s:60     .rodata:0000000000000000 $d
     /tmp/ccRPMSaP.s:70     .text._DoInit:0000000000000000 $t
     /tmp/ccRPMSaP.s:74     .text._DoInit:0000000000000000 _DoInit
     /tmp/ccRPMSaP.s:178    .text._DoInit:0000000000000084 $d
     /tmp/ccRPMSaP.s:188    .text._WriteBlocking:0000000000000000 $t
     /tmp/ccRPMSaP.s:192    .text._WriteBlocking:0000000000000000 _WriteBlocking
     /tmp/ccRPMSaP.s:327    .text._WriteNoCheck:0000000000000000 $t
     /tmp/ccRPMSaP.s:331    .text._WriteNoCheck:0000000000000000 _WriteNoCheck
     /tmp/ccRPMSaP.s:428    .text._PostTerminalSwitch:0000000000000000 $t
     /tmp/ccRPMSaP.s:432    .text._PostTerminalSwitch:0000000000000000 _PostTerminalSwitch
     /tmp/ccRPMSaP.s:478    .text._PostTerminalSwitch:000000000000002c $d
     /tmp/ccRPMSaP.s:483    .text._GetAvailWriteSpace:0000000000000000 $t
     /tmp/ccRPMSaP.s:487    .text._GetAvailWriteSpace:0000000000000000 _GetAvailWriteSpace
     /tmp/ccRPMSaP.s:556    .text.SEGGER_RTT_ReadNoLock:0000000000000000 $t
     /tmp/ccRPMSaP.s:561    .text.SEGGER_RTT_ReadNoLock:0000000000000000 SEGGER_RTT_ReadNoLock
     /tmp/ccRPMSaP.s:740    .text.SEGGER_RTT_ReadNoLock:0000000000000100 $d
     /tmp/ccRPMSaP.s:745    .text.SEGGER_RTT_Read:0000000000000000 $t
     /tmp/ccRPMSaP.s:750    .text.SEGGER_RTT_Read:0000000000000000 SEGGER_RTT_Read
     /tmp/ccRPMSaP.s:810    .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 $t
     /tmp/ccRPMSaP.s:815    .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000000 SEGGER_RTT_WriteWithOverwriteNoLock
     /tmp/ccRPMSaP.s:1020   .text.SEGGER_RTT_WriteWithOverwriteNoLock:0000000000000124 $d
     /tmp/ccRPMSaP.s:1025   .text.SEGGER_RTT_WriteSkipNoLock:0000000000000000 $t
     /tmp/ccRPMSaP.s:1030   .text.SEGGER_RTT_WriteSkipNoLock:0000000000000000 SEGGER_RTT_WriteSkipNoLock
     /tmp/ccRPMSaP.s:1243   .text.SEGGER_RTT_WriteSkipNoLock:0000000000000138 $d
     /tmp/ccRPMSaP.s:1248   .text.SEGGER_RTT_WriteNoLock:0000000000000000 $t
     /tmp/ccRPMSaP.s:1253   .text.SEGGER_RTT_WriteNoLock:0000000000000000 SEGGER_RTT_WriteNoLock
     /tmp/ccRPMSaP.s:1372   .text.SEGGER_RTT_WriteNoLock:0000000000000098 $d
     /tmp/ccRPMSaP.s:1377   .text.SEGGER_RTT_Write:0000000000000000 $t
     /tmp/ccRPMSaP.s:1382   .text.SEGGER_RTT_Write:0000000000000000 SEGGER_RTT_Write
     /tmp/ccRPMSaP.s:1449   .text.SEGGER_RTT_Write:0000000000000044 $d
     /tmp/ccRPMSaP.s:1454   .text.SEGGER_RTT_WriteString:0000000000000000 $t
     /tmp/ccRPMSaP.s:1459   .text.SEGGER_RTT_WriteString:0000000000000000 SEGGER_RTT_WriteString
     /tmp/ccRPMSaP.s:1502   .text.SEGGER_RTT_GetKey:0000000000000000 $t
     /tmp/ccRPMSaP.s:1507   .text.SEGGER_RTT_GetKey:0000000000000000 SEGGER_RTT_GetKey
     /tmp/ccRPMSaP.s:1561   .text.SEGGER_RTT_WaitKey:0000000000000000 $t
     /tmp/ccRPMSaP.s:1566   .text.SEGGER_RTT_WaitKey:0000000000000000 SEGGER_RTT_WaitKey
     /tmp/ccRPMSaP.s:1607   .text.SEGGER_RTT_HasKey:0000000000000000 $t
     /tmp/ccRPMSaP.s:1612   .text.SEGGER_RTT_HasKey:0000000000000000 SEGGER_RTT_HasKey
     /tmp/ccRPMSaP.s:1671   .text.SEGGER_RTT_HasKey:0000000000000038 $d
     /tmp/ccRPMSaP.s:1676   .text.SEGGER_RTT_HasData:0000000000000000 $t
     /tmp/ccRPMSaP.s:1681   .text.SEGGER_RTT_HasData:0000000000000000 SEGGER_RTT_HasData
     /tmp/ccRPMSaP.s:1735   .text.SEGGER_RTT_HasData:0000000000000034 $d
     /tmp/ccRPMSaP.s:1740   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:1745   .text.SEGGER_RTT_AllocDownBuffer:0000000000000000 SEGGER_RTT_AllocDownBuffer
     /tmp/ccRPMSaP.s:1915   .text.SEGGER_RTT_AllocDownBuffer:00000000000000f0 $d
     /tmp/ccRPMSaP.s:1920   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 $t
ARM GAS  /tmp/ccRPMSaP.s 			page 83


     /tmp/ccRPMSaP.s:1925   .text.SEGGER_RTT_AllocUpBuffer:0000000000000000 SEGGER_RTT_AllocUpBuffer
     /tmp/ccRPMSaP.s:2095   .text.SEGGER_RTT_AllocUpBuffer:00000000000000f0 $d
     /tmp/ccRPMSaP.s:2100   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:2105   .text.SEGGER_RTT_ConfigUpBuffer:0000000000000000 SEGGER_RTT_ConfigUpBuffer
     /tmp/ccRPMSaP.s:2254   .text.SEGGER_RTT_ConfigUpBuffer:00000000000000d0 $d
     /tmp/ccRPMSaP.s:2259   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:2264   .text.SEGGER_RTT_ConfigDownBuffer:0000000000000000 SEGGER_RTT_ConfigDownBuffer
     /tmp/ccRPMSaP.s:2413   .text.SEGGER_RTT_ConfigDownBuffer:00000000000000d0 $d
     /tmp/ccRPMSaP.s:2418   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:2423   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000000 SEGGER_RTT_SetNameUpBuffer
     /tmp/ccRPMSaP.s:2510   .text.SEGGER_RTT_SetNameUpBuffer:0000000000000060 $d
     /tmp/ccRPMSaP.s:2515   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:2520   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000000 SEGGER_RTT_SetNameDownBuffer
     /tmp/ccRPMSaP.s:2607   .text.SEGGER_RTT_SetNameDownBuffer:0000000000000060 $d
     /tmp/ccRPMSaP.s:2612   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:2617   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000000 SEGGER_RTT_SetFlagsUpBuffer
     /tmp/ccRPMSaP.s:2704   .text.SEGGER_RTT_SetFlagsUpBuffer:0000000000000060 $d
     /tmp/ccRPMSaP.s:2709   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 $t
     /tmp/ccRPMSaP.s:2714   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000000 SEGGER_RTT_SetFlagsDownBuffer
     /tmp/ccRPMSaP.s:2801   .text.SEGGER_RTT_SetFlagsDownBuffer:0000000000000060 $d
     /tmp/ccRPMSaP.s:2806   .text.SEGGER_RTT_Init:0000000000000000 $t
     /tmp/ccRPMSaP.s:2811   .text.SEGGER_RTT_Init:0000000000000000 SEGGER_RTT_Init
     /tmp/ccRPMSaP.s:2833   .text.SEGGER_RTT_SetTerminal:0000000000000000 $t
     /tmp/ccRPMSaP.s:2838   .text.SEGGER_RTT_SetTerminal:0000000000000000 SEGGER_RTT_SetTerminal
     /tmp/ccRPMSaP.s:2964   .text.SEGGER_RTT_SetTerminal:00000000000000a4 $d
     /tmp/ccRPMSaP.s:2972   .text.SEGGER_RTT_TerminalOut:0000000000000000 $t
     /tmp/ccRPMSaP.s:2977   .text.SEGGER_RTT_TerminalOut:0000000000000000 SEGGER_RTT_TerminalOut
     /tmp/ccRPMSaP.s:3168   .text.SEGGER_RTT_TerminalOut:0000000000000114 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
strcpy
memcpy
strlen
