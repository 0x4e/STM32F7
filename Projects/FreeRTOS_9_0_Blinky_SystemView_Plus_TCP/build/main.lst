ARM GAS  /tmp/ccymeQqc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.SCB_EnableICache,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	SCB_EnableICache:
  26              	.LFB135:
  27              		.file 1 "../../Drivers/CMSIS/Include/core_cm7.h"
   1:../../Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:../../Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:../../Drivers/CMSIS/Include/core_cm7.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/core_cm7.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/core_cm7.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/core_cm7.h **** 
   9:../../Drivers/CMSIS/Include/core_cm7.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/core_cm7.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/core_cm7.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/core_cm7.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/core_cm7.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/core_cm7.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/core_cm7.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/core_cm7.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/core_cm7.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/core_cm7.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/core_cm7.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/core_cm7.h ****    *
  21:../../Drivers/CMSIS/Include/core_cm7.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/core_cm7.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/core_cm7.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/core_cm7.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/core_cm7.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/core_cm7.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/core_cm7.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/core_cm7.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/core_cm7.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/core_cm7.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/core_cm7.h ****    POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/ccymeQqc.s 			page 2


  32:../../Drivers/CMSIS/Include/core_cm7.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/core_cm7.h **** 
  34:../../Drivers/CMSIS/Include/core_cm7.h **** 
  35:../../Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  36:../../Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../../Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
  40:../../Drivers/CMSIS/Include/core_cm7.h **** 
  41:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  42:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  43:../../Drivers/CMSIS/Include/core_cm7.h **** 
  44:../../Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  45:../../Drivers/CMSIS/Include/core_cm7.h **** 
  46:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  47:../../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  48:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
  49:../../Drivers/CMSIS/Include/core_cm7.h **** 
  50:../../Drivers/CMSIS/Include/core_cm7.h **** /**
  51:../../Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:../../Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:../../Drivers/CMSIS/Include/core_cm7.h **** 
  54:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:../../Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  56:../../Drivers/CMSIS/Include/core_cm7.h **** 
  57:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:../../Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  59:../../Drivers/CMSIS/Include/core_cm7.h **** 
  60:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:../../Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  62:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  63:../../Drivers/CMSIS/Include/core_cm7.h **** 
  64:../../Drivers/CMSIS/Include/core_cm7.h **** 
  65:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  66:../../Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  67:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  68:../../Drivers/CMSIS/Include/core_cm7.h **** /**
  69:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  70:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
  71:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  72:../../Drivers/CMSIS/Include/core_cm7.h **** 
  73:../../Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  74:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  77:../../Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:../../Drivers/CMSIS/Include/core_cm7.h **** 
  79:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (0x07U)                                      /*!< Cortex-M Core *
  80:../../Drivers/CMSIS/Include/core_cm7.h **** 
  81:../../Drivers/CMSIS/Include/core_cm7.h **** 
  82:../../Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __CC_ARM )
  83:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static __inline
  86:../../Drivers/CMSIS/Include/core_cm7.h **** 
  87:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
ARM GAS  /tmp/ccymeQqc.s 			page 3


  89:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static __inline
  91:../../Drivers/CMSIS/Include/core_cm7.h **** 
  92:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  93:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
  96:../../Drivers/CMSIS/Include/core_cm7.h **** 
  97:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
  98:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 101:../../Drivers/CMSIS/Include/core_cm7.h **** 
 102:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TMS470__ )
 103:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 105:../../Drivers/CMSIS/Include/core_cm7.h **** 
 106:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 107:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 110:../../Drivers/CMSIS/Include/core_cm7.h **** 
 111:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 112:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __packed
 113:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 116:../../Drivers/CMSIS/Include/core_cm7.h **** 
 117:../../Drivers/CMSIS/Include/core_cm7.h **** #else
 118:../../Drivers/CMSIS/Include/core_cm7.h ****   #error Unknown compiler
 119:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 120:../../Drivers/CMSIS/Include/core_cm7.h **** 
 121:../../Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:../../Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:../../Drivers/CMSIS/Include/core_cm7.h **** */
 124:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
 125:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
 126:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 127:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:../../Drivers/CMSIS/Include/core_cm7.h **** 
 136:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
 138:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1)
 139:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:../../Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/ccymeQqc.s 			page 4


 146:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:../../Drivers/CMSIS/Include/core_cm7.h **** 
 148:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 149:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 151:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:../../Drivers/CMSIS/Include/core_cm7.h **** 
 160:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 161:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 162:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 163:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 164:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 165:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 167:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 168:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 169:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 170:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 171:../../Drivers/CMSIS/Include/core_cm7.h **** 
 172:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TMS470__ )
 173:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 174:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 175:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 176:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 177:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 179:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 180:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 181:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 182:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 183:../../Drivers/CMSIS/Include/core_cm7.h **** 
 184:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 185:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 186:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 187:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 188:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 189:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 191:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 192:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 193:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 194:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 195:../../Drivers/CMSIS/Include/core_cm7.h **** 
 196:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 197:../../Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 198:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 199:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 200:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 201:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
ARM GAS  /tmp/ccymeQqc.s 			page 5


 203:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 204:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 205:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 206:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 207:../../Drivers/CMSIS/Include/core_cm7.h **** 
 208:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 209:../../Drivers/CMSIS/Include/core_cm7.h **** 
 210:../../Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:../../Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:../../Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:../../Drivers/CMSIS/Include/core_cm7.h **** 
 214:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 215:../../Drivers/CMSIS/Include/core_cm7.h **** }
 216:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 217:../../Drivers/CMSIS/Include/core_cm7.h **** 
 218:../../Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 219:../../Drivers/CMSIS/Include/core_cm7.h **** 
 220:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 221:../../Drivers/CMSIS/Include/core_cm7.h **** 
 222:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 223:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 224:../../Drivers/CMSIS/Include/core_cm7.h **** 
 225:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 226:../../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 227:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 228:../../Drivers/CMSIS/Include/core_cm7.h **** 
 229:../../Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 230:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 231:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 232:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 233:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 234:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 235:../../Drivers/CMSIS/Include/core_cm7.h **** 
 236:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 237:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 238:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 240:../../Drivers/CMSIS/Include/core_cm7.h **** 
 241:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 242:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 243:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 245:../../Drivers/CMSIS/Include/core_cm7.h **** 
 246:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 247:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 248:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 249:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 250:../../Drivers/CMSIS/Include/core_cm7.h **** 
 251:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 252:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 253:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 254:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 255:../../Drivers/CMSIS/Include/core_cm7.h **** 
 256:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 257:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 258:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 259:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/ccymeQqc.s 			page 6


 260:../../Drivers/CMSIS/Include/core_cm7.h **** 
 261:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 262:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 263:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 264:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 265:../../Drivers/CMSIS/Include/core_cm7.h **** 
 266:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 267:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 268:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 269:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 270:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 271:../../Drivers/CMSIS/Include/core_cm7.h **** 
 272:../../Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 273:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 274:../../Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 275:../../Drivers/CMSIS/Include/core_cm7.h **** 
 276:../../Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 277:../../Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 278:../../Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 279:../../Drivers/CMSIS/Include/core_cm7.h **** */
 280:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 281:../../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 282:../../Drivers/CMSIS/Include/core_cm7.h **** #else
 283:../../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 284:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 285:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 286:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 287:../../Drivers/CMSIS/Include/core_cm7.h **** 
 288:../../Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 289:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 290:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 291:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 292:../../Drivers/CMSIS/Include/core_cm7.h **** 
 293:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 294:../../Drivers/CMSIS/Include/core_cm7.h **** 
 295:../../Drivers/CMSIS/Include/core_cm7.h **** 
 296:../../Drivers/CMSIS/Include/core_cm7.h **** 
 297:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 298:../../Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 299:../../Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 300:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 301:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 302:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 303:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 304:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 305:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 306:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 307:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 308:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 309:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 310:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 311:../../Drivers/CMSIS/Include/core_cm7.h **** */
 312:../../Drivers/CMSIS/Include/core_cm7.h **** 
 313:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 314:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 315:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 316:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
ARM GAS  /tmp/ccymeQqc.s 			page 7


 317:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 318:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 319:../../Drivers/CMSIS/Include/core_cm7.h **** 
 320:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 321:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 322:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 323:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 324:../../Drivers/CMSIS/Include/core_cm7.h **** {
 325:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 326:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 327:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 328:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 330:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 331:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 332:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 333:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 334:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 335:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 336:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 337:../../Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 338:../../Drivers/CMSIS/Include/core_cm7.h **** 
 339:../../Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 340:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 341:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 342:../../Drivers/CMSIS/Include/core_cm7.h **** 
 343:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 344:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 345:../../Drivers/CMSIS/Include/core_cm7.h **** 
 346:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 347:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 348:../../Drivers/CMSIS/Include/core_cm7.h **** 
 349:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 350:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 351:../../Drivers/CMSIS/Include/core_cm7.h **** 
 352:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 353:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 354:../../Drivers/CMSIS/Include/core_cm7.h **** 
 355:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 356:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 357:../../Drivers/CMSIS/Include/core_cm7.h **** 
 358:../../Drivers/CMSIS/Include/core_cm7.h **** 
 359:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 360:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 361:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 362:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 363:../../Drivers/CMSIS/Include/core_cm7.h **** {
 364:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 365:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 366:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 367:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 368:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 369:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 370:../../Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 371:../../Drivers/CMSIS/Include/core_cm7.h **** 
 372:../../Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 373:../../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
ARM GAS  /tmp/ccymeQqc.s 			page 8


 374:../../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 375:../../Drivers/CMSIS/Include/core_cm7.h **** 
 376:../../Drivers/CMSIS/Include/core_cm7.h **** 
 377:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 378:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 379:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 380:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 381:../../Drivers/CMSIS/Include/core_cm7.h **** {
 382:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 383:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 384:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 385:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 386:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 387:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 388:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 389:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 390:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 391:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 392:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 393:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 394:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 395:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 396:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 397:../../Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 398:../../Drivers/CMSIS/Include/core_cm7.h **** 
 399:../../Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 400:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 401:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 402:../../Drivers/CMSIS/Include/core_cm7.h **** 
 403:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 404:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 405:../../Drivers/CMSIS/Include/core_cm7.h **** 
 406:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 407:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 408:../../Drivers/CMSIS/Include/core_cm7.h **** 
 409:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 410:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 411:../../Drivers/CMSIS/Include/core_cm7.h **** 
 412:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 413:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 414:../../Drivers/CMSIS/Include/core_cm7.h **** 
 415:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 416:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 417:../../Drivers/CMSIS/Include/core_cm7.h **** 
 418:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 419:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 420:../../Drivers/CMSIS/Include/core_cm7.h **** 
 421:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 422:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 423:../../Drivers/CMSIS/Include/core_cm7.h **** 
 424:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 425:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 426:../../Drivers/CMSIS/Include/core_cm7.h **** 
 427:../../Drivers/CMSIS/Include/core_cm7.h **** 
 428:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 429:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 430:../../Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccymeQqc.s 			page 9


 431:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 432:../../Drivers/CMSIS/Include/core_cm7.h **** {
 433:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 434:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 435:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 436:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 437:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 438:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 439:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 440:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 441:../../Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 442:../../Drivers/CMSIS/Include/core_cm7.h **** 
 443:../../Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 444:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 445:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 446:../../Drivers/CMSIS/Include/core_cm7.h **** 
 447:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 448:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 449:../../Drivers/CMSIS/Include/core_cm7.h **** 
 450:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 451:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 452:../../Drivers/CMSIS/Include/core_cm7.h **** 
 453:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 454:../../Drivers/CMSIS/Include/core_cm7.h **** 
 455:../../Drivers/CMSIS/Include/core_cm7.h **** 
 456:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 457:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 458:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 459:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 460:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 461:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 462:../../Drivers/CMSIS/Include/core_cm7.h **** 
 463:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 464:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 465:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 466:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 467:../../Drivers/CMSIS/Include/core_cm7.h **** {
 468:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 469:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 470:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 471:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 472:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 473:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 474:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 475:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 476:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 477:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 478:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 479:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 480:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 481:../../Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 482:../../Drivers/CMSIS/Include/core_cm7.h **** 
 483:../../Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 484:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 485:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 486:../../Drivers/CMSIS/Include/core_cm7.h **** 
 487:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
ARM GAS  /tmp/ccymeQqc.s 			page 10


 488:../../Drivers/CMSIS/Include/core_cm7.h **** 
 489:../../Drivers/CMSIS/Include/core_cm7.h **** 
 490:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 491:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 492:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 493:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 494:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 495:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 496:../../Drivers/CMSIS/Include/core_cm7.h **** 
 497:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 498:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 499:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 500:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 501:../../Drivers/CMSIS/Include/core_cm7.h **** {
 502:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 503:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 504:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 505:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 506:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 507:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 508:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 509:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 510:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 511:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 512:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 513:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 514:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 515:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 516:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 517:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 518:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 519:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 520:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 521:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 522:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 523:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 524:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 525:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 526:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 527:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 528:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 529:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 530:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 531:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 532:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 533:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 534:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 535:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 536:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 537:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 538:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 539:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 540:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 541:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 542:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 543:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 544:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
ARM GAS  /tmp/ccymeQqc.s 			page 11


 545:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 546:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 547:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 548:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 549:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 550:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 551:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 552:../../Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 553:../../Drivers/CMSIS/Include/core_cm7.h **** 
 554:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 555:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 556:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 557:../../Drivers/CMSIS/Include/core_cm7.h **** 
 558:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 559:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 560:../../Drivers/CMSIS/Include/core_cm7.h **** 
 561:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 562:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 563:../../Drivers/CMSIS/Include/core_cm7.h **** 
 564:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 565:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 566:../../Drivers/CMSIS/Include/core_cm7.h **** 
 567:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 568:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 569:../../Drivers/CMSIS/Include/core_cm7.h **** 
 570:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 571:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 572:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 573:../../Drivers/CMSIS/Include/core_cm7.h **** 
 574:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 575:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 576:../../Drivers/CMSIS/Include/core_cm7.h **** 
 577:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 578:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 579:../../Drivers/CMSIS/Include/core_cm7.h **** 
 580:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 581:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 582:../../Drivers/CMSIS/Include/core_cm7.h **** 
 583:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 584:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 585:../../Drivers/CMSIS/Include/core_cm7.h **** 
 586:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 587:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 588:../../Drivers/CMSIS/Include/core_cm7.h **** 
 589:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 590:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 591:../../Drivers/CMSIS/Include/core_cm7.h **** 
 592:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 593:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 594:../../Drivers/CMSIS/Include/core_cm7.h **** 
 595:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 596:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 597:../../Drivers/CMSIS/Include/core_cm7.h **** 
 598:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 599:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 600:../../Drivers/CMSIS/Include/core_cm7.h **** 
 601:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
ARM GAS  /tmp/ccymeQqc.s 			page 12


 602:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 603:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 604:../../Drivers/CMSIS/Include/core_cm7.h **** 
 605:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 606:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 607:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 608:../../Drivers/CMSIS/Include/core_cm7.h **** 
 609:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 610:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 611:../../Drivers/CMSIS/Include/core_cm7.h **** 
 612:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 613:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 614:../../Drivers/CMSIS/Include/core_cm7.h **** 
 615:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 616:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 617:../../Drivers/CMSIS/Include/core_cm7.h **** 
 618:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 619:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 620:../../Drivers/CMSIS/Include/core_cm7.h **** 
 621:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 622:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 623:../../Drivers/CMSIS/Include/core_cm7.h **** 
 624:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 625:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 626:../../Drivers/CMSIS/Include/core_cm7.h **** 
 627:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 628:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 629:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 630:../../Drivers/CMSIS/Include/core_cm7.h **** 
 631:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 632:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 633:../../Drivers/CMSIS/Include/core_cm7.h **** 
 634:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 635:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 636:../../Drivers/CMSIS/Include/core_cm7.h **** 
 637:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 638:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 639:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 640:../../Drivers/CMSIS/Include/core_cm7.h **** 
 641:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 642:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 643:../../Drivers/CMSIS/Include/core_cm7.h **** 
 644:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 645:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 646:../../Drivers/CMSIS/Include/core_cm7.h **** 
 647:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 648:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 649:../../Drivers/CMSIS/Include/core_cm7.h **** 
 650:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 651:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 652:../../Drivers/CMSIS/Include/core_cm7.h **** 
 653:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 654:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 655:../../Drivers/CMSIS/Include/core_cm7.h **** 
 656:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 657:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 658:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 13


 659:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 660:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 661:../../Drivers/CMSIS/Include/core_cm7.h **** 
 662:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 663:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 664:../../Drivers/CMSIS/Include/core_cm7.h **** 
 665:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 666:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 667:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 668:../../Drivers/CMSIS/Include/core_cm7.h **** 
 669:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 670:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 671:../../Drivers/CMSIS/Include/core_cm7.h **** 
 672:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 673:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 674:../../Drivers/CMSIS/Include/core_cm7.h **** 
 675:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 676:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 677:../../Drivers/CMSIS/Include/core_cm7.h **** 
 678:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 679:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 680:../../Drivers/CMSIS/Include/core_cm7.h **** 
 681:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 682:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 683:../../Drivers/CMSIS/Include/core_cm7.h **** 
 684:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 685:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 686:../../Drivers/CMSIS/Include/core_cm7.h **** 
 687:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 688:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 689:../../Drivers/CMSIS/Include/core_cm7.h **** 
 690:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 691:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 692:../../Drivers/CMSIS/Include/core_cm7.h **** 
 693:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 694:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 695:../../Drivers/CMSIS/Include/core_cm7.h **** 
 696:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 697:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 698:../../Drivers/CMSIS/Include/core_cm7.h **** 
 699:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 700:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 701:../../Drivers/CMSIS/Include/core_cm7.h **** 
 702:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 703:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 704:../../Drivers/CMSIS/Include/core_cm7.h **** 
 705:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 706:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 707:../../Drivers/CMSIS/Include/core_cm7.h **** 
 708:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 709:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 710:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 711:../../Drivers/CMSIS/Include/core_cm7.h **** 
 712:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 713:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 714:../../Drivers/CMSIS/Include/core_cm7.h **** 
 715:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
ARM GAS  /tmp/ccymeQqc.s 			page 14


 716:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 717:../../Drivers/CMSIS/Include/core_cm7.h **** 
 718:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 719:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 720:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 721:../../Drivers/CMSIS/Include/core_cm7.h **** 
 722:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 723:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 724:../../Drivers/CMSIS/Include/core_cm7.h **** 
 725:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 726:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 727:../../Drivers/CMSIS/Include/core_cm7.h **** 
 728:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 729:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 730:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 731:../../Drivers/CMSIS/Include/core_cm7.h **** 
 732:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 733:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 734:../../Drivers/CMSIS/Include/core_cm7.h **** 
 735:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 736:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 737:../../Drivers/CMSIS/Include/core_cm7.h **** 
 738:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 739:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 740:../../Drivers/CMSIS/Include/core_cm7.h **** 
 741:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 742:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 743:../../Drivers/CMSIS/Include/core_cm7.h **** 
 744:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 745:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 746:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 747:../../Drivers/CMSIS/Include/core_cm7.h **** 
 748:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 749:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 750:../../Drivers/CMSIS/Include/core_cm7.h **** 
 751:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 752:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 753:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 754:../../Drivers/CMSIS/Include/core_cm7.h **** 
 755:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 756:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 757:../../Drivers/CMSIS/Include/core_cm7.h **** 
 758:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 759:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 760:../../Drivers/CMSIS/Include/core_cm7.h **** 
 761:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 762:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 763:../../Drivers/CMSIS/Include/core_cm7.h **** 
 764:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 765:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 766:../../Drivers/CMSIS/Include/core_cm7.h **** 
 767:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 768:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 769:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 770:../../Drivers/CMSIS/Include/core_cm7.h **** 
 771:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 772:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
ARM GAS  /tmp/ccymeQqc.s 			page 15


 773:../../Drivers/CMSIS/Include/core_cm7.h **** 
 774:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 775:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 776:../../Drivers/CMSIS/Include/core_cm7.h **** 
 777:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 778:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 779:../../Drivers/CMSIS/Include/core_cm7.h **** 
 780:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 781:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 782:../../Drivers/CMSIS/Include/core_cm7.h **** 
 783:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 784:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 785:../../Drivers/CMSIS/Include/core_cm7.h **** 
 786:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 787:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 788:../../Drivers/CMSIS/Include/core_cm7.h **** 
 789:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 790:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 791:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 792:../../Drivers/CMSIS/Include/core_cm7.h **** 
 793:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 794:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 795:../../Drivers/CMSIS/Include/core_cm7.h **** 
 796:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 797:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 798:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 799:../../Drivers/CMSIS/Include/core_cm7.h **** 
 800:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 801:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 802:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 803:../../Drivers/CMSIS/Include/core_cm7.h **** 
 804:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 805:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 806:../../Drivers/CMSIS/Include/core_cm7.h **** 
 807:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 808:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 809:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 810:../../Drivers/CMSIS/Include/core_cm7.h **** 
 811:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 812:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 813:../../Drivers/CMSIS/Include/core_cm7.h **** 
 814:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 815:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 816:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 817:../../Drivers/CMSIS/Include/core_cm7.h **** 
 818:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 819:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 820:../../Drivers/CMSIS/Include/core_cm7.h **** 
 821:../../Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 822:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 823:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 824:../../Drivers/CMSIS/Include/core_cm7.h **** 
 825:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 826:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 827:../../Drivers/CMSIS/Include/core_cm7.h **** 
 828:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 829:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
ARM GAS  /tmp/ccymeQqc.s 			page 16


 830:../../Drivers/CMSIS/Include/core_cm7.h **** 
 831:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 832:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 833:../../Drivers/CMSIS/Include/core_cm7.h **** 
 834:../../Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 835:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 837:../../Drivers/CMSIS/Include/core_cm7.h **** 
 838:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 839:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 840:../../Drivers/CMSIS/Include/core_cm7.h **** 
 841:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 843:../../Drivers/CMSIS/Include/core_cm7.h **** 
 844:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 846:../../Drivers/CMSIS/Include/core_cm7.h **** 
 847:../../Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 848:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 849:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 850:../../Drivers/CMSIS/Include/core_cm7.h **** 
 851:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 852:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 853:../../Drivers/CMSIS/Include/core_cm7.h **** 
 854:../../Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 855:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 856:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 857:../../Drivers/CMSIS/Include/core_cm7.h **** 
 858:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 859:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 860:../../Drivers/CMSIS/Include/core_cm7.h **** 
 861:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 862:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 863:../../Drivers/CMSIS/Include/core_cm7.h **** 
 864:../../Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 865:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 866:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 867:../../Drivers/CMSIS/Include/core_cm7.h **** 
 868:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 869:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 870:../../Drivers/CMSIS/Include/core_cm7.h **** 
 871:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 872:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 873:../../Drivers/CMSIS/Include/core_cm7.h **** 
 874:../../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 875:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 876:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 877:../../Drivers/CMSIS/Include/core_cm7.h **** 
 878:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 879:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 880:../../Drivers/CMSIS/Include/core_cm7.h **** 
 881:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 882:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 883:../../Drivers/CMSIS/Include/core_cm7.h **** 
 884:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 885:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 886:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 17


 887:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 888:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 889:../../Drivers/CMSIS/Include/core_cm7.h **** 
 890:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 891:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 892:../../Drivers/CMSIS/Include/core_cm7.h **** 
 893:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 894:../../Drivers/CMSIS/Include/core_cm7.h **** 
 895:../../Drivers/CMSIS/Include/core_cm7.h **** 
 896:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 897:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 898:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 899:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 900:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 901:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 902:../../Drivers/CMSIS/Include/core_cm7.h **** 
 903:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 904:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 905:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 906:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 907:../../Drivers/CMSIS/Include/core_cm7.h **** {
 908:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 909:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 910:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 911:../../Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 912:../../Drivers/CMSIS/Include/core_cm7.h **** 
 913:../../Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 914:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 915:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 916:../../Drivers/CMSIS/Include/core_cm7.h **** 
 917:../../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 918:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 919:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 920:../../Drivers/CMSIS/Include/core_cm7.h **** 
 921:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 922:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 923:../../Drivers/CMSIS/Include/core_cm7.h **** 
 924:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 925:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 926:../../Drivers/CMSIS/Include/core_cm7.h **** 
 927:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 928:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 929:../../Drivers/CMSIS/Include/core_cm7.h **** 
 930:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 931:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 932:../../Drivers/CMSIS/Include/core_cm7.h **** 
 933:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 934:../../Drivers/CMSIS/Include/core_cm7.h **** 
 935:../../Drivers/CMSIS/Include/core_cm7.h **** 
 936:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 937:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 938:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 939:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 940:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 941:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 942:../../Drivers/CMSIS/Include/core_cm7.h **** 
 943:../../Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccymeQqc.s 			page 18


 944:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 945:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 946:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 947:../../Drivers/CMSIS/Include/core_cm7.h **** {
 948:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 949:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 950:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 951:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 952:../../Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 953:../../Drivers/CMSIS/Include/core_cm7.h **** 
 954:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 955:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 956:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 957:../../Drivers/CMSIS/Include/core_cm7.h **** 
 958:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 959:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 960:../../Drivers/CMSIS/Include/core_cm7.h **** 
 961:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 962:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 963:../../Drivers/CMSIS/Include/core_cm7.h **** 
 964:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 965:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 966:../../Drivers/CMSIS/Include/core_cm7.h **** 
 967:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 968:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 969:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 970:../../Drivers/CMSIS/Include/core_cm7.h **** 
 971:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 972:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 973:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 974:../../Drivers/CMSIS/Include/core_cm7.h **** 
 975:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 976:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 977:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 978:../../Drivers/CMSIS/Include/core_cm7.h **** 
 979:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 980:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 981:../../Drivers/CMSIS/Include/core_cm7.h **** 
 982:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 983:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 984:../../Drivers/CMSIS/Include/core_cm7.h **** 
 985:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 986:../../Drivers/CMSIS/Include/core_cm7.h **** 
 987:../../Drivers/CMSIS/Include/core_cm7.h **** 
 988:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 989:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 990:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 991:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 992:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 993:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 994:../../Drivers/CMSIS/Include/core_cm7.h **** 
 995:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 996:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 997:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 998:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 999:../../Drivers/CMSIS/Include/core_cm7.h **** {
1000:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
ARM GAS  /tmp/ccymeQqc.s 			page 19


1001:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1002:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1003:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1004:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1005:../../Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1006:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1007:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1008:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1009:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1010:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1011:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1012:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1013:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1014:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1015:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1016:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1017:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1018:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1019:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1020:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1021:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1022:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1023:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1024:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1025:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1026:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1027:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1028:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1029:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1030:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1031:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1032:../../Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1033:../../Drivers/CMSIS/Include/core_cm7.h **** 
1034:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1035:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1036:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1037:../../Drivers/CMSIS/Include/core_cm7.h **** 
1038:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1039:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1040:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1041:../../Drivers/CMSIS/Include/core_cm7.h **** 
1042:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1043:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1044:../../Drivers/CMSIS/Include/core_cm7.h **** 
1045:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1046:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1047:../../Drivers/CMSIS/Include/core_cm7.h **** 
1048:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1049:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1050:../../Drivers/CMSIS/Include/core_cm7.h **** 
1051:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1052:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1053:../../Drivers/CMSIS/Include/core_cm7.h **** 
1054:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1055:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1056:../../Drivers/CMSIS/Include/core_cm7.h **** 
1057:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
ARM GAS  /tmp/ccymeQqc.s 			page 20


1058:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1059:../../Drivers/CMSIS/Include/core_cm7.h **** 
1060:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1061:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1062:../../Drivers/CMSIS/Include/core_cm7.h **** 
1063:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1064:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1065:../../Drivers/CMSIS/Include/core_cm7.h **** 
1066:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1067:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1068:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1069:../../Drivers/CMSIS/Include/core_cm7.h **** 
1070:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1071:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1072:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1073:../../Drivers/CMSIS/Include/core_cm7.h **** 
1074:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1075:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1076:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1077:../../Drivers/CMSIS/Include/core_cm7.h **** 
1078:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1079:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1080:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1081:../../Drivers/CMSIS/Include/core_cm7.h **** 
1082:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1083:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1084:../../Drivers/CMSIS/Include/core_cm7.h **** 
1085:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1086:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1087:../../Drivers/CMSIS/Include/core_cm7.h **** 
1088:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1089:../../Drivers/CMSIS/Include/core_cm7.h **** 
1090:../../Drivers/CMSIS/Include/core_cm7.h **** 
1091:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1092:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1093:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1094:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1095:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1096:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1097:../../Drivers/CMSIS/Include/core_cm7.h **** 
1098:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1099:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1100:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1101:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1102:../../Drivers/CMSIS/Include/core_cm7.h **** {
1103:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1104:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1105:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1106:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1107:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1108:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1109:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1110:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1111:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1112:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1113:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1114:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
ARM GAS  /tmp/ccymeQqc.s 			page 21


1115:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1116:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1117:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1118:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1119:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1120:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1121:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1122:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1123:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1124:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1125:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1126:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1127:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1128:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1129:../../Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1130:../../Drivers/CMSIS/Include/core_cm7.h **** 
1131:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1132:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1133:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1134:../../Drivers/CMSIS/Include/core_cm7.h **** 
1135:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1136:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1137:../../Drivers/CMSIS/Include/core_cm7.h **** 
1138:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1139:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1140:../../Drivers/CMSIS/Include/core_cm7.h **** 
1141:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1142:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1143:../../Drivers/CMSIS/Include/core_cm7.h **** 
1144:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1145:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1146:../../Drivers/CMSIS/Include/core_cm7.h **** 
1147:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1148:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1149:../../Drivers/CMSIS/Include/core_cm7.h **** 
1150:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1151:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1152:../../Drivers/CMSIS/Include/core_cm7.h **** 
1153:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1154:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1155:../../Drivers/CMSIS/Include/core_cm7.h **** 
1156:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1157:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1158:../../Drivers/CMSIS/Include/core_cm7.h **** 
1159:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1160:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1161:../../Drivers/CMSIS/Include/core_cm7.h **** 
1162:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1163:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1164:../../Drivers/CMSIS/Include/core_cm7.h **** 
1165:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1166:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1167:../../Drivers/CMSIS/Include/core_cm7.h **** 
1168:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1169:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1170:../../Drivers/CMSIS/Include/core_cm7.h **** 
1171:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
ARM GAS  /tmp/ccymeQqc.s 			page 22


1172:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1173:../../Drivers/CMSIS/Include/core_cm7.h **** 
1174:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1175:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1176:../../Drivers/CMSIS/Include/core_cm7.h **** 
1177:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1178:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1179:../../Drivers/CMSIS/Include/core_cm7.h **** 
1180:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1181:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1182:../../Drivers/CMSIS/Include/core_cm7.h **** 
1183:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1184:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1185:../../Drivers/CMSIS/Include/core_cm7.h **** 
1186:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1187:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1188:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1189:../../Drivers/CMSIS/Include/core_cm7.h **** 
1190:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1191:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1192:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1193:../../Drivers/CMSIS/Include/core_cm7.h **** 
1194:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1195:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1196:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1197:../../Drivers/CMSIS/Include/core_cm7.h **** 
1198:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1199:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1200:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1201:../../Drivers/CMSIS/Include/core_cm7.h **** 
1202:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1203:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1204:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1205:../../Drivers/CMSIS/Include/core_cm7.h **** 
1206:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1207:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1208:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1209:../../Drivers/CMSIS/Include/core_cm7.h **** 
1210:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1211:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1212:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1213:../../Drivers/CMSIS/Include/core_cm7.h **** 
1214:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1215:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1216:../../Drivers/CMSIS/Include/core_cm7.h **** 
1217:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1218:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1219:../../Drivers/CMSIS/Include/core_cm7.h **** 
1220:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1221:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1222:../../Drivers/CMSIS/Include/core_cm7.h **** 
1223:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1224:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1225:../../Drivers/CMSIS/Include/core_cm7.h **** 
1226:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1227:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1228:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 23


1229:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1230:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1231:../../Drivers/CMSIS/Include/core_cm7.h **** 
1232:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1233:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1234:../../Drivers/CMSIS/Include/core_cm7.h **** 
1235:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1236:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1237:../../Drivers/CMSIS/Include/core_cm7.h **** 
1238:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1239:../../Drivers/CMSIS/Include/core_cm7.h **** 
1240:../../Drivers/CMSIS/Include/core_cm7.h **** 
1241:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1242:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1243:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1244:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1245:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1246:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1247:../../Drivers/CMSIS/Include/core_cm7.h **** 
1248:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1249:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1250:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1251:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1252:../../Drivers/CMSIS/Include/core_cm7.h **** {
1253:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1254:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1255:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1256:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1257:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1258:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1259:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1260:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1261:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1262:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1263:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1264:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1265:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1266:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1267:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1268:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1269:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1270:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1271:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1272:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1273:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1274:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1275:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1276:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1277:../../Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1278:../../Drivers/CMSIS/Include/core_cm7.h **** 
1279:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1280:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1281:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1282:../../Drivers/CMSIS/Include/core_cm7.h **** 
1283:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1284:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1285:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
ARM GAS  /tmp/ccymeQqc.s 			page 24


1286:../../Drivers/CMSIS/Include/core_cm7.h **** 
1287:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1288:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1289:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1290:../../Drivers/CMSIS/Include/core_cm7.h **** 
1291:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1292:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1293:../../Drivers/CMSIS/Include/core_cm7.h **** 
1294:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1295:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1296:../../Drivers/CMSIS/Include/core_cm7.h **** 
1297:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1298:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1299:../../Drivers/CMSIS/Include/core_cm7.h **** 
1300:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1301:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1302:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1303:../../Drivers/CMSIS/Include/core_cm7.h **** 
1304:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1305:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1306:../../Drivers/CMSIS/Include/core_cm7.h **** 
1307:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1308:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1309:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1310:../../Drivers/CMSIS/Include/core_cm7.h **** 
1311:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1312:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1313:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1314:../../Drivers/CMSIS/Include/core_cm7.h **** 
1315:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1316:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1317:../../Drivers/CMSIS/Include/core_cm7.h **** 
1318:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1319:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1320:../../Drivers/CMSIS/Include/core_cm7.h **** 
1321:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1322:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1323:../../Drivers/CMSIS/Include/core_cm7.h **** 
1324:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1325:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1326:../../Drivers/CMSIS/Include/core_cm7.h **** 
1327:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1328:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1329:../../Drivers/CMSIS/Include/core_cm7.h **** 
1330:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1331:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1332:../../Drivers/CMSIS/Include/core_cm7.h **** 
1333:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1334:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1335:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1336:../../Drivers/CMSIS/Include/core_cm7.h **** 
1337:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1338:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1339:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1340:../../Drivers/CMSIS/Include/core_cm7.h **** 
1341:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1342:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
ARM GAS  /tmp/ccymeQqc.s 			page 25


1343:../../Drivers/CMSIS/Include/core_cm7.h **** 
1344:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1345:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1346:../../Drivers/CMSIS/Include/core_cm7.h **** 
1347:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1348:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1349:../../Drivers/CMSIS/Include/core_cm7.h **** 
1350:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1351:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1352:../../Drivers/CMSIS/Include/core_cm7.h **** 
1353:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1354:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1355:../../Drivers/CMSIS/Include/core_cm7.h **** 
1356:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1357:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1358:../../Drivers/CMSIS/Include/core_cm7.h **** 
1359:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1360:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1361:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1362:../../Drivers/CMSIS/Include/core_cm7.h **** 
1363:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1364:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1365:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1366:../../Drivers/CMSIS/Include/core_cm7.h **** 
1367:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1368:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1369:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1370:../../Drivers/CMSIS/Include/core_cm7.h **** 
1371:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1372:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1373:../../Drivers/CMSIS/Include/core_cm7.h **** 
1374:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1375:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1376:../../Drivers/CMSIS/Include/core_cm7.h **** 
1377:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1378:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1379:../../Drivers/CMSIS/Include/core_cm7.h **** 
1380:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1381:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1382:../../Drivers/CMSIS/Include/core_cm7.h **** 
1383:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1384:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1385:../../Drivers/CMSIS/Include/core_cm7.h **** 
1386:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1387:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1388:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1389:../../Drivers/CMSIS/Include/core_cm7.h **** 
1390:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1391:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1392:../../Drivers/CMSIS/Include/core_cm7.h **** 
1393:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1394:../../Drivers/CMSIS/Include/core_cm7.h **** 
1395:../../Drivers/CMSIS/Include/core_cm7.h **** 
1396:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__MPU_PRESENT == 1U)
1397:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1398:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1399:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
ARM GAS  /tmp/ccymeQqc.s 			page 26


1400:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1401:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1402:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1403:../../Drivers/CMSIS/Include/core_cm7.h **** 
1404:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1405:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1406:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1407:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1408:../../Drivers/CMSIS/Include/core_cm7.h **** {
1409:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1410:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1411:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1412:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1413:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1414:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1415:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1416:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1417:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1418:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1419:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1420:../../Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1421:../../Drivers/CMSIS/Include/core_cm7.h **** 
1422:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1423:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1424:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1425:../../Drivers/CMSIS/Include/core_cm7.h **** 
1426:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1427:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1428:../../Drivers/CMSIS/Include/core_cm7.h **** 
1429:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1430:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1431:../../Drivers/CMSIS/Include/core_cm7.h **** 
1432:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1433:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1434:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1435:../../Drivers/CMSIS/Include/core_cm7.h **** 
1436:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1437:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1438:../../Drivers/CMSIS/Include/core_cm7.h **** 
1439:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1440:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1441:../../Drivers/CMSIS/Include/core_cm7.h **** 
1442:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1443:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1444:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1445:../../Drivers/CMSIS/Include/core_cm7.h **** 
1446:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1447:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1448:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1449:../../Drivers/CMSIS/Include/core_cm7.h **** 
1450:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1451:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1452:../../Drivers/CMSIS/Include/core_cm7.h **** 
1453:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1454:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1455:../../Drivers/CMSIS/Include/core_cm7.h **** 
1456:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
ARM GAS  /tmp/ccymeQqc.s 			page 27


1457:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1458:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1459:../../Drivers/CMSIS/Include/core_cm7.h **** 
1460:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1461:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1462:../../Drivers/CMSIS/Include/core_cm7.h **** 
1463:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1464:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1465:../../Drivers/CMSIS/Include/core_cm7.h **** 
1466:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1467:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1468:../../Drivers/CMSIS/Include/core_cm7.h **** 
1469:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1470:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1471:../../Drivers/CMSIS/Include/core_cm7.h **** 
1472:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1473:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1474:../../Drivers/CMSIS/Include/core_cm7.h **** 
1475:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1476:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1477:../../Drivers/CMSIS/Include/core_cm7.h **** 
1478:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1479:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1480:../../Drivers/CMSIS/Include/core_cm7.h **** 
1481:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1482:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1483:../../Drivers/CMSIS/Include/core_cm7.h **** 
1484:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1485:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1486:../../Drivers/CMSIS/Include/core_cm7.h **** 
1487:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1488:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1489:../../Drivers/CMSIS/Include/core_cm7.h **** 
1490:../../Drivers/CMSIS/Include/core_cm7.h **** 
1491:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__FPU_PRESENT == 1U)
1492:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1493:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1494:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1495:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1496:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1497:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1498:../../Drivers/CMSIS/Include/core_cm7.h **** 
1499:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1500:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1501:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1502:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1503:../../Drivers/CMSIS/Include/core_cm7.h **** {
1504:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1505:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1506:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1507:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1508:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1509:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1510:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1511:../../Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1512:../../Drivers/CMSIS/Include/core_cm7.h **** 
1513:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
ARM GAS  /tmp/ccymeQqc.s 			page 28


1514:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1515:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1516:../../Drivers/CMSIS/Include/core_cm7.h **** 
1517:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1518:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1519:../../Drivers/CMSIS/Include/core_cm7.h **** 
1520:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1521:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1522:../../Drivers/CMSIS/Include/core_cm7.h **** 
1523:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1524:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1525:../../Drivers/CMSIS/Include/core_cm7.h **** 
1526:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1527:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1528:../../Drivers/CMSIS/Include/core_cm7.h **** 
1529:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1530:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1531:../../Drivers/CMSIS/Include/core_cm7.h **** 
1532:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1533:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1534:../../Drivers/CMSIS/Include/core_cm7.h **** 
1535:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1536:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1537:../../Drivers/CMSIS/Include/core_cm7.h **** 
1538:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1539:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1540:../../Drivers/CMSIS/Include/core_cm7.h **** 
1541:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1542:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1543:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1544:../../Drivers/CMSIS/Include/core_cm7.h **** 
1545:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1546:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1547:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1548:../../Drivers/CMSIS/Include/core_cm7.h **** 
1549:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1550:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1551:../../Drivers/CMSIS/Include/core_cm7.h **** 
1552:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1553:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1554:../../Drivers/CMSIS/Include/core_cm7.h **** 
1555:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1556:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1557:../../Drivers/CMSIS/Include/core_cm7.h **** 
1558:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1559:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1560:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1561:../../Drivers/CMSIS/Include/core_cm7.h **** 
1562:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1563:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1564:../../Drivers/CMSIS/Include/core_cm7.h **** 
1565:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1566:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1567:../../Drivers/CMSIS/Include/core_cm7.h **** 
1568:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1569:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1570:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 29


1571:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1572:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1573:../../Drivers/CMSIS/Include/core_cm7.h **** 
1574:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1575:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1576:../../Drivers/CMSIS/Include/core_cm7.h **** 
1577:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1578:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1579:../../Drivers/CMSIS/Include/core_cm7.h **** 
1580:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1581:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1582:../../Drivers/CMSIS/Include/core_cm7.h **** 
1583:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1584:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1585:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1586:../../Drivers/CMSIS/Include/core_cm7.h **** 
1587:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1588:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1589:../../Drivers/CMSIS/Include/core_cm7.h **** 
1590:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1591:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1592:../../Drivers/CMSIS/Include/core_cm7.h **** 
1593:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1594:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1595:../../Drivers/CMSIS/Include/core_cm7.h **** 
1596:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1597:../../Drivers/CMSIS/Include/core_cm7.h **** 
1598:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1599:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1600:../../Drivers/CMSIS/Include/core_cm7.h **** 
1601:../../Drivers/CMSIS/Include/core_cm7.h **** 
1602:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1603:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1604:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1605:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1606:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1607:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1608:../../Drivers/CMSIS/Include/core_cm7.h **** 
1609:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1610:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1611:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1612:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1613:../../Drivers/CMSIS/Include/core_cm7.h **** {
1614:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1615:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1616:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1617:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1618:../../Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1619:../../Drivers/CMSIS/Include/core_cm7.h **** 
1620:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1621:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1622:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1623:../../Drivers/CMSIS/Include/core_cm7.h **** 
1624:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1625:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1626:../../Drivers/CMSIS/Include/core_cm7.h **** 
1627:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
ARM GAS  /tmp/ccymeQqc.s 			page 30


1628:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1629:../../Drivers/CMSIS/Include/core_cm7.h **** 
1630:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1631:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1632:../../Drivers/CMSIS/Include/core_cm7.h **** 
1633:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1634:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1635:../../Drivers/CMSIS/Include/core_cm7.h **** 
1636:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1637:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1638:../../Drivers/CMSIS/Include/core_cm7.h **** 
1639:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1640:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1641:../../Drivers/CMSIS/Include/core_cm7.h **** 
1642:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1643:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1644:../../Drivers/CMSIS/Include/core_cm7.h **** 
1645:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1646:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1647:../../Drivers/CMSIS/Include/core_cm7.h **** 
1648:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1649:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1650:../../Drivers/CMSIS/Include/core_cm7.h **** 
1651:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1652:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1653:../../Drivers/CMSIS/Include/core_cm7.h **** 
1654:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1655:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1656:../../Drivers/CMSIS/Include/core_cm7.h **** 
1657:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1658:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1659:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1660:../../Drivers/CMSIS/Include/core_cm7.h **** 
1661:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1662:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1663:../../Drivers/CMSIS/Include/core_cm7.h **** 
1664:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1665:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1666:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1667:../../Drivers/CMSIS/Include/core_cm7.h **** 
1668:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1669:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1670:../../Drivers/CMSIS/Include/core_cm7.h **** 
1671:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1672:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1673:../../Drivers/CMSIS/Include/core_cm7.h **** 
1674:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1675:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1676:../../Drivers/CMSIS/Include/core_cm7.h **** 
1677:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1678:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1679:../../Drivers/CMSIS/Include/core_cm7.h **** 
1680:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1681:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1682:../../Drivers/CMSIS/Include/core_cm7.h **** 
1683:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1684:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
ARM GAS  /tmp/ccymeQqc.s 			page 31


1685:../../Drivers/CMSIS/Include/core_cm7.h **** 
1686:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1687:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1688:../../Drivers/CMSIS/Include/core_cm7.h **** 
1689:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1690:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1691:../../Drivers/CMSIS/Include/core_cm7.h **** 
1692:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1693:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1694:../../Drivers/CMSIS/Include/core_cm7.h **** 
1695:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1696:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1697:../../Drivers/CMSIS/Include/core_cm7.h **** 
1698:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1699:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1700:../../Drivers/CMSIS/Include/core_cm7.h **** 
1701:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1702:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1703:../../Drivers/CMSIS/Include/core_cm7.h **** 
1704:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1705:../../Drivers/CMSIS/Include/core_cm7.h **** 
1706:../../Drivers/CMSIS/Include/core_cm7.h **** 
1707:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1708:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1709:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1710:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1711:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1712:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1713:../../Drivers/CMSIS/Include/core_cm7.h **** 
1714:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1715:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1716:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1717:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field.
1718:../../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1719:../../Drivers/CMSIS/Include/core_cm7.h **** */
1720:../../Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1721:../../Drivers/CMSIS/Include/core_cm7.h **** 
1722:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1723:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1724:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1725:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register.
1726:../../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1727:../../Drivers/CMSIS/Include/core_cm7.h **** */
1728:../../Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1729:../../Drivers/CMSIS/Include/core_cm7.h **** 
1730:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1731:../../Drivers/CMSIS/Include/core_cm7.h **** 
1732:../../Drivers/CMSIS/Include/core_cm7.h **** 
1733:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1734:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1735:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1736:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1737:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1738:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1739:../../Drivers/CMSIS/Include/core_cm7.h **** 
1740:../../Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Cortex-M4 Hardware */
1741:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
ARM GAS  /tmp/ccymeQqc.s 			page 32


1742:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1743:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1744:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1745:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1746:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1747:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1748:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1749:../../Drivers/CMSIS/Include/core_cm7.h **** 
1750:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1751:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1752:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1753:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1754:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1755:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1756:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1757:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1758:../../Drivers/CMSIS/Include/core_cm7.h **** 
1759:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__MPU_PRESENT == 1U)
1760:../../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1761:../../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1762:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1763:../../Drivers/CMSIS/Include/core_cm7.h **** 
1764:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__FPU_PRESENT == 1U)
1765:../../Drivers/CMSIS/Include/core_cm7.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1766:../../Drivers/CMSIS/Include/core_cm7.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1767:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1768:../../Drivers/CMSIS/Include/core_cm7.h **** 
1769:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1770:../../Drivers/CMSIS/Include/core_cm7.h **** 
1771:../../Drivers/CMSIS/Include/core_cm7.h **** 
1772:../../Drivers/CMSIS/Include/core_cm7.h **** 
1773:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1774:../../Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1775:../../Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1776:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1777:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1778:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1779:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1780:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1781:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1782:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1783:../../Drivers/CMSIS/Include/core_cm7.h **** */
1784:../../Drivers/CMSIS/Include/core_cm7.h **** 
1785:../../Drivers/CMSIS/Include/core_cm7.h **** 
1786:../../Drivers/CMSIS/Include/core_cm7.h **** 
1787:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1788:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1789:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1790:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1791:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1792:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1793:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1794:../../Drivers/CMSIS/Include/core_cm7.h **** 
1795:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1796:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1797:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1798:../../Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
ARM GAS  /tmp/ccymeQqc.s 			page 33


1799:../../Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1800:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1801:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1802:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1803:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1804:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1805:../../Drivers/CMSIS/Include/core_cm7.h **** {
1806:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1807:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1808:../../Drivers/CMSIS/Include/core_cm7.h **** 
1809:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1810:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1811:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1812:../../Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1813:../../Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1814:../../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1815:../../Drivers/CMSIS/Include/core_cm7.h **** }
1816:../../Drivers/CMSIS/Include/core_cm7.h **** 
1817:../../Drivers/CMSIS/Include/core_cm7.h **** 
1818:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1819:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1820:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1821:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1822:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1823:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1824:../../Drivers/CMSIS/Include/core_cm7.h **** {
1825:../../Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1826:../../Drivers/CMSIS/Include/core_cm7.h **** }
1827:../../Drivers/CMSIS/Include/core_cm7.h **** 
1828:../../Drivers/CMSIS/Include/core_cm7.h **** 
1829:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1830:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable External Interrupt
1831:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1832:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1833:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1834:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1835:../../Drivers/CMSIS/Include/core_cm7.h **** {
1836:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1837:../../Drivers/CMSIS/Include/core_cm7.h **** }
1838:../../Drivers/CMSIS/Include/core_cm7.h **** 
1839:../../Drivers/CMSIS/Include/core_cm7.h **** 
1840:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1841:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable External Interrupt
1842:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1843:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1844:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1845:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1846:../../Drivers/CMSIS/Include/core_cm7.h **** {
1847:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1848:../../Drivers/CMSIS/Include/core_cm7.h **** }
1849:../../Drivers/CMSIS/Include/core_cm7.h **** 
1850:../../Drivers/CMSIS/Include/core_cm7.h **** 
1851:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1852:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1853:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1854:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1855:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
ARM GAS  /tmp/ccymeQqc.s 			page 34


1856:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1857:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1858:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1859:../../Drivers/CMSIS/Include/core_cm7.h **** {
1860:../../Drivers/CMSIS/Include/core_cm7.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1861:../../Drivers/CMSIS/Include/core_cm7.h **** }
1862:../../Drivers/CMSIS/Include/core_cm7.h **** 
1863:../../Drivers/CMSIS/Include/core_cm7.h **** 
1864:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1865:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1866:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of an external interrupt.
1867:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1868:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1869:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1870:../../Drivers/CMSIS/Include/core_cm7.h **** {
1871:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1872:../../Drivers/CMSIS/Include/core_cm7.h **** }
1873:../../Drivers/CMSIS/Include/core_cm7.h **** 
1874:../../Drivers/CMSIS/Include/core_cm7.h **** 
1875:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1876:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1877:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of an external interrupt.
1878:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1879:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1880:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1881:../../Drivers/CMSIS/Include/core_cm7.h **** {
1882:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1883:../../Drivers/CMSIS/Include/core_cm7.h **** }
1884:../../Drivers/CMSIS/Include/core_cm7.h **** 
1885:../../Drivers/CMSIS/Include/core_cm7.h **** 
1886:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1887:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1888:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in NVIC and returns the active bit.
1889:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1890:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1891:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
1892:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1893:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1894:../../Drivers/CMSIS/Include/core_cm7.h **** {
1895:../../Drivers/CMSIS/Include/core_cm7.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1896:../../Drivers/CMSIS/Include/core_cm7.h **** }
1897:../../Drivers/CMSIS/Include/core_cm7.h **** 
1898:../../Drivers/CMSIS/Include/core_cm7.h **** 
1899:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1900:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1901:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of an interrupt.
1902:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every core interrupt.
1903:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1904:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1905:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1906:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1907:../../Drivers/CMSIS/Include/core_cm7.h **** {
1908:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) < 0)
1909:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1910:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
1911:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1912:../../Drivers/CMSIS/Include/core_cm7.h ****   else
ARM GAS  /tmp/ccymeQqc.s 			page 35


1913:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1914:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
1915:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1916:../../Drivers/CMSIS/Include/core_cm7.h **** }
1917:../../Drivers/CMSIS/Include/core_cm7.h **** 
1918:../../Drivers/CMSIS/Include/core_cm7.h **** 
1919:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1920:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
1921:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of an interrupt.
1922:../../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1923:../../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify an internal (core) interrupt.
1924:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
1925:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
1926:../../Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1927:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1928:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1929:../../Drivers/CMSIS/Include/core_cm7.h **** {
1930:../../Drivers/CMSIS/Include/core_cm7.h **** 
1931:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) < 0)
1932:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1933:../../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
1934:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1935:../../Drivers/CMSIS/Include/core_cm7.h ****   else
1936:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1937:../../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
1938:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1939:../../Drivers/CMSIS/Include/core_cm7.h **** }
1940:../../Drivers/CMSIS/Include/core_cm7.h **** 
1941:../../Drivers/CMSIS/Include/core_cm7.h **** 
1942:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1943:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
1944:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
1945:../../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
1946:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1947:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1948:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
1949:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1950:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1951:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1952:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1953:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1954:../../Drivers/CMSIS/Include/core_cm7.h **** {
1955:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1956:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
1957:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
1958:../../Drivers/CMSIS/Include/core_cm7.h **** 
1959:../../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1960:../../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1961:../../Drivers/CMSIS/Include/core_cm7.h **** 
1962:../../Drivers/CMSIS/Include/core_cm7.h ****   return (
1963:../../Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1964:../../Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1965:../../Drivers/CMSIS/Include/core_cm7.h ****          );
1966:../../Drivers/CMSIS/Include/core_cm7.h **** }
1967:../../Drivers/CMSIS/Include/core_cm7.h **** 
1968:../../Drivers/CMSIS/Include/core_cm7.h **** 
1969:../../Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccymeQqc.s 			page 36


1970:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
1971:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
1972:../../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
1973:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1974:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1975:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1976:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
1977:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1978:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1979:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1980:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1981:../../Drivers/CMSIS/Include/core_cm7.h **** {
1982:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1983:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
1984:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
1985:../../Drivers/CMSIS/Include/core_cm7.h **** 
1986:../../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1987:../../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1988:../../Drivers/CMSIS/Include/core_cm7.h **** 
1989:../../Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1990:../../Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1991:../../Drivers/CMSIS/Include/core_cm7.h **** }
1992:../../Drivers/CMSIS/Include/core_cm7.h **** 
1993:../../Drivers/CMSIS/Include/core_cm7.h **** 
1994:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1995:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
1996:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
1997:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1998:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1999:../../Drivers/CMSIS/Include/core_cm7.h **** {
2000:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2001:../../Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2002:../../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2003:../../Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
2004:../../Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2005:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2006:../../Drivers/CMSIS/Include/core_cm7.h **** 
2007:../../Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2008:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2009:../../Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2010:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2011:../../Drivers/CMSIS/Include/core_cm7.h **** }
2012:../../Drivers/CMSIS/Include/core_cm7.h **** 
2013:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2014:../../Drivers/CMSIS/Include/core_cm7.h **** 
2015:../../Drivers/CMSIS/Include/core_cm7.h **** 
2016:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2017:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2018:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2019:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2020:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2021:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2022:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2023:../../Drivers/CMSIS/Include/core_cm7.h **** 
2024:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2025:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2026:../../Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
ARM GAS  /tmp/ccymeQqc.s 			page 37


2027:../../Drivers/CMSIS/Include/core_cm7.h ****   \returns
2028:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2029:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2030:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2031:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2032:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2033:../../Drivers/CMSIS/Include/core_cm7.h **** {
2034:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2035:../../Drivers/CMSIS/Include/core_cm7.h **** 
2036:../../Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2037:../../Drivers/CMSIS/Include/core_cm7.h ****   if        ((mvfr0 & 0x00000FF0UL) == 0x220UL)
2038:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2039:../../Drivers/CMSIS/Include/core_cm7.h ****     return 2UL;           /* Double + Single precision FPU */
2040:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2041:../../Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & 0x00000FF0UL) == 0x020UL)
2042:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2043:../../Drivers/CMSIS/Include/core_cm7.h ****     return 1UL;           /* Single precision FPU */
2044:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2045:../../Drivers/CMSIS/Include/core_cm7.h ****   else
2046:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2047:../../Drivers/CMSIS/Include/core_cm7.h ****     return 0UL;           /* No FPU */
2048:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2049:../../Drivers/CMSIS/Include/core_cm7.h **** }
2050:../../Drivers/CMSIS/Include/core_cm7.h **** 
2051:../../Drivers/CMSIS/Include/core_cm7.h **** 
2052:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2053:../../Drivers/CMSIS/Include/core_cm7.h **** 
2054:../../Drivers/CMSIS/Include/core_cm7.h **** 
2055:../../Drivers/CMSIS/Include/core_cm7.h **** 
2056:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2057:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2058:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2059:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2060:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2061:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2062:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2063:../../Drivers/CMSIS/Include/core_cm7.h **** 
2064:../../Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2065:../../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2066:../../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2067:../../Drivers/CMSIS/Include/core_cm7.h **** 
2068:../../Drivers/CMSIS/Include/core_cm7.h **** 
2069:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2070:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2071:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2072:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2073:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2074:../../Drivers/CMSIS/Include/core_cm7.h **** {
  28              		.loc 1 2074 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
ARM GAS  /tmp/ccymeQqc.s 			page 38


  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  40              	.LBB20:
  41              	.LBB21:
  42              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccymeQqc.s 			page 39


  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 40


 109:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccymeQqc.s 			page 41


 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
ARM GAS  /tmp/ccymeQqc.s 			page 42


 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 43


 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccymeQqc.s 			page 44


 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccymeQqc.s 			page 45


 394:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  43              		.loc 2 429 0
  44              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  45 0004 BFF34F8F 		dsb 0xF
  46              	@ 0 "" 2
  47              		.thumb
  48              	.LBE21:
  49              	.LBE20:
  50              	.LBB22:
  51              	.LBB23:
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  52              		.loc 2 418 0
  53              	@ 418 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  54 0008 BFF36F8F 		isb 0xF
  55              	@ 0 "" 2
  56              		.thumb
  57              	.LBE23:
  58              	.LBE22:
2075:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2076:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2077:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2078:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
ARM GAS  /tmp/ccymeQqc.s 			page 46


  59              		.loc 1 2078 0
  60 000c 084B     		ldr	r3, .L2
  61 000e 0022     		movs	r2, #0
  62 0010 C3F85022 		str	r2, [r3, #592]
2079:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
  63              		.loc 1 2079 0
  64 0014 064A     		ldr	r2, .L2
  65 0016 064B     		ldr	r3, .L2
  66 0018 5B69     		ldr	r3, [r3, #20]
  67 001a 43F40033 		orr	r3, r3, #131072
  68 001e 5361     		str	r3, [r2, #20]
  69              	.LBB24:
  70              	.LBB25:
  71              		.loc 2 429 0
  72              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  73 0020 BFF34F8F 		dsb 0xF
  74              	@ 0 "" 2
  75              		.thumb
  76              	.LBE25:
  77              	.LBE24:
  78              	.LBB26:
  79              	.LBB27:
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  80              		.loc 2 418 0
  81              	@ 418 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  82 0024 BFF36F8F 		isb 0xF
  83              	@ 0 "" 2
  84              		.thumb
  85              	.LBE27:
  86              	.LBE26:
2080:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2081:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2082:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2083:../../Drivers/CMSIS/Include/core_cm7.h **** }
  87              		.loc 1 2083 0
  88 0028 BD46     		mov	sp, r7
  89              	.LCFI2:
  90              		.cfi_def_cfa_register 13
  91              		@ sp needed
  92 002a 5DF8047B 		ldr	r7, [sp], #4
  93              	.LCFI3:
  94              		.cfi_restore 7
  95              		.cfi_def_cfa_offset 0
  96 002e 7047     		bx	lr
  97              	.L3:
  98              		.align	2
  99              	.L2:
 100 0030 00ED00E0 		.word	-536810240
 101              		.cfi_endproc
 102              	.LFE135:
 104              		.section	.text.SCB_EnableDCache,"ax",%progbits
 105              		.align	2
 106              		.thumb
 107              		.thumb_func
 109              	SCB_EnableDCache:
 110              	.LFB138:
2084:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 47


2085:../../Drivers/CMSIS/Include/core_cm7.h **** 
2086:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2087:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2088:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2089:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2090:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2091:../../Drivers/CMSIS/Include/core_cm7.h **** {
2092:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2093:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2094:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2095:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2096:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2097:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2098:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2099:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2100:../../Drivers/CMSIS/Include/core_cm7.h **** }
2101:../../Drivers/CMSIS/Include/core_cm7.h **** 
2102:../../Drivers/CMSIS/Include/core_cm7.h **** 
2103:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2104:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2105:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2106:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2107:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2108:../../Drivers/CMSIS/Include/core_cm7.h **** {
2109:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2110:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2111:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2112:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2113:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2114:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2115:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2116:../../Drivers/CMSIS/Include/core_cm7.h **** }
2117:../../Drivers/CMSIS/Include/core_cm7.h **** 
2118:../../Drivers/CMSIS/Include/core_cm7.h **** 
2119:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2120:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2121:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2122:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2123:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2124:../../Drivers/CMSIS/Include/core_cm7.h **** {
 111              		.loc 1 2124 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 16
 114              		@ frame_needed = 1, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 80B4     		push	{r7}
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 7, -4
 120 0002 85B0     		sub	sp, sp, #20
 121              	.LCFI5:
 122              		.cfi_def_cfa_offset 24
 123 0004 00AF     		add	r7, sp, #0
 124              	.LCFI6:
 125              		.cfi_def_cfa_register 7
2125:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2126:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
ARM GAS  /tmp/ccymeQqc.s 			page 48


2127:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2128:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2129:../../Drivers/CMSIS/Include/core_cm7.h **** 
2130:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
 126              		.loc 1 2130 0
 127 0006 1D4B     		ldr	r3, .L7
 128 0008 0022     		movs	r2, #0
 129 000a C3F88420 		str	r2, [r3, #132]
 130              	.LBB28:
 131              	.LBB29:
 132              		.loc 2 429 0
 133              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 134 000e BFF34F8F 		dsb 0xF
 135              	@ 0 "" 2
 136              		.thumb
 137              	.LBE29:
 138              	.LBE28:
2131:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2132:../../Drivers/CMSIS/Include/core_cm7.h **** 
2133:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
 139              		.loc 1 2133 0
 140 0012 1A4B     		ldr	r3, .L7
 141 0014 D3F88030 		ldr	r3, [r3, #128]
 142 0018 7B60     		str	r3, [r7, #4]
2134:../../Drivers/CMSIS/Include/core_cm7.h **** 
2135:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2136:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 143              		.loc 1 2136 0
 144 001a 7A68     		ldr	r2, [r7, #4]
 145 001c 184B     		ldr	r3, .L7+4
 146 001e 1340     		ands	r3, r3, r2
 147 0020 5B0B     		lsrs	r3, r3, #13
 148 0022 FB60     		str	r3, [r7, #12]
 149              	.L6:
2137:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2138:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 150              		.loc 1 2138 0
 151 0024 7A68     		ldr	r2, [r7, #4]
 152 0026 41F6F873 		movw	r3, #8184
 153 002a 1340     		ands	r3, r3, r2
 154 002c DB08     		lsrs	r3, r3, #3
 155 002e BB60     		str	r3, [r7, #8]
 156              	.L5:
2139:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2140:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
 157              		.loc 1 2140 0 discriminator 1
 158 0030 1249     		ldr	r1, .L7
 159 0032 FB68     		ldr	r3, [r7, #12]
 160 0034 5A01     		lsls	r2, r3, #5
 161 0036 43F6E073 		movw	r3, #16352
 162 003a 1340     		ands	r3, r3, r2
2141:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 163              		.loc 1 2141 0 discriminator 1
 164 003c BA68     		ldr	r2, [r7, #8]
 165 003e 9207     		lsls	r2, r2, #30
2140:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
 166              		.loc 1 2140 0 discriminator 1
ARM GAS  /tmp/ccymeQqc.s 			page 49


 167 0040 1343     		orrs	r3, r3, r2
 168 0042 C1F86032 		str	r3, [r1, #608]
2142:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2143:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2144:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2145:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
 169              		.loc 1 2145 0 discriminator 1
 170 0046 BB68     		ldr	r3, [r7, #8]
 171 0048 5A1E     		subs	r2, r3, #1
 172 004a BA60     		str	r2, [r7, #8]
 173 004c 002B     		cmp	r3, #0
 174 004e EFD1     		bne	.L5
2146:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
 175              		.loc 1 2146 0
 176 0050 FB68     		ldr	r3, [r7, #12]
 177 0052 5A1E     		subs	r2, r3, #1
 178 0054 FA60     		str	r2, [r7, #12]
 179 0056 002B     		cmp	r3, #0
 180 0058 E4D1     		bne	.L6
 181              	.LBB30:
 182              	.LBB31:
 183              		.loc 2 429 0
 184              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 185 005a BFF34F8F 		dsb 0xF
 186              	@ 0 "" 2
 187              		.thumb
 188              	.LBE31:
 189              	.LBE30:
2147:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2148:../../Drivers/CMSIS/Include/core_cm7.h **** 
2149:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
 190              		.loc 1 2149 0
 191 005e 074A     		ldr	r2, .L7
 192 0060 064B     		ldr	r3, .L7
 193 0062 5B69     		ldr	r3, [r3, #20]
 194 0064 43F48033 		orr	r3, r3, #65536
 195 0068 5361     		str	r3, [r2, #20]
 196              	.LBB32:
 197              	.LBB33:
 198              		.loc 2 429 0
 199              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 200 006a BFF34F8F 		dsb 0xF
 201              	@ 0 "" 2
 202              		.thumb
 203              	.LBE33:
 204              	.LBE32:
 205              	.LBB34:
 206              	.LBB35:
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 207              		.loc 2 418 0
 208              	@ 418 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 209 006e BFF36F8F 		isb 0xF
 210              	@ 0 "" 2
 211              		.thumb
 212              	.LBE35:
 213              	.LBE34:
2150:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 50


2151:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2152:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2153:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2154:../../Drivers/CMSIS/Include/core_cm7.h **** }
 214              		.loc 1 2154 0
 215 0072 1437     		adds	r7, r7, #20
 216              	.LCFI7:
 217              		.cfi_def_cfa_offset 4
 218 0074 BD46     		mov	sp, r7
 219              	.LCFI8:
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 0076 5DF8047B 		ldr	r7, [sp], #4
 223              	.LCFI9:
 224              		.cfi_restore 7
 225              		.cfi_def_cfa_offset 0
 226 007a 7047     		bx	lr
 227              	.L8:
 228              		.align	2
 229              	.L7:
 230 007c 00ED00E0 		.word	-536810240
 231 0080 00E0FF0F 		.word	268427264
 232              		.cfi_endproc
 233              	.LFE138:
 235              		.comm	hrtc,32,4
 236              		.comm	hsdram1,52,4
 237              		.section	.rodata.ucIPAddress,"a",%progbits
 238              		.align	2
 241              	ucIPAddress:
 242 0000 C0       		.byte	-64
 243 0001 A8       		.byte	-88
 244 0002 01       		.byte	1
 245 0003 75       		.byte	117
 246              		.section	.rodata.ucNetMask,"a",%progbits
 247              		.align	2
 250              	ucNetMask:
 251 0000 FF       		.byte	-1
 252 0001 FF       		.byte	-1
 253 0002 FF       		.byte	-1
 254 0003 00       		.byte	0
 255              		.section	.rodata.ucGatewayAddress,"a",%progbits
 256              		.align	2
 259              	ucGatewayAddress:
 260 0000 C0       		.byte	-64
 261 0001 A8       		.byte	-88
 262 0002 01       		.byte	1
 263 0003 01       		.byte	1
 264              		.section	.rodata.ucDNSServerAddress,"a",%progbits
 265              		.align	2
 268              	ucDNSServerAddress:
 269 0000 D0       		.byte	-48
 270 0001 43       		.byte	67
 271 0002 DE       		.byte	-34
 272 0003 DE       		.byte	-34
 273              		.global	ucMACAddress
 274              		.section	.rodata.ucMACAddress,"a",%progbits
 275              		.align	2
ARM GAS  /tmp/ccymeQqc.s 			page 51


 278              	ucMACAddress:
 279 0000 00       		.byte	0
 280 0001 11       		.byte	17
 281 0002 22       		.byte	34
 282 0003 33       		.byte	51
 283 0004 44       		.byte	68
 284 0005 46       		.byte	70
 285              		.section	.bss.ulNextRand,"aw",%nobits
 286              		.align	2
 289              	ulNextRand:
 290 0000 00000000 		.space	4
 291              		.section	.rodata
 292              		.align	2
 293              	.LC0:
 294 0000 496E2074 		.ascii	"In the Blink_Task\000"
 294      68652042 
 294      6C696E6B 
 294      5F546173 
 294      6B00
 295              		.section	.text.blink_task,"ax",%progbits
 296              		.align	2
 297              		.thumb
 298              		.thumb_func
 300              	blink_task:
 301              	.LFB150:
 302              		.file 3 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * @file    main.c
   4:Src/main.c    ****   * @author  Nick
   5:Src/main.c    ****   * @version V1
   6:Src/main.c    ****   * @date    4-June-2017
   7:Src/main.c    ****   * @brief   This sample code flashes an LED using FreeRTOS 9.0.0
   8:Src/main.c    ****   *
   9:Src/main.c    ****   ******************************************************************************
  10:Src/main.c    ****   */
  11:Src/main.c    **** 
  12:Src/main.c    **** /* Standard Includes */
  13:Src/main.c    **** 
  14:Src/main.c    **** #include <stdio.h>
  15:Src/main.c    **** #include "main.h"
  16:Src/main.c    **** 
  17:Src/main.c    **** 
  18:Src/main.c    **** /* FreeRTOS includes */
  19:Src/main.c    **** #include "FreeRTOS.h"
  20:Src/main.c    **** #include "task.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* FreeRTOS+TCP includes. */
  23:Src/main.c    **** #include "FreeRTOS_IP.h"
  24:Src/main.c    **** #include "FreeRTOS_Sockets.h"
  25:Src/main.c    **** #include "FreeRTOS_DHCP.h"
  26:Src/main.c    **** #include "FreeRTOSIPConfig.h"
  27:Src/main.c    **** #include "UDPLoggingPrintf.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** 
  30:Src/main.c    **** /* STM32 includes */
  31:Src/main.c    **** #include "stm32f7xx_hal.h"
ARM GAS  /tmp/ccymeQqc.s 			page 52


  32:Src/main.c    **** #include "stm32f769i_discovery.h"
  33:Src/main.c    **** #include "stm32f769i_discovery_lcd.h"
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Utility includes */
  36:Src/main.c    **** #include "lcd_log.h"
  37:Src/main.c    **** #include "SEGGER_SYSVIEW.h"
  38:Src/main.c    **** #include "hr_gettime.h"
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  41:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  42:Src/main.c    **** #define mainCREATE_UDP_CLI_TASKS				0
  43:Src/main.c    **** #define mainCREATE_TCP_ECHO_CLIENT_TASKS_SINGLE	0
  44:Src/main.c    **** #define mainCREATE_SIMPLE_TCP_ECHO_SERVER		0
  45:Src/main.c    **** #define mainCREATE_UDP_LOGGING_TASK 			1
  46:Src/main.c    **** 
  47:Src/main.c    **** 
  48:Src/main.c    **** /* UDP CLI task parameters --------------------------------------------------
  49:Src/main.c    **** See http://www.freertos.org/FreeRTOS-Plus/FreeRTOS_Plus_TCP/UDP_CLI.html */
  50:Src/main.c    **** #define mainUDP_CLI_TASK_PRIORITY		( tskIDLE_PRIORITY + 1 )
  51:Src/main.c    **** #define mainUDP_CLI_PORT_NUMBER			( 5001UL )
  52:Src/main.c    **** #define mainUDP_CLI_TASK_STACK_SIZE		( configMINIMAL_STACK_SIZE * 5 )
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Simple echo client task parameters ---------------------------------------
  55:Src/main.c    **** See http://www.freertos.org/FreeRTOS-Plus/FreeRTOS_Plus_TCP/TCP_Echo_Clients.html */
  56:Src/main.c    **** #define mainECHO_CLIENT_TASK_STACK_SIZE ( configMINIMAL_STACK_SIZE * 4 )
  57:Src/main.c    **** #define mainECHO_CLIENT_TASK_PRIORITY	( tskIDLE_PRIORITY + 1 )
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Simple echo server task parameters ---------------------------------------
  60:Src/main.c    **** See http://www.freertos.org/FreeRTOS-Plus/FreeRTOS_Plus_TCP/TCP_Echo_Server.html */
  61:Src/main.c    **** #define mainECHO_SERVER_TASK_PRIORITY	( tskIDLE_PRIORITY + 2 )
  62:Src/main.c    **** #define	mainECHO_SERVER_STACK_SIZE		( configMINIMAL_STACK_SIZE * 4 )
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Define names that will be used for DNS, LLMNR and NBNS searches.  This allows
  65:Src/main.c    **** mainHOST_NAME to be used when the IP address is not known.  For example
  66:Src/main.c    **** "ping RTOSDemo" to resolve RTOSDemo to an IP address then send a ping request. */
  67:Src/main.c    **** #define mainHOST_NAME					"RTOSDemo"
  68:Src/main.c    **** #define mainDEVICE_NICK_NAME			"stm32"
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  71:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  72:Src/main.c    **** RTC_HandleTypeDef hrtc;
  73:Src/main.c    **** SDRAM_HandleTypeDef hsdram1;
  74:Src/main.c    **** 
  75:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  76:Src/main.c    **** static void SystemClock_Config(void);
  77:Src/main.c    **** static void BSP_Config_task(void *pvParameters);
  78:Src/main.c    **** static void CPU_CACHE_Enable(void);
  79:Src/main.c    **** static void blink_task( void *pvParameters);
  80:Src/main.c    **** static void MX_GPIO_Init(void);
  81:Src/main.c    **** static void MX_RTC_Init(void);
  82:Src/main.c    **** static void MX_FMC_Init(void);
  83:Src/main.c    **** void Error_Handler(void);
  84:Src/main.c    **** 
  85:Src/main.c    **** 
  86:Src/main.c    **** /*
  87:Src/main.c    ****  * Just seeds the simple pseudo random number generator.
  88:Src/main.c    ****  */
ARM GAS  /tmp/ccymeQqc.s 			page 53


  89:Src/main.c    **** static void prvSRand( UBaseType_t ulSeed );
  90:Src/main.c    **** 
  91:Src/main.c    **** /*
  92:Src/main.c    ****  * Miscellaneous initialisation including preparing the logging and seeding the
  93:Src/main.c    ****  * random number generator.
  94:Src/main.c    ****  */
  95:Src/main.c    **** static void prvMiscInitialisation( void );
  96:Src/main.c    **** 
  97:Src/main.c    **** 
  98:Src/main.c    **** /*
  99:Src/main.c    ****  * Heap_5 is used so the maximum heap size can be calculated and initialised at
 100:Src/main.c    ****  * run time.  See http://www.freertos.org/a00111.html.
 101:Src/main.c    ****  */
 102:Src/main.c    **** static void prvInitialiseHeap( void );
 103:Src/main.c    **** 
 104:Src/main.c    **** /*
 105:Src/main.c    ****  * Register a set of example CLI commands that interact with the file system.
 106:Src/main.c    ****  * These are very basic.
 107:Src/main.c    ****  */
 108:Src/main.c    **** extern void vRegisterFileSystemCLICommands( void );
 109:Src/main.c    **** 
 110:Src/main.c    **** /*
 111:Src/main.c    ****  * Register a set of example CLI commands that interact with the TCP/IP stack.
 112:Src/main.c    ****  */
 113:Src/main.c    **** extern void vRegisterTCPCLICommands( void );
 114:Src/main.c    **** 
 115:Src/main.c    **** /*
 116:Src/main.c    ****  * Register the standard CLI examples, which will include the taskstats command
 117:Src/main.c    ****  * if configUSE_STATS_FORMATTING_FUNCTIONS is set to 1 in FreeRTOSConfig.h.
 118:Src/main.c    ****  */
 119:Src/main.c    **** extern void vRegisterSampleCLICommands( void );
 120:Src/main.c    **** 
 121:Src/main.c    **** /*
 122:Src/main.c    ****  * Starts an interface to FreeRTOS+CLI that uses a UDP port for input and
 123:Src/main.c    ****  * output.
 124:Src/main.c    ****  */
 125:Src/main.c    **** extern void vStartUDPCommandInterpreterTask( uint16_t usStackSize, uint32_t ulPort, UBaseType_t uxP
 126:Src/main.c    **** 
 127:Src/main.c    **** 
 128:Src/main.c    **** /* The default IP and MAC address used by the demo.  The address configuration
 129:Src/main.c    **** defined here will be used if ipconfigUSE_DHCP is 0, or if ipconfigUSE_DHCP is
 130:Src/main.c    **** 1 but a DHCP server could not be contacted.  See the online documentation for
 131:Src/main.c    **** more information.  http://www.FreeRTOS.org/tcp */
 132:Src/main.c    **** static const uint8_t ucIPAddress[ 4 ] = { configIP_ADDR0, configIP_ADDR1, configIP_ADDR2, configIP_
 133:Src/main.c    **** static const uint8_t ucNetMask[ 4 ] = { configNET_MASK0, configNET_MASK1, configNET_MASK2, configNE
 134:Src/main.c    **** static const uint8_t ucGatewayAddress[ 4 ] = { configGATEWAY_ADDR0, configGATEWAY_ADDR1, configGATE
 135:Src/main.c    **** static const uint8_t ucDNSServerAddress[ 4 ] = { configDNS_SERVER_ADDR0, configDNS_SERVER_ADDR1, co
 136:Src/main.c    **** 
 137:Src/main.c    **** /* Default MAC address configuration. */
 138:Src/main.c    **** const uint8_t ucMACAddress[ 6 ] = { configMAC_ADDR0, configMAC_ADDR1, configMAC_ADDR2, configMAC_AD
 139:Src/main.c    **** 
 140:Src/main.c    **** /* Use by the pseudo random number generator. */
 141:Src/main.c    **** static UBaseType_t ulNextRand;
 142:Src/main.c    **** 
 143:Src/main.c    **** 
 144:Src/main.c    **** /* Private functions ---------------------------------------------------------*/
 145:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 54


 146:Src/main.c    **** void blink_task(void *pvParameters)
 147:Src/main.c    **** {
 303              		.loc 3 147 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              	.LCFI10:
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 82B0     		sub	sp, sp, #8
 313              	.LCFI11:
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI12:
 317              		.cfi_def_cfa_register 7
 318 0006 7860     		str	r0, [r7, #4]
 319              	.L10:
 148:Src/main.c    **** 	/*just to remove compiler warning*/
 149:Src/main.c    **** 	(void) pvParameters;
 150:Src/main.c    **** 	while(1){
 151:Src/main.c    **** 		BSP_LED_Toggle(LED2);	// Debugging, watch Calculation Time
 320              		.loc 3 151 0 discriminator 1
 321 0008 0120     		movs	r0, #1
 322 000a FFF7FEFF 		bl	BSP_LED_Toggle
 152:Src/main.c    **** 		vTaskDelay(500);
 323              		.loc 3 152 0 discriminator 1
 324 000e 4FF4FA70 		mov	r0, #500
 325 0012 FFF7FEFF 		bl	vTaskDelay
 153:Src/main.c    **** 		FreeRTOS_printf( ( "In the Blink_Task" ) );
 326              		.loc 3 153 0 discriminator 1
 327 0016 0248     		ldr	r0, .L11
 328 0018 FFF7FEFF 		bl	lUDPLoggingPrintf
 154:Src/main.c    **** 	}
 329              		.loc 3 154 0 discriminator 1
 330 001c F4E7     		b	.L10
 331              	.L12:
 332 001e 00BF     		.align	2
 333              	.L11:
 334 0020 00000000 		.word	.LC0
 335              		.cfi_endproc
 336              	.LFE150:
 338              		.section	.rodata
 339 0012 0000     		.align	2
 340              	.LC1:
 341 0014 46726565 		.ascii	"FreeRTOS_IPInit\012\000"
 341      52544F53 
 341      5F495049 
 341      6E69740A 
 341      00
 342 0025 000000   		.align	2
 343              	.LC2:
 344 0028 426C696E 		.ascii	"Blink_task\000"
 344      6B5F7461 
 344      736B00
 345 0033 00       		.align	2
ARM GAS  /tmp/ccymeQqc.s 			page 55


 346              	.LC3:
 347 0034 4253505F 		.ascii	"BSP_Config\000"
 347      436F6E66 
 347      696700
 348              		.section	.text.main,"ax",%progbits
 349              		.align	2
 350              		.global	main
 351              		.thumb
 352              		.thumb_func
 354              	main:
 355              	.LFB151:
 155:Src/main.c    **** }
 156:Src/main.c    **** 
 157:Src/main.c    **** 
 158:Src/main.c    **** 
 159:Src/main.c    **** /**
 160:Src/main.c    ****   * @brief  Main program
 161:Src/main.c    ****   * @param  None
 162:Src/main.c    ****   * @retval None
 163:Src/main.c    ****   */
 164:Src/main.c    **** int main(void)
 165:Src/main.c    **** {
 356              		.loc 3 165 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              	.LCFI13:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 82B0     		sub	sp, sp, #8
 366              	.LCFI14:
 367              		.cfi_def_cfa_offset 16
 368 0004 02AF     		add	r7, sp, #8
 369              	.LCFI15:
 370              		.cfi_def_cfa 7, 8
 166:Src/main.c    ****   /* Enable the CPU Cache */
 167:Src/main.c    ****   CPU_CACHE_Enable();
 371              		.loc 3 167 0
 372 0006 FFF7FEFF 		bl	CPU_CACHE_Enable
 168:Src/main.c    ****   
 169:Src/main.c    ****   /* STM32F7xx HAL library initialization:
 170:Src/main.c    ****        - Configure the Flash ART accelerator on ITCM interface
 171:Src/main.c    ****        - Configure the Systick to generate an interrupt each 1 msec
 172:Src/main.c    ****        - Set NVIC Group Priority to 4
 173:Src/main.c    ****        - Global MSP (MCU Support Package) initialization
 174:Src/main.c    ****      */
 175:Src/main.c    ****   HAL_Init();
 373              		.loc 3 175 0
 374 000a FFF7FEFF 		bl	HAL_Init
 176:Src/main.c    **** 
 177:Src/main.c    ****     /* Configure the system clock to 200 MHz */
 178:Src/main.c    ****   SystemClock_Config(); 
 375              		.loc 3 178 0
 376 000e FFF7FEFF 		bl	SystemClock_Config
 179:Src/main.c    ****   
ARM GAS  /tmp/ccymeQqc.s 			page 56


 180:Src/main.c    ****   /* Initialize all configured peripherals */
 181:Src/main.c    ****   MX_GPIO_Init();
 377              		.loc 3 181 0
 378 0012 FFF7FEFF 		bl	MX_GPIO_Init
 182:Src/main.c    ****   MX_RTC_Init();  
 379              		.loc 3 182 0
 380 0016 FFF7FEFF 		bl	MX_RTC_Init
 183:Src/main.c    ****   MX_FMC_Init();
 381              		.loc 3 183 0
 382 001a FFF7FEFF 		bl	MX_FMC_Init
 184:Src/main.c    ****   
 185:Src/main.c    ****   SEGGER_SYSVIEW_Conf();
 383              		.loc 3 185 0
 384 001e FFF7FEFF 		bl	SEGGER_SYSVIEW_Conf
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* Miscellaneous initialisation including preparing the logging and seeding
 188:Src/main.c    ****   the random number generator. */
 189:Src/main.c    ****   prvMiscInitialisation();
 385              		.loc 3 189 0
 386 0022 FFF7FEFF 		bl	prvMiscInitialisation
 190:Src/main.c    **** 
 191:Src/main.c    ****   /* Initialise the network interface.
 192:Src/main.c    ****   ***NOTE*** Tasks that use the network are created in the network event hook
 193:Src/main.c    ****   when the network is connected and ready for use (see the definition of
 194:Src/main.c    ****   vApplicationIPNetworkEventHook() below).  The address values passed in here
 195:Src/main.c    ****   are used if ipconfigUSE_DHCP is set to 0, or if ipconfigUSE_DHCP is set to 1
 196:Src/main.c    ****   but a DHCP server cannot be	contacted. */
 197:Src/main.c    ****   FreeRTOS_printf( ( "FreeRTOS_IPInit\n" ) );
 387              		.loc 3 197 0
 388 0026 1148     		ldr	r0, .L15
 389 0028 FFF7FEFF 		bl	lUDPLoggingPrintf
 198:Src/main.c    ****   FreeRTOS_IPInit( ucIPAddress, ucNetMask, ucGatewayAddress, ucDNSServerAddress, ucMACAddress );
 390              		.loc 3 198 0
 391 002c 104B     		ldr	r3, .L15+4
 392 002e 0093     		str	r3, [sp]
 393 0030 1048     		ldr	r0, .L15+8
 394 0032 1149     		ldr	r1, .L15+12
 395 0034 114A     		ldr	r2, .L15+16
 396 0036 124B     		ldr	r3, .L15+20
 397 0038 FFF7FEFF 		bl	FreeRTOS_IPInit
 199:Src/main.c    **** 
 200:Src/main.c    **** 
 201:Src/main.c    **** 
 202:Src/main.c    **** 
 203:Src/main.c    ****   xTaskCreate(blink_task, "Blink_task", configMINIMAL_STACK_SIZE, NULL, 1, ( TaskHandle_t * )NULL);
 398              		.loc 3 203 0
 399 003c 0123     		movs	r3, #1
 400 003e 0093     		str	r3, [sp]
 401 0040 0023     		movs	r3, #0
 402 0042 0193     		str	r3, [sp, #4]
 403 0044 0F48     		ldr	r0, .L15+24
 404 0046 1049     		ldr	r1, .L15+28
 405 0048 8022     		movs	r2, #128
 406 004a 0023     		movs	r3, #0
 407 004c FFF7FEFF 		bl	xTaskCreate
 204:Src/main.c    ****   xTaskCreate(BSP_Config_task, "BSP_Config", configMINIMAL_STACK_SIZE*2, NULL, 1, ( TaskHandle_t * 
 408              		.loc 3 204 0
ARM GAS  /tmp/ccymeQqc.s 			page 57


 409 0050 0123     		movs	r3, #1
 410 0052 0093     		str	r3, [sp]
 411 0054 0023     		movs	r3, #0
 412 0056 0193     		str	r3, [sp, #4]
 413 0058 0C48     		ldr	r0, .L15+32
 414 005a 0D49     		ldr	r1, .L15+36
 415 005c 4FF48072 		mov	r2, #256
 416 0060 0023     		movs	r3, #0
 417 0062 FFF7FEFF 		bl	xTaskCreate
 205:Src/main.c    **** 
 206:Src/main.c    ****   //BSP_Config();
 207:Src/main.c    ****   vTaskStartScheduler();
 418              		.loc 3 207 0
 419 0066 FFF7FEFF 		bl	vTaskStartScheduler
 420              	.L14:
 208:Src/main.c    **** 
 209:Src/main.c    ****   
 210:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 211:Src/main.c    ****   for( ;; );
 421              		.loc 3 211 0 discriminator 1
 422 006a FEE7     		b	.L14
 423              	.L16:
 424              		.align	2
 425              	.L15:
 426 006c 14000000 		.word	.LC1
 427 0070 00000000 		.word	ucMACAddress
 428 0074 00000000 		.word	ucIPAddress
 429 0078 00000000 		.word	ucNetMask
 430 007c 00000000 		.word	ucGatewayAddress
 431 0080 00000000 		.word	ucDNSServerAddress
 432 0084 00000000 		.word	blink_task
 433 0088 28000000 		.word	.LC2
 434 008c 00000000 		.word	BSP_Config_task
 435 0090 34000000 		.word	.LC3
 436              		.cfi_endproc
 437              	.LFE151:
 439              		.section	.text.prvMiscInitialisation,"ax",%progbits
 440              		.align	2
 441              		.thumb
 442              		.thumb_func
 444              	prvMiscInitialisation:
 445              	.LFB152:
 212:Src/main.c    **** }
 213:Src/main.c    **** 
 214:Src/main.c    **** 
 215:Src/main.c    **** static void prvMiscInitialisation( void )
 216:Src/main.c    **** {
 446              		.loc 3 216 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
 451              	.LCFI16:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccymeQqc.s 			page 58


 456              	.LCFI17:
 457              		.cfi_def_cfa_register 7
 217:Src/main.c    **** 	/* Heap_5 is used so the maximum heap size available can be calculated and
 218:Src/main.c    **** 	configured at run time. */
 219:Src/main.c    **** 	prvInitialiseHeap();
 458              		.loc 3 219 0
 459 0004 FFF7FEFF 		bl	prvInitialiseHeap
 220:Src/main.c    **** 
 221:Src/main.c    **** 	/* Timer2 initialization function.
 222:Src/main.c    **** 	ullGetHighResolutionTime() will be used to get the running time in uS. */
 223:Src/main.c    **** 	vStartHighResolutionTimer();
 460              		.loc 3 223 0
 461 0008 FFF7FEFF 		bl	vStartHighResolutionTimer
 224:Src/main.c    **** }
 462              		.loc 3 224 0
 463 000c 80BD     		pop	{r7, pc}
 464              		.cfi_endproc
 465              	.LFE152:
 467 000e 00BF     		.section	.rodata
 468 003f 00       		.align	2
 469              	.LC4:
 470 0040 496E2074 		.ascii	"In the IDEL TASK\000"
 470      68652049 
 470      44454C20 
 470      5441534B 
 470      00
 471              		.section	.text.vApplicationIdleHook,"ax",%progbits
 472              		.align	2
 473              		.global	vApplicationIdleHook
 474              		.thumb
 475              		.thumb_func
 477              	vApplicationIdleHook:
 478              	.LFB153:
 225:Src/main.c    **** 
 226:Src/main.c    **** void vApplicationIdleHook( void )
 227:Src/main.c    **** {
 479              		.loc 3 227 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 8
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              	.LCFI18:
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 82B0     		sub	sp, sp, #8
 489              	.LCFI19:
 490              		.cfi_def_cfa_offset 16
 491 0004 00AF     		add	r7, sp, #0
 492              	.LCFI20:
 493              		.cfi_def_cfa_register 7
 228:Src/main.c    **** const TickType_t xToggleRate = pdMS_TO_TICKS( 2000UL );
 494              		.loc 3 228 0
 495 0006 4FF4FA63 		mov	r3, #2000
 496 000a 7B60     		str	r3, [r7, #4]
 229:Src/main.c    **** static TickType_t xLastToggle = 0, xTimeNow;
 230:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 59


 231:Src/main.c    **** 	xTimeNow = xTaskGetTickCount();
 497              		.loc 3 231 0
 498 000c FFF7FEFF 		bl	xTaskGetTickCount
 499 0010 0246     		mov	r2, r0
 500 0012 0C4B     		ldr	r3, .L20
 501 0014 1A60     		str	r2, [r3]
 232:Src/main.c    **** 
 233:Src/main.c    **** 	/* As there is not Timer task, toggle the LED 'manually'.  Doing this from
 234:Src/main.c    **** 	the Idle task will also provide visual feedback of the processor load. */
 235:Src/main.c    **** 	if( ( xTimeNow - xLastToggle ) >= xToggleRate )
 502              		.loc 3 235 0
 503 0016 0B4B     		ldr	r3, .L20
 504 0018 1A68     		ldr	r2, [r3]
 505 001a 0B4B     		ldr	r3, .L20+4
 506 001c 1B68     		ldr	r3, [r3]
 507 001e D21A     		subs	r2, r2, r3
 508 0020 7B68     		ldr	r3, [r7, #4]
 509 0022 9A42     		cmp	r2, r3
 510 0024 0BD3     		bcc	.L18
 236:Src/main.c    **** 	{
 237:Src/main.c    **** 		BSP_LED_Toggle(LED1);
 511              		.loc 3 237 0
 512 0026 0020     		movs	r0, #0
 513 0028 FFF7FEFF 		bl	BSP_LED_Toggle
 238:Src/main.c    **** 		xLastToggle += xToggleRate;
 514              		.loc 3 238 0
 515 002c 064B     		ldr	r3, .L20+4
 516 002e 1A68     		ldr	r2, [r3]
 517 0030 7B68     		ldr	r3, [r7, #4]
 518 0032 1344     		add	r3, r3, r2
 519 0034 044A     		ldr	r2, .L20+4
 520 0036 1360     		str	r3, [r2]
 239:Src/main.c    **** 		FreeRTOS_printf( ( "In the IDEL TASK") );
 521              		.loc 3 239 0
 522 0038 0448     		ldr	r0, .L20+8
 523 003a FFF7FEFF 		bl	lUDPLoggingPrintf
 524              	.L18:
 240:Src/main.c    **** 	}
 241:Src/main.c    **** }
 525              		.loc 3 241 0
 526 003e 0837     		adds	r7, r7, #8
 527              	.LCFI21:
 528              		.cfi_def_cfa_offset 8
 529 0040 BD46     		mov	sp, r7
 530              	.LCFI22:
 531              		.cfi_def_cfa_register 13
 532              		@ sp needed
 533 0042 80BD     		pop	{r7, pc}
 534              	.L21:
 535              		.align	2
 536              	.L20:
 537 0044 00000000 		.word	xTimeNow.10665
 538 0048 00000000 		.word	xLastToggle.10664
 539 004c 40000000 		.word	.LC4
 540              		.cfi_endproc
 541              	.LFE153:
 543              		.section	.rodata
ARM GAS  /tmp/ccymeQqc.s 			page 60


 544 0051 000000   		.align	2
 545              	.LC5:
 546 0054 76417070 		.ascii	"vApplicationIPNetworkEventHook: event %ld\012\000"
 546      6C696361 
 546      74696F6E 
 546      49504E65 
 546      74776F72 
 547 007f 00       		.align	2
 548              	.LC6:
 549 0080 25752E25 		.ascii	"%u.%u.%u.%u\000"
 549      752E2575 
 549      2E257500 
 550              		.align	2
 551              	.LC7:
 552 008c 49502041 		.ascii	"IP Address: %s\012\000"
 552      64647265 
 552      73733A20 
 552      25730A00 
 553              		.align	2
 554              	.LC8:
 555 009c 5375626E 		.ascii	"Subnet Mask: %s\012\000"
 555      6574204D 
 555      61736B3A 
 555      2025730A 
 555      00
 556 00ad 000000   		.align	2
 557              	.LC9:
 558 00b0 47617465 		.ascii	"Gateway Address: %s\012\000"
 558      77617920 
 558      41646472 
 558      6573733A 
 558      2025730A 
 559 00c5 000000   		.align	2
 560              	.LC10:
 561 00c8 444E5320 		.ascii	"DNS Server Address: %s\012\000"
 561      53657276 
 561      65722041 
 561      64647265 
 561      73733A20 
 562              		.section	.text.vApplicationIPNetworkEventHook,"ax",%progbits
 563              		.align	2
 564              		.global	vApplicationIPNetworkEventHook
 565              		.thumb
 566              		.thumb_func
 568              	vApplicationIPNetworkEventHook:
 569              	.LFB154:
 242:Src/main.c    **** 
 243:Src/main.c    **** /* Called by FreeRTOS+TCP when the network connects or disconnects.  Disconnect
 244:Src/main.c    **** events are only received if implemented in the MAC driver. */
 245:Src/main.c    **** void vApplicationIPNetworkEventHook( eIPCallbackEvent_t eNetworkEvent )
 246:Src/main.c    **** {
 570              		.loc 3 246 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 40
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574 0000 B0B5     		push	{r4, r5, r7, lr}
 575              	.LCFI23:
ARM GAS  /tmp/ccymeQqc.s 			page 61


 576              		.cfi_def_cfa_offset 16
 577              		.cfi_offset 4, -16
 578              		.cfi_offset 5, -12
 579              		.cfi_offset 7, -8
 580              		.cfi_offset 14, -4
 581 0002 8CB0     		sub	sp, sp, #48
 582              	.LCFI24:
 583              		.cfi_def_cfa_offset 64
 584 0004 02AF     		add	r7, sp, #8
 585              	.LCFI25:
 586              		.cfi_def_cfa 7, 56
 587 0006 0346     		mov	r3, r0
 588 0008 FB71     		strb	r3, [r7, #7]
 247:Src/main.c    **** uint32_t ulIPAddress, ulNetMask, ulGatewayAddress, ulDNSServerAddress;
 248:Src/main.c    **** char cBuffer[ 16 ];
 249:Src/main.c    **** static BaseType_t xTasksAlreadyCreated = pdFALSE;
 250:Src/main.c    **** 
 251:Src/main.c    **** 	FreeRTOS_printf( ( "vApplicationIPNetworkEventHook: event %ld\n", eNetworkEvent ) );
 589              		.loc 3 251 0
 590 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 591 000c 4248     		ldr	r0, .L25
 592 000e 1946     		mov	r1, r3
 593 0010 FFF7FEFF 		bl	lUDPLoggingPrintf
 252:Src/main.c    **** 
 253:Src/main.c    **** 	/* If the network has just come up...*/
 254:Src/main.c    **** 	if( eNetworkEvent == eNetworkUp )
 594              		.loc 3 254 0
 595 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 596 0016 002B     		cmp	r3, #0
 597 0018 7AD1     		bne	.L22
 255:Src/main.c    **** 	{
 256:Src/main.c    **** 		/* Create the tasks that use the IP stack if they have not already been
 257:Src/main.c    **** 		created. */
 258:Src/main.c    **** 		if( xTasksAlreadyCreated == pdFALSE )
 598              		.loc 3 258 0
 599 001a 404B     		ldr	r3, .L25+4
 600 001c 1B68     		ldr	r3, [r3]
 601 001e 002B     		cmp	r3, #0
 602 0020 04D1     		bne	.L24
 259:Src/main.c    **** 		{
 260:Src/main.c    **** 			/* Tasks that use the TCP/IP stack can be created here. */
 261:Src/main.c    **** 
 262:Src/main.c    **** 			/* Start a new task to fetch logging lines and send them out. */
 263:Src/main.c    **** 			#if( mainCREATE_UDP_LOGGING_TASK == 1 )
 264:Src/main.c    **** 			{
 265:Src/main.c    **** 				vUDPLoggingTaskCreate();
 603              		.loc 3 265 0
 604 0022 FFF7FEFF 		bl	vUDPLoggingTaskCreate
 266:Src/main.c    **** 			}
 267:Src/main.c    **** 			#endif
 268:Src/main.c    **** 
 269:Src/main.c    **** 			#if( ( mainCREATE_FTP_SERVER == 1 ) || ( mainCREATE_HTTP_SERVER == 1 ) )
 270:Src/main.c    **** 			{
 271:Src/main.c    **** 				/* Let the server work task now it can now create the servers. */
 272:Src/main.c    **** 				xTaskNotifyGive( xServerWorkTaskHandle );
 273:Src/main.c    **** 			}
 274:Src/main.c    **** 			#endif
ARM GAS  /tmp/ccymeQqc.s 			page 62


 275:Src/main.c    **** 
 276:Src/main.c    **** 			#if( mainCREATE_TCP_ECHO_CLIENT_TASKS_SINGLE == 1 )
 277:Src/main.c    **** 			{
 278:Src/main.c    **** 				vStartTCPEchoClientTasks_SingleTasks( mainECHO_CLIENT_TASK_STACK_SIZE, mainECHO_CLIENT_TASK_PRI
 279:Src/main.c    **** 			}
 280:Src/main.c    **** 			#endif
 281:Src/main.c    **** 
 282:Src/main.c    **** 			#if( mainCREATE_SIMPLE_TCP_ECHO_SERVER == 1 )
 283:Src/main.c    **** 			{
 284:Src/main.c    **** 				vStartSimpleTCPServerTasks( mainECHO_SERVER_STACK_SIZE, mainECHO_SERVER_TASK_PRIORITY );
 285:Src/main.c    **** 			}
 286:Src/main.c    **** 			#endif
 287:Src/main.c    **** 
 288:Src/main.c    **** 			/* Register example commands with the FreeRTOS+CLI command
 289:Src/main.c    **** 			interpreter via the UDP port specified by the
 290:Src/main.c    **** 			mainUDP_CLI_PORT_NUMBER constant.  If the HTTP or FTP servers are
 291:Src/main.c    **** 			being created then file system related commands will also be
 292:Src/main.c    **** 			registered from the TCP server task. */
 293:Src/main.c    **** 			#if( mainCREATE_UDP_CLI_TASKS == 1 )
 294:Src/main.c    **** 			{
 295:Src/main.c    **** 				vRegisterSampleCLICommands();
 296:Src/main.c    **** 				vRegisterTCPCLICommands();
 297:Src/main.c    **** 				vStartUDPCommandInterpreterTask( mainUDP_CLI_TASK_STACK_SIZE, mainUDP_CLI_PORT_NUMBER, mainUDP_
 298:Src/main.c    **** 			}
 299:Src/main.c    **** 			#endif
 300:Src/main.c    **** 
 301:Src/main.c    **** 			xTasksAlreadyCreated = pdTRUE;
 605              		.loc 3 301 0
 606 0026 3D4B     		ldr	r3, .L25+4
 607 0028 0122     		movs	r2, #1
 608 002a 1A60     		str	r2, [r3]
 609              	.L24:
 302:Src/main.c    **** 		}
 303:Src/main.c    **** 
 304:Src/main.c    **** 		/* Print out the network configuration, which may have come from a DHCP
 305:Src/main.c    **** 		server. */
 306:Src/main.c    **** 		FreeRTOS_GetAddressConfiguration( &ulIPAddress, &ulNetMask, &ulGatewayAddress, &ulDNSServerAddres
 610              		.loc 3 306 0
 611 002c 07F12400 		add	r0, r7, #36
 612 0030 07F12001 		add	r1, r7, #32
 613 0034 07F11C02 		add	r2, r7, #28
 614 0038 07F11803 		add	r3, r7, #24
 615 003c FFF7FEFF 		bl	FreeRTOS_GetAddressConfiguration
 307:Src/main.c    **** 		FreeRTOS_inet_ntoa( ulIPAddress, cBuffer );
 616              		.loc 3 307 0
 617 0040 7B6A     		ldr	r3, [r7, #36]
 618 0042 DDB2     		uxtb	r5, r3
 619 0044 7B6A     		ldr	r3, [r7, #36]
 620 0046 1B0A     		lsrs	r3, r3, #8
 621 0048 DCB2     		uxtb	r4, r3
 622 004a 7B6A     		ldr	r3, [r7, #36]
 623 004c 1B0C     		lsrs	r3, r3, #16
 624 004e DAB2     		uxtb	r2, r3
 625 0050 7B6A     		ldr	r3, [r7, #36]
 626 0052 1B0E     		lsrs	r3, r3, #24
 627 0054 07F10801 		add	r1, r7, #8
 628 0058 0092     		str	r2, [sp]
ARM GAS  /tmp/ccymeQqc.s 			page 63


 629 005a 0193     		str	r3, [sp, #4]
 630 005c 0846     		mov	r0, r1
 631 005e 3049     		ldr	r1, .L25+8
 632 0060 2A46     		mov	r2, r5
 633 0062 2346     		mov	r3, r4
 634 0064 FFF7FEFF 		bl	sprintf
 308:Src/main.c    **** 		FreeRTOS_printf( ( "IP Address: %s\n", cBuffer ) );
 635              		.loc 3 308 0
 636 0068 07F10803 		add	r3, r7, #8
 637 006c 2D48     		ldr	r0, .L25+12
 638 006e 1946     		mov	r1, r3
 639 0070 FFF7FEFF 		bl	lUDPLoggingPrintf
 309:Src/main.c    **** 
 310:Src/main.c    **** 		FreeRTOS_inet_ntoa( ulNetMask, cBuffer );
 640              		.loc 3 310 0
 641 0074 3B6A     		ldr	r3, [r7, #32]
 642 0076 DDB2     		uxtb	r5, r3
 643 0078 3B6A     		ldr	r3, [r7, #32]
 644 007a 1B0A     		lsrs	r3, r3, #8
 645 007c DCB2     		uxtb	r4, r3
 646 007e 3B6A     		ldr	r3, [r7, #32]
 647 0080 1B0C     		lsrs	r3, r3, #16
 648 0082 DAB2     		uxtb	r2, r3
 649 0084 3B6A     		ldr	r3, [r7, #32]
 650 0086 1B0E     		lsrs	r3, r3, #24
 651 0088 07F10801 		add	r1, r7, #8
 652 008c 0092     		str	r2, [sp]
 653 008e 0193     		str	r3, [sp, #4]
 654 0090 0846     		mov	r0, r1
 655 0092 2349     		ldr	r1, .L25+8
 656 0094 2A46     		mov	r2, r5
 657 0096 2346     		mov	r3, r4
 658 0098 FFF7FEFF 		bl	sprintf
 311:Src/main.c    **** 		FreeRTOS_printf( ( "Subnet Mask: %s\n", cBuffer ) );
 659              		.loc 3 311 0
 660 009c 07F10803 		add	r3, r7, #8
 661 00a0 2148     		ldr	r0, .L25+16
 662 00a2 1946     		mov	r1, r3
 663 00a4 FFF7FEFF 		bl	lUDPLoggingPrintf
 312:Src/main.c    **** 
 313:Src/main.c    **** 		FreeRTOS_inet_ntoa( ulGatewayAddress, cBuffer );
 664              		.loc 3 313 0
 665 00a8 FB69     		ldr	r3, [r7, #28]
 666 00aa DDB2     		uxtb	r5, r3
 667 00ac FB69     		ldr	r3, [r7, #28]
 668 00ae 1B0A     		lsrs	r3, r3, #8
 669 00b0 DCB2     		uxtb	r4, r3
 670 00b2 FB69     		ldr	r3, [r7, #28]
 671 00b4 1B0C     		lsrs	r3, r3, #16
 672 00b6 DAB2     		uxtb	r2, r3
 673 00b8 FB69     		ldr	r3, [r7, #28]
 674 00ba 1B0E     		lsrs	r3, r3, #24
 675 00bc 07F10801 		add	r1, r7, #8
 676 00c0 0092     		str	r2, [sp]
 677 00c2 0193     		str	r3, [sp, #4]
 678 00c4 0846     		mov	r0, r1
 679 00c6 1649     		ldr	r1, .L25+8
ARM GAS  /tmp/ccymeQqc.s 			page 64


 680 00c8 2A46     		mov	r2, r5
 681 00ca 2346     		mov	r3, r4
 682 00cc FFF7FEFF 		bl	sprintf
 314:Src/main.c    **** 		FreeRTOS_printf( ( "Gateway Address: %s\n", cBuffer ) );
 683              		.loc 3 314 0
 684 00d0 07F10803 		add	r3, r7, #8
 685 00d4 1548     		ldr	r0, .L25+20
 686 00d6 1946     		mov	r1, r3
 687 00d8 FFF7FEFF 		bl	lUDPLoggingPrintf
 315:Src/main.c    **** 
 316:Src/main.c    **** 		FreeRTOS_inet_ntoa( ulDNSServerAddress, cBuffer );
 688              		.loc 3 316 0
 689 00dc BB69     		ldr	r3, [r7, #24]
 690 00de DDB2     		uxtb	r5, r3
 691 00e0 BB69     		ldr	r3, [r7, #24]
 692 00e2 1B0A     		lsrs	r3, r3, #8
 693 00e4 DCB2     		uxtb	r4, r3
 694 00e6 BB69     		ldr	r3, [r7, #24]
 695 00e8 1B0C     		lsrs	r3, r3, #16
 696 00ea DAB2     		uxtb	r2, r3
 697 00ec BB69     		ldr	r3, [r7, #24]
 698 00ee 1B0E     		lsrs	r3, r3, #24
 699 00f0 07F10801 		add	r1, r7, #8
 700 00f4 0092     		str	r2, [sp]
 701 00f6 0193     		str	r3, [sp, #4]
 702 00f8 0846     		mov	r0, r1
 703 00fa 0949     		ldr	r1, .L25+8
 704 00fc 2A46     		mov	r2, r5
 705 00fe 2346     		mov	r3, r4
 706 0100 FFF7FEFF 		bl	sprintf
 317:Src/main.c    **** 		FreeRTOS_printf( ( "DNS Server Address: %s\n", cBuffer ) );
 707              		.loc 3 317 0
 708 0104 07F10803 		add	r3, r7, #8
 709 0108 0948     		ldr	r0, .L25+24
 710 010a 1946     		mov	r1, r3
 711 010c FFF7FEFF 		bl	lUDPLoggingPrintf
 712              	.L22:
 318:Src/main.c    **** 	}
 319:Src/main.c    **** }
 713              		.loc 3 319 0
 714 0110 2837     		adds	r7, r7, #40
 715              	.LCFI26:
 716              		.cfi_def_cfa_offset 16
 717 0112 BD46     		mov	sp, r7
 718              	.LCFI27:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0114 B0BD     		pop	{r4, r5, r7, pc}
 722              	.L26:
 723 0116 00BF     		.align	2
 724              	.L25:
 725 0118 54000000 		.word	.LC5
 726 011c 00000000 		.word	xTasksAlreadyCreated.10674
 727 0120 80000000 		.word	.LC6
 728 0124 8C000000 		.word	.LC7
 729 0128 9C000000 		.word	.LC8
 730 012c B0000000 		.word	.LC9
ARM GAS  /tmp/ccymeQqc.s 			page 65


 731 0130 C8000000 		.word	.LC10
 732              		.cfi_endproc
 733              	.LFE154:
 735              		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 736              		.align	2
 737              		.global	vApplicationMallocFailedHook
 738              		.thumb
 739              		.thumb_func
 741              	vApplicationMallocFailedHook:
 742              	.LFB155:
 320:Src/main.c    **** /*-----------------------------------------------------------*/
 321:Src/main.c    **** 
 322:Src/main.c    **** void vApplicationMallocFailedHook( void )
 323:Src/main.c    **** {
 743              		.loc 3 323 0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 8
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 0000 80B4     		push	{r7}
 749              	.LCFI28:
 750              		.cfi_def_cfa_offset 4
 751              		.cfi_offset 7, -4
 752 0002 83B0     		sub	sp, sp, #12
 753              	.LCFI29:
 754              		.cfi_def_cfa_offset 16
 755 0004 00AF     		add	r7, sp, #0
 756              	.LCFI30:
 757              		.cfi_def_cfa_register 7
 324:Src/main.c    **** volatile uint32_t ulMallocFailures = 0;
 758              		.loc 3 324 0
 759 0006 0023     		movs	r3, #0
 760 0008 7B60     		str	r3, [r7, #4]
 325:Src/main.c    **** 
 326:Src/main.c    **** 	/* Called if a call to pvPortMalloc() fails because there is insufficient
 327:Src/main.c    **** 	free memory available in the FreeRTOS heap.  pvPortMalloc() is called
 328:Src/main.c    **** 	internally by FreeRTOS API functions that create tasks, queues, software
 329:Src/main.c    **** 	timers, and semaphores.  The size of the FreeRTOS heap is set by the
 330:Src/main.c    **** 	configTOTAL_HEAP_SIZE configuration constant in FreeRTOSConfig.h. */
 331:Src/main.c    **** 	ulMallocFailures++;
 761              		.loc 3 331 0
 762 000a 7B68     		ldr	r3, [r7, #4]
 763 000c 0133     		adds	r3, r3, #1
 764 000e 7B60     		str	r3, [r7, #4]
 332:Src/main.c    **** }
 765              		.loc 3 332 0
 766 0010 0C37     		adds	r7, r7, #12
 767              	.LCFI31:
 768              		.cfi_def_cfa_offset 4
 769 0012 BD46     		mov	sp, r7
 770              	.LCFI32:
 771              		.cfi_def_cfa_register 13
 772              		@ sp needed
 773 0014 5DF8047B 		ldr	r7, [sp], #4
 774              	.LCFI33:
 775              		.cfi_restore 7
 776              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccymeQqc.s 			page 66


 777 0018 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE155:
 781 001a 00BF     		.section	.text.vApplicationStackOverflowHook,"ax",%progbits
 782              		.align	2
 783              		.global	vApplicationStackOverflowHook
 784              		.thumb
 785              		.thumb_func
 787              	vApplicationStackOverflowHook:
 788              	.LFB156:
 333:Src/main.c    **** /*-----------------------------------------------------------*/
 334:Src/main.c    **** 
 335:Src/main.c    **** void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 336:Src/main.c    **** {
 789              		.loc 3 336 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 16
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI34:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 85B0     		sub	sp, sp, #20
 799              	.LCFI35:
 800              		.cfi_def_cfa_offset 24
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI36:
 803              		.cfi_def_cfa_register 7
 804 0006 7860     		str	r0, [r7, #4]
 805 0008 3960     		str	r1, [r7]
 806              	.LBB36:
 807              	.LBB37:
 808              		.file 4 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     All rights reserved
   4:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   5:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   7:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   9:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  13:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  14:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  19:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  20:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
ARM GAS  /tmp/ccymeQqc.s 			page 67


  24:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  25:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  26:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  27:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  32:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  37:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  38:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     defined configASSERT()?
  42:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  43:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     participating in the support forum.
  46:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  52:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  63:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** */
  69:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  70:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  71:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  73:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  74:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  75:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  76:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  77:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  80:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
ARM GAS  /tmp/ccymeQqc.s 			page 68


  81:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  83:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  84:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  85:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  87:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  88:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  89:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  90:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  91:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  92:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  93:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  94:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  96:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  99:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 101:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
 103:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
 105:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
 106:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
 110:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 112:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 114:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
 115:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 120:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
 121:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
 122:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
 123:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
 126:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
 130:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 131:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 132:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) { if( xSwitchRequired != pdFALSE ) { traceISR_EXIT
 135:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 137:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 69


 138:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 139:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 140:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
 141:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 149:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 153:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 158:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 162:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 163:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 164:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 165:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 172:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 174:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 175:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 178:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 179:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 181:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 184:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccymeQqc.s 			page 70


 195:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 196:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 198:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 201:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 202:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 203:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 204:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 206:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 208:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 210:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 215:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 216:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 219:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 221:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 222:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 223:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 224:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 225:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 226:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 227:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 228:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 229:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 230:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 232:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 233:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 235:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 236:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 237:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 809              		.loc 4 237 0
 810              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 811 000a 4FF05003 			mov r3, #80												
 812 000e 83F31188 		msr basepri, r3											
 813 0012 BFF36F8F 		isb														
 814 0016 BFF34F8F 		dsb														
 815              	
 816              	@ 0 "" 2
 817              		.thumb
 818 001a FB60     		str	r3, [r7, #12]
 819              	.L29:
 820              	.LBE37:
 821              	.LBE36:
 337:Src/main.c    **** 	( void ) pcTaskName;
ARM GAS  /tmp/ccymeQqc.s 			page 71


 338:Src/main.c    **** 	( void ) pxTask;
 339:Src/main.c    **** 
 340:Src/main.c    **** 	/* Run time stack overflow checking is performed if
 341:Src/main.c    **** 	configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2.  This hook
 342:Src/main.c    **** 	function is called if a stack overflow is detected. */
 343:Src/main.c    **** 	taskDISABLE_INTERRUPTS();
 344:Src/main.c    **** 	for( ;; );
 822              		.loc 3 344 0 discriminator 1
 823 001c FEE7     		b	.L29
 824              		.cfi_endproc
 825              	.LFE156:
 827 001e 00BF     		.section	.text.uxRand,"ax",%progbits
 828              		.align	2
 829              		.global	uxRand
 830              		.thumb
 831              		.thumb_func
 833              	uxRand:
 834              	.LFB157:
 345:Src/main.c    **** }
 346:Src/main.c    **** /*-----------------------------------------------------------*/
 347:Src/main.c    **** 
 348:Src/main.c    **** UBaseType_t uxRand( void )
 349:Src/main.c    **** {
 835              		.loc 3 349 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 24
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839 0000 80B5     		push	{r7, lr}
 840              	.LCFI37:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 86B0     		sub	sp, sp, #24
 845              	.LCFI38:
 846              		.cfi_def_cfa_offset 32
 847 0004 00AF     		add	r7, sp, #0
 848              	.LCFI39:
 849              		.cfi_def_cfa_register 7
 350:Src/main.c    **** const uint32_t ulMultiplier = 0x015a4e35UL, ulIncrement = 1UL;
 850              		.loc 3 350 0
 851 0006 1A4B     		ldr	r3, .L33
 852 0008 7B61     		str	r3, [r7, #20]
 853 000a 0123     		movs	r3, #1
 854 000c 3B61     		str	r3, [r7, #16]
 351:Src/main.c    **** static BaseType_t xInitialised = pdFALSE;
 352:Src/main.c    **** 
 353:Src/main.c    **** 	/* Don't initialise until the scheduler is running, as the timeout in the
 354:Src/main.c    **** 	random number generator uses the tick count. */
 355:Src/main.c    **** 	if( xInitialised == pdFALSE )
 855              		.loc 3 355 0
 856 000e 194B     		ldr	r3, .L33+4
 857 0010 1B68     		ldr	r3, [r3]
 858 0012 002B     		cmp	r3, #0
 859 0014 19D1     		bne	.L31
 356:Src/main.c    **** 	{
 357:Src/main.c    **** 		if( xTaskGetSchedulerState() !=  taskSCHEDULER_NOT_STARTED )
 860              		.loc 3 357 0
ARM GAS  /tmp/ccymeQqc.s 			page 72


 861 0016 FFF7FEFF 		bl	xTaskGetSchedulerState
 862 001a 0346     		mov	r3, r0
 863 001c 012B     		cmp	r3, #1
 864 001e 14D0     		beq	.L31
 865              	.LBB38:
 358:Src/main.c    **** 		{
 359:Src/main.c    **** 		RNG_HandleTypeDef xRND;
 360:Src/main.c    **** 		uint32_t ulSeed;
 361:Src/main.c    **** 
 362:Src/main.c    **** 			/* Generate a random number with which to seed the local pseudo random
 363:Src/main.c    **** 			number generating function. */
 364:Src/main.c    **** 			HAL_RNG_Init( &xRND );
 866              		.loc 3 364 0
 867 0020 3B1D     		adds	r3, r7, #4
 868 0022 1846     		mov	r0, r3
 869 0024 FFF7FEFF 		bl	HAL_RNG_Init
 365:Src/main.c    **** 			HAL_RNG_MspInit(&xRND);
 870              		.loc 3 365 0
 871 0028 3B1D     		adds	r3, r7, #4
 872 002a 1846     		mov	r0, r3
 873 002c FFF7FEFF 		bl	HAL_RNG_MspInit
 366:Src/main.c    **** 			HAL_RNG_GenerateRandomNumber( &xRND, &ulSeed );
 874              		.loc 3 366 0
 875 0030 3A1D     		adds	r2, r7, #4
 876 0032 3B46     		mov	r3, r7
 877 0034 1046     		mov	r0, r2
 878 0036 1946     		mov	r1, r3
 879 0038 FFF7FEFF 		bl	HAL_RNG_GenerateRandomNumber
 367:Src/main.c    **** 			prvSRand( ulSeed );
 880              		.loc 3 367 0
 881 003c 3B68     		ldr	r3, [r7]
 882 003e 1846     		mov	r0, r3
 883 0040 FFF7FEFF 		bl	prvSRand
 368:Src/main.c    **** 			xInitialised = pdTRUE;
 884              		.loc 3 368 0
 885 0044 0B4B     		ldr	r3, .L33+4
 886 0046 0122     		movs	r2, #1
 887 0048 1A60     		str	r2, [r3]
 888              	.L31:
 889              	.LBE38:
 369:Src/main.c    **** 		}
 370:Src/main.c    **** 	}
 371:Src/main.c    **** 
 372:Src/main.c    **** 	/* Utility function to generate a pseudo random number. */
 373:Src/main.c    **** 
 374:Src/main.c    **** 	ulNextRand = ( ulMultiplier * ulNextRand ) + ulIncrement;
 890              		.loc 3 374 0
 891 004a 0B4B     		ldr	r3, .L33+8
 892 004c 1B68     		ldr	r3, [r3]
 893 004e 7A69     		ldr	r2, [r7, #20]
 894 0050 02FB03F2 		mul	r2, r2, r3
 895 0054 3B69     		ldr	r3, [r7, #16]
 896 0056 1344     		add	r3, r3, r2
 897 0058 074A     		ldr	r2, .L33+8
 898 005a 1360     		str	r3, [r2]
 375:Src/main.c    **** 	return( ( int ) ( ulNextRand >> 16UL ) & 0x7fffUL );
 899              		.loc 3 375 0
ARM GAS  /tmp/ccymeQqc.s 			page 73


 900 005c 064B     		ldr	r3, .L33+8
 901 005e 1B68     		ldr	r3, [r3]
 902 0060 1B0C     		lsrs	r3, r3, #16
 903 0062 C3F30E03 		ubfx	r3, r3, #0, #15
 376:Src/main.c    **** }
 904              		.loc 3 376 0
 905 0066 1846     		mov	r0, r3
 906 0068 1837     		adds	r7, r7, #24
 907              	.LCFI40:
 908              		.cfi_def_cfa_offset 8
 909 006a BD46     		mov	sp, r7
 910              	.LCFI41:
 911              		.cfi_def_cfa_register 13
 912              		@ sp needed
 913 006c 80BD     		pop	{r7, pc}
 914              	.L34:
 915 006e 00BF     		.align	2
 916              	.L33:
 917 0070 354E5A01 		.word	22695477
 918 0074 00000000 		.word	xInitialised.10689
 919 0078 00000000 		.word	ulNextRand
 920              		.cfi_endproc
 921              	.LFE157:
 923              		.section	.text.prvSRand,"ax",%progbits
 924              		.align	2
 925              		.thumb
 926              		.thumb_func
 928              	prvSRand:
 929              	.LFB158:
 377:Src/main.c    **** /*-----------------------------------------------------------*/
 378:Src/main.c    **** 
 379:Src/main.c    **** static void prvSRand( UBaseType_t ulSeed )
 380:Src/main.c    **** {
 930              		.loc 3 380 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 8
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935 0000 80B4     		push	{r7}
 936              	.LCFI42:
 937              		.cfi_def_cfa_offset 4
 938              		.cfi_offset 7, -4
 939 0002 83B0     		sub	sp, sp, #12
 940              	.LCFI43:
 941              		.cfi_def_cfa_offset 16
 942 0004 00AF     		add	r7, sp, #0
 943              	.LCFI44:
 944              		.cfi_def_cfa_register 7
 945 0006 7860     		str	r0, [r7, #4]
 381:Src/main.c    **** 	/* Utility function to seed the pseudo random number generator. */
 382:Src/main.c    **** 	ulNextRand = ulSeed;
 946              		.loc 3 382 0
 947 0008 034A     		ldr	r2, .L36
 948 000a 7B68     		ldr	r3, [r7, #4]
 949 000c 1360     		str	r3, [r2]
 383:Src/main.c    **** }
 950              		.loc 3 383 0
ARM GAS  /tmp/ccymeQqc.s 			page 74


 951 000e 0C37     		adds	r7, r7, #12
 952              	.LCFI45:
 953              		.cfi_def_cfa_offset 4
 954 0010 BD46     		mov	sp, r7
 955              	.LCFI46:
 956              		.cfi_def_cfa_register 13
 957              		@ sp needed
 958 0012 5DF8047B 		ldr	r7, [sp], #4
 959              	.LCFI47:
 960              		.cfi_restore 7
 961              		.cfi_def_cfa_offset 0
 962 0016 7047     		bx	lr
 963              	.L37:
 964              		.align	2
 965              	.L36:
 966 0018 00000000 		.word	ulNextRand
 967              		.cfi_endproc
 968              	.LFE158:
 970              		.section	.text.vApplicationPingReplyHook,"ax",%progbits
 971              		.align	2
 972              		.global	vApplicationPingReplyHook
 973              		.thumb
 974              		.thumb_func
 976              	vApplicationPingReplyHook:
 977              	.LFB159:
 384:Src/main.c    **** /*-----------------------------------------------------------*/
 385:Src/main.c    **** 
 386:Src/main.c    **** void vApplicationPingReplyHook( ePingReplyStatus_t eStatus, uint16_t usIdentifier )
 387:Src/main.c    **** {
 978              		.loc 3 387 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 0000 80B4     		push	{r7}
 984              	.LCFI48:
 985              		.cfi_def_cfa_offset 4
 986              		.cfi_offset 7, -4
 987 0002 83B0     		sub	sp, sp, #12
 988              	.LCFI49:
 989              		.cfi_def_cfa_offset 16
 990 0004 00AF     		add	r7, sp, #0
 991              	.LCFI50:
 992              		.cfi_def_cfa_register 7
 993 0006 0346     		mov	r3, r0
 994 0008 0A46     		mov	r2, r1
 995 000a FB71     		strb	r3, [r7, #7]
 996 000c 1346     		mov	r3, r2	@ movhi
 997 000e BB80     		strh	r3, [r7, #4]	@ movhi
 388:Src/main.c    **** }
 998              		.loc 3 388 0
 999 0010 0C37     		adds	r7, r7, #12
 1000              	.LCFI51:
 1001              		.cfi_def_cfa_offset 4
 1002 0012 BD46     		mov	sp, r7
 1003              	.LCFI52:
 1004              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccymeQqc.s 			page 75


 1005              		@ sp needed
 1006 0014 5DF8047B 		ldr	r7, [sp], #4
 1007              	.LCFI53:
 1008              		.cfi_restore 7
 1009              		.cfi_def_cfa_offset 0
 1010 0018 7047     		bx	lr
 1011              		.cfi_endproc
 1012              	.LFE159:
 1014 001a 00BF     		.section	.text.prvInitialiseHeap,"ax",%progbits
 1015              		.align	2
 1016              		.thumb
 1017              		.thumb_func
 1019              	prvInitialiseHeap:
 1020              	.LFB160:
 389:Src/main.c    **** /*-----------------------------------------------------------*/
 390:Src/main.c    **** 
 391:Src/main.c    **** static void prvInitialiseHeap( void )
 392:Src/main.c    **** {
 1021              		.loc 3 392 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 24
 1024              		@ frame_needed = 1, uses_anonymous_args = 0
 1025 0000 80B5     		push	{r7, lr}
 1026              	.LCFI54:
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 86B0     		sub	sp, sp, #24
 1031              	.LCFI55:
 1032              		.cfi_def_cfa_offset 32
 1033 0004 00AF     		add	r7, sp, #0
 1034              	.LCFI56:
 1035              		.cfi_def_cfa_register 7
 393:Src/main.c    **** extern uint8_t __bss_end__, _estack;
 394:Src/main.c    **** #define HEAP_START		__bss_end__
 395:Src/main.c    **** #define HEAP_END		_estack
 396:Src/main.c    **** 
 397:Src/main.c    **** volatile uint32_t ulHeapSize;
 398:Src/main.c    **** volatile uint8_t *pucHeapStart;
 399:Src/main.c    **** 
 400:Src/main.c    **** 	/* Heap_5 is used so the maximum heap size can be calculated and initialised
 401:Src/main.c    **** 	at run time. */
 402:Src/main.c    **** 	pucHeapStart = ( uint8_t * ) ( ( ( ( uint32_t ) &HEAP_START ) + 7 ) & ~0x07ul );
 1036              		.loc 3 402 0
 1037 0006 104B     		ldr	r3, .L40
 1038 0008 0733     		adds	r3, r3, #7
 1039 000a 23F00703 		bic	r3, r3, #7
 1040 000e 7B61     		str	r3, [r7, #20]
 403:Src/main.c    **** 
 404:Src/main.c    **** 	ulHeapSize = ( uint32_t ) ( &HEAP_END - &HEAP_START );
 1041              		.loc 3 404 0
 1042 0010 0E4A     		ldr	r2, .L40+4
 1043 0012 0D4B     		ldr	r3, .L40
 1044 0014 D31A     		subs	r3, r2, r3
 1045 0016 3B61     		str	r3, [r7, #16]
 405:Src/main.c    **** 	ulHeapSize &= ~0x07ul;
 1046              		.loc 3 405 0
ARM GAS  /tmp/ccymeQqc.s 			page 76


 1047 0018 3B69     		ldr	r3, [r7, #16]
 1048 001a 23F00703 		bic	r3, r3, #7
 1049 001e 3B61     		str	r3, [r7, #16]
 406:Src/main.c    **** 	ulHeapSize -= 1024;
 1050              		.loc 3 406 0
 1051 0020 3B69     		ldr	r3, [r7, #16]
 1052 0022 A3F58063 		sub	r3, r3, #1024
 1053 0026 3B61     		str	r3, [r7, #16]
 407:Src/main.c    **** 
 408:Src/main.c    **** 	HeapRegion_t xHeapRegions[] =
 1054              		.loc 3 408 0
 1055 0028 7B69     		ldr	r3, [r7, #20]
 1056 002a 3B60     		str	r3, [r7]
 1057 002c 3B69     		ldr	r3, [r7, #16]
 1058 002e 7B60     		str	r3, [r7, #4]
 1059 0030 0023     		movs	r3, #0
 1060 0032 BB60     		str	r3, [r7, #8]
 1061 0034 0023     		movs	r3, #0
 1062 0036 FB60     		str	r3, [r7, #12]
 409:Src/main.c    **** 	{
 410:Src/main.c    **** 		{ ( unsigned char *) pucHeapStart, ulHeapSize },
 411:Src/main.c    **** 		{ NULL, 0 }
 412:Src/main.c    ****  	};
 413:Src/main.c    **** 
 414:Src/main.c    **** 	vPortDefineHeapRegions( xHeapRegions );
 1063              		.loc 3 414 0
 1064 0038 3B46     		mov	r3, r7
 1065 003a 1846     		mov	r0, r3
 1066 003c FFF7FEFF 		bl	vPortDefineHeapRegions
 415:Src/main.c    **** }
 1067              		.loc 3 415 0
 1068 0040 1837     		adds	r7, r7, #24
 1069              	.LCFI57:
 1070              		.cfi_def_cfa_offset 8
 1071 0042 BD46     		mov	sp, r7
 1072              	.LCFI58:
 1073              		.cfi_def_cfa_register 13
 1074              		@ sp needed
 1075 0044 80BD     		pop	{r7, pc}
 1076              	.L41:
 1077 0046 00BF     		.align	2
 1078              	.L40:
 1079 0048 00000000 		.word	__bss_end__
 1080 004c 00000000 		.word	_estack
 1081              		.cfi_endproc
 1082              	.LFE160:
 1084              		.section	.text.vOutputChar,"ax",%progbits
 1085              		.align	2
 1086              		.global	vOutputChar
 1087              		.thumb
 1088              		.thumb_func
 1090              	vOutputChar:
 1091              	.LFB161:
 416:Src/main.c    **** /*-----------------------------------------------------------*/
 417:Src/main.c    **** 
 418:Src/main.c    **** void vOutputChar( const char cChar, const TickType_t xTicksToWait  )
 419:Src/main.c    **** {
ARM GAS  /tmp/ccymeQqc.s 			page 77


 1092              		.loc 3 419 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 8
 1095              		@ frame_needed = 1, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097 0000 80B4     		push	{r7}
 1098              	.LCFI59:
 1099              		.cfi_def_cfa_offset 4
 1100              		.cfi_offset 7, -4
 1101 0002 83B0     		sub	sp, sp, #12
 1102              	.LCFI60:
 1103              		.cfi_def_cfa_offset 16
 1104 0004 00AF     		add	r7, sp, #0
 1105              	.LCFI61:
 1106              		.cfi_def_cfa_register 7
 1107 0006 0346     		mov	r3, r0
 1108 0008 3960     		str	r1, [r7]
 1109 000a FB71     		strb	r3, [r7, #7]
 420:Src/main.c    **** 	/* Not doing anything - just required for printf-stdarg.c to link. */
 421:Src/main.c    **** }
 1110              		.loc 3 421 0
 1111 000c 0C37     		adds	r7, r7, #12
 1112              	.LCFI62:
 1113              		.cfi_def_cfa_offset 4
 1114 000e BD46     		mov	sp, r7
 1115              	.LCFI63:
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 0010 5DF8047B 		ldr	r7, [sp], #4
 1119              	.LCFI64:
 1120              		.cfi_restore 7
 1121              		.cfi_def_cfa_offset 0
 1122 0014 7047     		bx	lr
 1123              		.cfi_endproc
 1124              	.LFE161:
 1126 0016 00BF     		.section	.rodata
 1127              		.align	2
 1128              	.LC11:
 1129 00e0 52544F53 		.ascii	"RTOSDemo\000"
 1129      44656D6F 
 1129      00
 1130              		.section	.text.pcApplicationHostnameHook,"ax",%progbits
 1131              		.align	2
 1132              		.global	pcApplicationHostnameHook
 1133              		.thumb
 1134              		.thumb_func
 1136              	pcApplicationHostnameHook:
 1137              	.LFB162:
 422:Src/main.c    **** /*-----------------------------------------------------------*/
 423:Src/main.c    **** 
 424:Src/main.c    **** const char *pcApplicationHostnameHook( void )
 425:Src/main.c    **** {
 1138              		.loc 3 425 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 1, uses_anonymous_args = 0
 1142              		@ link register save eliminated.
ARM GAS  /tmp/ccymeQqc.s 			page 78


 1143 0000 80B4     		push	{r7}
 1144              	.LCFI65:
 1145              		.cfi_def_cfa_offset 4
 1146              		.cfi_offset 7, -4
 1147 0002 00AF     		add	r7, sp, #0
 1148              	.LCFI66:
 1149              		.cfi_def_cfa_register 7
 426:Src/main.c    **** 	/* Assign the name "rtosdemo" to this network node.  This function will be
 427:Src/main.c    **** 	called during the DHCP: the machine will be registered with an IP address
 428:Src/main.c    **** 	plus this name. */
 429:Src/main.c    **** 	return mainHOST_NAME;
 1150              		.loc 3 429 0
 1151 0004 024B     		ldr	r3, .L45
 430:Src/main.c    **** }
 1152              		.loc 3 430 0
 1153 0006 1846     		mov	r0, r3
 1154 0008 BD46     		mov	sp, r7
 1155              	.LCFI67:
 1156              		.cfi_def_cfa_register 13
 1157              		@ sp needed
 1158 000a 5DF8047B 		ldr	r7, [sp], #4
 1159              	.LCFI68:
 1160              		.cfi_restore 7
 1161              		.cfi_def_cfa_offset 0
 1162 000e 7047     		bx	lr
 1163              	.L46:
 1164              		.align	2
 1165              	.L45:
 1166 0010 E0000000 		.word	.LC11
 1167              		.cfi_endproc
 1168              	.LFE162:
 1170              		.section	.rodata
 1171 00e9 000000   		.align	2
 1172              	.LC12:
 1173 00ec 73746D33 		.ascii	"stm32\000"
 1173      3200
 1174              		.section	.text.xApplicationDNSQueryHook,"ax",%progbits
 1175              		.align	2
 1176              		.global	xApplicationDNSQueryHook
 1177              		.thumb
 1178              		.thumb_func
 1180              	xApplicationDNSQueryHook:
 1181              	.LFB163:
 431:Src/main.c    **** /*-----------------------------------------------------------*/
 432:Src/main.c    **** 
 433:Src/main.c    **** 
 434:Src/main.c    **** BaseType_t xApplicationDNSQueryHook( const char *pcName )
 435:Src/main.c    **** {
 1182              		.loc 3 435 0
 1183              		.cfi_startproc
 1184              		@ args = 0, pretend = 0, frame = 16
 1185              		@ frame_needed = 1, uses_anonymous_args = 0
 1186 0000 80B5     		push	{r7, lr}
 1187              	.LCFI69:
 1188              		.cfi_def_cfa_offset 8
 1189              		.cfi_offset 7, -8
 1190              		.cfi_offset 14, -4
ARM GAS  /tmp/ccymeQqc.s 			page 79


 1191 0002 84B0     		sub	sp, sp, #16
 1192              	.LCFI70:
 1193              		.cfi_def_cfa_offset 24
 1194 0004 00AF     		add	r7, sp, #0
 1195              	.LCFI71:
 1196              		.cfi_def_cfa_register 7
 1197 0006 7860     		str	r0, [r7, #4]
 436:Src/main.c    **** BaseType_t xReturn;
 437:Src/main.c    **** 
 438:Src/main.c    **** 	/* Determine if a name lookup is for this node.  Two names are given
 439:Src/main.c    **** 	to this node: that returned by pcApplicationHostnameHook() and that set
 440:Src/main.c    **** 	by mainDEVICE_NICK_NAME. */
 441:Src/main.c    **** 	if( strcasecmp( pcName, pcApplicationHostnameHook() ) == 0 )
 1198              		.loc 3 441 0
 1199 0008 FFF7FEFF 		bl	pcApplicationHostnameHook
 1200 000c 0346     		mov	r3, r0
 1201 000e 7868     		ldr	r0, [r7, #4]
 1202 0010 1946     		mov	r1, r3
 1203 0012 FFF7FEFF 		bl	strcasecmp
 1204 0016 0346     		mov	r3, r0
 1205 0018 002B     		cmp	r3, #0
 1206 001a 02D1     		bne	.L48
 442:Src/main.c    **** 	{
 443:Src/main.c    **** 		xReturn = pdPASS;
 1207              		.loc 3 443 0
 1208 001c 0123     		movs	r3, #1
 1209 001e FB60     		str	r3, [r7, #12]
 1210 0020 0BE0     		b	.L49
 1211              	.L48:
 444:Src/main.c    **** 	}
 445:Src/main.c    **** 	else if( strcasecmp( pcName, mainDEVICE_NICK_NAME ) == 0 )
 1212              		.loc 3 445 0
 1213 0022 7868     		ldr	r0, [r7, #4]
 1214 0024 0749     		ldr	r1, .L52
 1215 0026 FFF7FEFF 		bl	strcasecmp
 1216 002a 0346     		mov	r3, r0
 1217 002c 002B     		cmp	r3, #0
 1218 002e 02D1     		bne	.L50
 446:Src/main.c    **** 	{
 447:Src/main.c    **** 		xReturn = pdPASS;
 1219              		.loc 3 447 0
 1220 0030 0123     		movs	r3, #1
 1221 0032 FB60     		str	r3, [r7, #12]
 1222 0034 01E0     		b	.L49
 1223              	.L50:
 448:Src/main.c    **** 	}
 449:Src/main.c    **** 	else
 450:Src/main.c    **** 	{
 451:Src/main.c    **** 		xReturn = pdFAIL;
 1224              		.loc 3 451 0
 1225 0036 0023     		movs	r3, #0
 1226 0038 FB60     		str	r3, [r7, #12]
 1227              	.L49:
 452:Src/main.c    **** 	}
 453:Src/main.c    **** 
 454:Src/main.c    **** 	return xReturn;
 1228              		.loc 3 454 0
ARM GAS  /tmp/ccymeQqc.s 			page 80


 1229 003a FB68     		ldr	r3, [r7, #12]
 455:Src/main.c    **** }
 1230              		.loc 3 455 0
 1231 003c 1846     		mov	r0, r3
 1232 003e 1037     		adds	r7, r7, #16
 1233              	.LCFI72:
 1234              		.cfi_def_cfa_offset 8
 1235 0040 BD46     		mov	sp, r7
 1236              	.LCFI73:
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed
 1239 0042 80BD     		pop	{r7, pc}
 1240              	.L53:
 1241              		.align	2
 1242              	.L52:
 1243 0044 EC000000 		.word	.LC12
 1244              		.cfi_endproc
 1245              	.LFE163:
 1247              		.section	.text.xGetRunTimeCounterValue,"ax",%progbits
 1248              		.align	2
 1249              		.global	xGetRunTimeCounterValue
 1250              		.thumb
 1251              		.thumb_func
 1253              	xGetRunTimeCounterValue:
 1254              	.LFB164:
 456:Src/main.c    **** /*-----------------------------------------------------------*/
 457:Src/main.c    **** 
 458:Src/main.c    **** uint32_t xGetRunTimeCounterValue( void )
 459:Src/main.c    **** {
 1255              		.loc 3 459 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 1, uses_anonymous_args = 0
 1259 0000 80B5     		push	{r7, lr}
 1260              	.LCFI74:
 1261              		.cfi_def_cfa_offset 8
 1262              		.cfi_offset 7, -8
 1263              		.cfi_offset 14, -4
 1264 0002 00AF     		add	r7, sp, #0
 1265              	.LCFI75:
 1266              		.cfi_def_cfa_register 7
 460:Src/main.c    **** static uint64_t ullHiresTime = 0; /* Is always 0? */
 461:Src/main.c    **** 
 462:Src/main.c    **** 	return ( uint32_t ) ( ullGetHighResolutionTime() - ullHiresTime );
 1267              		.loc 3 462 0
 1268 0004 FFF7FEFF 		bl	ullGetHighResolutionTime
 1269 0008 0246     		mov	r2, r0
 1270 000a 0B46     		mov	r3, r1
 1271 000c 1146     		mov	r1, r2
 1272 000e 034B     		ldr	r3, .L56
 1273 0010 D3E90023 		ldrd	r2, [r3]
 1274 0014 1346     		mov	r3, r2
 1275 0016 CB1A     		subs	r3, r1, r3
 463:Src/main.c    **** }
 1276              		.loc 3 463 0
 1277 0018 1846     		mov	r0, r3
 1278 001a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccymeQqc.s 			page 81


 1279              	.L57:
 1280              		.align	2
 1281              	.L56:
 1282 001c 00000000 		.word	ullHiresTime.10723
 1283              		.cfi_endproc
 1284              	.LFE164:
 1286              		.section	.text.vApplicationTickHook,"ax",%progbits
 1287              		.align	2
 1288              		.global	vApplicationTickHook
 1289              		.thumb
 1290              		.thumb_func
 1292              	vApplicationTickHook:
 1293              	.LFB165:
 464:Src/main.c    **** /*-----------------------------------------------------------*/
 465:Src/main.c    **** 
 466:Src/main.c    **** void vApplicationTickHook( void )
 467:Src/main.c    **** {
 1294              		.loc 3 467 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 0
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298 0000 80B5     		push	{r7, lr}
 1299              	.LCFI76:
 1300              		.cfi_def_cfa_offset 8
 1301              		.cfi_offset 7, -8
 1302              		.cfi_offset 14, -4
 1303 0002 00AF     		add	r7, sp, #0
 1304              	.LCFI77:
 1305              		.cfi_def_cfa_register 7
 468:Src/main.c    **** 	/* Call the ST HAL tick function. */
 469:Src/main.c    **** 	HAL_IncTick();
 1306              		.loc 3 469 0
 1307 0004 FFF7FEFF 		bl	HAL_IncTick
 470:Src/main.c    **** }
 1308              		.loc 3 470 0
 1309 0008 80BD     		pop	{r7, pc}
 1310              		.cfi_endproc
 1311              	.LFE165:
 1313 000a 00BF     		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 1314              		.align	2
 1315              		.global	HAL_ETH_MspInit
 1316              		.thumb
 1317              		.thumb_func
 1319              	HAL_ETH_MspInit:
 1320              	.LFB166:
 471:Src/main.c    **** /*-----------------------------------------------------------*/
 472:Src/main.c    **** 
 473:Src/main.c    **** 
 474:Src/main.c    **** /**
 475:Src/main.c    ****   * @brief  Initializes the ETH MSP.
 476:Src/main.c    ****   * @param  heth: ETH handle
 477:Src/main.c    ****   * @retval None
 478:Src/main.c    ****   */
 479:Src/main.c    **** void HAL_ETH_MspInit(ETH_HandleTypeDef *heth)
 480:Src/main.c    **** {
 1321              		.loc 3 480 0
 1322              		.cfi_startproc
ARM GAS  /tmp/ccymeQqc.s 			page 82


 1323              		@ args = 0, pretend = 0, frame = 56
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325 0000 80B5     		push	{r7, lr}
 1326              	.LCFI78:
 1327              		.cfi_def_cfa_offset 8
 1328              		.cfi_offset 7, -8
 1329              		.cfi_offset 14, -4
 1330 0002 8EB0     		sub	sp, sp, #56
 1331              	.LCFI79:
 1332              		.cfi_def_cfa_offset 64
 1333 0004 00AF     		add	r7, sp, #0
 1334              	.LCFI80:
 1335              		.cfi_def_cfa_register 7
 1336 0006 7860     		str	r0, [r7, #4]
 1337              	.LBB39:
 481:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStructure;
 482:Src/main.c    **** 
 483:Src/main.c    ****   /* Enable GPIOs clocks */
 484:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1338              		.loc 3 484 0
 1339 0008 394A     		ldr	r2, .L60
 1340 000a 394B     		ldr	r3, .L60
 1341 000c 1B6B     		ldr	r3, [r3, #48]
 1342 000e 43F00103 		orr	r3, r3, #1
 1343 0012 1363     		str	r3, [r2, #48]
 1344 0014 364B     		ldr	r3, .L60
 1345 0016 1B6B     		ldr	r3, [r3, #48]
 1346 0018 03F00103 		and	r3, r3, #1
 1347 001c 3B62     		str	r3, [r7, #32]
 1348 001e 3B6A     		ldr	r3, [r7, #32]
 1349              	.LBE39:
 1350              	.LBB40:
 485:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1351              		.loc 3 485 0
 1352 0020 334A     		ldr	r2, .L60
 1353 0022 334B     		ldr	r3, .L60
 1354 0024 1B6B     		ldr	r3, [r3, #48]
 1355 0026 43F00403 		orr	r3, r3, #4
 1356 002a 1363     		str	r3, [r2, #48]
 1357 002c 304B     		ldr	r3, .L60
 1358 002e 1B6B     		ldr	r3, [r3, #48]
 1359 0030 03F00403 		and	r3, r3, #4
 1360 0034 FB61     		str	r3, [r7, #28]
 1361 0036 FB69     		ldr	r3, [r7, #28]
 1362              	.LBE40:
 1363              	.LBB41:
 486:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1364              		.loc 3 486 0
 1365 0038 2D4A     		ldr	r2, .L60
 1366 003a 2D4B     		ldr	r3, .L60
 1367 003c 1B6B     		ldr	r3, [r3, #48]
 1368 003e 43F04003 		orr	r3, r3, #64
 1369 0042 1363     		str	r3, [r2, #48]
 1370 0044 2A4B     		ldr	r3, .L60
 1371 0046 1B6B     		ldr	r3, [r3, #48]
 1372 0048 03F04003 		and	r3, r3, #64
 1373 004c BB61     		str	r3, [r7, #24]
ARM GAS  /tmp/ccymeQqc.s 			page 83


 1374 004e BB69     		ldr	r3, [r7, #24]
 1375              	.LBE41:
 487:Src/main.c    **** 
 488:Src/main.c    **** /* Ethernet pins configuration ************************************************/
 489:Src/main.c    **** /*
 490:Src/main.c    ****         RMII_REF_CLK ----------------------> PA1
 491:Src/main.c    ****         RMII_MDIO -------------------------> PA2
 492:Src/main.c    ****         RMII_MDC --------------------------> PC1
 493:Src/main.c    ****         RMII_MII_CRS_DV -------------------> PA7
 494:Src/main.c    ****         RMII_MII_RXD0 ---------------------> PC4
 495:Src/main.c    ****         RMII_MII_RXD1 ---------------------> PC5
 496:Src/main.c    ****         RMII_MII_RXER ---------------------> PG2
 497:Src/main.c    ****         RMII_MII_TX_EN --------------------> PG11
 498:Src/main.c    ****         RMII_MII_TXD0 ---------------------> PG13
 499:Src/main.c    ****         RMII_MII_TXD1 ---------------------> PG14
 500:Src/main.c    ****   */
 501:Src/main.c    **** 
 502:Src/main.c    ****   /* Configure PA1, PA2 and PA7 */
 503:Src/main.c    ****   GPIO_InitStructure.Speed = GPIO_SPEED_HIGH;
 1376              		.loc 3 503 0
 1377 0050 0323     		movs	r3, #3
 1378 0052 3B63     		str	r3, [r7, #48]
 504:Src/main.c    ****   GPIO_InitStructure.Mode = GPIO_MODE_AF_PP;
 1379              		.loc 3 504 0
 1380 0054 0223     		movs	r3, #2
 1381 0056 BB62     		str	r3, [r7, #40]
 505:Src/main.c    ****   GPIO_InitStructure.Pull = GPIO_NOPULL;
 1382              		.loc 3 505 0
 1383 0058 0023     		movs	r3, #0
 1384 005a FB62     		str	r3, [r7, #44]
 506:Src/main.c    ****   GPIO_InitStructure.Alternate = GPIO_AF11_ETH;
 1385              		.loc 3 506 0
 1386 005c 0B23     		movs	r3, #11
 1387 005e 7B63     		str	r3, [r7, #52]
 507:Src/main.c    ****   GPIO_InitStructure.Pin = GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_7;
 1388              		.loc 3 507 0
 1389 0060 8623     		movs	r3, #134
 1390 0062 7B62     		str	r3, [r7, #36]
 508:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStructure);
 1391              		.loc 3 508 0
 1392 0064 07F12403 		add	r3, r7, #36
 1393 0068 2248     		ldr	r0, .L60+4
 1394 006a 1946     		mov	r1, r3
 1395 006c FFF7FEFF 		bl	HAL_GPIO_Init
 509:Src/main.c    **** 
 510:Src/main.c    ****   /* Configure PC1, PC4 and PC5 */
 511:Src/main.c    ****   GPIO_InitStructure.Pin = GPIO_PIN_1 | GPIO_PIN_4 | GPIO_PIN_5;
 1396              		.loc 3 511 0
 1397 0070 3223     		movs	r3, #50
 1398 0072 7B62     		str	r3, [r7, #36]
 512:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStructure);
 1399              		.loc 3 512 0
 1400 0074 07F12403 		add	r3, r7, #36
 1401 0078 1F48     		ldr	r0, .L60+8
 1402 007a 1946     		mov	r1, r3
 1403 007c FFF7FEFF 		bl	HAL_GPIO_Init
 513:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 84


 514:Src/main.c    ****   /* Configure PG2, PG11, PG13 and PG14 */
 515:Src/main.c    ****   GPIO_InitStructure.Pin =  GPIO_PIN_2 | GPIO_PIN_11 | GPIO_PIN_13 | GPIO_PIN_14;
 1404              		.loc 3 515 0
 1405 0080 46F60403 		movw	r3, #26628
 1406 0084 7B62     		str	r3, [r7, #36]
 516:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStructure);
 1407              		.loc 3 516 0
 1408 0086 07F12403 		add	r3, r7, #36
 1409 008a 1C48     		ldr	r0, .L60+12
 1410 008c 1946     		mov	r1, r3
 1411 008e FFF7FEFF 		bl	HAL_GPIO_Init
 517:Src/main.c    **** 
 518:Src/main.c    ****   /* Enable the Ethernet global Interrupt */
 519:Src/main.c    ****   HAL_NVIC_SetPriority(ETH_IRQn, 0x7, 0);
 1412              		.loc 3 519 0
 1413 0092 3D20     		movs	r0, #61
 1414 0094 0721     		movs	r1, #7
 1415 0096 0022     		movs	r2, #0
 1416 0098 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 520:Src/main.c    ****   HAL_NVIC_EnableIRQ(ETH_IRQn);
 1417              		.loc 3 520 0
 1418 009c 3D20     		movs	r0, #61
 1419 009e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1420              	.LBB42:
 521:Src/main.c    **** 
 522:Src/main.c    ****   /* Enable ETHERNET clock  */
 523:Src/main.c    ****   __HAL_RCC_ETH_CLK_ENABLE();
 1421              		.loc 3 523 0
 1422 00a2 134A     		ldr	r2, .L60
 1423 00a4 124B     		ldr	r3, .L60
 1424 00a6 1B6B     		ldr	r3, [r3, #48]
 1425 00a8 43F00073 		orr	r3, r3, #33554432
 1426 00ac 1363     		str	r3, [r2, #48]
 1427 00ae 104B     		ldr	r3, .L60
 1428 00b0 1B6B     		ldr	r3, [r3, #48]
 1429 00b2 03F00073 		and	r3, r3, #33554432
 1430 00b6 7B61     		str	r3, [r7, #20]
 1431 00b8 7B69     		ldr	r3, [r7, #20]
 1432              	.LBE42:
 1433              	.LBB43:
 1434 00ba 0D4A     		ldr	r2, .L60
 1435 00bc 0C4B     		ldr	r3, .L60
 1436 00be 1B6B     		ldr	r3, [r3, #48]
 1437 00c0 43F08063 		orr	r3, r3, #67108864
 1438 00c4 1363     		str	r3, [r2, #48]
 1439 00c6 0A4B     		ldr	r3, .L60
 1440 00c8 1B6B     		ldr	r3, [r3, #48]
 1441 00ca 03F08063 		and	r3, r3, #67108864
 1442 00ce 3B61     		str	r3, [r7, #16]
 1443 00d0 3B69     		ldr	r3, [r7, #16]
 1444              	.LBE43:
 1445              	.LBB44:
 1446 00d2 074A     		ldr	r2, .L60
 1447 00d4 064B     		ldr	r3, .L60
 1448 00d6 1B6B     		ldr	r3, [r3, #48]
 1449 00d8 43F00063 		orr	r3, r3, #134217728
 1450 00dc 1363     		str	r3, [r2, #48]
ARM GAS  /tmp/ccymeQqc.s 			page 85


 1451 00de 044B     		ldr	r3, .L60
 1452 00e0 1B6B     		ldr	r3, [r3, #48]
 1453 00e2 03F00063 		and	r3, r3, #134217728
 1454 00e6 FB60     		str	r3, [r7, #12]
 1455 00e8 FB68     		ldr	r3, [r7, #12]
 1456              	.LBE44:
 524:Src/main.c    **** }
 1457              		.loc 3 524 0
 1458 00ea 3837     		adds	r7, r7, #56
 1459              	.LCFI81:
 1460              		.cfi_def_cfa_offset 8
 1461 00ec BD46     		mov	sp, r7
 1462              	.LCFI82:
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed
 1465 00ee 80BD     		pop	{r7, pc}
 1466              	.L61:
 1467              		.align	2
 1468              	.L60:
 1469 00f0 00380240 		.word	1073887232
 1470 00f4 00000240 		.word	1073872896
 1471 00f8 00080240 		.word	1073874944
 1472 00fc 00180240 		.word	1073879040
 1473              		.cfi_endproc
 1474              	.LFE166:
 1476              		.section	.text.BSP_Config_task,"ax",%progbits
 1477              		.align	2
 1478              		.thumb
 1479              		.thumb_func
 1481              	BSP_Config_task:
 1482              	.LFB167:
 525:Src/main.c    **** 
 526:Src/main.c    **** 
 527:Src/main.c    **** 
 528:Src/main.c    **** /**
 529:Src/main.c    ****   * @brief  Initializes the STM32F769I-DISOVERY's LCD and LEDs resources.
 530:Src/main.c    ****   * @param  None
 531:Src/main.c    ****   * @retval None
 532:Src/main.c    ****   */
 533:Src/main.c    **** static void BSP_Config_task(void *pvParameters)
 534:Src/main.c    **** {
 1483              		.loc 3 534 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 8
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0000 80B5     		push	{r7, lr}
 1488              	.LCFI83:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 7, -8
 1491              		.cfi_offset 14, -4
 1492 0002 82B0     		sub	sp, sp, #8
 1493              	.LCFI84:
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              	.LCFI85:
 1497              		.cfi_def_cfa_register 7
 1498 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccymeQqc.s 			page 86


 535:Src/main.c    ****   (void) pvParameters;
 536:Src/main.c    ****   /* Configure LED1 and LED2 */
 537:Src/main.c    ****   BSP_LED_Init(LED1);
 1499              		.loc 3 537 0
 1500 0008 0020     		movs	r0, #0
 1501 000a FFF7FEFF 		bl	BSP_LED_Init
 538:Src/main.c    ****   BSP_LED_Init(LED2);
 1502              		.loc 3 538 0
 1503 000e 0120     		movs	r0, #1
 1504 0010 FFF7FEFF 		bl	BSP_LED_Init
 539:Src/main.c    **** 
 540:Src/main.c    ****   /* Initialize the LCD */
 541:Src/main.c    ****   BSP_LCD_Init();
 1505              		.loc 3 541 0
 1506 0014 FFF7FEFF 		bl	BSP_LCD_Init
 1507              	.L63:
 542:Src/main.c    ****   
 543:Src/main.c    ****   /* Initialize the LCD Layers */
 544:Src/main.c    ****   //BSP_LCD_LayerDefaultInit(1, LCD_FB_START_ADDRESS);
 545:Src/main.c    ****   
 546:Src/main.c    ****   /* Set LCD Foreground Layer  */
 547:Src/main.c    ****   //BSP_LCD_SelectLayer(1);
 548:Src/main.c    ****   
 549:Src/main.c    ****   //BSP_LCD_SetFont(&LCD_DEFAULT_FONT);
 550:Src/main.c    ****   
 551:Src/main.c    ****   /* Initialize LCD Log module */
 552:Src/main.c    ****   //LCD_LOG_Init();
 553:Src/main.c    ****   
 554:Src/main.c    ****   /* Show Header and Footer texts */
 555:Src/main.c    ****   //LCD_LOG_SetHeader((uint8_t *)"FreeRTOS Blinky_TCP");
 556:Src/main.c    ****   //LCD_LOG_SetFooter((uint8_t *)"STM32F769I-DISOVERY board");
 557:Src/main.c    ****   
 558:Src/main.c    ****   //LCD_UsrLog ("  Blink LED BLINK!!!...\n");
 559:Src/main.c    **** 
 560:Src/main.c    ****   while(1){
 561:Src/main.c    ****       vTaskDelay(1000);
 1508              		.loc 3 561 0 discriminator 1
 1509 0018 4FF47A70 		mov	r0, #1000
 1510 001c FFF7FEFF 		bl	vTaskDelay
 562:Src/main.c    **** 	  //HAL_Delay(100);
 563:Src/main.c    **** 	  //vTaskSuspend(NULL);
 564:Src/main.c    **** 	  vTaskDelete(NULL);
 1511              		.loc 3 564 0 discriminator 1
 1512 0020 0020     		movs	r0, #0
 1513 0022 FFF7FEFF 		bl	vTaskDelete
 565:Src/main.c    ****   }
 1514              		.loc 3 565 0 discriminator 1
 1515 0026 F7E7     		b	.L63
 1516              		.cfi_endproc
 1517              	.LFE167:
 1519              		.section	.text.SystemClock_Config,"ax",%progbits
 1520              		.align	2
 1521              		.thumb
 1522              		.thumb_func
 1524              	SystemClock_Config:
 1525              	.LFB168:
 566:Src/main.c    **** }
ARM GAS  /tmp/ccymeQqc.s 			page 87


 567:Src/main.c    **** 
 568:Src/main.c    **** 
 569:Src/main.c    **** /** System Clock Configuration
 570:Src/main.c    **** */
 571:Src/main.c    **** void SystemClock_Config(void)
 572:Src/main.c    **** {
 1526              		.loc 3 572 0
 1527              		.cfi_startproc
 1528              		@ args = 0, pretend = 0, frame = 224
 1529              		@ frame_needed = 1, uses_anonymous_args = 0
 1530 0000 80B5     		push	{r7, lr}
 1531              	.LCFI86:
 1532              		.cfi_def_cfa_offset 8
 1533              		.cfi_offset 7, -8
 1534              		.cfi_offset 14, -4
 1535 0002 B8B0     		sub	sp, sp, #224
 1536              	.LCFI87:
 1537              		.cfi_def_cfa_offset 232
 1538 0004 00AF     		add	r7, sp, #0
 1539              	.LCFI88:
 1540              		.cfi_def_cfa_register 7
 1541              	.LBB45:
 573:Src/main.c    **** 
 574:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 575:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 576:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 577:Src/main.c    **** 
 578:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 579:Src/main.c    ****     */
 580:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 1542              		.loc 3 580 0
 1543 0006 474A     		ldr	r2, .L69
 1544 0008 464B     		ldr	r3, .L69
 1545 000a 1B6C     		ldr	r3, [r3, #64]
 1546 000c 43F08053 		orr	r3, r3, #268435456
 1547 0010 1364     		str	r3, [r2, #64]
 1548 0012 444B     		ldr	r3, .L69
 1549 0014 1B6C     		ldr	r3, [r3, #64]
 1550 0016 03F08053 		and	r3, r3, #268435456
 1551 001a 7B60     		str	r3, [r7, #4]
 1552 001c 7B68     		ldr	r3, [r7, #4]
 1553              	.LBE45:
 1554              	.LBB46:
 581:Src/main.c    **** 
 582:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 1555              		.loc 3 582 0
 1556 001e 424A     		ldr	r2, .L69+4
 1557 0020 414B     		ldr	r3, .L69+4
 1558 0022 1B68     		ldr	r3, [r3]
 1559 0024 43F44043 		orr	r3, r3, #49152
 1560 0028 1360     		str	r3, [r2]
 1561 002a 3F4B     		ldr	r3, .L69+4
 1562 002c 1B68     		ldr	r3, [r3]
 1563 002e 03F44043 		and	r3, r3, #49152
 1564 0032 3B60     		str	r3, [r7]
 1565 0034 3B68     		ldr	r3, [r7]
 1566              	.LBE46:
ARM GAS  /tmp/ccymeQqc.s 			page 88


 583:Src/main.c    **** 
 584:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 585:Src/main.c    ****     */
 586:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE|RCC_OSCILLATORTYPE_LSE;
 1567              		.loc 3 586 0
 1568 0036 0523     		movs	r3, #5
 1569 0038 C7F8AC30 		str	r3, [r7, #172]
 587:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 1570              		.loc 3 587 0
 1571 003c 4FF48033 		mov	r3, #65536
 1572 0040 C7F8B030 		str	r3, [r7, #176]
 588:Src/main.c    ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 1573              		.loc 3 588 0
 1574 0044 0123     		movs	r3, #1
 1575 0046 C7F8B430 		str	r3, [r7, #180]
 589:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 1576              		.loc 3 589 0
 1577 004a 0223     		movs	r3, #2
 1578 004c C7F8C430 		str	r3, [r7, #196]
 590:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 1579              		.loc 3 590 0
 1580 0050 4FF48003 		mov	r3, #4194304
 1581 0054 C7F8C830 		str	r3, [r7, #200]
 591:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 1582              		.loc 3 591 0
 1583 0058 1923     		movs	r3, #25
 1584 005a C7F8CC30 		str	r3, [r7, #204]
 592:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 400;
 1585              		.loc 3 592 0
 1586 005e 4FF4C873 		mov	r3, #400
 1587 0062 C7F8D030 		str	r3, [r7, #208]
 593:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 1588              		.loc 3 593 0
 1589 0066 0223     		movs	r3, #2
 1590 0068 C7F8D430 		str	r3, [r7, #212]
 594:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 1591              		.loc 3 594 0
 1592 006c 0423     		movs	r3, #4
 1593 006e C7F8D830 		str	r3, [r7, #216]
 595:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1594              		.loc 3 595 0
 1595 0072 07F1AC03 		add	r3, r7, #172
 1596 0076 1846     		mov	r0, r3
 1597 0078 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1598 007c 0346     		mov	r3, r0
 1599 007e 002B     		cmp	r3, #0
 1600 0080 01D0     		beq	.L65
 596:Src/main.c    ****   {
 597:Src/main.c    ****     Error_Handler();
 1601              		.loc 3 597 0
 1602 0082 FFF7FEFF 		bl	Error_Handler
 1603              	.L65:
 598:Src/main.c    ****   }
 599:Src/main.c    **** 
 600:Src/main.c    ****     /**Activate the Over-Drive mode 
 601:Src/main.c    ****     */
 602:Src/main.c    ****   if (HAL_PWREx_EnableOverDrive() != HAL_OK)
ARM GAS  /tmp/ccymeQqc.s 			page 89


 1604              		.loc 3 602 0
 1605 0086 FFF7FEFF 		bl	HAL_PWREx_EnableOverDrive
 1606 008a 0346     		mov	r3, r0
 1607 008c 002B     		cmp	r3, #0
 1608 008e 01D0     		beq	.L66
 603:Src/main.c    ****   {
 604:Src/main.c    ****     Error_Handler();
 1609              		.loc 3 604 0
 1610 0090 FFF7FEFF 		bl	Error_Handler
 1611              	.L66:
 605:Src/main.c    ****   }
 606:Src/main.c    **** 
 607:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 608:Src/main.c    ****     */
 609:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 1612              		.loc 3 609 0
 1613 0094 0F23     		movs	r3, #15
 1614 0096 C7F89830 		str	r3, [r7, #152]
 610:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 611:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 1615              		.loc 3 611 0
 1616 009a 0223     		movs	r3, #2
 1617 009c C7F89C30 		str	r3, [r7, #156]
 612:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1618              		.loc 3 612 0
 1619 00a0 0023     		movs	r3, #0
 1620 00a2 C7F8A030 		str	r3, [r7, #160]
 613:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 1621              		.loc 3 613 0
 1622 00a6 4FF4A053 		mov	r3, #5120
 1623 00aa C7F8A430 		str	r3, [r7, #164]
 614:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 1624              		.loc 3 614 0
 1625 00ae 4FF48053 		mov	r3, #4096
 1626 00b2 C7F8A830 		str	r3, [r7, #168]
 615:Src/main.c    **** 
 616:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_6) != HAL_OK)
 1627              		.loc 3 616 0
 1628 00b6 07F19803 		add	r3, r7, #152
 1629 00ba 1846     		mov	r0, r3
 1630 00bc 0621     		movs	r1, #6
 1631 00be FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1632 00c2 0346     		mov	r3, r0
 1633 00c4 002B     		cmp	r3, #0
 1634 00c6 01D0     		beq	.L67
 617:Src/main.c    ****   {
 618:Src/main.c    ****     Error_Handler();
 1635              		.loc 3 618 0
 1636 00c8 FFF7FEFF 		bl	Error_Handler
 1637              	.L67:
 619:Src/main.c    ****   }
 620:Src/main.c    **** 
 621:Src/main.c    ****   PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RTC;
 1638              		.loc 3 621 0
 1639 00cc 2023     		movs	r3, #32
 1640 00ce BB60     		str	r3, [r7, #8]
 622:Src/main.c    ****   PeriphClkInitStruct.RTCClockSelection = RCC_RTCCLKSOURCE_LSE;
ARM GAS  /tmp/ccymeQqc.s 			page 90


 1641              		.loc 3 622 0
 1642 00d0 4FF48073 		mov	r3, #256
 1643 00d4 BB63     		str	r3, [r7, #56]
 623:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 1644              		.loc 3 623 0
 1645 00d6 07F10803 		add	r3, r7, #8
 1646 00da 1846     		mov	r0, r3
 1647 00dc FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 1648 00e0 0346     		mov	r3, r0
 1649 00e2 002B     		cmp	r3, #0
 1650 00e4 01D0     		beq	.L68
 624:Src/main.c    ****   {
 625:Src/main.c    ****     Error_Handler();
 1651              		.loc 3 625 0
 1652 00e6 FFF7FEFF 		bl	Error_Handler
 1653              	.L68:
 626:Src/main.c    ****   }
 627:Src/main.c    **** 
 628:Src/main.c    ****     /**Configure LSE Drive Capability 
 629:Src/main.c    ****     */
 630:Src/main.c    ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 1654              		.loc 3 630 0
 1655 00ea 0E4A     		ldr	r2, .L69
 1656 00ec 0D4B     		ldr	r3, .L69
 1657 00ee 1B6F     		ldr	r3, [r3, #112]
 1658 00f0 23F01803 		bic	r3, r3, #24
 1659 00f4 1367     		str	r3, [r2, #112]
 631:Src/main.c    **** 
 632:Src/main.c    ****     /**Configure the Systick interrupt time 
 633:Src/main.c    ****     */
 634:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 1660              		.loc 3 634 0
 1661 00f6 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1662 00fa 0246     		mov	r2, r0
 1663 00fc 0B4B     		ldr	r3, .L69+8
 1664 00fe A3FB0223 		umull	r2, r3, r3, r2
 1665 0102 9B09     		lsrs	r3, r3, #6
 1666 0104 1846     		mov	r0, r3
 1667 0106 FFF7FEFF 		bl	HAL_SYSTICK_Config
 635:Src/main.c    **** 
 636:Src/main.c    ****     /**Configure the Systick 
 637:Src/main.c    ****     */
 638:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 1668              		.loc 3 638 0
 1669 010a 0420     		movs	r0, #4
 1670 010c FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 639:Src/main.c    **** 
 640:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 641:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 1671              		.loc 3 641 0
 1672 0110 4FF0FF30 		mov	r0, #-1
 1673 0114 0F21     		movs	r1, #15
 1674 0116 0022     		movs	r2, #0
 1675 0118 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 642:Src/main.c    **** }
 1676              		.loc 3 642 0
 1677 011c E037     		adds	r7, r7, #224
ARM GAS  /tmp/ccymeQqc.s 			page 91


 1678              	.LCFI89:
 1679              		.cfi_def_cfa_offset 8
 1680 011e BD46     		mov	sp, r7
 1681              	.LCFI90:
 1682              		.cfi_def_cfa_register 13
 1683              		@ sp needed
 1684 0120 80BD     		pop	{r7, pc}
 1685              	.L70:
 1686 0122 00BF     		.align	2
 1687              	.L69:
 1688 0124 00380240 		.word	1073887232
 1689 0128 00700040 		.word	1073770496
 1690 012c D34D6210 		.word	274877907
 1691              		.cfi_endproc
 1692              	.LFE168:
 1694              		.section	.text.MX_RTC_Init,"ax",%progbits
 1695              		.align	2
 1696              		.thumb
 1697              		.thumb_func
 1699              	MX_RTC_Init:
 1700              	.LFB169:
 643:Src/main.c    **** 
 644:Src/main.c    **** /* RTC init function */
 645:Src/main.c    **** static void MX_RTC_Init(void)
 646:Src/main.c    **** {
 1701              		.loc 3 646 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 0
 1704              		@ frame_needed = 1, uses_anonymous_args = 0
 1705 0000 80B5     		push	{r7, lr}
 1706              	.LCFI91:
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 7, -8
 1709              		.cfi_offset 14, -4
 1710 0002 00AF     		add	r7, sp, #0
 1711              	.LCFI92:
 1712              		.cfi_def_cfa_register 7
 647:Src/main.c    **** 
 648:Src/main.c    ****     /**Initialize RTC Only 
 649:Src/main.c    ****     */
 650:Src/main.c    ****   hrtc.Instance = RTC;
 1713              		.loc 3 650 0
 1714 0004 0E4B     		ldr	r3, .L73
 1715 0006 0F4A     		ldr	r2, .L73+4
 1716 0008 1A60     		str	r2, [r3]
 651:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1717              		.loc 3 651 0
 1718 000a 0D4B     		ldr	r3, .L73
 1719 000c 0022     		movs	r2, #0
 1720 000e 5A60     		str	r2, [r3, #4]
 652:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1721              		.loc 3 652 0
 1722 0010 0B4B     		ldr	r3, .L73
 1723 0012 7F22     		movs	r2, #127
 1724 0014 9A60     		str	r2, [r3, #8]
 653:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1725              		.loc 3 653 0
ARM GAS  /tmp/ccymeQqc.s 			page 92


 1726 0016 0A4B     		ldr	r3, .L73
 1727 0018 FF22     		movs	r2, #255
 1728 001a DA60     		str	r2, [r3, #12]
 654:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1729              		.loc 3 654 0
 1730 001c 084B     		ldr	r3, .L73
 1731 001e 0022     		movs	r2, #0
 1732 0020 1A61     		str	r2, [r3, #16]
 655:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1733              		.loc 3 655 0
 1734 0022 074B     		ldr	r3, .L73
 1735 0024 0022     		movs	r2, #0
 1736 0026 5A61     		str	r2, [r3, #20]
 656:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1737              		.loc 3 656 0
 1738 0028 054B     		ldr	r3, .L73
 1739 002a 0022     		movs	r2, #0
 1740 002c 9A61     		str	r2, [r3, #24]
 657:Src/main.c    **** 
 658:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1741              		.loc 3 658 0
 1742 002e 0448     		ldr	r0, .L73
 1743 0030 FFF7FEFF 		bl	HAL_RTC_Init
 1744 0034 0346     		mov	r3, r0
 1745 0036 002B     		cmp	r3, #0
 1746 0038 01D0     		beq	.L71
 659:Src/main.c    ****   {
 660:Src/main.c    ****     Error_Handler();
 1747              		.loc 3 660 0
 1748 003a FFF7FEFF 		bl	Error_Handler
 1749              	.L71:
 661:Src/main.c    ****   }
 662:Src/main.c    **** 
 663:Src/main.c    **** 
 664:Src/main.c    **** }
 1750              		.loc 3 664 0
 1751 003e 80BD     		pop	{r7, pc}
 1752              	.L74:
 1753              		.align	2
 1754              	.L73:
 1755 0040 00000000 		.word	hrtc
 1756 0044 00280040 		.word	1073752064
 1757              		.cfi_endproc
 1758              	.LFE169:
 1760              		.section	.text.MX_FMC_Init,"ax",%progbits
 1761              		.align	2
 1762              		.thumb
 1763              		.thumb_func
 1765              	MX_FMC_Init:
 1766              	.LFB170:
 665:Src/main.c    **** 
 666:Src/main.c    **** /* FMC initialization function */
 667:Src/main.c    **** static void MX_FMC_Init(void)
 668:Src/main.c    **** {
 1767              		.loc 3 668 0
 1768              		.cfi_startproc
 1769              		@ args = 0, pretend = 0, frame = 32
ARM GAS  /tmp/ccymeQqc.s 			page 93


 1770              		@ frame_needed = 1, uses_anonymous_args = 0
 1771 0000 80B5     		push	{r7, lr}
 1772              	.LCFI93:
 1773              		.cfi_def_cfa_offset 8
 1774              		.cfi_offset 7, -8
 1775              		.cfi_offset 14, -4
 1776 0002 88B0     		sub	sp, sp, #32
 1777              	.LCFI94:
 1778              		.cfi_def_cfa_offset 40
 1779 0004 00AF     		add	r7, sp, #0
 1780              	.LCFI95:
 1781              		.cfi_def_cfa_register 7
 669:Src/main.c    ****   FMC_SDRAM_TimingTypeDef SdramTiming;
 670:Src/main.c    **** 
 671:Src/main.c    ****   /** Perform the SDRAM1 memory initialization sequence
 672:Src/main.c    ****   */
 673:Src/main.c    ****   hsdram1.Instance = FMC_SDRAM_DEVICE;
 1782              		.loc 3 673 0
 1783 0006 1E4B     		ldr	r3, .L77
 1784 0008 1E4A     		ldr	r2, .L77+4
 1785 000a 1A60     		str	r2, [r3]
 674:Src/main.c    ****   /* hsdram1.Init */
 675:Src/main.c    ****   hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 1786              		.loc 3 675 0
 1787 000c 1C4B     		ldr	r3, .L77
 1788 000e 0022     		movs	r2, #0
 1789 0010 5A60     		str	r2, [r3, #4]
 676:Src/main.c    ****   hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_8;
 1790              		.loc 3 676 0
 1791 0012 1B4B     		ldr	r3, .L77
 1792 0014 0022     		movs	r2, #0
 1793 0016 9A60     		str	r2, [r3, #8]
 677:Src/main.c    ****   hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_13;
 1794              		.loc 3 677 0
 1795 0018 194B     		ldr	r3, .L77
 1796 001a 0822     		movs	r2, #8
 1797 001c DA60     		str	r2, [r3, #12]
 678:Src/main.c    ****   hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_32;
 1798              		.loc 3 678 0
 1799 001e 184B     		ldr	r3, .L77
 1800 0020 2022     		movs	r2, #32
 1801 0022 1A61     		str	r2, [r3, #16]
 679:Src/main.c    ****   hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 1802              		.loc 3 679 0
 1803 0024 164B     		ldr	r3, .L77
 1804 0026 4022     		movs	r2, #64
 1805 0028 5A61     		str	r2, [r3, #20]
 680:Src/main.c    ****   hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_1;
 1806              		.loc 3 680 0
 1807 002a 154B     		ldr	r3, .L77
 1808 002c 8022     		movs	r2, #128
 1809 002e 9A61     		str	r2, [r3, #24]
 681:Src/main.c    ****   hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 1810              		.loc 3 681 0
 1811 0030 134B     		ldr	r3, .L77
 1812 0032 0022     		movs	r2, #0
 1813 0034 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/ccymeQqc.s 			page 94


 682:Src/main.c    ****   hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 1814              		.loc 3 682 0
 1815 0036 124B     		ldr	r3, .L77
 1816 0038 0022     		movs	r2, #0
 1817 003a 1A62     		str	r2, [r3, #32]
 683:Src/main.c    ****   hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 1818              		.loc 3 683 0
 1819 003c 104B     		ldr	r3, .L77
 1820 003e 0022     		movs	r2, #0
 1821 0040 5A62     		str	r2, [r3, #36]
 684:Src/main.c    ****   hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 1822              		.loc 3 684 0
 1823 0042 0F4B     		ldr	r3, .L77
 1824 0044 0022     		movs	r2, #0
 1825 0046 9A62     		str	r2, [r3, #40]
 685:Src/main.c    ****   /* SdramTiming */
 686:Src/main.c    ****   SdramTiming.LoadToActiveDelay = 16;
 1826              		.loc 3 686 0
 1827 0048 1023     		movs	r3, #16
 1828 004a 7B60     		str	r3, [r7, #4]
 687:Src/main.c    ****   SdramTiming.ExitSelfRefreshDelay = 16;
 1829              		.loc 3 687 0
 1830 004c 1023     		movs	r3, #16
 1831 004e BB60     		str	r3, [r7, #8]
 688:Src/main.c    ****   SdramTiming.SelfRefreshTime = 16;
 1832              		.loc 3 688 0
 1833 0050 1023     		movs	r3, #16
 1834 0052 FB60     		str	r3, [r7, #12]
 689:Src/main.c    ****   SdramTiming.RowCycleDelay = 16;
 1835              		.loc 3 689 0
 1836 0054 1023     		movs	r3, #16
 1837 0056 3B61     		str	r3, [r7, #16]
 690:Src/main.c    ****   SdramTiming.WriteRecoveryTime = 16;
 1838              		.loc 3 690 0
 1839 0058 1023     		movs	r3, #16
 1840 005a 7B61     		str	r3, [r7, #20]
 691:Src/main.c    ****   SdramTiming.RPDelay = 16;
 1841              		.loc 3 691 0
 1842 005c 1023     		movs	r3, #16
 1843 005e BB61     		str	r3, [r7, #24]
 692:Src/main.c    ****   SdramTiming.RCDDelay = 16;
 1844              		.loc 3 692 0
 1845 0060 1023     		movs	r3, #16
 1846 0062 FB61     		str	r3, [r7, #28]
 693:Src/main.c    **** 
 694:Src/main.c    ****   if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 1847              		.loc 3 694 0
 1848 0064 3B1D     		adds	r3, r7, #4
 1849 0066 0648     		ldr	r0, .L77
 1850 0068 1946     		mov	r1, r3
 1851 006a FFF7FEFF 		bl	HAL_SDRAM_Init
 1852 006e 0346     		mov	r3, r0
 1853 0070 002B     		cmp	r3, #0
 1854 0072 01D0     		beq	.L75
 695:Src/main.c    ****   {
 696:Src/main.c    ****     Error_Handler();
 1855              		.loc 3 696 0
ARM GAS  /tmp/ccymeQqc.s 			page 95


 1856 0074 FFF7FEFF 		bl	Error_Handler
 1857              	.L75:
 697:Src/main.c    ****   }
 698:Src/main.c    **** 
 699:Src/main.c    **** }
 1858              		.loc 3 699 0
 1859 0078 2037     		adds	r7, r7, #32
 1860              	.LCFI96:
 1861              		.cfi_def_cfa_offset 8
 1862 007a BD46     		mov	sp, r7
 1863              	.LCFI97:
 1864              		.cfi_def_cfa_register 13
 1865              		@ sp needed
 1866 007c 80BD     		pop	{r7, pc}
 1867              	.L78:
 1868 007e 00BF     		.align	2
 1869              	.L77:
 1870 0080 00000000 		.word	hsdram1
 1871 0084 400100A0 		.word	-1610612416
 1872              		.cfi_endproc
 1873              	.LFE170:
 1875              		.section	.text.MX_GPIO_Init,"ax",%progbits
 1876              		.align	2
 1877              		.thumb
 1878              		.thumb_func
 1880              	MX_GPIO_Init:
 1881              	.LFB171:
 700:Src/main.c    **** 
 701:Src/main.c    **** 
 702:Src/main.c    **** 
 703:Src/main.c    **** /** Configure pins
 704:Src/main.c    ****      PE4   ------> SAI1_FS_A
 705:Src/main.c    ****      PE3   ------> SAI1_SD_B
 706:Src/main.c    ****      PE2   ------> QUADSPI_BK1_IO2
 707:Src/main.c    ****      PG14   ------> ETH_TXD1
 708:Src/main.c    ****      PB8   ------> I2C1_SCL
 709:Src/main.c    ****      PB5   ------> USB_OTG_HS_ULPI_D7
 710:Src/main.c    ****      PB4   ------> SDMMC2_D3
 711:Src/main.c    ****      PB3   ------> SDMMC2_D2
 712:Src/main.c    ****      PD7   ------> SDMMC2_CMD
 713:Src/main.c    ****      PC12   ------> UART5_TX
 714:Src/main.c    ****      PA15   ------> CEC
 715:Src/main.c    ****      PE5   ------> SAI1_SCK_A
 716:Src/main.c    ****      PE6   ------> SAI1_SD_A
 717:Src/main.c    ****      PG13   ------> ETH_TXD0
 718:Src/main.c    ****      PB9   ------> I2C1_SDA
 719:Src/main.c    ****      PB7   ------> I2C4_SDA
 720:Src/main.c    ****      PB6   ------> QUADSPI_BK1_NCS
 721:Src/main.c    ****      PG11   ------> ETH_TX_EN
 722:Src/main.c    ****      PD6   ------> SDMMC2_CK
 723:Src/main.c    ****      PC11   ------> S_DATAIN5DFSDM1
 724:Src/main.c    ****      PC10   ------> QUADSPI_BK1_IO1
 725:Src/main.c    ****      PA12   ------> SPI2_SCK
 726:Src/main.c    ****      PG12   ------> SPDIFRX_IN1
 727:Src/main.c    ****      PG10   ------> SDMMC2_D1
 728:Src/main.c    ****      PD3   ------> S_CKOUTDFSDM1
 729:Src/main.c    ****      PA11   ------> SPI2_NSS
ARM GAS  /tmp/ccymeQqc.s 			page 96


 730:Src/main.c    ****      PG9   ------> SDMMC2_D0
 731:Src/main.c    ****      PD2   ------> UART5_RX
 732:Src/main.c    ****      PA10   ------> USART1_RX
 733:Src/main.c    ****      PA9   ------> USART1_TX
 734:Src/main.c    ****      PI11   ------> USB_OTG_HS_ULPI_DIR
 735:Src/main.c    ****      PC9   ------> QUADSPI_BK1_IO0
 736:Src/main.c    ****      PA8   ------> RCC_MCO_1
 737:Src/main.c    ****      PC8   ------> S_TIM3_CH3
 738:Src/main.c    ****      PC7   ------> USART6_RX
 739:Src/main.c    ****      PH4   ------> USB_OTG_HS_ULPI_NXT
 740:Src/main.c    ****      PC6   ------> USART6_TX
 741:Src/main.c    ****      PG7   ------> SAI1_MCLK_A
 742:Src/main.c    ****      PF7   ------> S_TIM11_CH1
 743:Src/main.c    ****      PF6   ------> S_TIM10_CH1
 744:Src/main.c    ****      PB13   ------> USB_OTG_HS_ULPI_D6
 745:Src/main.c    ****      PF10   ------> ADC3_IN8
 746:Src/main.c    ****      PF9   ------> ADC3_IN7
 747:Src/main.c    ****      PF8   ------> ADC3_IN6
 748:Src/main.c    ****      PC3   ------> S_DATAIN1DFSDM1
 749:Src/main.c    ****      PB12   ------> USB_OTG_HS_ULPI_D5
 750:Src/main.c    ****      PC0   ------> USB_OTG_HS_ULPI_STP
 751:Src/main.c    ****      PC1   ------> ETH_MDC
 752:Src/main.c    ****      PC2   ------> ADCx_IN12
 753:Src/main.c    ****      PB2   ------> QUADSPI_CLK
 754:Src/main.c    ****      PD12   ------> I2C4_SCL
 755:Src/main.c    ****      PD13   ------> QUADSPI_BK1_IO3
 756:Src/main.c    ****      PA1   ------> ETH_REF_CLK
 757:Src/main.c    ****      PA4   ------> ADCx_IN4
 758:Src/main.c    ****      PC4   ------> ETH_RXD0
 759:Src/main.c    ****      PD11   ------> SAI2_SD_A
 760:Src/main.c    ****      PA2   ------> ETH_MDIO
 761:Src/main.c    ****      PA6   ------> ADCx_IN6
 762:Src/main.c    ****      PA5   ------> USB_OTG_HS_ULPI_CK
 763:Src/main.c    ****      PC5   ------> ETH_RXD1
 764:Src/main.c    ****      PJ2   ------> DSIHOST_TE
 765:Src/main.c    ****      PB10   ------> USB_OTG_HS_ULPI_D3
 766:Src/main.c    ****      PH6   ------> S_TIM12_CH1
 767:Src/main.c    ****      PA3   ------> USB_OTG_HS_ULPI_D0
 768:Src/main.c    ****      PA7   ------> ETH_CRS_DV
 769:Src/main.c    ****      PB1   ------> USB_OTG_HS_ULPI_D2
 770:Src/main.c    ****      PB0   ------> USB_OTG_HS_ULPI_D1
 771:Src/main.c    ****      PB11   ------> USB_OTG_HS_ULPI_D4
 772:Src/main.c    ****      PB14   ------> SPI2_MISO
 773:Src/main.c    ****      PB15   ------> SPI2_MOSI
 774:Src/main.c    **** */
 775:Src/main.c    **** static void MX_GPIO_Init(void)
 776:Src/main.c    **** {
 1882              		.loc 3 776 0
 1883              		.cfi_startproc
 1884              		@ args = 0, pretend = 0, frame = 64
 1885              		@ frame_needed = 1, uses_anonymous_args = 0
 1886 0000 80B5     		push	{r7, lr}
 1887              	.LCFI98:
 1888              		.cfi_def_cfa_offset 8
 1889              		.cfi_offset 7, -8
 1890              		.cfi_offset 14, -4
 1891 0002 90B0     		sub	sp, sp, #64
ARM GAS  /tmp/ccymeQqc.s 			page 97


 1892              	.LCFI99:
 1893              		.cfi_def_cfa_offset 72
 1894 0004 00AF     		add	r7, sp, #0
 1895              	.LCFI100:
 1896              		.cfi_def_cfa_register 7
 1897              	.LBB47:
 777:Src/main.c    **** 
 778:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
 779:Src/main.c    **** 
 780:Src/main.c    ****   /* GPIO Ports Clock Enable */
 781:Src/main.c    ****   __HAL_RCC_GPIOE_CLK_ENABLE();
 1898              		.loc 3 781 0
 1899 0006 AC4A     		ldr	r2, .L80
 1900 0008 AB4B     		ldr	r3, .L80
 1901 000a 1B6B     		ldr	r3, [r3, #48]
 1902 000c 43F01003 		orr	r3, r3, #16
 1903 0010 1363     		str	r3, [r2, #48]
 1904 0012 A94B     		ldr	r3, .L80
 1905 0014 1B6B     		ldr	r3, [r3, #48]
 1906 0016 03F01003 		and	r3, r3, #16
 1907 001a BB62     		str	r3, [r7, #40]
 1908 001c BB6A     		ldr	r3, [r7, #40]
 1909              	.LBE47:
 1910              	.LBB48:
 782:Src/main.c    ****   __HAL_RCC_GPIOG_CLK_ENABLE();
 1911              		.loc 3 782 0
 1912 001e A64A     		ldr	r2, .L80
 1913 0020 A54B     		ldr	r3, .L80
 1914 0022 1B6B     		ldr	r3, [r3, #48]
 1915 0024 43F04003 		orr	r3, r3, #64
 1916 0028 1363     		str	r3, [r2, #48]
 1917 002a A34B     		ldr	r3, .L80
 1918 002c 1B6B     		ldr	r3, [r3, #48]
 1919 002e 03F04003 		and	r3, r3, #64
 1920 0032 7B62     		str	r3, [r7, #36]
 1921 0034 7B6A     		ldr	r3, [r7, #36]
 1922              	.LBE48:
 1923              	.LBB49:
 783:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 1924              		.loc 3 783 0
 1925 0036 A04A     		ldr	r2, .L80
 1926 0038 9F4B     		ldr	r3, .L80
 1927 003a 1B6B     		ldr	r3, [r3, #48]
 1928 003c 43F00203 		orr	r3, r3, #2
 1929 0040 1363     		str	r3, [r2, #48]
 1930 0042 9D4B     		ldr	r3, .L80
 1931 0044 1B6B     		ldr	r3, [r3, #48]
 1932 0046 03F00203 		and	r3, r3, #2
 1933 004a 3B62     		str	r3, [r7, #32]
 1934 004c 3B6A     		ldr	r3, [r7, #32]
 1935              	.LBE49:
 1936              	.LBB50:
 784:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 1937              		.loc 3 784 0
 1938 004e 9A4A     		ldr	r2, .L80
 1939 0050 994B     		ldr	r3, .L80
 1940 0052 1B6B     		ldr	r3, [r3, #48]
ARM GAS  /tmp/ccymeQqc.s 			page 98


 1941 0054 43F00803 		orr	r3, r3, #8
 1942 0058 1363     		str	r3, [r2, #48]
 1943 005a 974B     		ldr	r3, .L80
 1944 005c 1B6B     		ldr	r3, [r3, #48]
 1945 005e 03F00803 		and	r3, r3, #8
 1946 0062 FB61     		str	r3, [r7, #28]
 1947 0064 FB69     		ldr	r3, [r7, #28]
 1948              	.LBE50:
 1949              	.LBB51:
 785:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 1950              		.loc 3 785 0
 1951 0066 944A     		ldr	r2, .L80
 1952 0068 934B     		ldr	r3, .L80
 1953 006a 1B6B     		ldr	r3, [r3, #48]
 1954 006c 43F00403 		orr	r3, r3, #4
 1955 0070 1363     		str	r3, [r2, #48]
 1956 0072 914B     		ldr	r3, .L80
 1957 0074 1B6B     		ldr	r3, [r3, #48]
 1958 0076 03F00403 		and	r3, r3, #4
 1959 007a BB61     		str	r3, [r7, #24]
 1960 007c BB69     		ldr	r3, [r7, #24]
 1961              	.LBE51:
 1962              	.LBB52:
 786:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 1963              		.loc 3 786 0
 1964 007e 8E4A     		ldr	r2, .L80
 1965 0080 8D4B     		ldr	r3, .L80
 1966 0082 1B6B     		ldr	r3, [r3, #48]
 1967 0084 43F00103 		orr	r3, r3, #1
 1968 0088 1363     		str	r3, [r2, #48]
 1969 008a 8B4B     		ldr	r3, .L80
 1970 008c 1B6B     		ldr	r3, [r3, #48]
 1971 008e 03F00103 		and	r3, r3, #1
 1972 0092 7B61     		str	r3, [r7, #20]
 1973 0094 7B69     		ldr	r3, [r7, #20]
 1974              	.LBE52:
 1975              	.LBB53:
 787:Src/main.c    ****   __HAL_RCC_GPIOJ_CLK_ENABLE();
 1976              		.loc 3 787 0
 1977 0096 884A     		ldr	r2, .L80
 1978 0098 874B     		ldr	r3, .L80
 1979 009a 1B6B     		ldr	r3, [r3, #48]
 1980 009c 43F40073 		orr	r3, r3, #512
 1981 00a0 1363     		str	r3, [r2, #48]
 1982 00a2 854B     		ldr	r3, .L80
 1983 00a4 1B6B     		ldr	r3, [r3, #48]
 1984 00a6 03F40073 		and	r3, r3, #512
 1985 00aa 3B61     		str	r3, [r7, #16]
 1986 00ac 3B69     		ldr	r3, [r7, #16]
 1987              	.LBE53:
 1988              	.LBB54:
 788:Src/main.c    ****   __HAL_RCC_GPIOI_CLK_ENABLE();
 1989              		.loc 3 788 0
 1990 00ae 824A     		ldr	r2, .L80
 1991 00b0 814B     		ldr	r3, .L80
 1992 00b2 1B6B     		ldr	r3, [r3, #48]
 1993 00b4 43F48073 		orr	r3, r3, #256
ARM GAS  /tmp/ccymeQqc.s 			page 99


 1994 00b8 1363     		str	r3, [r2, #48]
 1995 00ba 7F4B     		ldr	r3, .L80
 1996 00bc 1B6B     		ldr	r3, [r3, #48]
 1997 00be 03F48073 		and	r3, r3, #256
 1998 00c2 FB60     		str	r3, [r7, #12]
 1999 00c4 FB68     		ldr	r3, [r7, #12]
 2000              	.LBE54:
 2001              	.LBB55:
 789:Src/main.c    ****   __HAL_RCC_GPIOK_CLK_ENABLE();
 2002              		.loc 3 789 0
 2003 00c6 7C4A     		ldr	r2, .L80
 2004 00c8 7B4B     		ldr	r3, .L80
 2005 00ca 1B6B     		ldr	r3, [r3, #48]
 2006 00cc 43F48063 		orr	r3, r3, #1024
 2007 00d0 1363     		str	r3, [r2, #48]
 2008 00d2 794B     		ldr	r3, .L80
 2009 00d4 1B6B     		ldr	r3, [r3, #48]
 2010 00d6 03F48063 		and	r3, r3, #1024
 2011 00da BB60     		str	r3, [r7, #8]
 2012 00dc BB68     		ldr	r3, [r7, #8]
 2013              	.LBE55:
 2014              	.LBB56:
 790:Src/main.c    ****   __HAL_RCC_GPIOF_CLK_ENABLE();
 2015              		.loc 3 790 0
 2016 00de 764A     		ldr	r2, .L80
 2017 00e0 754B     		ldr	r3, .L80
 2018 00e2 1B6B     		ldr	r3, [r3, #48]
 2019 00e4 43F02003 		orr	r3, r3, #32
 2020 00e8 1363     		str	r3, [r2, #48]
 2021 00ea 734B     		ldr	r3, .L80
 2022 00ec 1B6B     		ldr	r3, [r3, #48]
 2023 00ee 03F02003 		and	r3, r3, #32
 2024 00f2 7B60     		str	r3, [r7, #4]
 2025 00f4 7B68     		ldr	r3, [r7, #4]
 2026              	.LBE56:
 2027              	.LBB57:
 791:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 2028              		.loc 3 791 0
 2029 00f6 704A     		ldr	r2, .L80
 2030 00f8 6F4B     		ldr	r3, .L80
 2031 00fa 1B6B     		ldr	r3, [r3, #48]
 2032 00fc 43F08003 		orr	r3, r3, #128
 2033 0100 1363     		str	r3, [r2, #48]
 2034 0102 6D4B     		ldr	r3, .L80
 2035 0104 1B6B     		ldr	r3, [r3, #48]
 2036 0106 03F08003 		and	r3, r3, #128
 2037 010a 3B60     		str	r3, [r7]
 2038 010c 3B68     		ldr	r3, [r7]
 2039              	.LBE57:
 792:Src/main.c    **** 
 793:Src/main.c    ****   /*Configure GPIO pins : SAI1_FSA_Pin SAI1_SDB_Pin SAI1_SCKA_Pin SAI1_SDA_Pin */
 794:Src/main.c    ****   GPIO_InitStruct.Pin = SAI1_FSA_Pin|SAI1_SDB_Pin|SAI1_SCKA_Pin|SAI1_SDA_Pin;
 2040              		.loc 3 794 0
 2041 010e 7823     		movs	r3, #120
 2042 0110 FB62     		str	r3, [r7, #44]
 795:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2043              		.loc 3 795 0
ARM GAS  /tmp/ccymeQqc.s 			page 100


 2044 0112 0223     		movs	r3, #2
 2045 0114 3B63     		str	r3, [r7, #48]
 796:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2046              		.loc 3 796 0
 2047 0116 0023     		movs	r3, #0
 2048 0118 7B63     		str	r3, [r7, #52]
 797:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2049              		.loc 3 797 0
 2050 011a 0023     		movs	r3, #0
 2051 011c BB63     		str	r3, [r7, #56]
 798:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 2052              		.loc 3 798 0
 2053 011e 0623     		movs	r3, #6
 2054 0120 FB63     		str	r3, [r7, #60]
 799:Src/main.c    ****   HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 2055              		.loc 3 799 0
 2056 0122 07F12C03 		add	r3, r7, #44
 2057 0126 6548     		ldr	r0, .L80+4
 2058 0128 1946     		mov	r1, r3
 2059 012a FFF7FEFF 		bl	HAL_GPIO_Init
 800:Src/main.c    **** 
 801:Src/main.c    ****   /*Configure GPIO pin : QSPI_D2_Pin */
 802:Src/main.c    ****   GPIO_InitStruct.Pin = QSPI_D2_Pin;
 2060              		.loc 3 802 0
 2061 012e 0423     		movs	r3, #4
 2062 0130 FB62     		str	r3, [r7, #44]
 803:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2063              		.loc 3 803 0
 2064 0132 0223     		movs	r3, #2
 2065 0134 3B63     		str	r3, [r7, #48]
 804:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2066              		.loc 3 804 0
 2067 0136 0023     		movs	r3, #0
 2068 0138 7B63     		str	r3, [r7, #52]
 805:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2069              		.loc 3 805 0
 2070 013a 0323     		movs	r3, #3
 2071 013c BB63     		str	r3, [r7, #56]
 806:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 2072              		.loc 3 806 0
 2073 013e 0923     		movs	r3, #9
 2074 0140 FB63     		str	r3, [r7, #60]
 807:Src/main.c    ****   HAL_GPIO_Init(QSPI_D2_GPIO_Port, &GPIO_InitStruct);
 2075              		.loc 3 807 0
 2076 0142 07F12C03 		add	r3, r7, #44
 2077 0146 5D48     		ldr	r0, .L80+4
 2078 0148 1946     		mov	r1, r3
 2079 014a FFF7FEFF 		bl	HAL_GPIO_Init
 808:Src/main.c    **** 
 809:Src/main.c    ****   /*Configure GPIO pins : RMII_TXD1_Pin RMII_TXD0_Pin RMII_TX_EN_Pin */
 810:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_TXD1_Pin|RMII_TXD0_Pin|RMII_TX_EN_Pin;
 2080              		.loc 3 810 0
 2081 014e 4FF4D043 		mov	r3, #26624
 2082 0152 FB62     		str	r3, [r7, #44]
 811:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2083              		.loc 3 811 0
 2084 0154 0223     		movs	r3, #2
ARM GAS  /tmp/ccymeQqc.s 			page 101


 2085 0156 3B63     		str	r3, [r7, #48]
 812:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2086              		.loc 3 812 0
 2087 0158 0023     		movs	r3, #0
 2088 015a 7B63     		str	r3, [r7, #52]
 813:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2089              		.loc 3 813 0
 2090 015c 0323     		movs	r3, #3
 2091 015e BB63     		str	r3, [r7, #56]
 814:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 2092              		.loc 3 814 0
 2093 0160 0B23     		movs	r3, #11
 2094 0162 FB63     		str	r3, [r7, #60]
 815:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 2095              		.loc 3 815 0
 2096 0164 07F12C03 		add	r3, r7, #44
 2097 0168 5548     		ldr	r0, .L80+8
 2098 016a 1946     		mov	r1, r3
 2099 016c FFF7FEFF 		bl	HAL_GPIO_Init
 816:Src/main.c    **** 
 817:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_SCL_D15_Pin ARDUINO_SDA_D14_Pin */
 818:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_SCL_D15_Pin|ARDUINO_SDA_D14_Pin;
 2100              		.loc 3 818 0
 2101 0170 4FF44073 		mov	r3, #768
 2102 0174 FB62     		str	r3, [r7, #44]
 819:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 2103              		.loc 3 819 0
 2104 0176 1223     		movs	r3, #18
 2105 0178 3B63     		str	r3, [r7, #48]
 820:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 2106              		.loc 3 820 0
 2107 017a 0123     		movs	r3, #1
 2108 017c 7B63     		str	r3, [r7, #52]
 821:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2109              		.loc 3 821 0
 2110 017e 0023     		movs	r3, #0
 2111 0180 BB63     		str	r3, [r7, #56]
 822:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 2112              		.loc 3 822 0
 2113 0182 0423     		movs	r3, #4
 2114 0184 FB63     		str	r3, [r7, #60]
 823:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2115              		.loc 3 823 0
 2116 0186 07F12C03 		add	r3, r7, #44
 2117 018a 4E48     		ldr	r0, .L80+12
 2118 018c 1946     		mov	r1, r3
 2119 018e FFF7FEFF 		bl	HAL_GPIO_Init
 824:Src/main.c    **** 
 825:Src/main.c    ****   /*Configure GPIO pins : ULPI_D7_Pin ULPI_D6_Pin ULPI_D5_Pin ULPI_D3_Pin 
 826:Src/main.c    ****                            ULPI_D2_Pin ULPI_D1_Pin ULPI_D4_Pin */
 827:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_D7_Pin|ULPI_D6_Pin|ULPI_D5_Pin|ULPI_D3_Pin 
 2120              		.loc 3 827 0
 2121 0192 43F62343 		movw	r3, #15395
 2122 0196 FB62     		str	r3, [r7, #44]
 828:Src/main.c    ****                           |ULPI_D2_Pin|ULPI_D1_Pin|ULPI_D4_Pin;
 829:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2123              		.loc 3 829 0
ARM GAS  /tmp/ccymeQqc.s 			page 102


 2124 0198 0223     		movs	r3, #2
 2125 019a 3B63     		str	r3, [r7, #48]
 830:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2126              		.loc 3 830 0
 2127 019c 0023     		movs	r3, #0
 2128 019e 7B63     		str	r3, [r7, #52]
 831:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2129              		.loc 3 831 0
 2130 01a0 0323     		movs	r3, #3
 2131 01a2 BB63     		str	r3, [r7, #56]
 832:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 2132              		.loc 3 832 0
 2133 01a4 0A23     		movs	r3, #10
 2134 01a6 FB63     		str	r3, [r7, #60]
 833:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2135              		.loc 3 833 0
 2136 01a8 07F12C03 		add	r3, r7, #44
 2137 01ac 4548     		ldr	r0, .L80+12
 2138 01ae 1946     		mov	r1, r3
 2139 01b0 FFF7FEFF 		bl	HAL_GPIO_Init
 834:Src/main.c    **** 
 835:Src/main.c    ****   /*Configure GPIO pins : uSD_D3_Pin uSD_D2_Pin */
 836:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_D3_Pin|uSD_D2_Pin;
 2140              		.loc 3 836 0
 2141 01b4 1823     		movs	r3, #24
 2142 01b6 FB62     		str	r3, [r7, #44]
 837:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2143              		.loc 3 837 0
 2144 01b8 0223     		movs	r3, #2
 2145 01ba 3B63     		str	r3, [r7, #48]
 838:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2146              		.loc 3 838 0
 2147 01bc 0023     		movs	r3, #0
 2148 01be 7B63     		str	r3, [r7, #52]
 839:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2149              		.loc 3 839 0
 2150 01c0 0323     		movs	r3, #3
 2151 01c2 BB63     		str	r3, [r7, #56]
 840:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_SDMMC2;
 2152              		.loc 3 840 0
 2153 01c4 0A23     		movs	r3, #10
 2154 01c6 FB63     		str	r3, [r7, #60]
 841:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2155              		.loc 3 841 0
 2156 01c8 07F12C03 		add	r3, r7, #44
 2157 01cc 3D48     		ldr	r0, .L80+12
 2158 01ce 1946     		mov	r1, r3
 2159 01d0 FFF7FEFF 		bl	HAL_GPIO_Init
 842:Src/main.c    **** 
 843:Src/main.c    ****   /*Configure GPIO pins : uSD_CMD_Pin uSD_CLK_Pin */
 844:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_CMD_Pin|uSD_CLK_Pin;
 2160              		.loc 3 844 0
 2161 01d4 C023     		movs	r3, #192
 2162 01d6 FB62     		str	r3, [r7, #44]
 845:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2163              		.loc 3 845 0
 2164 01d8 0223     		movs	r3, #2
ARM GAS  /tmp/ccymeQqc.s 			page 103


 2165 01da 3B63     		str	r3, [r7, #48]
 846:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2166              		.loc 3 846 0
 2167 01dc 0023     		movs	r3, #0
 2168 01de 7B63     		str	r3, [r7, #52]
 847:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2169              		.loc 3 847 0
 2170 01e0 0323     		movs	r3, #3
 2171 01e2 BB63     		str	r3, [r7, #56]
 848:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_SDMMC2;
 2172              		.loc 3 848 0
 2173 01e4 0B23     		movs	r3, #11
 2174 01e6 FB63     		str	r3, [r7, #60]
 849:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 2175              		.loc 3 849 0
 2176 01e8 07F12C03 		add	r3, r7, #44
 2177 01ec 3648     		ldr	r0, .L80+16
 2178 01ee 1946     		mov	r1, r3
 2179 01f0 FFF7FEFF 		bl	HAL_GPIO_Init
 850:Src/main.c    **** 
 851:Src/main.c    ****   /*Configure GPIO pin : WIFI_RX_Pin */
 852:Src/main.c    ****   GPIO_InitStruct.Pin = WIFI_RX_Pin;
 2180              		.loc 3 852 0
 2181 01f4 4FF48053 		mov	r3, #4096
 2182 01f8 FB62     		str	r3, [r7, #44]
 853:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2183              		.loc 3 853 0
 2184 01fa 0223     		movs	r3, #2
 2185 01fc 3B63     		str	r3, [r7, #48]
 854:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2186              		.loc 3 854 0
 2187 01fe 0023     		movs	r3, #0
 2188 0200 7B63     		str	r3, [r7, #52]
 855:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2189              		.loc 3 855 0
 2190 0202 0323     		movs	r3, #3
 2191 0204 BB63     		str	r3, [r7, #56]
 856:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 2192              		.loc 3 856 0
 2193 0206 0823     		movs	r3, #8
 2194 0208 FB63     		str	r3, [r7, #60]
 857:Src/main.c    ****   HAL_GPIO_Init(WIFI_RX_GPIO_Port, &GPIO_InitStruct);
 2195              		.loc 3 857 0
 2196 020a 07F12C03 		add	r3, r7, #44
 2197 020e 2F48     		ldr	r0, .L80+20
 2198 0210 1946     		mov	r1, r3
 2199 0212 FFF7FEFF 		bl	HAL_GPIO_Init
 858:Src/main.c    **** 
 859:Src/main.c    ****   /*Configure GPIO pin : CEC_Pin */
 860:Src/main.c    ****   GPIO_InitStruct.Pin = CEC_Pin;
 2200              		.loc 3 860 0
 2201 0216 4FF40043 		mov	r3, #32768
 2202 021a FB62     		str	r3, [r7, #44]
 861:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 2203              		.loc 3 861 0
 2204 021c 1223     		movs	r3, #18
 2205 021e 3B63     		str	r3, [r7, #48]
ARM GAS  /tmp/ccymeQqc.s 			page 104


 862:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2206              		.loc 3 862 0
 2207 0220 0023     		movs	r3, #0
 2208 0222 7B63     		str	r3, [r7, #52]
 863:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2209              		.loc 3 863 0
 2210 0224 0023     		movs	r3, #0
 2211 0226 BB63     		str	r3, [r7, #56]
 864:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_CEC;
 2212              		.loc 3 864 0
 2213 0228 0423     		movs	r3, #4
 2214 022a FB63     		str	r3, [r7, #60]
 865:Src/main.c    ****   HAL_GPIO_Init(CEC_GPIO_Port, &GPIO_InitStruct);
 2215              		.loc 3 865 0
 2216 022c 07F12C03 		add	r3, r7, #44
 2217 0230 2748     		ldr	r0, .L80+24
 2218 0232 1946     		mov	r1, r3
 2219 0234 FFF7FEFF 		bl	HAL_GPIO_Init
 866:Src/main.c    **** 
 867:Src/main.c    ****   /*Configure GPIO pin : AUDIO_SDA_Pin */
 868:Src/main.c    ****   GPIO_InitStruct.Pin = AUDIO_SDA_Pin;
 2220              		.loc 3 868 0
 2221 0238 8023     		movs	r3, #128
 2222 023a FB62     		str	r3, [r7, #44]
 869:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 2223              		.loc 3 869 0
 2224 023c 1223     		movs	r3, #18
 2225 023e 3B63     		str	r3, [r7, #48]
 870:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 2226              		.loc 3 870 0
 2227 0240 0123     		movs	r3, #1
 2228 0242 7B63     		str	r3, [r7, #52]
 871:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2229              		.loc 3 871 0
 2230 0244 0323     		movs	r3, #3
 2231 0246 BB63     		str	r3, [r7, #56]
 872:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_I2C4;
 2232              		.loc 3 872 0
 2233 0248 0B23     		movs	r3, #11
 2234 024a FB63     		str	r3, [r7, #60]
 873:Src/main.c    ****   HAL_GPIO_Init(AUDIO_SDA_GPIO_Port, &GPIO_InitStruct);
 2235              		.loc 3 873 0
 2236 024c 07F12C03 		add	r3, r7, #44
 2237 0250 1C48     		ldr	r0, .L80+12
 2238 0252 1946     		mov	r1, r3
 2239 0254 FFF7FEFF 		bl	HAL_GPIO_Init
 874:Src/main.c    **** 
 875:Src/main.c    ****   /*Configure GPIO pin : QSPI_NCS_Pin */
 876:Src/main.c    ****   GPIO_InitStruct.Pin = QSPI_NCS_Pin;
 2240              		.loc 3 876 0
 2241 0258 4023     		movs	r3, #64
 2242 025a FB62     		str	r3, [r7, #44]
 877:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2243              		.loc 3 877 0
 2244 025c 0223     		movs	r3, #2
 2245 025e 3B63     		str	r3, [r7, #48]
 878:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccymeQqc.s 			page 105


 2246              		.loc 3 878 0
 2247 0260 0023     		movs	r3, #0
 2248 0262 7B63     		str	r3, [r7, #52]
 879:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2249              		.loc 3 879 0
 2250 0264 0323     		movs	r3, #3
 2251 0266 BB63     		str	r3, [r7, #56]
 880:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_QUADSPI;
 2252              		.loc 3 880 0
 2253 0268 0A23     		movs	r3, #10
 2254 026a FB63     		str	r3, [r7, #60]
 881:Src/main.c    ****   HAL_GPIO_Init(QSPI_NCS_GPIO_Port, &GPIO_InitStruct);
 2255              		.loc 3 881 0
 2256 026c 07F12C03 		add	r3, r7, #44
 2257 0270 1448     		ldr	r0, .L80+12
 2258 0272 1946     		mov	r1, r3
 2259 0274 FFF7FEFF 		bl	HAL_GPIO_Init
 882:Src/main.c    **** 
 883:Src/main.c    ****   /*Configure GPIO pins : LD_USER1_Pin Audio_INT_Pin WIFI_RST_Pin DSI_RESET_Pin 
 884:Src/main.c    ****                            ARD_D8_Pin LD_USER2_Pin ARD_D7_Pin ARD_D4_Pin 
 885:Src/main.c    ****                            ARD_D2_Pin */
 886:Src/main.c    ****   GPIO_InitStruct.Pin = LD_USER1_Pin|Audio_INT_Pin|WIFI_RST_Pin|DSI_RESET_Pin 
 2260              		.loc 3 886 0
 2261 0278 4FF23B03 		movw	r3, #61499
 2262 027c FB62     		str	r3, [r7, #44]
 887:Src/main.c    ****                           |ARD_D8_Pin|LD_USER2_Pin|ARD_D7_Pin|ARD_D4_Pin 
 888:Src/main.c    ****                           |ARD_D2_Pin;
 889:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2263              		.loc 3 889 0
 2264 027e 0023     		movs	r3, #0
 2265 0280 3B63     		str	r3, [r7, #48]
 890:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2266              		.loc 3 890 0
 2267 0282 0023     		movs	r3, #0
 2268 0284 7B63     		str	r3, [r7, #52]
 891:Src/main.c    ****   HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 2269              		.loc 3 891 0
 2270 0286 07F12C03 		add	r3, r7, #44
 2271 028a 1248     		ldr	r0, .L80+28
 2272 028c 1946     		mov	r1, r3
 2273 028e FFF7FEFF 		bl	HAL_GPIO_Init
 892:Src/main.c    **** 
 893:Src/main.c    ****   /*Configure GPIO pins : DFSDM_DATIN5_Pin DFSDM_DATIN1_Pin */
 894:Src/main.c    ****   GPIO_InitStruct.Pin = DFSDM_DATIN5_Pin|DFSDM_DATIN1_Pin;
 2274              		.loc 3 894 0
 2275 0292 40F60803 		movw	r3, #2056
 2276 0296 FB62     		str	r3, [r7, #44]
 895:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2277              		.loc 3 895 0
 2278 0298 0223     		movs	r3, #2
 2279 029a 3B63     		str	r3, [r7, #48]
 896:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2280              		.loc 3 896 0
 2281 029c 0023     		movs	r3, #0
 2282 029e 7B63     		str	r3, [r7, #52]
 897:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2283              		.loc 3 897 0
ARM GAS  /tmp/ccymeQqc.s 			page 106


 2284 02a0 0023     		movs	r3, #0
 2285 02a2 BB63     		str	r3, [r7, #56]
 898:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF3_DFSDM1;
 2286              		.loc 3 898 0
 2287 02a4 0323     		movs	r3, #3
 2288 02a6 FB63     		str	r3, [r7, #60]
 899:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2289              		.loc 3 899 0
 2290 02a8 07F12C03 		add	r3, r7, #44
 2291 02ac 0748     		ldr	r0, .L80+20
 2292 02ae 1946     		mov	r1, r3
 2293 02b0 FFF7FEFF 		bl	HAL_GPIO_Init
 2294 02b4 10E0     		b	.L81
 2295              	.L82:
 2296 02b6 00BF     		.align	2
 2297              	.L80:
 2298 02b8 00380240 		.word	1073887232
 2299 02bc 00100240 		.word	1073876992
 2300 02c0 00180240 		.word	1073879040
 2301 02c4 00040240 		.word	1073873920
 2302 02c8 000C0240 		.word	1073875968
 2303 02cc 00080240 		.word	1073874944
 2304 02d0 00000240 		.word	1073872896
 2305 02d4 00240240 		.word	1073882112
 2306              	.L81:
 900:Src/main.c    **** 
 901:Src/main.c    ****   /*Configure GPIO pins : QSPI_D1_Pin QSPI_D0_Pin */
 902:Src/main.c    ****   GPIO_InitStruct.Pin = QSPI_D1_Pin|QSPI_D0_Pin;
 2307              		.loc 3 902 0
 2308 02d8 4FF4C063 		mov	r3, #1536
 2309 02dc FB62     		str	r3, [r7, #44]
 903:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2310              		.loc 3 903 0
 2311 02de 0223     		movs	r3, #2
 2312 02e0 3B63     		str	r3, [r7, #48]
 904:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2313              		.loc 3 904 0
 2314 02e2 0023     		movs	r3, #0
 2315 02e4 7B63     		str	r3, [r7, #52]
 905:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2316              		.loc 3 905 0
 2317 02e6 0323     		movs	r3, #3
 2318 02e8 BB63     		str	r3, [r7, #56]
 906:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 2319              		.loc 3 906 0
 2320 02ea 0923     		movs	r3, #9
 2321 02ec FB63     		str	r3, [r7, #60]
 907:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2322              		.loc 3 907 0
 2323 02ee 07F12C03 		add	r3, r7, #44
 2324 02f2 BA48     		ldr	r0, .L83
 2325 02f4 1946     		mov	r1, r3
 2326 02f6 FFF7FEFF 		bl	HAL_GPIO_Init
 908:Src/main.c    **** 
 909:Src/main.c    ****   /*Configure GPIO pin : ARD_D13_SCK_Pin */
 910:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D13_SCK_Pin;
 2327              		.loc 3 910 0
ARM GAS  /tmp/ccymeQqc.s 			page 107


 2328 02fa 4FF48053 		mov	r3, #4096
 2329 02fe FB62     		str	r3, [r7, #44]
 911:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2330              		.loc 3 911 0
 2331 0300 0223     		movs	r3, #2
 2332 0302 3B63     		str	r3, [r7, #48]
 912:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2333              		.loc 3 912 0
 2334 0304 0023     		movs	r3, #0
 2335 0306 7B63     		str	r3, [r7, #52]
 913:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2336              		.loc 3 913 0
 2337 0308 0023     		movs	r3, #0
 2338 030a BB63     		str	r3, [r7, #56]
 914:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 2339              		.loc 3 914 0
 2340 030c 0523     		movs	r3, #5
 2341 030e FB63     		str	r3, [r7, #60]
 915:Src/main.c    ****   HAL_GPIO_Init(ARD_D13_SCK_GPIO_Port, &GPIO_InitStruct);
 2342              		.loc 3 915 0
 2343 0310 07F12C03 		add	r3, r7, #44
 2344 0314 B248     		ldr	r0, .L83+4
 2345 0316 1946     		mov	r1, r3
 2346 0318 FFF7FEFF 		bl	HAL_GPIO_Init
 916:Src/main.c    **** 
 917:Src/main.c    ****   /*Configure GPIO pins : NC4_Pin NC5_Pin uSD_Detect_Pin LCD_BL_CTRL_Pin */
 918:Src/main.c    ****   GPIO_InitStruct.Pin = NC4_Pin|NC5_Pin|uSD_Detect_Pin|LCD_BL_CTRL_Pin;
 2347              		.loc 3 918 0
 2348 031c 4FF45143 		mov	r3, #53504
 2349 0320 FB62     		str	r3, [r7, #44]
 919:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2350              		.loc 3 919 0
 2351 0322 0023     		movs	r3, #0
 2352 0324 3B63     		str	r3, [r7, #48]
 920:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2353              		.loc 3 920 0
 2354 0326 0023     		movs	r3, #0
 2355 0328 7B63     		str	r3, [r7, #52]
 921:Src/main.c    ****   HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 2356              		.loc 3 921 0
 2357 032a 07F12C03 		add	r3, r7, #44
 2358 032e AD48     		ldr	r0, .L83+8
 2359 0330 1946     		mov	r1, r3
 2360 0332 FFF7FEFF 		bl	HAL_GPIO_Init
 922:Src/main.c    **** 
 923:Src/main.c    ****   /*Configure GPIO pins : NC3_Pin NC2_Pin NC1_Pin NC8_Pin 
 924:Src/main.c    ****                            NC7_Pin */
 925:Src/main.c    ****   GPIO_InitStruct.Pin = NC3_Pin|NC2_Pin|NC1_Pin|NC8_Pin 
 2361              		.loc 3 925 0
 2362 0336 F823     		movs	r3, #248
 2363 0338 FB62     		str	r3, [r7, #44]
 926:Src/main.c    ****                           |NC7_Pin;
 927:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2364              		.loc 3 927 0
 2365 033a 0023     		movs	r3, #0
 2366 033c 3B63     		str	r3, [r7, #48]
 928:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
ARM GAS  /tmp/ccymeQqc.s 			page 108


 2367              		.loc 3 928 0
 2368 033e 0023     		movs	r3, #0
 2369 0340 7B63     		str	r3, [r7, #52]
 929:Src/main.c    ****   HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 2370              		.loc 3 929 0
 2371 0342 07F12C03 		add	r3, r7, #44
 2372 0346 A848     		ldr	r0, .L83+12
 2373 0348 1946     		mov	r1, r3
 2374 034a FFF7FEFF 		bl	HAL_GPIO_Init
 930:Src/main.c    **** 
 931:Src/main.c    ****   /*Configure GPIO pin : SPDIF_RX_Pin */
 932:Src/main.c    ****   GPIO_InitStruct.Pin = SPDIF_RX_Pin;
 2375              		.loc 3 932 0
 2376 034e 4FF48053 		mov	r3, #4096
 2377 0352 FB62     		str	r3, [r7, #44]
 933:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2378              		.loc 3 933 0
 2379 0354 0223     		movs	r3, #2
 2380 0356 3B63     		str	r3, [r7, #48]
 934:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2381              		.loc 3 934 0
 2382 0358 0023     		movs	r3, #0
 2383 035a 7B63     		str	r3, [r7, #52]
 935:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2384              		.loc 3 935 0
 2385 035c 0023     		movs	r3, #0
 2386 035e BB63     		str	r3, [r7, #56]
 936:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_SPDIFRX;
 2387              		.loc 3 936 0
 2388 0360 0723     		movs	r3, #7
 2389 0362 FB63     		str	r3, [r7, #60]
 937:Src/main.c    ****   HAL_GPIO_Init(SPDIF_RX_GPIO_Port, &GPIO_InitStruct);
 2390              		.loc 3 937 0
 2391 0364 07F12C03 		add	r3, r7, #44
 2392 0368 A048     		ldr	r0, .L83+16
 2393 036a 1946     		mov	r1, r3
 2394 036c FFF7FEFF 		bl	HAL_GPIO_Init
 938:Src/main.c    **** 
 939:Src/main.c    ****   /*Configure GPIO pins : uSD_D1_Pin uSD_D0_Pin */
 940:Src/main.c    ****   GPIO_InitStruct.Pin = uSD_D1_Pin|uSD_D0_Pin;
 2395              		.loc 3 940 0
 2396 0370 4FF4C063 		mov	r3, #1536
 2397 0374 FB62     		str	r3, [r7, #44]
 941:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2398              		.loc 3 941 0
 2399 0376 0223     		movs	r3, #2
 2400 0378 3B63     		str	r3, [r7, #48]
 942:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2401              		.loc 3 942 0
 2402 037a 0023     		movs	r3, #0
 2403 037c 7B63     		str	r3, [r7, #52]
 943:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2404              		.loc 3 943 0
 2405 037e 0323     		movs	r3, #3
 2406 0380 BB63     		str	r3, [r7, #56]
 944:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_SDMMC2;
 2407              		.loc 3 944 0
ARM GAS  /tmp/ccymeQqc.s 			page 109


 2408 0382 0B23     		movs	r3, #11
 2409 0384 FB63     		str	r3, [r7, #60]
 945:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 2410              		.loc 3 945 0
 2411 0386 07F12C03 		add	r3, r7, #44
 2412 038a 9848     		ldr	r0, .L83+16
 2413 038c 1946     		mov	r1, r3
 2414 038e FFF7FEFF 		bl	HAL_GPIO_Init
 946:Src/main.c    **** 
 947:Src/main.c    ****   /*Configure GPIO pins : RMII_RXER_Pin OTG_FS_OverCurrent_Pin */
 948:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_RXER_Pin|OTG_FS_OverCurrent_Pin;
 2415              		.loc 3 948 0
 2416 0392 3023     		movs	r3, #48
 2417 0394 FB62     		str	r3, [r7, #44]
 949:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2418              		.loc 3 949 0
 2419 0396 0023     		movs	r3, #0
 2420 0398 3B63     		str	r3, [r7, #48]
 950:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2421              		.loc 3 950 0
 2422 039a 0023     		movs	r3, #0
 2423 039c 7B63     		str	r3, [r7, #52]
 951:Src/main.c    ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 2424              		.loc 3 951 0
 2425 039e 07F12C03 		add	r3, r7, #44
 2426 03a2 9348     		ldr	r0, .L83+20
 2427 03a4 1946     		mov	r1, r3
 2428 03a6 FFF7FEFF 		bl	HAL_GPIO_Init
 952:Src/main.c    **** 
 953:Src/main.c    ****   /*Configure GPIO pin : DFSDM_CKOUT_Pin */
 954:Src/main.c    ****   GPIO_InitStruct.Pin = DFSDM_CKOUT_Pin;
 2429              		.loc 3 954 0
 2430 03aa 0823     		movs	r3, #8
 2431 03ac FB62     		str	r3, [r7, #44]
 955:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2432              		.loc 3 955 0
 2433 03ae 0223     		movs	r3, #2
 2434 03b0 3B63     		str	r3, [r7, #48]
 956:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2435              		.loc 3 956 0
 2436 03b2 0023     		movs	r3, #0
 2437 03b4 7B63     		str	r3, [r7, #52]
 957:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2438              		.loc 3 957 0
 2439 03b6 0023     		movs	r3, #0
 2440 03b8 BB63     		str	r3, [r7, #56]
 958:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF3_DFSDM1;
 2441              		.loc 3 958 0
 2442 03ba 0323     		movs	r3, #3
 2443 03bc FB63     		str	r3, [r7, #60]
 959:Src/main.c    ****   HAL_GPIO_Init(DFSDM_CKOUT_GPIO_Port, &GPIO_InitStruct);
 2444              		.loc 3 959 0
 2445 03be 07F12C03 		add	r3, r7, #44
 2446 03c2 8B48     		ldr	r0, .L83+20
 2447 03c4 1946     		mov	r1, r3
 2448 03c6 FFF7FEFF 		bl	HAL_GPIO_Init
 960:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 110


 961:Src/main.c    ****   /*Configure GPIO pin : SPI2_NSS_Pin */
 962:Src/main.c    ****   GPIO_InitStruct.Pin = SPI2_NSS_Pin;
 2449              		.loc 3 962 0
 2450 03ca 4FF40063 		mov	r3, #2048
 2451 03ce FB62     		str	r3, [r7, #44]
 963:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2452              		.loc 3 963 0
 2453 03d0 0223     		movs	r3, #2
 2454 03d2 3B63     		str	r3, [r7, #48]
 964:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2455              		.loc 3 964 0
 2456 03d4 0023     		movs	r3, #0
 2457 03d6 7B63     		str	r3, [r7, #52]
 965:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2458              		.loc 3 965 0
 2459 03d8 0323     		movs	r3, #3
 2460 03da BB63     		str	r3, [r7, #56]
 966:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 2461              		.loc 3 966 0
 2462 03dc 0523     		movs	r3, #5
 2463 03de FB63     		str	r3, [r7, #60]
 967:Src/main.c    ****   HAL_GPIO_Init(SPI2_NSS_GPIO_Port, &GPIO_InitStruct);
 2464              		.loc 3 967 0
 2465 03e0 07F12C03 		add	r3, r7, #44
 2466 03e4 7E48     		ldr	r0, .L83+4
 2467 03e6 1946     		mov	r1, r3
 2468 03e8 FFF7FEFF 		bl	HAL_GPIO_Init
 968:Src/main.c    **** 
 969:Src/main.c    ****   /*Configure GPIO pin : WIFI_TX_Pin */
 970:Src/main.c    ****   GPIO_InitStruct.Pin = WIFI_TX_Pin;
 2469              		.loc 3 970 0
 2470 03ec 0423     		movs	r3, #4
 2471 03ee FB62     		str	r3, [r7, #44]
 971:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2472              		.loc 3 971 0
 2473 03f0 0223     		movs	r3, #2
 2474 03f2 3B63     		str	r3, [r7, #48]
 972:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2475              		.loc 3 972 0
 2476 03f4 0023     		movs	r3, #0
 2477 03f6 7B63     		str	r3, [r7, #52]
 973:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2478              		.loc 3 973 0
 2479 03f8 0323     		movs	r3, #3
 2480 03fa BB63     		str	r3, [r7, #56]
 974:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF8_UART5;
 2481              		.loc 3 974 0
 2482 03fc 0823     		movs	r3, #8
 2483 03fe FB63     		str	r3, [r7, #60]
 975:Src/main.c    ****   HAL_GPIO_Init(WIFI_TX_GPIO_Port, &GPIO_InitStruct);
 2484              		.loc 3 975 0
 2485 0400 07F12C03 		add	r3, r7, #44
 2486 0404 7A48     		ldr	r0, .L83+20
 2487 0406 1946     		mov	r1, r3
 2488 0408 FFF7FEFF 		bl	HAL_GPIO_Init
 976:Src/main.c    **** 
 977:Src/main.c    ****   /*Configure GPIO pin : VCP_RX_Pin */
ARM GAS  /tmp/ccymeQqc.s 			page 111


 978:Src/main.c    ****   GPIO_InitStruct.Pin = VCP_RX_Pin;
 2489              		.loc 3 978 0
 2490 040c 4FF48063 		mov	r3, #1024
 2491 0410 FB62     		str	r3, [r7, #44]
 979:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2492              		.loc 3 979 0
 2493 0412 0223     		movs	r3, #2
 2494 0414 3B63     		str	r3, [r7, #48]
 980:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2495              		.loc 3 980 0
 2496 0416 0023     		movs	r3, #0
 2497 0418 7B63     		str	r3, [r7, #52]
 981:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2498              		.loc 3 981 0
 2499 041a 0323     		movs	r3, #3
 2500 041c BB63     		str	r3, [r7, #56]
 982:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 2501              		.loc 3 982 0
 2502 041e 0723     		movs	r3, #7
 2503 0420 FB63     		str	r3, [r7, #60]
 983:Src/main.c    ****   HAL_GPIO_Init(VCP_RX_GPIO_Port, &GPIO_InitStruct);
 2504              		.loc 3 983 0
 2505 0422 07F12C03 		add	r3, r7, #44
 2506 0426 6E48     		ldr	r0, .L83+4
 2507 0428 1946     		mov	r1, r3
 2508 042a FFF7FEFF 		bl	HAL_GPIO_Init
 984:Src/main.c    **** 
 985:Src/main.c    ****   /*Configure GPIO pin : VCP_TX_Pin */
 986:Src/main.c    ****   GPIO_InitStruct.Pin = VCP_TX_Pin;
 2509              		.loc 3 986 0
 2510 042e 4FF40073 		mov	r3, #512
 2511 0432 FB62     		str	r3, [r7, #44]
 987:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2512              		.loc 3 987 0
 2513 0434 0223     		movs	r3, #2
 2514 0436 3B63     		str	r3, [r7, #48]
 988:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2515              		.loc 3 988 0
 2516 0438 0023     		movs	r3, #0
 2517 043a 7B63     		str	r3, [r7, #52]
 989:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2518              		.loc 3 989 0
 2519 043c 0023     		movs	r3, #0
 2520 043e BB63     		str	r3, [r7, #56]
 990:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 2521              		.loc 3 990 0
 2522 0440 0723     		movs	r3, #7
 2523 0442 FB63     		str	r3, [r7, #60]
 991:Src/main.c    ****   HAL_GPIO_Init(VCP_TX_GPIO_Port, &GPIO_InitStruct);
 2524              		.loc 3 991 0
 2525 0444 07F12C03 		add	r3, r7, #44
 2526 0448 6548     		ldr	r0, .L83+4
 2527 044a 1946     		mov	r1, r3
 2528 044c FFF7FEFF 		bl	HAL_GPIO_Init
 992:Src/main.c    **** 
 993:Src/main.c    ****   /*Configure GPIO pin : ULPI_DIR_Pin */
 994:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_DIR_Pin;
ARM GAS  /tmp/ccymeQqc.s 			page 112


 2529              		.loc 3 994 0
 2530 0450 4FF40063 		mov	r3, #2048
 2531 0454 FB62     		str	r3, [r7, #44]
 995:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2532              		.loc 3 995 0
 2533 0456 0223     		movs	r3, #2
 2534 0458 3B63     		str	r3, [r7, #48]
 996:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2535              		.loc 3 996 0
 2536 045a 0023     		movs	r3, #0
 2537 045c 7B63     		str	r3, [r7, #52]
 997:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2538              		.loc 3 997 0
 2539 045e 0323     		movs	r3, #3
 2540 0460 BB63     		str	r3, [r7, #56]
 998:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 2541              		.loc 3 998 0
 2542 0462 0A23     		movs	r3, #10
 2543 0464 FB63     		str	r3, [r7, #60]
 999:Src/main.c    ****   HAL_GPIO_Init(ULPI_DIR_GPIO_Port, &GPIO_InitStruct);
 2544              		.loc 3 999 0
 2545 0466 07F12C03 		add	r3, r7, #44
 2546 046a 5E48     		ldr	r0, .L83+8
 2547 046c 1946     		mov	r1, r3
 2548 046e FFF7FEFF 		bl	HAL_GPIO_Init
1000:Src/main.c    **** 
1001:Src/main.c    ****   /*Configure GPIO pin : CEC_CLK_Pin */
1002:Src/main.c    ****   GPIO_InitStruct.Pin = CEC_CLK_Pin;
 2549              		.loc 3 1002 0
 2550 0472 4FF48073 		mov	r3, #256
 2551 0476 FB62     		str	r3, [r7, #44]
1003:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2552              		.loc 3 1003 0
 2553 0478 0223     		movs	r3, #2
 2554 047a 3B63     		str	r3, [r7, #48]
1004:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2555              		.loc 3 1004 0
 2556 047c 0023     		movs	r3, #0
 2557 047e 7B63     		str	r3, [r7, #52]
1005:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2558              		.loc 3 1005 0
 2559 0480 0023     		movs	r3, #0
 2560 0482 BB63     		str	r3, [r7, #56]
1006:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF0_MCO;
 2561              		.loc 3 1006 0
 2562 0484 0023     		movs	r3, #0
 2563 0486 FB63     		str	r3, [r7, #60]
1007:Src/main.c    ****   HAL_GPIO_Init(CEC_CLK_GPIO_Port, &GPIO_InitStruct);
 2564              		.loc 3 1007 0
 2565 0488 07F12C03 		add	r3, r7, #44
 2566 048c 5448     		ldr	r0, .L83+4
 2567 048e 1946     		mov	r1, r3
 2568 0490 FFF7FEFF 		bl	HAL_GPIO_Init
1008:Src/main.c    **** 
1009:Src/main.c    ****   /*Configure GPIO pin : LCD_INT_Pin */
1010:Src/main.c    ****   GPIO_InitStruct.Pin = LCD_INT_Pin;
 2569              		.loc 3 1010 0
ARM GAS  /tmp/ccymeQqc.s 			page 113


 2570 0494 4FF40053 		mov	r3, #8192
 2571 0498 FB62     		str	r3, [r7, #44]
1011:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 2572              		.loc 3 1011 0
 2573 049a 564B     		ldr	r3, .L83+24
 2574 049c 3B63     		str	r3, [r7, #48]
1012:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2575              		.loc 3 1012 0
 2576 049e 0023     		movs	r3, #0
 2577 04a0 7B63     		str	r3, [r7, #52]
1013:Src/main.c    ****   HAL_GPIO_Init(LCD_INT_GPIO_Port, &GPIO_InitStruct);
 2578              		.loc 3 1013 0
 2579 04a2 07F12C03 		add	r3, r7, #44
 2580 04a6 4F48     		ldr	r0, .L83+8
 2581 04a8 1946     		mov	r1, r3
 2582 04aa FFF7FEFF 		bl	HAL_GPIO_Init
1014:Src/main.c    **** 
1015:Src/main.c    ****   /*Configure GPIO pin : ARD_D5_PWM_Pin */
1016:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D5_PWM_Pin;
 2583              		.loc 3 1016 0
 2584 04ae 4FF48073 		mov	r3, #256
 2585 04b2 FB62     		str	r3, [r7, #44]
1017:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2586              		.loc 3 1017 0
 2587 04b4 0223     		movs	r3, #2
 2588 04b6 3B63     		str	r3, [r7, #48]
1018:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2589              		.loc 3 1018 0
 2590 04b8 0023     		movs	r3, #0
 2591 04ba 7B63     		str	r3, [r7, #52]
1019:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2592              		.loc 3 1019 0
 2593 04bc 0023     		movs	r3, #0
 2594 04be BB63     		str	r3, [r7, #56]
1020:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 2595              		.loc 3 1020 0
 2596 04c0 0223     		movs	r3, #2
 2597 04c2 FB63     		str	r3, [r7, #60]
1021:Src/main.c    ****   HAL_GPIO_Init(ARD_D5_PWM_GPIO_Port, &GPIO_InitStruct);
 2598              		.loc 3 1021 0
 2599 04c4 07F12C03 		add	r3, r7, #44
 2600 04c8 4448     		ldr	r0, .L83
 2601 04ca 1946     		mov	r1, r3
 2602 04cc FFF7FEFF 		bl	HAL_GPIO_Init
1022:Src/main.c    **** 
1023:Src/main.c    ****   /*Configure GPIO pins : ARD_D0_RX_Pin ARDUINO_TX_D1_Pin */
1024:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D0_RX_Pin|ARDUINO_TX_D1_Pin;
 2603              		.loc 3 1024 0
 2604 04d0 C023     		movs	r3, #192
 2605 04d2 FB62     		str	r3, [r7, #44]
1025:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2606              		.loc 3 1025 0
 2607 04d4 0223     		movs	r3, #2
 2608 04d6 3B63     		str	r3, [r7, #48]
1026:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2609              		.loc 3 1026 0
 2610 04d8 0023     		movs	r3, #0
ARM GAS  /tmp/ccymeQqc.s 			page 114


 2611 04da 7B63     		str	r3, [r7, #52]
1027:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2612              		.loc 3 1027 0
 2613 04dc 0323     		movs	r3, #3
 2614 04de BB63     		str	r3, [r7, #56]
1028:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF8_USART6;
 2615              		.loc 3 1028 0
 2616 04e0 0823     		movs	r3, #8
 2617 04e2 FB63     		str	r3, [r7, #60]
1029:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2618              		.loc 3 1029 0
 2619 04e4 07F12C03 		add	r3, r7, #44
 2620 04e8 3C48     		ldr	r0, .L83
 2621 04ea 1946     		mov	r1, r3
 2622 04ec FFF7FEFF 		bl	HAL_GPIO_Init
1030:Src/main.c    **** 
1031:Src/main.c    ****   /*Configure GPIO pin : ULPI_NXT_Pin */
1032:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_NXT_Pin;
 2623              		.loc 3 1032 0
 2624 04f0 1023     		movs	r3, #16
 2625 04f2 FB62     		str	r3, [r7, #44]
1033:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2626              		.loc 3 1033 0
 2627 04f4 0223     		movs	r3, #2
 2628 04f6 3B63     		str	r3, [r7, #48]
1034:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2629              		.loc 3 1034 0
 2630 04f8 0023     		movs	r3, #0
 2631 04fa 7B63     		str	r3, [r7, #52]
1035:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2632              		.loc 3 1035 0
 2633 04fc 0323     		movs	r3, #3
 2634 04fe BB63     		str	r3, [r7, #56]
1036:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 2635              		.loc 3 1036 0
 2636 0500 0A23     		movs	r3, #10
 2637 0502 FB63     		str	r3, [r7, #60]
1037:Src/main.c    ****   HAL_GPIO_Init(ULPI_NXT_GPIO_Port, &GPIO_InitStruct);
 2638              		.loc 3 1037 0
 2639 0504 07F12C03 		add	r3, r7, #44
 2640 0508 3B48     		ldr	r0, .L83+28
 2641 050a 1946     		mov	r1, r3
 2642 050c FFF7FEFF 		bl	HAL_GPIO_Init
1038:Src/main.c    **** 
1039:Src/main.c    ****   /*Configure GPIO pin : SAI1_MCLKA_Pin */
1040:Src/main.c    ****   GPIO_InitStruct.Pin = SAI1_MCLKA_Pin;
 2643              		.loc 3 1040 0
 2644 0510 8023     		movs	r3, #128
 2645 0512 FB62     		str	r3, [r7, #44]
1041:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2646              		.loc 3 1041 0
 2647 0514 0223     		movs	r3, #2
 2648 0516 3B63     		str	r3, [r7, #48]
1042:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2649              		.loc 3 1042 0
 2650 0518 0023     		movs	r3, #0
 2651 051a 7B63     		str	r3, [r7, #52]
ARM GAS  /tmp/ccymeQqc.s 			page 115


1043:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2652              		.loc 3 1043 0
 2653 051c 0023     		movs	r3, #0
 2654 051e BB63     		str	r3, [r7, #56]
1044:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF6_SAI1;
 2655              		.loc 3 1044 0
 2656 0520 0623     		movs	r3, #6
 2657 0522 FB63     		str	r3, [r7, #60]
1045:Src/main.c    ****   HAL_GPIO_Init(SAI1_MCLKA_GPIO_Port, &GPIO_InitStruct);
 2658              		.loc 3 1045 0
 2659 0524 07F12C03 		add	r3, r7, #44
 2660 0528 3048     		ldr	r0, .L83+16
 2661 052a 1946     		mov	r1, r3
 2662 052c FFF7FEFF 		bl	HAL_GPIO_Init
1046:Src/main.c    **** 
1047:Src/main.c    ****   /*Configure GPIO pins : EXT_SDA_Pin EXT_SCL_Pin */
1048:Src/main.c    ****   GPIO_InitStruct.Pin = EXT_SDA_Pin|EXT_SCL_Pin;
 2663              		.loc 3 1048 0
 2664 0530 4823     		movs	r3, #72
 2665 0532 FB62     		str	r3, [r7, #44]
1049:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2666              		.loc 3 1049 0
 2667 0534 0023     		movs	r3, #0
 2668 0536 3B63     		str	r3, [r7, #48]
1050:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2669              		.loc 3 1050 0
 2670 0538 0023     		movs	r3, #0
 2671 053a 7B63     		str	r3, [r7, #52]
1051:Src/main.c    ****   HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 2672              		.loc 3 1051 0
 2673 053c 07F12C03 		add	r3, r7, #44
 2674 0540 2A48     		ldr	r0, .L83+16
 2675 0542 1946     		mov	r1, r3
 2676 0544 FFF7FEFF 		bl	HAL_GPIO_Init
1052:Src/main.c    **** 
1053:Src/main.c    ****   /*Configure GPIO pin : ARD_D6_PWM_Pin */
1054:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D6_PWM_Pin;
 2677              		.loc 3 1054 0
 2678 0548 8023     		movs	r3, #128
 2679 054a FB62     		str	r3, [r7, #44]
1055:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2680              		.loc 3 1055 0
 2681 054c 0223     		movs	r3, #2
 2682 054e 3B63     		str	r3, [r7, #48]
1056:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2683              		.loc 3 1056 0
 2684 0550 0023     		movs	r3, #0
 2685 0552 7B63     		str	r3, [r7, #52]
1057:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2686              		.loc 3 1057 0
 2687 0554 0023     		movs	r3, #0
 2688 0556 BB63     		str	r3, [r7, #56]
1058:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF3_TIM11;
 2689              		.loc 3 1058 0
 2690 0558 0323     		movs	r3, #3
 2691 055a FB63     		str	r3, [r7, #60]
1059:Src/main.c    ****   HAL_GPIO_Init(ARD_D6_PWM_GPIO_Port, &GPIO_InitStruct);
ARM GAS  /tmp/ccymeQqc.s 			page 116


 2692              		.loc 3 1059 0
 2693 055c 07F12C03 		add	r3, r7, #44
 2694 0560 2648     		ldr	r0, .L83+32
 2695 0562 1946     		mov	r1, r3
 2696 0564 FFF7FEFF 		bl	HAL_GPIO_Init
1060:Src/main.c    **** 
1061:Src/main.c    ****   /*Configure GPIO pin : ARD_D3_PWM_Pin */
1062:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_D3_PWM_Pin;
 2697              		.loc 3 1062 0
 2698 0568 4023     		movs	r3, #64
 2699 056a FB62     		str	r3, [r7, #44]
1063:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2700              		.loc 3 1063 0
 2701 056c 0223     		movs	r3, #2
 2702 056e 3B63     		str	r3, [r7, #48]
1064:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2703              		.loc 3 1064 0
 2704 0570 0023     		movs	r3, #0
 2705 0572 7B63     		str	r3, [r7, #52]
1065:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2706              		.loc 3 1065 0
 2707 0574 0023     		movs	r3, #0
 2708 0576 BB63     		str	r3, [r7, #56]
1066:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF3_TIM10;
 2709              		.loc 3 1066 0
 2710 0578 0323     		movs	r3, #3
 2711 057a FB63     		str	r3, [r7, #60]
1067:Src/main.c    ****   HAL_GPIO_Init(ARD_D3_PWM_GPIO_Port, &GPIO_InitStruct);
 2712              		.loc 3 1067 0
 2713 057c 07F12C03 		add	r3, r7, #44
 2714 0580 1E48     		ldr	r0, .L83+32
 2715 0582 1946     		mov	r1, r3
 2716 0584 FFF7FEFF 		bl	HAL_GPIO_Init
1068:Src/main.c    **** 
1069:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_A1_Pin ARDUINO_A2_Pin ARDUINO_A3_Pin */
1070:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_A1_Pin|ARDUINO_A2_Pin|ARDUINO_A3_Pin;
 2717              		.loc 3 1070 0
 2718 0588 4FF4E063 		mov	r3, #1792
 2719 058c FB62     		str	r3, [r7, #44]
1071:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 2720              		.loc 3 1071 0
 2721 058e 0323     		movs	r3, #3
 2722 0590 3B63     		str	r3, [r7, #48]
1072:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2723              		.loc 3 1072 0
 2724 0592 0023     		movs	r3, #0
 2725 0594 7B63     		str	r3, [r7, #52]
1073:Src/main.c    ****   HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 2726              		.loc 3 1073 0
 2727 0596 07F12C03 		add	r3, r7, #44
 2728 059a 1848     		ldr	r0, .L83+32
 2729 059c 1946     		mov	r1, r3
 2730 059e FFF7FEFF 		bl	HAL_GPIO_Init
1074:Src/main.c    **** 
1075:Src/main.c    ****   /*Configure GPIO pin : ULPI_STP_Pin */
1076:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_STP_Pin;
 2731              		.loc 3 1076 0
ARM GAS  /tmp/ccymeQqc.s 			page 117


 2732 05a2 0123     		movs	r3, #1
 2733 05a4 FB62     		str	r3, [r7, #44]
1077:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2734              		.loc 3 1077 0
 2735 05a6 0223     		movs	r3, #2
 2736 05a8 3B63     		str	r3, [r7, #48]
1078:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2737              		.loc 3 1078 0
 2738 05aa 0023     		movs	r3, #0
 2739 05ac 7B63     		str	r3, [r7, #52]
1079:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2740              		.loc 3 1079 0
 2741 05ae 0323     		movs	r3, #3
 2742 05b0 BB63     		str	r3, [r7, #56]
1080:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 2743              		.loc 3 1080 0
 2744 05b2 0A23     		movs	r3, #10
 2745 05b4 FB63     		str	r3, [r7, #60]
1081:Src/main.c    ****   HAL_GPIO_Init(ULPI_STP_GPIO_Port, &GPIO_InitStruct);
 2746              		.loc 3 1081 0
 2747 05b6 07F12C03 		add	r3, r7, #44
 2748 05ba 0848     		ldr	r0, .L83
 2749 05bc 1946     		mov	r1, r3
 2750 05be FFF7FEFF 		bl	HAL_GPIO_Init
1082:Src/main.c    **** 
1083:Src/main.c    ****   /*Configure GPIO pins : RMII_MDC_Pin RMII_RXD0_Pin RMII_RXD1_Pin */
1084:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 2751              		.loc 3 1084 0
 2752 05c2 3223     		movs	r3, #50
 2753 05c4 FB62     		str	r3, [r7, #44]
1085:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2754              		.loc 3 1085 0
 2755 05c6 0223     		movs	r3, #2
 2756 05c8 3B63     		str	r3, [r7, #48]
1086:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2757              		.loc 3 1086 0
 2758 05ca 0023     		movs	r3, #0
 2759 05cc 7B63     		str	r3, [r7, #52]
1087:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2760              		.loc 3 1087 0
 2761 05ce 0323     		movs	r3, #3
 2762 05d0 BB63     		str	r3, [r7, #56]
1088:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 2763              		.loc 3 1088 0
 2764 05d2 0B23     		movs	r3, #11
 2765 05d4 FB63     		str	r3, [r7, #60]
1089:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 2766              		.loc 3 1089 0
 2767 05d6 07F12C03 		add	r3, r7, #44
 2768 05da 11E0     		b	.L84
 2769              	.L85:
 2770              		.align	2
 2771              	.L83:
 2772 05dc 00080240 		.word	1073874944
 2773 05e0 00000240 		.word	1073872896
 2774 05e4 00200240 		.word	1073881088
 2775 05e8 00280240 		.word	1073883136
ARM GAS  /tmp/ccymeQqc.s 			page 118


 2776 05ec 00180240 		.word	1073879040
 2777 05f0 000C0240 		.word	1073875968
 2778 05f4 00001210 		.word	269615104
 2779 05f8 001C0240 		.word	1073880064
 2780 05fc 00140240 		.word	1073878016
 2781              	.L84:
 2782 0600 6548     		ldr	r0, .L86
 2783 0602 1946     		mov	r1, r3
 2784 0604 FFF7FEFF 		bl	HAL_GPIO_Init
1090:Src/main.c    **** 
1091:Src/main.c    ****   /*Configure GPIO pin : ARD_A2_Pin */
1092:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_A2_Pin;
 2785              		.loc 3 1092 0
 2786 0608 0423     		movs	r3, #4
 2787 060a FB62     		str	r3, [r7, #44]
1093:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 2788              		.loc 3 1093 0
 2789 060c 0323     		movs	r3, #3
 2790 060e 3B63     		str	r3, [r7, #48]
1094:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2791              		.loc 3 1094 0
 2792 0610 0023     		movs	r3, #0
 2793 0612 7B63     		str	r3, [r7, #52]
1095:Src/main.c    ****   HAL_GPIO_Init(ARD_A2_GPIO_Port, &GPIO_InitStruct);
 2794              		.loc 3 1095 0
 2795 0614 07F12C03 		add	r3, r7, #44
 2796 0618 5F48     		ldr	r0, .L86
 2797 061a 1946     		mov	r1, r3
 2798 061c FFF7FEFF 		bl	HAL_GPIO_Init
1096:Src/main.c    **** 
1097:Src/main.c    ****   /*Configure GPIO pin : PB2 */
1098:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2;
 2799              		.loc 3 1098 0
 2800 0620 0423     		movs	r3, #4
 2801 0622 FB62     		str	r3, [r7, #44]
1099:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2802              		.loc 3 1099 0
 2803 0624 0223     		movs	r3, #2
 2804 0626 3B63     		str	r3, [r7, #48]
1100:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2805              		.loc 3 1100 0
 2806 0628 0023     		movs	r3, #0
 2807 062a 7B63     		str	r3, [r7, #52]
1101:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2808              		.loc 3 1101 0
 2809 062c 0323     		movs	r3, #3
 2810 062e BB63     		str	r3, [r7, #56]
1102:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 2811              		.loc 3 1102 0
 2812 0630 0923     		movs	r3, #9
 2813 0632 FB63     		str	r3, [r7, #60]
1103:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 2814              		.loc 3 1103 0
 2815 0634 07F12C03 		add	r3, r7, #44
 2816 0638 5848     		ldr	r0, .L86+4
 2817 063a 1946     		mov	r1, r3
 2818 063c FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccymeQqc.s 			page 119


1104:Src/main.c    **** 
1105:Src/main.c    ****   /*Configure GPIO pin : AUDIO_SCL_Pin */
1106:Src/main.c    ****   GPIO_InitStruct.Pin = AUDIO_SCL_Pin;
 2819              		.loc 3 1106 0
 2820 0640 4FF48053 		mov	r3, #4096
 2821 0644 FB62     		str	r3, [r7, #44]
1107:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 2822              		.loc 3 1107 0
 2823 0646 1223     		movs	r3, #18
 2824 0648 3B63     		str	r3, [r7, #48]
1108:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_PULLUP;
 2825              		.loc 3 1108 0
 2826 064a 0123     		movs	r3, #1
 2827 064c 7B63     		str	r3, [r7, #52]
1109:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2828              		.loc 3 1109 0
 2829 064e 0323     		movs	r3, #3
 2830 0650 BB63     		str	r3, [r7, #56]
1110:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF4_I2C4;
 2831              		.loc 3 1110 0
 2832 0652 0423     		movs	r3, #4
 2833 0654 FB63     		str	r3, [r7, #60]
1111:Src/main.c    ****   HAL_GPIO_Init(AUDIO_SCL_GPIO_Port, &GPIO_InitStruct);
 2834              		.loc 3 1111 0
 2835 0656 07F12C03 		add	r3, r7, #44
 2836 065a 5148     		ldr	r0, .L86+8
 2837 065c 1946     		mov	r1, r3
 2838 065e FFF7FEFF 		bl	HAL_GPIO_Init
1112:Src/main.c    **** 
1113:Src/main.c    ****   /*Configure GPIO pin : QSPI_D3_Pin */
1114:Src/main.c    ****   GPIO_InitStruct.Pin = QSPI_D3_Pin;
 2839              		.loc 3 1114 0
 2840 0662 4FF40053 		mov	r3, #8192
 2841 0666 FB62     		str	r3, [r7, #44]
1115:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2842              		.loc 3 1115 0
 2843 0668 0223     		movs	r3, #2
 2844 066a 3B63     		str	r3, [r7, #48]
1116:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2845              		.loc 3 1116 0
 2846 066c 0023     		movs	r3, #0
 2847 066e 7B63     		str	r3, [r7, #52]
1117:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2848              		.loc 3 1117 0
 2849 0670 0323     		movs	r3, #3
 2850 0672 BB63     		str	r3, [r7, #56]
1118:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_QUADSPI;
 2851              		.loc 3 1118 0
 2852 0674 0923     		movs	r3, #9
 2853 0676 FB63     		str	r3, [r7, #60]
1119:Src/main.c    ****   HAL_GPIO_Init(QSPI_D3_GPIO_Port, &GPIO_InitStruct);
 2854              		.loc 3 1119 0
 2855 0678 07F12C03 		add	r3, r7, #44
 2856 067c 4848     		ldr	r0, .L86+8
 2857 067e 1946     		mov	r1, r3
 2858 0680 FFF7FEFF 		bl	HAL_GPIO_Init
1120:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 120


1121:Src/main.c    ****   /*Configure GPIO pins : RMII_REF_CLK_Pin RMII_MDIO_Pin RMII_CRS_DV_Pin */
1122:Src/main.c    ****   GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 2859              		.loc 3 1122 0
 2860 0684 8623     		movs	r3, #134
 2861 0686 FB62     		str	r3, [r7, #44]
1123:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2862              		.loc 3 1123 0
 2863 0688 0223     		movs	r3, #2
 2864 068a 3B63     		str	r3, [r7, #48]
1124:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2865              		.loc 3 1124 0
 2866 068c 0023     		movs	r3, #0
 2867 068e 7B63     		str	r3, [r7, #52]
1125:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2868              		.loc 3 1125 0
 2869 0690 0323     		movs	r3, #3
 2870 0692 BB63     		str	r3, [r7, #56]
1126:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 2871              		.loc 3 1126 0
 2872 0694 0B23     		movs	r3, #11
 2873 0696 FB63     		str	r3, [r7, #60]
1127:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2874              		.loc 3 1127 0
 2875 0698 07F12C03 		add	r3, r7, #44
 2876 069c 4148     		ldr	r0, .L86+12
 2877 069e 1946     		mov	r1, r3
 2878 06a0 FFF7FEFF 		bl	HAL_GPIO_Init
1128:Src/main.c    **** 
1129:Src/main.c    ****   /*Configure GPIO pin : B_USER_Pin */
1130:Src/main.c    ****   GPIO_InitStruct.Pin = B_USER_Pin;
 2879              		.loc 3 1130 0
 2880 06a4 0123     		movs	r3, #1
 2881 06a6 FB62     		str	r3, [r7, #44]
1131:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 2882              		.loc 3 1131 0
 2883 06a8 3F4B     		ldr	r3, .L86+16
 2884 06aa 3B63     		str	r3, [r7, #48]
1132:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2885              		.loc 3 1132 0
 2886 06ac 0023     		movs	r3, #0
 2887 06ae 7B63     		str	r3, [r7, #52]
1133:Src/main.c    ****   HAL_GPIO_Init(B_USER_GPIO_Port, &GPIO_InitStruct);
 2888              		.loc 3 1133 0
 2889 06b0 07F12C03 		add	r3, r7, #44
 2890 06b4 3B48     		ldr	r0, .L86+12
 2891 06b6 1946     		mov	r1, r3
 2892 06b8 FFF7FEFF 		bl	HAL_GPIO_Init
1134:Src/main.c    **** 
1135:Src/main.c    ****   /*Configure GPIO pins : ARD_A1_Pin ARD_A0_Pin */
1136:Src/main.c    ****   GPIO_InitStruct.Pin = ARD_A1_Pin|ARD_A0_Pin;
 2893              		.loc 3 1136 0
 2894 06bc 5023     		movs	r3, #80
 2895 06be FB62     		str	r3, [r7, #44]
1137:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 2896              		.loc 3 1137 0
 2897 06c0 0323     		movs	r3, #3
 2898 06c2 3B63     		str	r3, [r7, #48]
ARM GAS  /tmp/ccymeQqc.s 			page 121


1138:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2899              		.loc 3 1138 0
 2900 06c4 0023     		movs	r3, #0
 2901 06c6 7B63     		str	r3, [r7, #52]
1139:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2902              		.loc 3 1139 0
 2903 06c8 07F12C03 		add	r3, r7, #44
 2904 06cc 3548     		ldr	r0, .L86+12
 2905 06ce 1946     		mov	r1, r3
 2906 06d0 FFF7FEFF 		bl	HAL_GPIO_Init
1140:Src/main.c    **** 
1141:Src/main.c    ****   /*Configure GPIO pin : SPDIF_TX_Pin */
1142:Src/main.c    ****   GPIO_InitStruct.Pin = SPDIF_TX_Pin;
 2907              		.loc 3 1142 0
 2908 06d4 4FF40063 		mov	r3, #2048
 2909 06d8 FB62     		str	r3, [r7, #44]
1143:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2910              		.loc 3 1143 0
 2911 06da 0223     		movs	r3, #2
 2912 06dc 3B63     		str	r3, [r7, #48]
1144:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2913              		.loc 3 1144 0
 2914 06de 0023     		movs	r3, #0
 2915 06e0 7B63     		str	r3, [r7, #52]
1145:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2916              		.loc 3 1145 0
 2917 06e2 0023     		movs	r3, #0
 2918 06e4 BB63     		str	r3, [r7, #56]
1146:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_SAI2;
 2919              		.loc 3 1146 0
 2920 06e6 0A23     		movs	r3, #10
 2921 06e8 FB63     		str	r3, [r7, #60]
1147:Src/main.c    ****   HAL_GPIO_Init(SPDIF_TX_GPIO_Port, &GPIO_InitStruct);
 2922              		.loc 3 1147 0
 2923 06ea 07F12C03 		add	r3, r7, #44
 2924 06ee 2C48     		ldr	r0, .L86+8
 2925 06f0 1946     		mov	r1, r3
 2926 06f2 FFF7FEFF 		bl	HAL_GPIO_Init
1148:Src/main.c    **** 
1149:Src/main.c    ****   /*Configure GPIO pin : EXT_RST_Pin */
1150:Src/main.c    ****   GPIO_InitStruct.Pin = EXT_RST_Pin;
 2927              		.loc 3 1150 0
 2928 06f6 8023     		movs	r3, #128
 2929 06f8 FB62     		str	r3, [r7, #44]
1151:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 2930              		.loc 3 1151 0
 2931 06fa 0023     		movs	r3, #0
 2932 06fc 3B63     		str	r3, [r7, #48]
1152:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2933              		.loc 3 1152 0
 2934 06fe 0023     		movs	r3, #0
 2935 0700 7B63     		str	r3, [r7, #52]
1153:Src/main.c    ****   HAL_GPIO_Init(EXT_RST_GPIO_Port, &GPIO_InitStruct);
 2936              		.loc 3 1153 0
 2937 0702 07F12C03 		add	r3, r7, #44
 2938 0706 2948     		ldr	r0, .L86+20
 2939 0708 1946     		mov	r1, r3
ARM GAS  /tmp/ccymeQqc.s 			page 122


 2940 070a FFF7FEFF 		bl	HAL_GPIO_Init
1154:Src/main.c    **** 
1155:Src/main.c    ****   /*Configure GPIO pins : ULPI_CLK_Pin ULPI_D0_Pin */
1156:Src/main.c    ****   GPIO_InitStruct.Pin = ULPI_CLK_Pin|ULPI_D0_Pin;
 2941              		.loc 3 1156 0
 2942 070e 2823     		movs	r3, #40
 2943 0710 FB62     		str	r3, [r7, #44]
1157:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2944              		.loc 3 1157 0
 2945 0712 0223     		movs	r3, #2
 2946 0714 3B63     		str	r3, [r7, #48]
1158:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2947              		.loc 3 1158 0
 2948 0716 0023     		movs	r3, #0
 2949 0718 7B63     		str	r3, [r7, #52]
1159:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2950              		.loc 3 1159 0
 2951 071a 0323     		movs	r3, #3
 2952 071c BB63     		str	r3, [r7, #56]
1160:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF10_OTG_HS;
 2953              		.loc 3 1160 0
 2954 071e 0A23     		movs	r3, #10
 2955 0720 FB63     		str	r3, [r7, #60]
1161:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 2956              		.loc 3 1161 0
 2957 0722 07F12C03 		add	r3, r7, #44
 2958 0726 1F48     		ldr	r0, .L86+12
 2959 0728 1946     		mov	r1, r3
 2960 072a FFF7FEFF 		bl	HAL_GPIO_Init
1162:Src/main.c    **** 
1163:Src/main.c    ****   /*Configure GPIO pin : DSIHOST_TE_Pin */
1164:Src/main.c    ****   GPIO_InitStruct.Pin = DSIHOST_TE_Pin;
 2961              		.loc 3 1164 0
 2962 072e 0423     		movs	r3, #4
 2963 0730 FB62     		str	r3, [r7, #44]
1165:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2964              		.loc 3 1165 0
 2965 0732 0223     		movs	r3, #2
 2966 0734 3B63     		str	r3, [r7, #48]
1166:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2967              		.loc 3 1166 0
 2968 0736 0023     		movs	r3, #0
 2969 0738 7B63     		str	r3, [r7, #52]
1167:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 2970              		.loc 3 1167 0
 2971 073a 0323     		movs	r3, #3
 2972 073c BB63     		str	r3, [r7, #56]
1168:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 2973              		.loc 3 1168 0
 2974 073e 0D23     		movs	r3, #13
 2975 0740 FB63     		str	r3, [r7, #60]
1169:Src/main.c    ****   HAL_GPIO_Init(DSIHOST_TE_GPIO_Port, &GPIO_InitStruct);
 2976              		.loc 3 1169 0
 2977 0742 07F12C03 		add	r3, r7, #44
 2978 0746 1A48     		ldr	r0, .L86+24
 2979 0748 1946     		mov	r1, r3
 2980 074a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  /tmp/ccymeQqc.s 			page 123


1170:Src/main.c    **** 
1171:Src/main.c    ****   /*Configure GPIO pin : ARDUINO_PWM_D6_Pin */
1172:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_PWM_D6_Pin;
 2981              		.loc 3 1172 0
 2982 074e 4023     		movs	r3, #64
 2983 0750 FB62     		str	r3, [r7, #44]
1173:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 2984              		.loc 3 1173 0
 2985 0752 0223     		movs	r3, #2
 2986 0754 3B63     		str	r3, [r7, #48]
1174:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 2987              		.loc 3 1174 0
 2988 0756 0023     		movs	r3, #0
 2989 0758 7B63     		str	r3, [r7, #52]
1175:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 2990              		.loc 3 1175 0
 2991 075a 0023     		movs	r3, #0
 2992 075c BB63     		str	r3, [r7, #56]
1176:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 2993              		.loc 3 1176 0
 2994 075e 0923     		movs	r3, #9
 2995 0760 FB63     		str	r3, [r7, #60]
1177:Src/main.c    ****   HAL_GPIO_Init(ARDUINO_PWM_D6_GPIO_Port, &GPIO_InitStruct);
 2996              		.loc 3 1177 0
 2997 0762 07F12C03 		add	r3, r7, #44
 2998 0766 1148     		ldr	r0, .L86+20
 2999 0768 1946     		mov	r1, r3
 3000 076a FFF7FEFF 		bl	HAL_GPIO_Init
1178:Src/main.c    **** 
1179:Src/main.c    ****   /*Configure GPIO pins : ARDUINO_MISO_D12_Pin ARDUINO_MOSI_PWM_D11_Pin */
1180:Src/main.c    ****   GPIO_InitStruct.Pin = ARDUINO_MISO_D12_Pin|ARDUINO_MOSI_PWM_D11_Pin;
 3001              		.loc 3 1180 0
 3002 076e 4FF44043 		mov	r3, #49152
 3003 0772 FB62     		str	r3, [r7, #44]
1181:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 3004              		.loc 3 1181 0
 3005 0774 0223     		movs	r3, #2
 3006 0776 3B63     		str	r3, [r7, #48]
1182:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 3007              		.loc 3 1182 0
 3008 0778 0023     		movs	r3, #0
 3009 077a 7B63     		str	r3, [r7, #52]
1183:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 3010              		.loc 3 1183 0
 3011 077c 0023     		movs	r3, #0
 3012 077e BB63     		str	r3, [r7, #56]
1184:Src/main.c    ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 3013              		.loc 3 1184 0
 3014 0780 0523     		movs	r3, #5
 3015 0782 FB63     		str	r3, [r7, #60]
1185:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 3016              		.loc 3 1185 0
 3017 0784 07F12C03 		add	r3, r7, #44
 3018 0788 0448     		ldr	r0, .L86+4
 3019 078a 1946     		mov	r1, r3
 3020 078c FFF7FEFF 		bl	HAL_GPIO_Init
1186:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 124


1187:Src/main.c    **** }
 3021              		.loc 3 1187 0
 3022 0790 4037     		adds	r7, r7, #64
 3023              	.LCFI101:
 3024              		.cfi_def_cfa_offset 8
 3025 0792 BD46     		mov	sp, r7
 3026              	.LCFI102:
 3027              		.cfi_def_cfa_register 13
 3028              		@ sp needed
 3029 0794 80BD     		pop	{r7, pc}
 3030              	.L87:
 3031 0796 00BF     		.align	2
 3032              	.L86:
 3033 0798 00080240 		.word	1073874944
 3034 079c 00040240 		.word	1073873920
 3035 07a0 000C0240 		.word	1073875968
 3036 07a4 00000240 		.word	1073872896
 3037 07a8 00001110 		.word	269549568
 3038 07ac 001C0240 		.word	1073880064
 3039 07b0 00240240 		.word	1073882112
 3040              		.cfi_endproc
 3041              	.LFE171:
 3043              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 3044              		.align	2
 3045              		.global	HAL_TIM_PeriodElapsedCallback
 3046              		.thumb
 3047              		.thumb_func
 3049              	HAL_TIM_PeriodElapsedCallback:
 3050              	.LFB172:
1188:Src/main.c    **** 
1189:Src/main.c    **** /**
1190:Src/main.c    ****   * @brief  Period elapsed callback in non blocking mode
1191:Src/main.c    ****   * @note   This function is called  when TIM13 interrupt took place, inside
1192:Src/main.c    ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
1193:Src/main.c    ****   * a global variable "uwTick" used as application time base.
1194:Src/main.c    ****   * @param  htim : TIM handle
1195:Src/main.c    ****   * @retval None
1196:Src/main.c    ****   */
1197:Src/main.c    **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
1198:Src/main.c    **** {
 3051              		.loc 3 1198 0
 3052              		.cfi_startproc
 3053              		@ args = 0, pretend = 0, frame = 8
 3054              		@ frame_needed = 1, uses_anonymous_args = 0
 3055 0000 80B5     		push	{r7, lr}
 3056              	.LCFI103:
 3057              		.cfi_def_cfa_offset 8
 3058              		.cfi_offset 7, -8
 3059              		.cfi_offset 14, -4
 3060 0002 82B0     		sub	sp, sp, #8
 3061              	.LCFI104:
 3062              		.cfi_def_cfa_offset 16
 3063 0004 00AF     		add	r7, sp, #0
 3064              	.LCFI105:
 3065              		.cfi_def_cfa_register 7
 3066 0006 7860     		str	r0, [r7, #4]
1199:Src/main.c    **** 
ARM GAS  /tmp/ccymeQqc.s 			page 125


1200:Src/main.c    ****   if (htim->Instance == TIM13) {
 3067              		.loc 3 1200 0
 3068 0008 7B68     		ldr	r3, [r7, #4]
 3069 000a 1B68     		ldr	r3, [r3]
 3070 000c 034A     		ldr	r2, .L90
 3071 000e 9342     		cmp	r3, r2
 3072 0010 01D1     		bne	.L88
1201:Src/main.c    ****     HAL_IncTick();
 3073              		.loc 3 1201 0
 3074 0012 FFF7FEFF 		bl	HAL_IncTick
 3075              	.L88:
1202:Src/main.c    ****   }
1203:Src/main.c    **** 
1204:Src/main.c    **** }
 3076              		.loc 3 1204 0
 3077 0016 0837     		adds	r7, r7, #8
 3078              	.LCFI106:
 3079              		.cfi_def_cfa_offset 8
 3080 0018 BD46     		mov	sp, r7
 3081              	.LCFI107:
 3082              		.cfi_def_cfa_register 13
 3083              		@ sp needed
 3084 001a 80BD     		pop	{r7, pc}
 3085              	.L91:
 3086              		.align	2
 3087              	.L90:
 3088 001c 001C0040 		.word	1073748992
 3089              		.cfi_endproc
 3090              	.LFE172:
 3092              		.section	.text.Error_Handler,"ax",%progbits
 3093              		.align	2
 3094              		.global	Error_Handler
 3095              		.thumb
 3096              		.thumb_func
 3098              	Error_Handler:
 3099              	.LFB173:
1205:Src/main.c    **** 
1206:Src/main.c    **** /**
1207:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
1208:Src/main.c    ****   * @param  None
1209:Src/main.c    ****   * @retval None
1210:Src/main.c    ****   */
1211:Src/main.c    **** void Error_Handler(void)
1212:Src/main.c    **** {
 3100              		.loc 3 1212 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 1, uses_anonymous_args = 0
 3104              		@ link register save eliminated.
 3105 0000 80B4     		push	{r7}
 3106              	.LCFI108:
 3107              		.cfi_def_cfa_offset 4
 3108              		.cfi_offset 7, -4
 3109 0002 00AF     		add	r7, sp, #0
 3110              	.LCFI109:
 3111              		.cfi_def_cfa_register 7
 3112              	.L93:
ARM GAS  /tmp/ccymeQqc.s 			page 126


1213:Src/main.c    ****   /* USER CODE BEGIN Error_Handler */
1214:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
1215:Src/main.c    ****   while(1) 
1216:Src/main.c    ****   {
1217:Src/main.c    ****   }
 3113              		.loc 3 1217 0 discriminator 1
 3114 0004 FEE7     		b	.L93
 3115              		.cfi_endproc
 3116              	.LFE173:
 3118 0006 00BF     		.section	.text.CPU_CACHE_Enable,"ax",%progbits
 3119              		.align	2
 3120              		.thumb
 3121              		.thumb_func
 3123              	CPU_CACHE_Enable:
 3124              	.LFB174:
1218:Src/main.c    ****   /* USER CODE END Error_Handler */ 
1219:Src/main.c    **** }
1220:Src/main.c    **** 
1221:Src/main.c    **** 
1222:Src/main.c    **** /**
1223:Src/main.c    ****   * @brief  CPU L1-Cache enable.
1224:Src/main.c    ****   * @param  None
1225:Src/main.c    ****   * @retval None
1226:Src/main.c    ****   */
1227:Src/main.c    **** static void CPU_CACHE_Enable(void)
1228:Src/main.c    **** {
 3125              		.loc 3 1228 0
 3126              		.cfi_startproc
 3127              		@ args = 0, pretend = 0, frame = 0
 3128              		@ frame_needed = 1, uses_anonymous_args = 0
 3129 0000 80B5     		push	{r7, lr}
 3130              	.LCFI110:
 3131              		.cfi_def_cfa_offset 8
 3132              		.cfi_offset 7, -8
 3133              		.cfi_offset 14, -4
 3134 0002 00AF     		add	r7, sp, #0
 3135              	.LCFI111:
 3136              		.cfi_def_cfa_register 7
1229:Src/main.c    ****   /* Enable I-Cache */
1230:Src/main.c    ****   SCB_EnableICache();
 3137              		.loc 3 1230 0
 3138 0004 FFF7FEFF 		bl	SCB_EnableICache
1231:Src/main.c    **** 
1232:Src/main.c    ****   /* Enable D-Cache */
1233:Src/main.c    ****   SCB_EnableDCache();
 3139              		.loc 3 1233 0
 3140 0008 FFF7FEFF 		bl	SCB_EnableDCache
1234:Src/main.c    **** }
 3141              		.loc 3 1234 0
 3142 000c 80BD     		pop	{r7, pc}
 3143              		.cfi_endproc
 3144              	.LFE174:
 3146 000e 00BF     		.section	.bss.xTimeNow.10665,"aw",%nobits
 3147              		.align	2
 3150              	xTimeNow.10665:
 3151 0000 00000000 		.space	4
 3152              		.section	.bss.xLastToggle.10664,"aw",%nobits
ARM GAS  /tmp/ccymeQqc.s 			page 127


 3153              		.align	2
 3156              	xLastToggle.10664:
 3157 0000 00000000 		.space	4
 3158              		.section	.bss.xTasksAlreadyCreated.10674,"aw",%nobits
 3159              		.align	2
 3162              	xTasksAlreadyCreated.10674:
 3163 0000 00000000 		.space	4
 3164              		.section	.bss.xInitialised.10689,"aw",%nobits
 3165              		.align	2
 3168              	xInitialised.10689:
 3169 0000 00000000 		.space	4
 3170              		.section	.bss.ullHiresTime.10723,"aw",%nobits
 3171              		.align	3
 3174              	ullHiresTime.10723:
 3175 0000 00000000 		.space	8
 3175      00000000 
 3176              		.text
 3177              	.Letext0:
 3178              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3179              		.file 6 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 3180              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3181              		.file 8 "../../../FreeRTOS_9_0/Source/include/portable.h"
 3182              		.file 9 "../../../FreeRTOS_9_0/Source/include/task.h"
 3183              		.file 10 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h"
 3184              		.file 11 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 3185              		.file 12 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3186              		.file 13 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc_ex.h"
 3187              		.file 14 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 3188              		.file 15 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_gpio.h"
 3189              		.file 16 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 3190              		.file 17 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_eth.h"
 3191              		.file 18 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_ll_fmc.h"
 3192              		.file 19 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_sdram.h"
 3193              		.file 20 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rng.h"
 3194              		.file 21 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rtc.h"
 3195              		.file 22 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 3196              		.file 23 "../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery.h"
ARM GAS  /tmp/ccymeQqc.s 			page 128


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccymeQqc.s:21     .text.SCB_EnableICache:0000000000000000 $t
     /tmp/ccymeQqc.s:25     .text.SCB_EnableICache:0000000000000000 SCB_EnableICache
     /tmp/ccymeQqc.s:100    .text.SCB_EnableICache:0000000000000030 $d
     /tmp/ccymeQqc.s:105    .text.SCB_EnableDCache:0000000000000000 $t
     /tmp/ccymeQqc.s:109    .text.SCB_EnableDCache:0000000000000000 SCB_EnableDCache
     /tmp/ccymeQqc.s:230    .text.SCB_EnableDCache:000000000000007c $d
                            *COM*:0000000000000020 hrtc
                            *COM*:0000000000000034 hsdram1
     /tmp/ccymeQqc.s:238    .rodata.ucIPAddress:0000000000000000 $d
     /tmp/ccymeQqc.s:241    .rodata.ucIPAddress:0000000000000000 ucIPAddress
     /tmp/ccymeQqc.s:247    .rodata.ucNetMask:0000000000000000 $d
     /tmp/ccymeQqc.s:250    .rodata.ucNetMask:0000000000000000 ucNetMask
     /tmp/ccymeQqc.s:256    .rodata.ucGatewayAddress:0000000000000000 $d
     /tmp/ccymeQqc.s:259    .rodata.ucGatewayAddress:0000000000000000 ucGatewayAddress
     /tmp/ccymeQqc.s:265    .rodata.ucDNSServerAddress:0000000000000000 $d
     /tmp/ccymeQqc.s:268    .rodata.ucDNSServerAddress:0000000000000000 ucDNSServerAddress
     /tmp/ccymeQqc.s:278    .rodata.ucMACAddress:0000000000000000 ucMACAddress
     /tmp/ccymeQqc.s:275    .rodata.ucMACAddress:0000000000000000 $d
     /tmp/ccymeQqc.s:286    .bss.ulNextRand:0000000000000000 $d
     /tmp/ccymeQqc.s:289    .bss.ulNextRand:0000000000000000 ulNextRand
     /tmp/ccymeQqc.s:292    .rodata:0000000000000000 $d
     /tmp/ccymeQqc.s:296    .text.blink_task:0000000000000000 $t
     /tmp/ccymeQqc.s:300    .text.blink_task:0000000000000000 blink_task
     /tmp/ccymeQqc.s:334    .text.blink_task:0000000000000020 $d
     /tmp/ccymeQqc.s:349    .text.main:0000000000000000 $t
     /tmp/ccymeQqc.s:354    .text.main:0000000000000000 main
     /tmp/ccymeQqc.s:3123   .text.CPU_CACHE_Enable:0000000000000000 CPU_CACHE_Enable
     /tmp/ccymeQqc.s:1524   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccymeQqc.s:1880   .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccymeQqc.s:1699   .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccymeQqc.s:1765   .text.MX_FMC_Init:0000000000000000 MX_FMC_Init
     /tmp/ccymeQqc.s:444    .text.prvMiscInitialisation:0000000000000000 prvMiscInitialisation
     /tmp/ccymeQqc.s:426    .text.main:000000000000006c $d
     /tmp/ccymeQqc.s:1481   .text.BSP_Config_task:0000000000000000 BSP_Config_task
     /tmp/ccymeQqc.s:440    .text.prvMiscInitialisation:0000000000000000 $t
     /tmp/ccymeQqc.s:1019   .text.prvInitialiseHeap:0000000000000000 prvInitialiseHeap
     /tmp/ccymeQqc.s:472    .text.vApplicationIdleHook:0000000000000000 $t
     /tmp/ccymeQqc.s:477    .text.vApplicationIdleHook:0000000000000000 vApplicationIdleHook
     /tmp/ccymeQqc.s:537    .text.vApplicationIdleHook:0000000000000044 $d
     /tmp/ccymeQqc.s:3150   .bss.xTimeNow.10665:0000000000000000 xTimeNow.10665
     /tmp/ccymeQqc.s:3156   .bss.xLastToggle.10664:0000000000000000 xLastToggle.10664
     /tmp/ccymeQqc.s:563    .text.vApplicationIPNetworkEventHook:0000000000000000 $t
     /tmp/ccymeQqc.s:568    .text.vApplicationIPNetworkEventHook:0000000000000000 vApplicationIPNetworkEventHook
     /tmp/ccymeQqc.s:725    .text.vApplicationIPNetworkEventHook:0000000000000118 $d
     /tmp/ccymeQqc.s:3162   .bss.xTasksAlreadyCreated.10674:0000000000000000 xTasksAlreadyCreated.10674
     /tmp/ccymeQqc.s:736    .text.vApplicationMallocFailedHook:0000000000000000 $t
     /tmp/ccymeQqc.s:741    .text.vApplicationMallocFailedHook:0000000000000000 vApplicationMallocFailedHook
     /tmp/ccymeQqc.s:782    .text.vApplicationStackOverflowHook:0000000000000000 $t
     /tmp/ccymeQqc.s:787    .text.vApplicationStackOverflowHook:0000000000000000 vApplicationStackOverflowHook
     /tmp/ccymeQqc.s:828    .text.uxRand:0000000000000000 $t
     /tmp/ccymeQqc.s:833    .text.uxRand:0000000000000000 uxRand
     /tmp/ccymeQqc.s:928    .text.prvSRand:0000000000000000 prvSRand
     /tmp/ccymeQqc.s:917    .text.uxRand:0000000000000070 $d
     /tmp/ccymeQqc.s:3168   .bss.xInitialised.10689:0000000000000000 xInitialised.10689
     /tmp/ccymeQqc.s:924    .text.prvSRand:0000000000000000 $t
ARM GAS  /tmp/ccymeQqc.s 			page 129


     /tmp/ccymeQqc.s:966    .text.prvSRand:0000000000000018 $d
     /tmp/ccymeQqc.s:971    .text.vApplicationPingReplyHook:0000000000000000 $t
     /tmp/ccymeQqc.s:976    .text.vApplicationPingReplyHook:0000000000000000 vApplicationPingReplyHook
     /tmp/ccymeQqc.s:1015   .text.prvInitialiseHeap:0000000000000000 $t
     /tmp/ccymeQqc.s:1079   .text.prvInitialiseHeap:0000000000000048 $d
     /tmp/ccymeQqc.s:1085   .text.vOutputChar:0000000000000000 $t
     /tmp/ccymeQqc.s:1090   .text.vOutputChar:0000000000000000 vOutputChar
     /tmp/ccymeQqc.s:1131   .text.pcApplicationHostnameHook:0000000000000000 $t
     /tmp/ccymeQqc.s:1136   .text.pcApplicationHostnameHook:0000000000000000 pcApplicationHostnameHook
     /tmp/ccymeQqc.s:1166   .text.pcApplicationHostnameHook:0000000000000010 $d
     /tmp/ccymeQqc.s:1175   .text.xApplicationDNSQueryHook:0000000000000000 $t
     /tmp/ccymeQqc.s:1180   .text.xApplicationDNSQueryHook:0000000000000000 xApplicationDNSQueryHook
     /tmp/ccymeQqc.s:1243   .text.xApplicationDNSQueryHook:0000000000000044 $d
     /tmp/ccymeQqc.s:1248   .text.xGetRunTimeCounterValue:0000000000000000 $t
     /tmp/ccymeQqc.s:1253   .text.xGetRunTimeCounterValue:0000000000000000 xGetRunTimeCounterValue
     /tmp/ccymeQqc.s:1282   .text.xGetRunTimeCounterValue:000000000000001c $d
     /tmp/ccymeQqc.s:3174   .bss.ullHiresTime.10723:0000000000000000 ullHiresTime.10723
     /tmp/ccymeQqc.s:1287   .text.vApplicationTickHook:0000000000000000 $t
     /tmp/ccymeQqc.s:1292   .text.vApplicationTickHook:0000000000000000 vApplicationTickHook
     /tmp/ccymeQqc.s:1314   .text.HAL_ETH_MspInit:0000000000000000 $t
     /tmp/ccymeQqc.s:1319   .text.HAL_ETH_MspInit:0000000000000000 HAL_ETH_MspInit
     /tmp/ccymeQqc.s:1469   .text.HAL_ETH_MspInit:00000000000000f0 $d
     /tmp/ccymeQqc.s:1477   .text.BSP_Config_task:0000000000000000 $t
     /tmp/ccymeQqc.s:1520   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccymeQqc.s:3098   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccymeQqc.s:1688   .text.SystemClock_Config:0000000000000124 $d
     /tmp/ccymeQqc.s:1695   .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccymeQqc.s:1755   .text.MX_RTC_Init:0000000000000040 $d
     /tmp/ccymeQqc.s:1761   .text.MX_FMC_Init:0000000000000000 $t
     /tmp/ccymeQqc.s:1870   .text.MX_FMC_Init:0000000000000080 $d
     /tmp/ccymeQqc.s:1876   .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccymeQqc.s:2298   .text.MX_GPIO_Init:00000000000002b8 $d
     /tmp/ccymeQqc.s:2308   .text.MX_GPIO_Init:00000000000002d8 $t
     /tmp/ccymeQqc.s:2772   .text.MX_GPIO_Init:00000000000005dc $d
     /tmp/ccymeQqc.s:2782   .text.MX_GPIO_Init:0000000000000600 $t
     /tmp/ccymeQqc.s:3033   .text.MX_GPIO_Init:0000000000000798 $d
     /tmp/ccymeQqc.s:3044   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 $t
     /tmp/ccymeQqc.s:3049   .text.HAL_TIM_PeriodElapsedCallback:0000000000000000 HAL_TIM_PeriodElapsedCallback
     /tmp/ccymeQqc.s:3088   .text.HAL_TIM_PeriodElapsedCallback:000000000000001c $d
     /tmp/ccymeQqc.s:3093   .text.Error_Handler:0000000000000000 $t
     /tmp/ccymeQqc.s:3119   .text.CPU_CACHE_Enable:0000000000000000 $t
     /tmp/ccymeQqc.s:3147   .bss.xTimeNow.10665:0000000000000000 $d
     /tmp/ccymeQqc.s:3153   .bss.xLastToggle.10664:0000000000000000 $d
     /tmp/ccymeQqc.s:3159   .bss.xTasksAlreadyCreated.10674:0000000000000000 $d
     /tmp/ccymeQqc.s:3165   .bss.xInitialised.10689:0000000000000000 $d
     /tmp/ccymeQqc.s:3171   .bss.ullHiresTime.10723:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
BSP_LED_Toggle
vTaskDelay
lUDPLoggingPrintf
HAL_Init
SEGGER_SYSVIEW_Conf
FreeRTOS_IPInit
xTaskCreate
vTaskStartScheduler
ARM GAS  /tmp/ccymeQqc.s 			page 130


vStartHighResolutionTimer
xTaskGetTickCount
vUDPLoggingTaskCreate
FreeRTOS_GetAddressConfiguration
sprintf
xTaskGetSchedulerState
HAL_RNG_Init
HAL_RNG_MspInit
HAL_RNG_GenerateRandomNumber
vPortDefineHeapRegions
__bss_end__
_estack
strcasecmp
ullGetHighResolutionTime
HAL_IncTick
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
BSP_LED_Init
BSP_LCD_Init
vTaskDelete
HAL_RCC_OscConfig
HAL_PWREx_EnableOverDrive
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_RTC_Init
HAL_SDRAM_Init
