ARM GAS  /tmp/ccADmsZq.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f7xx_hal_cortex.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.NVIC_SetPriorityGrouping,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	NVIC_SetPriorityGrouping:
  26              	.LFB106:
  27              		.file 1 "../../Drivers/CMSIS/Include/core_cm7.h"
   1:../../Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:../../Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:../../Drivers/CMSIS/Include/core_cm7.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/core_cm7.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/core_cm7.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/core_cm7.h **** 
   9:../../Drivers/CMSIS/Include/core_cm7.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/core_cm7.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/core_cm7.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/core_cm7.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/core_cm7.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/core_cm7.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/core_cm7.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/core_cm7.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/core_cm7.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/core_cm7.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/core_cm7.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/core_cm7.h ****    *
  21:../../Drivers/CMSIS/Include/core_cm7.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/core_cm7.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/core_cm7.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/core_cm7.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/core_cm7.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/core_cm7.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/core_cm7.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/core_cm7.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/core_cm7.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/core_cm7.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/core_cm7.h ****    POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/ccADmsZq.s 			page 2


  32:../../Drivers/CMSIS/Include/core_cm7.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/core_cm7.h **** 
  34:../../Drivers/CMSIS/Include/core_cm7.h **** 
  35:../../Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  36:../../Drivers/CMSIS/Include/core_cm7.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:../../Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  39:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
  40:../../Drivers/CMSIS/Include/core_cm7.h **** 
  41:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  42:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  43:../../Drivers/CMSIS/Include/core_cm7.h **** 
  44:../../Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  45:../../Drivers/CMSIS/Include/core_cm7.h **** 
  46:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  47:../../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  48:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
  49:../../Drivers/CMSIS/Include/core_cm7.h **** 
  50:../../Drivers/CMSIS/Include/core_cm7.h **** /**
  51:../../Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:../../Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:../../Drivers/CMSIS/Include/core_cm7.h **** 
  54:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:../../Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  56:../../Drivers/CMSIS/Include/core_cm7.h **** 
  57:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:../../Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  59:../../Drivers/CMSIS/Include/core_cm7.h **** 
  60:../../Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:../../Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  62:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  63:../../Drivers/CMSIS/Include/core_cm7.h **** 
  64:../../Drivers/CMSIS/Include/core_cm7.h **** 
  65:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  66:../../Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  67:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  68:../../Drivers/CMSIS/Include/core_cm7.h **** /**
  69:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  70:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
  71:../../Drivers/CMSIS/Include/core_cm7.h ****  */
  72:../../Drivers/CMSIS/Include/core_cm7.h **** 
  73:../../Drivers/CMSIS/Include/core_cm7.h **** /*  CMSIS CM7 definitions */
  74:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  77:../../Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:../../Drivers/CMSIS/Include/core_cm7.h **** 
  79:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (0x07U)                                      /*!< Cortex-M Core *
  80:../../Drivers/CMSIS/Include/core_cm7.h **** 
  81:../../Drivers/CMSIS/Include/core_cm7.h **** 
  82:../../Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __CC_ARM )
  83:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static __inline
  86:../../Drivers/CMSIS/Include/core_cm7.h **** 
  87:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
ARM GAS  /tmp/ccADmsZq.s 			page 3


  89:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static __inline
  91:../../Drivers/CMSIS/Include/core_cm7.h **** 
  92:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
  93:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
  96:../../Drivers/CMSIS/Include/core_cm7.h **** 
  97:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
  98:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 101:../../Drivers/CMSIS/Include/core_cm7.h **** 
 102:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TMS470__ )
 103:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 105:../../Drivers/CMSIS/Include/core_cm7.h **** 
 106:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 107:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 110:../../Drivers/CMSIS/Include/core_cm7.h **** 
 111:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 112:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __packed
 113:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:../../Drivers/CMSIS/Include/core_cm7.h ****   #define __STATIC_INLINE  static inline
 116:../../Drivers/CMSIS/Include/core_cm7.h **** 
 117:../../Drivers/CMSIS/Include/core_cm7.h **** #else
 118:../../Drivers/CMSIS/Include/core_cm7.h ****   #error Unknown compiler
 119:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 120:../../Drivers/CMSIS/Include/core_cm7.h **** 
 121:../../Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:../../Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
 123:../../Drivers/CMSIS/Include/core_cm7.h **** */
 124:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
 125:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
 126:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 127:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:../../Drivers/CMSIS/Include/core_cm7.h **** 
 136:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 137:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_PCS_VFP
 138:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1)
 139:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:../../Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
 142:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/ccADmsZq.s 			page 4


 146:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:../../Drivers/CMSIS/Include/core_cm7.h **** 
 148:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 149:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 150:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 151:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:../../Drivers/CMSIS/Include/core_cm7.h **** 
 160:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 161:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 162:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 163:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 164:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 165:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 166:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 167:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 168:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 169:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 170:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 171:../../Drivers/CMSIS/Include/core_cm7.h **** 
 172:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TMS470__ )
 173:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 174:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 175:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 176:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 177:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 178:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 179:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 180:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 181:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 182:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 183:../../Drivers/CMSIS/Include/core_cm7.h **** 
 184:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 185:../../Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 186:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 187:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 188:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 189:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 190:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 191:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 192:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 193:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 194:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 195:../../Drivers/CMSIS/Include/core_cm7.h **** 
 196:../../Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 197:../../Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 198:../../Drivers/CMSIS/Include/core_cm7.h ****     #if (__FPU_PRESENT == 1U)
 199:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 200:../../Drivers/CMSIS/Include/core_cm7.h ****     #else
 201:../../Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 202:../../Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
ARM GAS  /tmp/ccADmsZq.s 			page 5


 203:../../Drivers/CMSIS/Include/core_cm7.h ****     #endif
 204:../../Drivers/CMSIS/Include/core_cm7.h ****   #else
 205:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 206:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 207:../../Drivers/CMSIS/Include/core_cm7.h **** 
 208:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 209:../../Drivers/CMSIS/Include/core_cm7.h **** 
 210:../../Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 211:../../Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 212:../../Drivers/CMSIS/Include/core_cm7.h **** #include "core_cmSimd.h"                 /* Compiler specific SIMD Intrinsics */
 213:../../Drivers/CMSIS/Include/core_cm7.h **** 
 214:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 215:../../Drivers/CMSIS/Include/core_cm7.h **** }
 216:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 217:../../Drivers/CMSIS/Include/core_cm7.h **** 
 218:../../Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 219:../../Drivers/CMSIS/Include/core_cm7.h **** 
 220:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 221:../../Drivers/CMSIS/Include/core_cm7.h **** 
 222:../../Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 223:../../Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 224:../../Drivers/CMSIS/Include/core_cm7.h **** 
 225:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 226:../../Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 227:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 228:../../Drivers/CMSIS/Include/core_cm7.h **** 
 229:../../Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 230:../../Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 231:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 232:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 233:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 234:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 235:../../Drivers/CMSIS/Include/core_cm7.h **** 
 236:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 237:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 238:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 239:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 240:../../Drivers/CMSIS/Include/core_cm7.h **** 
 241:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 242:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 243:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 244:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 245:../../Drivers/CMSIS/Include/core_cm7.h **** 
 246:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 247:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 248:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 249:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 250:../../Drivers/CMSIS/Include/core_cm7.h **** 
 251:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 252:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 253:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 254:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 255:../../Drivers/CMSIS/Include/core_cm7.h **** 
 256:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 257:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 258:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 259:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
ARM GAS  /tmp/ccADmsZq.s 			page 6


 260:../../Drivers/CMSIS/Include/core_cm7.h **** 
 261:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 262:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 263:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 264:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 265:../../Drivers/CMSIS/Include/core_cm7.h **** 
 266:../../Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 267:../../Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 268:../../Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 269:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
 270:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 271:../../Drivers/CMSIS/Include/core_cm7.h **** 
 272:../../Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
 273:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 274:../../Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 275:../../Drivers/CMSIS/Include/core_cm7.h **** 
 276:../../Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 277:../../Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 278:../../Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 279:../../Drivers/CMSIS/Include/core_cm7.h **** */
 280:../../Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 281:../../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 282:../../Drivers/CMSIS/Include/core_cm7.h **** #else
 283:../../Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 284:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
 285:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 286:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 287:../../Drivers/CMSIS/Include/core_cm7.h **** 
 288:../../Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 289:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 290:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 291:../../Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 292:../../Drivers/CMSIS/Include/core_cm7.h **** 
 293:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 294:../../Drivers/CMSIS/Include/core_cm7.h **** 
 295:../../Drivers/CMSIS/Include/core_cm7.h **** 
 296:../../Drivers/CMSIS/Include/core_cm7.h **** 
 297:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 298:../../Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 299:../../Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 300:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 301:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 302:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 303:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 304:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 305:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 306:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 307:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 308:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 309:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 310:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 311:../../Drivers/CMSIS/Include/core_cm7.h **** */
 312:../../Drivers/CMSIS/Include/core_cm7.h **** 
 313:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 314:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 315:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 316:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
ARM GAS  /tmp/ccADmsZq.s 			page 7


 317:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 318:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 319:../../Drivers/CMSIS/Include/core_cm7.h **** 
 320:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 321:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 322:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 323:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 324:../../Drivers/CMSIS/Include/core_cm7.h **** {
 325:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 326:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 327:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 328:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 330:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 331:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 332:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 333:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 334:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 335:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 336:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 337:../../Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 338:../../Drivers/CMSIS/Include/core_cm7.h **** 
 339:../../Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 340:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 341:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 342:../../Drivers/CMSIS/Include/core_cm7.h **** 
 343:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 344:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 345:../../Drivers/CMSIS/Include/core_cm7.h **** 
 346:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 347:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 348:../../Drivers/CMSIS/Include/core_cm7.h **** 
 349:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 350:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 351:../../Drivers/CMSIS/Include/core_cm7.h **** 
 352:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 353:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 354:../../Drivers/CMSIS/Include/core_cm7.h **** 
 355:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 356:../../Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 357:../../Drivers/CMSIS/Include/core_cm7.h **** 
 358:../../Drivers/CMSIS/Include/core_cm7.h **** 
 359:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 360:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 361:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 362:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 363:../../Drivers/CMSIS/Include/core_cm7.h **** {
 364:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 365:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 366:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 367:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 368:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 369:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 370:../../Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 371:../../Drivers/CMSIS/Include/core_cm7.h **** 
 372:../../Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 373:../../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
ARM GAS  /tmp/ccADmsZq.s 			page 8


 374:../../Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 375:../../Drivers/CMSIS/Include/core_cm7.h **** 
 376:../../Drivers/CMSIS/Include/core_cm7.h **** 
 377:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 378:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 379:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 380:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 381:../../Drivers/CMSIS/Include/core_cm7.h **** {
 382:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 383:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 384:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 385:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:7;               /*!< bit:  9..15  Reserved */
 386:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 387:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 388:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 389:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 390:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 391:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 392:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 393:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 394:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 395:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 396:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 397:../../Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 398:../../Drivers/CMSIS/Include/core_cm7.h **** 
 399:../../Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 400:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 401:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 402:../../Drivers/CMSIS/Include/core_cm7.h **** 
 403:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 404:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 405:../../Drivers/CMSIS/Include/core_cm7.h **** 
 406:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 407:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 408:../../Drivers/CMSIS/Include/core_cm7.h **** 
 409:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 410:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 411:../../Drivers/CMSIS/Include/core_cm7.h **** 
 412:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 413:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 414:../../Drivers/CMSIS/Include/core_cm7.h **** 
 415:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 416:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 417:../../Drivers/CMSIS/Include/core_cm7.h **** 
 418:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 419:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 420:../../Drivers/CMSIS/Include/core_cm7.h **** 
 421:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 422:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 423:../../Drivers/CMSIS/Include/core_cm7.h **** 
 424:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 425:../../Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 426:../../Drivers/CMSIS/Include/core_cm7.h **** 
 427:../../Drivers/CMSIS/Include/core_cm7.h **** 
 428:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 429:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 430:../../Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccADmsZq.s 			page 9


 431:../../Drivers/CMSIS/Include/core_cm7.h **** typedef union
 432:../../Drivers/CMSIS/Include/core_cm7.h **** {
 433:../../Drivers/CMSIS/Include/core_cm7.h ****   struct
 434:../../Drivers/CMSIS/Include/core_cm7.h ****   {
 435:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 436:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 437:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 438:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 439:../../Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 440:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 441:../../Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 442:../../Drivers/CMSIS/Include/core_cm7.h **** 
 443:../../Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 444:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 445:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 446:../../Drivers/CMSIS/Include/core_cm7.h **** 
 447:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 448:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 449:../../Drivers/CMSIS/Include/core_cm7.h **** 
 450:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 451:../../Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 452:../../Drivers/CMSIS/Include/core_cm7.h **** 
 453:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 454:../../Drivers/CMSIS/Include/core_cm7.h **** 
 455:../../Drivers/CMSIS/Include/core_cm7.h **** 
 456:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 457:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 458:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 459:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 460:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 461:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 462:../../Drivers/CMSIS/Include/core_cm7.h **** 
 463:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 464:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 465:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 466:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 467:../../Drivers/CMSIS/Include/core_cm7.h **** {
 468:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 469:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 470:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 471:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RSERVED1[24U];
 472:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 473:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 474:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 475:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 476:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 477:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 478:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 479:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 480:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 481:../../Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 482:../../Drivers/CMSIS/Include/core_cm7.h **** 
 483:../../Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 484:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 485:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 486:../../Drivers/CMSIS/Include/core_cm7.h **** 
 487:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
ARM GAS  /tmp/ccADmsZq.s 			page 10


 488:../../Drivers/CMSIS/Include/core_cm7.h **** 
 489:../../Drivers/CMSIS/Include/core_cm7.h **** 
 490:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 491:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 492:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 493:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 494:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 495:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 496:../../Drivers/CMSIS/Include/core_cm7.h **** 
 497:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 498:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 499:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 500:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 501:../../Drivers/CMSIS/Include/core_cm7.h **** {
 502:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 503:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 504:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 505:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 506:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 507:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 508:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 509:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 510:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 511:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 512:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 513:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 514:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 515:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 516:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 517:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 518:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 519:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 520:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 521:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 522:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 523:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 524:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 525:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 526:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 527:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 528:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 529:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 530:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 531:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 532:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 1
 533:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 534:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 535:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 536:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 537:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 538:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 539:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 540:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 541:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 542:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 543:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 544:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
ARM GAS  /tmp/ccADmsZq.s 			page 11


 545:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 546:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 547:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 548:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 549:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 550:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 551:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 552:../../Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 553:../../Drivers/CMSIS/Include/core_cm7.h **** 
 554:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 555:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 556:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 557:../../Drivers/CMSIS/Include/core_cm7.h **** 
 558:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 559:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 560:../../Drivers/CMSIS/Include/core_cm7.h **** 
 561:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 562:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 563:../../Drivers/CMSIS/Include/core_cm7.h **** 
 564:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 565:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 566:../../Drivers/CMSIS/Include/core_cm7.h **** 
 567:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 568:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 569:../../Drivers/CMSIS/Include/core_cm7.h **** 
 570:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 571:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 572:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 573:../../Drivers/CMSIS/Include/core_cm7.h **** 
 574:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 575:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 576:../../Drivers/CMSIS/Include/core_cm7.h **** 
 577:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 578:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 579:../../Drivers/CMSIS/Include/core_cm7.h **** 
 580:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 581:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 582:../../Drivers/CMSIS/Include/core_cm7.h **** 
 583:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 584:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 585:../../Drivers/CMSIS/Include/core_cm7.h **** 
 586:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 587:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 588:../../Drivers/CMSIS/Include/core_cm7.h **** 
 589:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 590:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 591:../../Drivers/CMSIS/Include/core_cm7.h **** 
 592:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 593:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 594:../../Drivers/CMSIS/Include/core_cm7.h **** 
 595:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 596:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 597:../../Drivers/CMSIS/Include/core_cm7.h **** 
 598:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 599:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 600:../../Drivers/CMSIS/Include/core_cm7.h **** 
 601:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
ARM GAS  /tmp/ccADmsZq.s 			page 12


 602:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 603:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 604:../../Drivers/CMSIS/Include/core_cm7.h **** 
 605:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 606:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 607:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 608:../../Drivers/CMSIS/Include/core_cm7.h **** 
 609:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 610:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 611:../../Drivers/CMSIS/Include/core_cm7.h **** 
 612:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 613:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 614:../../Drivers/CMSIS/Include/core_cm7.h **** 
 615:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 616:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 617:../../Drivers/CMSIS/Include/core_cm7.h **** 
 618:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 619:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 620:../../Drivers/CMSIS/Include/core_cm7.h **** 
 621:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 622:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 623:../../Drivers/CMSIS/Include/core_cm7.h **** 
 624:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 625:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 626:../../Drivers/CMSIS/Include/core_cm7.h **** 
 627:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 628:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 629:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 630:../../Drivers/CMSIS/Include/core_cm7.h **** 
 631:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 632:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 633:../../Drivers/CMSIS/Include/core_cm7.h **** 
 634:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 635:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 636:../../Drivers/CMSIS/Include/core_cm7.h **** 
 637:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 638:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 639:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 640:../../Drivers/CMSIS/Include/core_cm7.h **** 
 641:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 642:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 643:../../Drivers/CMSIS/Include/core_cm7.h **** 
 644:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 645:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 646:../../Drivers/CMSIS/Include/core_cm7.h **** 
 647:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 648:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 649:../../Drivers/CMSIS/Include/core_cm7.h **** 
 650:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 651:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 652:../../Drivers/CMSIS/Include/core_cm7.h **** 
 653:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 654:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 655:../../Drivers/CMSIS/Include/core_cm7.h **** 
 656:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 657:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 658:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccADmsZq.s 			page 13


 659:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 660:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 661:../../Drivers/CMSIS/Include/core_cm7.h **** 
 662:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 663:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 664:../../Drivers/CMSIS/Include/core_cm7.h **** 
 665:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 666:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 667:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 668:../../Drivers/CMSIS/Include/core_cm7.h **** 
 669:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 670:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 671:../../Drivers/CMSIS/Include/core_cm7.h **** 
 672:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 673:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 674:../../Drivers/CMSIS/Include/core_cm7.h **** 
 675:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 676:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 677:../../Drivers/CMSIS/Include/core_cm7.h **** 
 678:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 679:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 680:../../Drivers/CMSIS/Include/core_cm7.h **** 
 681:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 682:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 683:../../Drivers/CMSIS/Include/core_cm7.h **** 
 684:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 685:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 686:../../Drivers/CMSIS/Include/core_cm7.h **** 
 687:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 688:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 689:../../Drivers/CMSIS/Include/core_cm7.h **** 
 690:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 691:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 692:../../Drivers/CMSIS/Include/core_cm7.h **** 
 693:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 694:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 695:../../Drivers/CMSIS/Include/core_cm7.h **** 
 696:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 697:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 698:../../Drivers/CMSIS/Include/core_cm7.h **** 
 699:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 700:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 701:../../Drivers/CMSIS/Include/core_cm7.h **** 
 702:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 703:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 704:../../Drivers/CMSIS/Include/core_cm7.h **** 
 705:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 706:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 707:../../Drivers/CMSIS/Include/core_cm7.h **** 
 708:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 709:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 710:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 711:../../Drivers/CMSIS/Include/core_cm7.h **** 
 712:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 713:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 714:../../Drivers/CMSIS/Include/core_cm7.h **** 
 715:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
ARM GAS  /tmp/ccADmsZq.s 			page 14


 716:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 717:../../Drivers/CMSIS/Include/core_cm7.h **** 
 718:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 719:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 720:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 721:../../Drivers/CMSIS/Include/core_cm7.h **** 
 722:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 723:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 724:../../Drivers/CMSIS/Include/core_cm7.h **** 
 725:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 726:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 727:../../Drivers/CMSIS/Include/core_cm7.h **** 
 728:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 729:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 730:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 731:../../Drivers/CMSIS/Include/core_cm7.h **** 
 732:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 733:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 734:../../Drivers/CMSIS/Include/core_cm7.h **** 
 735:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 736:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 737:../../Drivers/CMSIS/Include/core_cm7.h **** 
 738:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 739:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 740:../../Drivers/CMSIS/Include/core_cm7.h **** 
 741:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 742:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 743:../../Drivers/CMSIS/Include/core_cm7.h **** 
 744:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 745:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 746:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 747:../../Drivers/CMSIS/Include/core_cm7.h **** 
 748:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 749:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 750:../../Drivers/CMSIS/Include/core_cm7.h **** 
 751:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 752:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 753:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 754:../../Drivers/CMSIS/Include/core_cm7.h **** 
 755:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 756:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 757:../../Drivers/CMSIS/Include/core_cm7.h **** 
 758:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 759:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 760:../../Drivers/CMSIS/Include/core_cm7.h **** 
 761:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 762:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 763:../../Drivers/CMSIS/Include/core_cm7.h **** 
 764:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 765:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 766:../../Drivers/CMSIS/Include/core_cm7.h **** 
 767:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 768:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 769:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 770:../../Drivers/CMSIS/Include/core_cm7.h **** 
 771:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 772:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
ARM GAS  /tmp/ccADmsZq.s 			page 15


 773:../../Drivers/CMSIS/Include/core_cm7.h **** 
 774:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 775:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 776:../../Drivers/CMSIS/Include/core_cm7.h **** 
 777:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 778:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
 779:../../Drivers/CMSIS/Include/core_cm7.h **** 
 780:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 781:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 782:../../Drivers/CMSIS/Include/core_cm7.h **** 
 783:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 784:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 785:../../Drivers/CMSIS/Include/core_cm7.h **** 
 786:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 787:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 788:../../Drivers/CMSIS/Include/core_cm7.h **** 
 789:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 790:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 791:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 792:../../Drivers/CMSIS/Include/core_cm7.h **** 
 793:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 794:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 795:../../Drivers/CMSIS/Include/core_cm7.h **** 
 796:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 797:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 798:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 799:../../Drivers/CMSIS/Include/core_cm7.h **** 
 800:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 801:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 802:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 803:../../Drivers/CMSIS/Include/core_cm7.h **** 
 804:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 805:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 806:../../Drivers/CMSIS/Include/core_cm7.h **** 
 807:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 808:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 809:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 810:../../Drivers/CMSIS/Include/core_cm7.h **** 
 811:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 812:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 813:../../Drivers/CMSIS/Include/core_cm7.h **** 
 814:../../Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 815:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 816:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 817:../../Drivers/CMSIS/Include/core_cm7.h **** 
 818:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 819:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 820:../../Drivers/CMSIS/Include/core_cm7.h **** 
 821:../../Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 822:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 823:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 824:../../Drivers/CMSIS/Include/core_cm7.h **** 
 825:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 826:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 827:../../Drivers/CMSIS/Include/core_cm7.h **** 
 828:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 829:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
ARM GAS  /tmp/ccADmsZq.s 			page 16


 830:../../Drivers/CMSIS/Include/core_cm7.h **** 
 831:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 832:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 833:../../Drivers/CMSIS/Include/core_cm7.h **** 
 834:../../Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 835:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
 836:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 837:../../Drivers/CMSIS/Include/core_cm7.h **** 
 838:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 839:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 840:../../Drivers/CMSIS/Include/core_cm7.h **** 
 841:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 842:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 843:../../Drivers/CMSIS/Include/core_cm7.h **** 
 844:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 845:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 846:../../Drivers/CMSIS/Include/core_cm7.h **** 
 847:../../Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 848:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 849:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 850:../../Drivers/CMSIS/Include/core_cm7.h **** 
 851:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 852:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 853:../../Drivers/CMSIS/Include/core_cm7.h **** 
 854:../../Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 855:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 856:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 857:../../Drivers/CMSIS/Include/core_cm7.h **** 
 858:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 859:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 860:../../Drivers/CMSIS/Include/core_cm7.h **** 
 861:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 862:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 863:../../Drivers/CMSIS/Include/core_cm7.h **** 
 864:../../Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 865:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 866:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 867:../../Drivers/CMSIS/Include/core_cm7.h **** 
 868:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 869:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 870:../../Drivers/CMSIS/Include/core_cm7.h **** 
 871:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 872:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 873:../../Drivers/CMSIS/Include/core_cm7.h **** 
 874:../../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 875:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 876:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 877:../../Drivers/CMSIS/Include/core_cm7.h **** 
 878:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 879:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 880:../../Drivers/CMSIS/Include/core_cm7.h **** 
 881:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 882:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 883:../../Drivers/CMSIS/Include/core_cm7.h **** 
 884:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 885:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 886:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccADmsZq.s 			page 17


 887:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 888:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 889:../../Drivers/CMSIS/Include/core_cm7.h **** 
 890:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 891:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 892:../../Drivers/CMSIS/Include/core_cm7.h **** 
 893:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 894:../../Drivers/CMSIS/Include/core_cm7.h **** 
 895:../../Drivers/CMSIS/Include/core_cm7.h **** 
 896:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 897:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 898:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 899:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 900:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 901:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 902:../../Drivers/CMSIS/Include/core_cm7.h **** 
 903:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 904:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 905:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 906:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 907:../../Drivers/CMSIS/Include/core_cm7.h **** {
 908:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 909:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 910:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 911:../../Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 912:../../Drivers/CMSIS/Include/core_cm7.h **** 
 913:../../Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 914:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 915:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 916:../../Drivers/CMSIS/Include/core_cm7.h **** 
 917:../../Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 918:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 919:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 920:../../Drivers/CMSIS/Include/core_cm7.h **** 
 921:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 922:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 923:../../Drivers/CMSIS/Include/core_cm7.h **** 
 924:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 925:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 926:../../Drivers/CMSIS/Include/core_cm7.h **** 
 927:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 928:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 929:../../Drivers/CMSIS/Include/core_cm7.h **** 
 930:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 931:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 932:../../Drivers/CMSIS/Include/core_cm7.h **** 
 933:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 934:../../Drivers/CMSIS/Include/core_cm7.h **** 
 935:../../Drivers/CMSIS/Include/core_cm7.h **** 
 936:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 937:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 938:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 939:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 940:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 941:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 942:../../Drivers/CMSIS/Include/core_cm7.h **** 
 943:../../Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  /tmp/ccADmsZq.s 			page 18


 944:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 945:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 946:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 947:../../Drivers/CMSIS/Include/core_cm7.h **** {
 948:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 949:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 950:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 951:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 952:../../Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 953:../../Drivers/CMSIS/Include/core_cm7.h **** 
 954:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 955:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 956:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 957:../../Drivers/CMSIS/Include/core_cm7.h **** 
 958:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 959:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 960:../../Drivers/CMSIS/Include/core_cm7.h **** 
 961:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 962:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 963:../../Drivers/CMSIS/Include/core_cm7.h **** 
 964:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 965:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 966:../../Drivers/CMSIS/Include/core_cm7.h **** 
 967:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
 968:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 969:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 970:../../Drivers/CMSIS/Include/core_cm7.h **** 
 971:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
 972:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 973:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 974:../../Drivers/CMSIS/Include/core_cm7.h **** 
 975:../../Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
 976:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 977:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 978:../../Drivers/CMSIS/Include/core_cm7.h **** 
 979:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 980:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 981:../../Drivers/CMSIS/Include/core_cm7.h **** 
 982:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 983:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 984:../../Drivers/CMSIS/Include/core_cm7.h **** 
 985:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
 986:../../Drivers/CMSIS/Include/core_cm7.h **** 
 987:../../Drivers/CMSIS/Include/core_cm7.h **** 
 988:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 989:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 990:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 991:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 992:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
 993:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 994:../../Drivers/CMSIS/Include/core_cm7.h **** 
 995:../../Drivers/CMSIS/Include/core_cm7.h **** /**
 996:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 997:../../Drivers/CMSIS/Include/core_cm7.h ****  */
 998:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 999:../../Drivers/CMSIS/Include/core_cm7.h **** {
1000:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
ARM GAS  /tmp/ccADmsZq.s 			page 19


1001:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1002:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1003:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1004:../../Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1005:../../Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1006:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1007:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1008:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1009:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1010:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1011:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1012:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[29U];
1013:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
1014:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
1015:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
1016:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1017:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1018:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1019:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1020:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1021:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1022:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1023:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1024:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1025:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1026:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1027:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1028:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1029:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1030:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1031:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1032:../../Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1033:../../Drivers/CMSIS/Include/core_cm7.h **** 
1034:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1035:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1036:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
1037:../../Drivers/CMSIS/Include/core_cm7.h **** 
1038:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1039:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1040:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1041:../../Drivers/CMSIS/Include/core_cm7.h **** 
1042:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1043:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1044:../../Drivers/CMSIS/Include/core_cm7.h **** 
1045:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1046:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1047:../../Drivers/CMSIS/Include/core_cm7.h **** 
1048:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
1049:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1050:../../Drivers/CMSIS/Include/core_cm7.h **** 
1051:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1052:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1053:../../Drivers/CMSIS/Include/core_cm7.h **** 
1054:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1055:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1056:../../Drivers/CMSIS/Include/core_cm7.h **** 
1057:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
ARM GAS  /tmp/ccADmsZq.s 			page 20


1058:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1059:../../Drivers/CMSIS/Include/core_cm7.h **** 
1060:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1061:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1062:../../Drivers/CMSIS/Include/core_cm7.h **** 
1063:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1064:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1065:../../Drivers/CMSIS/Include/core_cm7.h **** 
1066:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Write Register Definitions */
1067:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
1068:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
1069:../../Drivers/CMSIS/Include/core_cm7.h **** 
1070:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Read Register Definitions */
1071:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
1072:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
1073:../../Drivers/CMSIS/Include/core_cm7.h **** 
1074:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Integration Mode Control Register Definitions */
1075:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
1076:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
1077:../../Drivers/CMSIS/Include/core_cm7.h **** 
1078:../../Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1079:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1080:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1081:../../Drivers/CMSIS/Include/core_cm7.h **** 
1082:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1083:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1084:../../Drivers/CMSIS/Include/core_cm7.h **** 
1085:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1086:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1087:../../Drivers/CMSIS/Include/core_cm7.h **** 
1088:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1089:../../Drivers/CMSIS/Include/core_cm7.h **** 
1090:../../Drivers/CMSIS/Include/core_cm7.h **** 
1091:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1092:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1093:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1094:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1095:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1096:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1097:../../Drivers/CMSIS/Include/core_cm7.h **** 
1098:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1099:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1100:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1101:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1102:../../Drivers/CMSIS/Include/core_cm7.h **** {
1103:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1104:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1105:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1106:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1107:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1108:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1109:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1110:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1111:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1112:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1113:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1114:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
ARM GAS  /tmp/ccADmsZq.s 			page 21


1115:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1116:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1117:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
1118:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1119:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1120:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1121:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1122:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1123:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1124:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1125:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1126:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1127:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1128:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1129:../../Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1130:../../Drivers/CMSIS/Include/core_cm7.h **** 
1131:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1132:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1133:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1134:../../Drivers/CMSIS/Include/core_cm7.h **** 
1135:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1136:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1137:../../Drivers/CMSIS/Include/core_cm7.h **** 
1138:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1139:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1140:../../Drivers/CMSIS/Include/core_cm7.h **** 
1141:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1142:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1143:../../Drivers/CMSIS/Include/core_cm7.h **** 
1144:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1145:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1146:../../Drivers/CMSIS/Include/core_cm7.h **** 
1147:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1148:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1149:../../Drivers/CMSIS/Include/core_cm7.h **** 
1150:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1151:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1152:../../Drivers/CMSIS/Include/core_cm7.h **** 
1153:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1154:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1155:../../Drivers/CMSIS/Include/core_cm7.h **** 
1156:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1157:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1158:../../Drivers/CMSIS/Include/core_cm7.h **** 
1159:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1160:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1161:../../Drivers/CMSIS/Include/core_cm7.h **** 
1162:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1163:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1164:../../Drivers/CMSIS/Include/core_cm7.h **** 
1165:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1166:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1167:../../Drivers/CMSIS/Include/core_cm7.h **** 
1168:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1169:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1170:../../Drivers/CMSIS/Include/core_cm7.h **** 
1171:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
ARM GAS  /tmp/ccADmsZq.s 			page 22


1172:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1173:../../Drivers/CMSIS/Include/core_cm7.h **** 
1174:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
1175:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1176:../../Drivers/CMSIS/Include/core_cm7.h **** 
1177:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1178:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1179:../../Drivers/CMSIS/Include/core_cm7.h **** 
1180:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1181:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1182:../../Drivers/CMSIS/Include/core_cm7.h **** 
1183:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1184:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1185:../../Drivers/CMSIS/Include/core_cm7.h **** 
1186:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1187:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1188:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1189:../../Drivers/CMSIS/Include/core_cm7.h **** 
1190:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1191:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1192:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1193:../../Drivers/CMSIS/Include/core_cm7.h **** 
1194:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1195:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1196:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1197:../../Drivers/CMSIS/Include/core_cm7.h **** 
1198:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1199:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1200:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1201:../../Drivers/CMSIS/Include/core_cm7.h **** 
1202:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1203:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1204:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1205:../../Drivers/CMSIS/Include/core_cm7.h **** 
1206:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1207:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1208:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1209:../../Drivers/CMSIS/Include/core_cm7.h **** 
1210:../../Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1211:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1212:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1213:../../Drivers/CMSIS/Include/core_cm7.h **** 
1214:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1215:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1216:../../Drivers/CMSIS/Include/core_cm7.h **** 
1217:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1218:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1219:../../Drivers/CMSIS/Include/core_cm7.h **** 
1220:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1221:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1222:../../Drivers/CMSIS/Include/core_cm7.h **** 
1223:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1224:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1225:../../Drivers/CMSIS/Include/core_cm7.h **** 
1226:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1227:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1228:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccADmsZq.s 			page 23


1229:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1230:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1231:../../Drivers/CMSIS/Include/core_cm7.h **** 
1232:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1233:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1234:../../Drivers/CMSIS/Include/core_cm7.h **** 
1235:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1236:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1237:../../Drivers/CMSIS/Include/core_cm7.h **** 
1238:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1239:../../Drivers/CMSIS/Include/core_cm7.h **** 
1240:../../Drivers/CMSIS/Include/core_cm7.h **** 
1241:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1242:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1243:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1244:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1245:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1246:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1247:../../Drivers/CMSIS/Include/core_cm7.h **** 
1248:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1249:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1250:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1251:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1252:../../Drivers/CMSIS/Include/core_cm7.h **** {
1253:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1254:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1255:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1256:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1257:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1258:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1259:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1260:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1261:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1262:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1263:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1264:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
1265:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1266:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1267:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1268:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1269:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1270:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1271:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1272:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1273:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1274:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1275:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1276:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1277:../../Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1278:../../Drivers/CMSIS/Include/core_cm7.h **** 
1279:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1280:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1281:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1282:../../Drivers/CMSIS/Include/core_cm7.h **** 
1283:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1284:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1285:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
ARM GAS  /tmp/ccADmsZq.s 			page 24


1286:../../Drivers/CMSIS/Include/core_cm7.h **** 
1287:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1288:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1289:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1290:../../Drivers/CMSIS/Include/core_cm7.h **** 
1291:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1292:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1293:../../Drivers/CMSIS/Include/core_cm7.h **** 
1294:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1295:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1296:../../Drivers/CMSIS/Include/core_cm7.h **** 
1297:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1298:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1299:../../Drivers/CMSIS/Include/core_cm7.h **** 
1300:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1301:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1302:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1303:../../Drivers/CMSIS/Include/core_cm7.h **** 
1304:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1305:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1306:../../Drivers/CMSIS/Include/core_cm7.h **** 
1307:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1308:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1309:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1310:../../Drivers/CMSIS/Include/core_cm7.h **** 
1311:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1312:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1313:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1314:../../Drivers/CMSIS/Include/core_cm7.h **** 
1315:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1316:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1317:../../Drivers/CMSIS/Include/core_cm7.h **** 
1318:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1319:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1320:../../Drivers/CMSIS/Include/core_cm7.h **** 
1321:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1322:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1323:../../Drivers/CMSIS/Include/core_cm7.h **** 
1324:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1325:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1326:../../Drivers/CMSIS/Include/core_cm7.h **** 
1327:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1328:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1329:../../Drivers/CMSIS/Include/core_cm7.h **** 
1330:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1331:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1332:../../Drivers/CMSIS/Include/core_cm7.h **** 
1333:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1334:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1335:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1336:../../Drivers/CMSIS/Include/core_cm7.h **** 
1337:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1338:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1339:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1340:../../Drivers/CMSIS/Include/core_cm7.h **** 
1341:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1342:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
ARM GAS  /tmp/ccADmsZq.s 			page 25


1343:../../Drivers/CMSIS/Include/core_cm7.h **** 
1344:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1345:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1346:../../Drivers/CMSIS/Include/core_cm7.h **** 
1347:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1348:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1349:../../Drivers/CMSIS/Include/core_cm7.h **** 
1350:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1351:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1352:../../Drivers/CMSIS/Include/core_cm7.h **** 
1353:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1354:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1355:../../Drivers/CMSIS/Include/core_cm7.h **** 
1356:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1357:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1358:../../Drivers/CMSIS/Include/core_cm7.h **** 
1359:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1360:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1361:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1362:../../Drivers/CMSIS/Include/core_cm7.h **** 
1363:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1364:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1365:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1366:../../Drivers/CMSIS/Include/core_cm7.h **** 
1367:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1368:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1369:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1370:../../Drivers/CMSIS/Include/core_cm7.h **** 
1371:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1372:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1373:../../Drivers/CMSIS/Include/core_cm7.h **** 
1374:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1375:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1376:../../Drivers/CMSIS/Include/core_cm7.h **** 
1377:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1378:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1379:../../Drivers/CMSIS/Include/core_cm7.h **** 
1380:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1381:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1382:../../Drivers/CMSIS/Include/core_cm7.h **** 
1383:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1384:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1385:../../Drivers/CMSIS/Include/core_cm7.h **** 
1386:../../Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1387:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1388:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1389:../../Drivers/CMSIS/Include/core_cm7.h **** 
1390:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1391:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1392:../../Drivers/CMSIS/Include/core_cm7.h **** 
1393:../../Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1394:../../Drivers/CMSIS/Include/core_cm7.h **** 
1395:../../Drivers/CMSIS/Include/core_cm7.h **** 
1396:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__MPU_PRESENT == 1U)
1397:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1398:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1399:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
ARM GAS  /tmp/ccADmsZq.s 			page 26


1400:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1401:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1402:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1403:../../Drivers/CMSIS/Include/core_cm7.h **** 
1404:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1405:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1406:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1407:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1408:../../Drivers/CMSIS/Include/core_cm7.h **** {
1409:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1410:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1411:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1412:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1413:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1414:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1415:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1416:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1417:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1418:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1419:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1420:../../Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1421:../../Drivers/CMSIS/Include/core_cm7.h **** 
1422:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1423:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1424:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1425:../../Drivers/CMSIS/Include/core_cm7.h **** 
1426:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1427:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1428:../../Drivers/CMSIS/Include/core_cm7.h **** 
1429:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1430:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1431:../../Drivers/CMSIS/Include/core_cm7.h **** 
1432:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1433:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1434:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1435:../../Drivers/CMSIS/Include/core_cm7.h **** 
1436:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1437:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1438:../../Drivers/CMSIS/Include/core_cm7.h **** 
1439:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1440:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1441:../../Drivers/CMSIS/Include/core_cm7.h **** 
1442:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1443:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1444:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1445:../../Drivers/CMSIS/Include/core_cm7.h **** 
1446:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1447:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1448:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1449:../../Drivers/CMSIS/Include/core_cm7.h **** 
1450:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1451:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1452:../../Drivers/CMSIS/Include/core_cm7.h **** 
1453:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1454:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1455:../../Drivers/CMSIS/Include/core_cm7.h **** 
1456:../../Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
ARM GAS  /tmp/ccADmsZq.s 			page 27


1457:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1458:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1459:../../Drivers/CMSIS/Include/core_cm7.h **** 
1460:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1461:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1462:../../Drivers/CMSIS/Include/core_cm7.h **** 
1463:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1464:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1465:../../Drivers/CMSIS/Include/core_cm7.h **** 
1466:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1467:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1468:../../Drivers/CMSIS/Include/core_cm7.h **** 
1469:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1470:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1471:../../Drivers/CMSIS/Include/core_cm7.h **** 
1472:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1473:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1474:../../Drivers/CMSIS/Include/core_cm7.h **** 
1475:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1476:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1477:../../Drivers/CMSIS/Include/core_cm7.h **** 
1478:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1479:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1480:../../Drivers/CMSIS/Include/core_cm7.h **** 
1481:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1482:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1483:../../Drivers/CMSIS/Include/core_cm7.h **** 
1484:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1485:../../Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1486:../../Drivers/CMSIS/Include/core_cm7.h **** 
1487:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1488:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1489:../../Drivers/CMSIS/Include/core_cm7.h **** 
1490:../../Drivers/CMSIS/Include/core_cm7.h **** 
1491:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__FPU_PRESENT == 1U)
1492:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1493:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1494:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1495:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1496:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1497:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1498:../../Drivers/CMSIS/Include/core_cm7.h **** 
1499:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1500:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1501:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1502:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1503:../../Drivers/CMSIS/Include/core_cm7.h **** {
1504:../../Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1505:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1506:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1507:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1508:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1509:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1510:../../Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1511:../../Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1512:../../Drivers/CMSIS/Include/core_cm7.h **** 
1513:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
ARM GAS  /tmp/ccADmsZq.s 			page 28


1514:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1515:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1516:../../Drivers/CMSIS/Include/core_cm7.h **** 
1517:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1518:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1519:../../Drivers/CMSIS/Include/core_cm7.h **** 
1520:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1521:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1522:../../Drivers/CMSIS/Include/core_cm7.h **** 
1523:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1524:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1525:../../Drivers/CMSIS/Include/core_cm7.h **** 
1526:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1527:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1528:../../Drivers/CMSIS/Include/core_cm7.h **** 
1529:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1530:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1531:../../Drivers/CMSIS/Include/core_cm7.h **** 
1532:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1533:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1534:../../Drivers/CMSIS/Include/core_cm7.h **** 
1535:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1536:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1537:../../Drivers/CMSIS/Include/core_cm7.h **** 
1538:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1539:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1540:../../Drivers/CMSIS/Include/core_cm7.h **** 
1541:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1542:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1543:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1544:../../Drivers/CMSIS/Include/core_cm7.h **** 
1545:../../Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1546:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1547:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1548:../../Drivers/CMSIS/Include/core_cm7.h **** 
1549:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1550:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1551:../../Drivers/CMSIS/Include/core_cm7.h **** 
1552:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1553:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1554:../../Drivers/CMSIS/Include/core_cm7.h **** 
1555:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1556:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1557:../../Drivers/CMSIS/Include/core_cm7.h **** 
1558:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1559:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1560:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1561:../../Drivers/CMSIS/Include/core_cm7.h **** 
1562:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1563:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1564:../../Drivers/CMSIS/Include/core_cm7.h **** 
1565:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1566:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1567:../../Drivers/CMSIS/Include/core_cm7.h **** 
1568:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1569:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1570:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccADmsZq.s 			page 29


1571:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1572:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1573:../../Drivers/CMSIS/Include/core_cm7.h **** 
1574:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1575:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1576:../../Drivers/CMSIS/Include/core_cm7.h **** 
1577:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1578:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1579:../../Drivers/CMSIS/Include/core_cm7.h **** 
1580:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1581:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1582:../../Drivers/CMSIS/Include/core_cm7.h **** 
1583:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1584:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1585:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1586:../../Drivers/CMSIS/Include/core_cm7.h **** 
1587:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1588:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1589:../../Drivers/CMSIS/Include/core_cm7.h **** 
1590:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1591:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1592:../../Drivers/CMSIS/Include/core_cm7.h **** 
1593:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1594:../../Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1595:../../Drivers/CMSIS/Include/core_cm7.h **** 
1596:../../Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1597:../../Drivers/CMSIS/Include/core_cm7.h **** 
1598:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1599:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1600:../../Drivers/CMSIS/Include/core_cm7.h **** 
1601:../../Drivers/CMSIS/Include/core_cm7.h **** 
1602:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1603:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1604:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1605:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1606:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1607:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1608:../../Drivers/CMSIS/Include/core_cm7.h **** 
1609:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1610:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1611:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1612:../../Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1613:../../Drivers/CMSIS/Include/core_cm7.h **** {
1614:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1615:../../Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1616:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1617:../../Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1618:../../Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1619:../../Drivers/CMSIS/Include/core_cm7.h **** 
1620:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1621:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1622:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1623:../../Drivers/CMSIS/Include/core_cm7.h **** 
1624:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1625:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1626:../../Drivers/CMSIS/Include/core_cm7.h **** 
1627:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
ARM GAS  /tmp/ccADmsZq.s 			page 30


1628:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1629:../../Drivers/CMSIS/Include/core_cm7.h **** 
1630:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1631:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1632:../../Drivers/CMSIS/Include/core_cm7.h **** 
1633:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1634:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1635:../../Drivers/CMSIS/Include/core_cm7.h **** 
1636:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1637:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1638:../../Drivers/CMSIS/Include/core_cm7.h **** 
1639:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1640:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1641:../../Drivers/CMSIS/Include/core_cm7.h **** 
1642:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1643:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1644:../../Drivers/CMSIS/Include/core_cm7.h **** 
1645:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1646:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1647:../../Drivers/CMSIS/Include/core_cm7.h **** 
1648:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1649:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1650:../../Drivers/CMSIS/Include/core_cm7.h **** 
1651:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1652:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1653:../../Drivers/CMSIS/Include/core_cm7.h **** 
1654:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1655:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1656:../../Drivers/CMSIS/Include/core_cm7.h **** 
1657:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1658:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1659:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1660:../../Drivers/CMSIS/Include/core_cm7.h **** 
1661:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1662:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1663:../../Drivers/CMSIS/Include/core_cm7.h **** 
1664:../../Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1665:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1666:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1667:../../Drivers/CMSIS/Include/core_cm7.h **** 
1668:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1669:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1670:../../Drivers/CMSIS/Include/core_cm7.h **** 
1671:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1672:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1673:../../Drivers/CMSIS/Include/core_cm7.h **** 
1674:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1675:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1676:../../Drivers/CMSIS/Include/core_cm7.h **** 
1677:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1678:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1679:../../Drivers/CMSIS/Include/core_cm7.h **** 
1680:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1681:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1682:../../Drivers/CMSIS/Include/core_cm7.h **** 
1683:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1684:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
ARM GAS  /tmp/ccADmsZq.s 			page 31


1685:../../Drivers/CMSIS/Include/core_cm7.h **** 
1686:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1687:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1688:../../Drivers/CMSIS/Include/core_cm7.h **** 
1689:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1690:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1691:../../Drivers/CMSIS/Include/core_cm7.h **** 
1692:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1693:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1694:../../Drivers/CMSIS/Include/core_cm7.h **** 
1695:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1696:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1697:../../Drivers/CMSIS/Include/core_cm7.h **** 
1698:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1699:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1700:../../Drivers/CMSIS/Include/core_cm7.h **** 
1701:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1702:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1703:../../Drivers/CMSIS/Include/core_cm7.h **** 
1704:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1705:../../Drivers/CMSIS/Include/core_cm7.h **** 
1706:../../Drivers/CMSIS/Include/core_cm7.h **** 
1707:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1708:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1709:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1710:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1711:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1712:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1713:../../Drivers/CMSIS/Include/core_cm7.h **** 
1714:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1715:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1716:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1717:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field.
1718:../../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1719:../../Drivers/CMSIS/Include/core_cm7.h **** */
1720:../../Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1721:../../Drivers/CMSIS/Include/core_cm7.h **** 
1722:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1723:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1724:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1725:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register.
1726:../../Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1727:../../Drivers/CMSIS/Include/core_cm7.h **** */
1728:../../Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1729:../../Drivers/CMSIS/Include/core_cm7.h **** 
1730:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1731:../../Drivers/CMSIS/Include/core_cm7.h **** 
1732:../../Drivers/CMSIS/Include/core_cm7.h **** 
1733:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1734:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1735:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
1736:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1737:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1738:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1739:../../Drivers/CMSIS/Include/core_cm7.h **** 
1740:../../Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Cortex-M4 Hardware */
1741:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
ARM GAS  /tmp/ccADmsZq.s 			page 32


1742:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1743:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1744:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1745:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1746:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1747:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1748:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1749:../../Drivers/CMSIS/Include/core_cm7.h **** 
1750:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1751:../../Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1752:../../Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1753:../../Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1754:../../Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1755:../../Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1756:../../Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1757:../../Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1758:../../Drivers/CMSIS/Include/core_cm7.h **** 
1759:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__MPU_PRESENT == 1U)
1760:../../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1761:../../Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1762:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1763:../../Drivers/CMSIS/Include/core_cm7.h **** 
1764:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__FPU_PRESENT == 1U)
1765:../../Drivers/CMSIS/Include/core_cm7.h ****   #define FPU_BASE          (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1766:../../Drivers/CMSIS/Include/core_cm7.h ****   #define FPU               ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1767:../../Drivers/CMSIS/Include/core_cm7.h **** #endif
1768:../../Drivers/CMSIS/Include/core_cm7.h **** 
1769:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1770:../../Drivers/CMSIS/Include/core_cm7.h **** 
1771:../../Drivers/CMSIS/Include/core_cm7.h **** 
1772:../../Drivers/CMSIS/Include/core_cm7.h **** 
1773:../../Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1774:../../Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1775:../../Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1776:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1777:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1778:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1779:../../Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1780:../../Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1781:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1782:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1783:../../Drivers/CMSIS/Include/core_cm7.h **** */
1784:../../Drivers/CMSIS/Include/core_cm7.h **** 
1785:../../Drivers/CMSIS/Include/core_cm7.h **** 
1786:../../Drivers/CMSIS/Include/core_cm7.h **** 
1787:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1788:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1789:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1790:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1791:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1792:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
1793:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1794:../../Drivers/CMSIS/Include/core_cm7.h **** 
1795:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1796:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1797:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1798:../../Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
ARM GAS  /tmp/ccADmsZq.s 			page 33


1799:../../Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1800:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1801:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1802:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1803:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1804:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1805:../../Drivers/CMSIS/Include/core_cm7.h **** {
  28              		.loc 1 1805 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
1806:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1807:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  44              		.loc 1 1807 0
  45 0008 7B68     		ldr	r3, [r7, #4]
  46 000a 03F00703 		and	r3, r3, #7
  47 000e FB60     		str	r3, [r7, #12]
1808:../../Drivers/CMSIS/Include/core_cm7.h **** 
1809:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  48              		.loc 1 1809 0
  49 0010 0B4B     		ldr	r3, .L2
  50 0012 DB68     		ldr	r3, [r3, #12]
  51 0014 BB60     		str	r3, [r7, #8]
1810:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  52              		.loc 1 1810 0
  53 0016 BA68     		ldr	r2, [r7, #8]
  54 0018 4FF6FF03 		movw	r3, #63743
  55 001c 1340     		ands	r3, r3, r2
  56 001e BB60     		str	r3, [r7, #8]
1811:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1812:../../Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1813:../../Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  57              		.loc 1 1813 0
  58 0020 FB68     		ldr	r3, [r7, #12]
  59 0022 1A02     		lsls	r2, r3, #8
1812:../../Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  60              		.loc 1 1812 0
  61 0024 BB68     		ldr	r3, [r7, #8]
  62 0026 1A43     		orrs	r2, r2, r3
1811:../../Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
  63              		.loc 1 1811 0
  64 0028 064B     		ldr	r3, .L2+4
  65 002a 1343     		orrs	r3, r3, r2
  66 002c BB60     		str	r3, [r7, #8]
1814:../../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
ARM GAS  /tmp/ccADmsZq.s 			page 34


  67              		.loc 1 1814 0
  68 002e 044A     		ldr	r2, .L2
  69 0030 BB68     		ldr	r3, [r7, #8]
  70 0032 D360     		str	r3, [r2, #12]
1815:../../Drivers/CMSIS/Include/core_cm7.h **** }
  71              		.loc 1 1815 0
  72 0034 1437     		adds	r7, r7, #20
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75 0036 BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0038 5DF8047B 		ldr	r7, [sp], #4
  80              	.LCFI5:
  81              		.cfi_restore 7
  82              		.cfi_def_cfa_offset 0
  83 003c 7047     		bx	lr
  84              	.L3:
  85 003e 00BF     		.align	2
  86              	.L2:
  87 0040 00ED00E0 		.word	-536810240
  88 0044 0000FA05 		.word	100270080
  89              		.cfi_endproc
  90              	.LFE106:
  92              		.section	.text.NVIC_GetPriorityGrouping,"ax",%progbits
  93              		.align	2
  94              		.thumb
  95              		.thumb_func
  97              	NVIC_GetPriorityGrouping:
  98              	.LFB107:
1816:../../Drivers/CMSIS/Include/core_cm7.h **** 
1817:../../Drivers/CMSIS/Include/core_cm7.h **** 
1818:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1819:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1820:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1821:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1822:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1823:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1824:../../Drivers/CMSIS/Include/core_cm7.h **** {
  99              		.loc 1 1824 0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 0
 102              		@ frame_needed = 1, uses_anonymous_args = 0
 103              		@ link register save eliminated.
 104 0000 80B4     		push	{r7}
 105              	.LCFI6:
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              	.LCFI7:
 110              		.cfi_def_cfa_register 7
1825:../../Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 111              		.loc 1 1825 0
 112 0004 044B     		ldr	r3, .L6
 113 0006 DB68     		ldr	r3, [r3, #12]
 114 0008 03F4E063 		and	r3, r3, #1792
ARM GAS  /tmp/ccADmsZq.s 			page 35


 115 000c 1B0A     		lsrs	r3, r3, #8
1826:../../Drivers/CMSIS/Include/core_cm7.h **** }
 116              		.loc 1 1826 0
 117 000e 1846     		mov	r0, r3
 118 0010 BD46     		mov	sp, r7
 119              	.LCFI8:
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 5DF8047B 		ldr	r7, [sp], #4
 123              	.LCFI9:
 124              		.cfi_restore 7
 125              		.cfi_def_cfa_offset 0
 126 0016 7047     		bx	lr
 127              	.L7:
 128              		.align	2
 129              	.L6:
 130 0018 00ED00E0 		.word	-536810240
 131              		.cfi_endproc
 132              	.LFE107:
 134              		.section	.text.NVIC_EnableIRQ,"ax",%progbits
 135              		.align	2
 136              		.thumb
 137              		.thumb_func
 139              	NVIC_EnableIRQ:
 140              	.LFB108:
1827:../../Drivers/CMSIS/Include/core_cm7.h **** 
1828:../../Drivers/CMSIS/Include/core_cm7.h **** 
1829:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1830:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable External Interrupt
1831:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1832:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1833:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1834:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1835:../../Drivers/CMSIS/Include/core_cm7.h **** {
 141              		.loc 1 1835 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI10:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 83B0     		sub	sp, sp, #12
 151              	.LCFI11:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI12:
 155              		.cfi_def_cfa_register 7
 156 0006 0346     		mov	r3, r0
 157 0008 FB71     		strb	r3, [r7, #7]
1836:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 158              		.loc 1 1836 0
 159 000a 0849     		ldr	r1, .L9
 160 000c 97F90730 		ldrsb	r3, [r7, #7]
 161 0010 5B09     		lsrs	r3, r3, #5
 162 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  /tmp/ccADmsZq.s 			page 36


 163 0014 02F01F02 		and	r2, r2, #31
 164 0018 0120     		movs	r0, #1
 165 001a 00FA02F2 		lsl	r2, r0, r2
 166 001e 41F82320 		str	r2, [r1, r3, lsl #2]
1837:../../Drivers/CMSIS/Include/core_cm7.h **** }
 167              		.loc 1 1837 0
 168 0022 0C37     		adds	r7, r7, #12
 169              	.LCFI13:
 170              		.cfi_def_cfa_offset 4
 171 0024 BD46     		mov	sp, r7
 172              	.LCFI14:
 173              		.cfi_def_cfa_register 13
 174              		@ sp needed
 175 0026 5DF8047B 		ldr	r7, [sp], #4
 176              	.LCFI15:
 177              		.cfi_restore 7
 178              		.cfi_def_cfa_offset 0
 179 002a 7047     		bx	lr
 180              	.L10:
 181              		.align	2
 182              	.L9:
 183 002c 00E100E0 		.word	-536813312
 184              		.cfi_endproc
 185              	.LFE108:
 187              		.section	.text.NVIC_DisableIRQ,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 192              	NVIC_DisableIRQ:
 193              	.LFB109:
1838:../../Drivers/CMSIS/Include/core_cm7.h **** 
1839:../../Drivers/CMSIS/Include/core_cm7.h **** 
1840:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1841:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable External Interrupt
1842:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1843:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1844:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1845:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1846:../../Drivers/CMSIS/Include/core_cm7.h **** {
 194              		.loc 1 1846 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0000 80B4     		push	{r7}
 200              	.LCFI16:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0002 83B0     		sub	sp, sp, #12
 204              	.LCFI17:
 205              		.cfi_def_cfa_offset 16
 206 0004 00AF     		add	r7, sp, #0
 207              	.LCFI18:
 208              		.cfi_def_cfa_register 7
 209 0006 0346     		mov	r3, r0
 210 0008 FB71     		strb	r3, [r7, #7]
1847:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
ARM GAS  /tmp/ccADmsZq.s 			page 37


 211              		.loc 1 1847 0
 212 000a 0949     		ldr	r1, .L12
 213 000c 97F90730 		ldrsb	r3, [r7, #7]
 214 0010 5B09     		lsrs	r3, r3, #5
 215 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 216 0014 02F01F02 		and	r2, r2, #31
 217 0018 0120     		movs	r0, #1
 218 001a 00FA02F2 		lsl	r2, r0, r2
 219 001e 2033     		adds	r3, r3, #32
 220 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1848:../../Drivers/CMSIS/Include/core_cm7.h **** }
 221              		.loc 1 1848 0
 222 0024 0C37     		adds	r7, r7, #12
 223              	.LCFI19:
 224              		.cfi_def_cfa_offset 4
 225 0026 BD46     		mov	sp, r7
 226              	.LCFI20:
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 0028 5DF8047B 		ldr	r7, [sp], #4
 230              	.LCFI21:
 231              		.cfi_restore 7
 232              		.cfi_def_cfa_offset 0
 233 002c 7047     		bx	lr
 234              	.L13:
 235 002e 00BF     		.align	2
 236              	.L12:
 237 0030 00E100E0 		.word	-536813312
 238              		.cfi_endproc
 239              	.LFE109:
 241              		.section	.text.NVIC_GetPendingIRQ,"ax",%progbits
 242              		.align	2
 243              		.thumb
 244              		.thumb_func
 246              	NVIC_GetPendingIRQ:
 247              	.LFB110:
1849:../../Drivers/CMSIS/Include/core_cm7.h **** 
1850:../../Drivers/CMSIS/Include/core_cm7.h **** 
1851:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1852:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1853:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1854:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1855:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1856:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1857:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1858:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1859:../../Drivers/CMSIS/Include/core_cm7.h **** {
 248              		.loc 1 1859 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              	.LCFI22:
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 7, -4
 257 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccADmsZq.s 			page 38


 258              	.LCFI23:
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              	.LCFI24:
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 FB71     		strb	r3, [r7, #7]
1860:../../Drivers/CMSIS/Include/core_cm7.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
 265              		.loc 1 1860 0
 266 000a 0A4A     		ldr	r2, .L16
 267 000c 97F90730 		ldrsb	r3, [r7, #7]
 268 0010 5B09     		lsrs	r3, r3, #5
 269 0012 4033     		adds	r3, r3, #64
 270 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
 271 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 272 001a 03F01F03 		and	r3, r3, #31
 273 001e 22FA03F3 		lsr	r3, r2, r3
 274 0022 03F00103 		and	r3, r3, #1
1861:../../Drivers/CMSIS/Include/core_cm7.h **** }
 275              		.loc 1 1861 0
 276 0026 1846     		mov	r0, r3
 277 0028 0C37     		adds	r7, r7, #12
 278              	.LCFI25:
 279              		.cfi_def_cfa_offset 4
 280 002a BD46     		mov	sp, r7
 281              	.LCFI26:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 002c 5DF8047B 		ldr	r7, [sp], #4
 285              	.LCFI27:
 286              		.cfi_restore 7
 287              		.cfi_def_cfa_offset 0
 288 0030 7047     		bx	lr
 289              	.L17:
 290 0032 00BF     		.align	2
 291              	.L16:
 292 0034 00E100E0 		.word	-536813312
 293              		.cfi_endproc
 294              	.LFE110:
 296              		.section	.text.NVIC_SetPendingIRQ,"ax",%progbits
 297              		.align	2
 298              		.thumb
 299              		.thumb_func
 301              	NVIC_SetPendingIRQ:
 302              	.LFB111:
1862:../../Drivers/CMSIS/Include/core_cm7.h **** 
1863:../../Drivers/CMSIS/Include/core_cm7.h **** 
1864:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1865:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1866:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of an external interrupt.
1867:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1868:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1869:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1870:../../Drivers/CMSIS/Include/core_cm7.h **** {
 303              		.loc 1 1870 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccADmsZq.s 			page 39


 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              	.LCFI28:
 310              		.cfi_def_cfa_offset 4
 311              		.cfi_offset 7, -4
 312 0002 83B0     		sub	sp, sp, #12
 313              	.LCFI29:
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              	.LCFI30:
 317              		.cfi_def_cfa_register 7
 318 0006 0346     		mov	r3, r0
 319 0008 FB71     		strb	r3, [r7, #7]
1871:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 320              		.loc 1 1871 0
 321 000a 0949     		ldr	r1, .L19
 322 000c 97F90730 		ldrsb	r3, [r7, #7]
 323 0010 5B09     		lsrs	r3, r3, #5
 324 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 325 0014 02F01F02 		and	r2, r2, #31
 326 0018 0120     		movs	r0, #1
 327 001a 00FA02F2 		lsl	r2, r0, r2
 328 001e 4033     		adds	r3, r3, #64
 329 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1872:../../Drivers/CMSIS/Include/core_cm7.h **** }
 330              		.loc 1 1872 0
 331 0024 0C37     		adds	r7, r7, #12
 332              	.LCFI31:
 333              		.cfi_def_cfa_offset 4
 334 0026 BD46     		mov	sp, r7
 335              	.LCFI32:
 336              		.cfi_def_cfa_register 13
 337              		@ sp needed
 338 0028 5DF8047B 		ldr	r7, [sp], #4
 339              	.LCFI33:
 340              		.cfi_restore 7
 341              		.cfi_def_cfa_offset 0
 342 002c 7047     		bx	lr
 343              	.L20:
 344 002e 00BF     		.align	2
 345              	.L19:
 346 0030 00E100E0 		.word	-536813312
 347              		.cfi_endproc
 348              	.LFE111:
 350              		.section	.text.NVIC_ClearPendingIRQ,"ax",%progbits
 351              		.align	2
 352              		.thumb
 353              		.thumb_func
 355              	NVIC_ClearPendingIRQ:
 356              	.LFB112:
1873:../../Drivers/CMSIS/Include/core_cm7.h **** 
1874:../../Drivers/CMSIS/Include/core_cm7.h **** 
1875:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1876:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1877:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of an external interrupt.
1878:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
ARM GAS  /tmp/ccADmsZq.s 			page 40


1879:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1880:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1881:../../Drivers/CMSIS/Include/core_cm7.h **** {
 357              		.loc 1 1881 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 8
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 80B4     		push	{r7}
 363              	.LCFI34:
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 83B0     		sub	sp, sp, #12
 367              	.LCFI35:
 368              		.cfi_def_cfa_offset 16
 369 0004 00AF     		add	r7, sp, #0
 370              	.LCFI36:
 371              		.cfi_def_cfa_register 7
 372 0006 0346     		mov	r3, r0
 373 0008 FB71     		strb	r3, [r7, #7]
1882:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 374              		.loc 1 1882 0
 375 000a 0949     		ldr	r1, .L22
 376 000c 97F90730 		ldrsb	r3, [r7, #7]
 377 0010 5B09     		lsrs	r3, r3, #5
 378 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 379 0014 02F01F02 		and	r2, r2, #31
 380 0018 0120     		movs	r0, #1
 381 001a 00FA02F2 		lsl	r2, r0, r2
 382 001e 6033     		adds	r3, r3, #96
 383 0020 41F82320 		str	r2, [r1, r3, lsl #2]
1883:../../Drivers/CMSIS/Include/core_cm7.h **** }
 384              		.loc 1 1883 0
 385 0024 0C37     		adds	r7, r7, #12
 386              	.LCFI37:
 387              		.cfi_def_cfa_offset 4
 388 0026 BD46     		mov	sp, r7
 389              	.LCFI38:
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 0028 5DF8047B 		ldr	r7, [sp], #4
 393              	.LCFI39:
 394              		.cfi_restore 7
 395              		.cfi_def_cfa_offset 0
 396 002c 7047     		bx	lr
 397              	.L23:
 398 002e 00BF     		.align	2
 399              	.L22:
 400 0030 00E100E0 		.word	-536813312
 401              		.cfi_endproc
 402              	.LFE112:
 404              		.section	.text.NVIC_GetActive,"ax",%progbits
 405              		.align	2
 406              		.thumb
 407              		.thumb_func
 409              	NVIC_GetActive:
 410              	.LFB113:
ARM GAS  /tmp/ccADmsZq.s 			page 41


1884:../../Drivers/CMSIS/Include/core_cm7.h **** 
1885:../../Drivers/CMSIS/Include/core_cm7.h **** 
1886:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1887:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
1888:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in NVIC and returns the active bit.
1889:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1890:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
1891:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
1892:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1893:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1894:../../Drivers/CMSIS/Include/core_cm7.h **** {
 411              		.loc 1 1894 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 8
 414              		@ frame_needed = 1, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416 0000 80B4     		push	{r7}
 417              	.LCFI40:
 418              		.cfi_def_cfa_offset 4
 419              		.cfi_offset 7, -4
 420 0002 83B0     		sub	sp, sp, #12
 421              	.LCFI41:
 422              		.cfi_def_cfa_offset 16
 423 0004 00AF     		add	r7, sp, #0
 424              	.LCFI42:
 425              		.cfi_def_cfa_register 7
 426 0006 0346     		mov	r3, r0
 427 0008 FB71     		strb	r3, [r7, #7]
1895:../../Drivers/CMSIS/Include/core_cm7.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
 428              		.loc 1 1895 0
 429 000a 0A4A     		ldr	r2, .L26
 430 000c 97F90730 		ldrsb	r3, [r7, #7]
 431 0010 5B09     		lsrs	r3, r3, #5
 432 0012 8033     		adds	r3, r3, #128
 433 0014 52F82320 		ldr	r2, [r2, r3, lsl #2]
 434 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 435 001a 03F01F03 		and	r3, r3, #31
 436 001e 22FA03F3 		lsr	r3, r2, r3
 437 0022 03F00103 		and	r3, r3, #1
1896:../../Drivers/CMSIS/Include/core_cm7.h **** }
 438              		.loc 1 1896 0
 439 0026 1846     		mov	r0, r3
 440 0028 0C37     		adds	r7, r7, #12
 441              	.LCFI43:
 442              		.cfi_def_cfa_offset 4
 443 002a BD46     		mov	sp, r7
 444              	.LCFI44:
 445              		.cfi_def_cfa_register 13
 446              		@ sp needed
 447 002c 5DF8047B 		ldr	r7, [sp], #4
 448              	.LCFI45:
 449              		.cfi_restore 7
 450              		.cfi_def_cfa_offset 0
 451 0030 7047     		bx	lr
 452              	.L27:
 453 0032 00BF     		.align	2
 454              	.L26:
ARM GAS  /tmp/ccADmsZq.s 			page 42


 455 0034 00E100E0 		.word	-536813312
 456              		.cfi_endproc
 457              	.LFE113:
 459              		.section	.text.NVIC_SetPriority,"ax",%progbits
 460              		.align	2
 461              		.thumb
 462              		.thumb_func
 464              	NVIC_SetPriority:
 465              	.LFB114:
1897:../../Drivers/CMSIS/Include/core_cm7.h **** 
1898:../../Drivers/CMSIS/Include/core_cm7.h **** 
1899:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1900:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
1901:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of an interrupt.
1902:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every core interrupt.
1903:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
1904:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
1905:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1906:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1907:../../Drivers/CMSIS/Include/core_cm7.h **** {
 466              		.loc 1 1907 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470              		@ link register save eliminated.
 471 0000 80B4     		push	{r7}
 472              	.LCFI46:
 473              		.cfi_def_cfa_offset 4
 474              		.cfi_offset 7, -4
 475 0002 83B0     		sub	sp, sp, #12
 476              	.LCFI47:
 477              		.cfi_def_cfa_offset 16
 478 0004 00AF     		add	r7, sp, #0
 479              	.LCFI48:
 480              		.cfi_def_cfa_register 7
 481 0006 0346     		mov	r3, r0
 482 0008 3960     		str	r1, [r7]
 483 000a FB71     		strb	r3, [r7, #7]
1908:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) < 0)
 484              		.loc 1 1908 0
 485 000c 97F90730 		ldrsb	r3, [r7, #7]
 486 0010 002B     		cmp	r3, #0
 487 0012 0BDA     		bge	.L29
1909:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1910:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_B
 488              		.loc 1 1910 0
 489 0014 0D49     		ldr	r1, .L31
 490 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 491 0018 03F00F03 		and	r3, r3, #15
 492 001c 043B     		subs	r3, r3, #4
 493 001e 3A68     		ldr	r2, [r7]
 494 0020 D2B2     		uxtb	r2, r2
 495 0022 1201     		lsls	r2, r2, #4
 496 0024 D2B2     		uxtb	r2, r2
 497 0026 0B44     		add	r3, r3, r1
 498 0028 1A76     		strb	r2, [r3, #24]
 499 002a 09E0     		b	.L28
ARM GAS  /tmp/ccADmsZq.s 			page 43


 500              	.L29:
1911:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1912:../../Drivers/CMSIS/Include/core_cm7.h ****   else
1913:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1914:../../Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_B
 501              		.loc 1 1914 0
 502 002c 0849     		ldr	r1, .L31+4
 503 002e 97F90730 		ldrsb	r3, [r7, #7]
 504 0032 3A68     		ldr	r2, [r7]
 505 0034 D2B2     		uxtb	r2, r2
 506 0036 1201     		lsls	r2, r2, #4
 507 0038 D2B2     		uxtb	r2, r2
 508 003a 0B44     		add	r3, r3, r1
 509 003c 83F80023 		strb	r2, [r3, #768]
 510              	.L28:
1915:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1916:../../Drivers/CMSIS/Include/core_cm7.h **** }
 511              		.loc 1 1916 0
 512 0040 0C37     		adds	r7, r7, #12
 513              	.LCFI49:
 514              		.cfi_def_cfa_offset 4
 515 0042 BD46     		mov	sp, r7
 516              	.LCFI50:
 517              		.cfi_def_cfa_register 13
 518              		@ sp needed
 519 0044 5DF8047B 		ldr	r7, [sp], #4
 520              	.LCFI51:
 521              		.cfi_restore 7
 522              		.cfi_def_cfa_offset 0
 523 0048 7047     		bx	lr
 524              	.L32:
 525 004a 00BF     		.align	2
 526              	.L31:
 527 004c 00ED00E0 		.word	-536810240
 528 0050 00E100E0 		.word	-536813312
 529              		.cfi_endproc
 530              	.LFE114:
 532              		.section	.text.NVIC_GetPriority,"ax",%progbits
 533              		.align	2
 534              		.thumb
 535              		.thumb_func
 537              	NVIC_GetPriority:
 538              	.LFB115:
1917:../../Drivers/CMSIS/Include/core_cm7.h **** 
1918:../../Drivers/CMSIS/Include/core_cm7.h **** 
1919:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1920:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
1921:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of an interrupt.
1922:../../Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1923:../../Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify an internal (core) interrupt.
1924:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
1925:../../Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
1926:../../Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1927:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1928:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1929:../../Drivers/CMSIS/Include/core_cm7.h **** {
 539              		.loc 1 1929 0
ARM GAS  /tmp/ccADmsZq.s 			page 44


 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 8
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544 0000 80B4     		push	{r7}
 545              	.LCFI52:
 546              		.cfi_def_cfa_offset 4
 547              		.cfi_offset 7, -4
 548 0002 83B0     		sub	sp, sp, #12
 549              	.LCFI53:
 550              		.cfi_def_cfa_offset 16
 551 0004 00AF     		add	r7, sp, #0
 552              	.LCFI54:
 553              		.cfi_def_cfa_register 7
 554 0006 0346     		mov	r3, r0
 555 0008 FB71     		strb	r3, [r7, #7]
1930:../../Drivers/CMSIS/Include/core_cm7.h **** 
1931:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) < 0)
 556              		.loc 1 1931 0
 557 000a 97F90730 		ldrsb	r3, [r7, #7]
 558 000e 002B     		cmp	r3, #0
 559 0010 0ADA     		bge	.L34
1932:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1933:../../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)
 560              		.loc 1 1933 0
 561 0012 0D4A     		ldr	r2, .L36
 562 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 563 0016 03F00F03 		and	r3, r3, #15
 564 001a 043B     		subs	r3, r3, #4
 565 001c 1344     		add	r3, r3, r2
 566 001e 1B7E     		ldrb	r3, [r3, #24]
 567 0020 DBB2     		uxtb	r3, r3
 568 0022 1B09     		lsrs	r3, r3, #4
 569 0024 DBB2     		uxtb	r3, r3
 570 0026 08E0     		b	.L35
 571              	.L34:
1934:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1935:../../Drivers/CMSIS/Include/core_cm7.h ****   else
1936:../../Drivers/CMSIS/Include/core_cm7.h ****   {
1937:../../Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)
 572              		.loc 1 1937 0
 573 0028 084A     		ldr	r2, .L36+4
 574 002a 97F90730 		ldrsb	r3, [r7, #7]
 575 002e 1344     		add	r3, r3, r2
 576 0030 93F80033 		ldrb	r3, [r3, #768]
 577 0034 DBB2     		uxtb	r3, r3
 578 0036 1B09     		lsrs	r3, r3, #4
 579 0038 DBB2     		uxtb	r3, r3
 580              	.L35:
1938:../../Drivers/CMSIS/Include/core_cm7.h ****   }
1939:../../Drivers/CMSIS/Include/core_cm7.h **** }
 581              		.loc 1 1939 0
 582 003a 1846     		mov	r0, r3
 583 003c 0C37     		adds	r7, r7, #12
 584              	.LCFI55:
 585              		.cfi_def_cfa_offset 4
 586 003e BD46     		mov	sp, r7
ARM GAS  /tmp/ccADmsZq.s 			page 45


 587              	.LCFI56:
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 0040 5DF8047B 		ldr	r7, [sp], #4
 591              	.LCFI57:
 592              		.cfi_restore 7
 593              		.cfi_def_cfa_offset 0
 594 0044 7047     		bx	lr
 595              	.L37:
 596 0046 00BF     		.align	2
 597              	.L36:
 598 0048 00ED00E0 		.word	-536810240
 599 004c 00E100E0 		.word	-536813312
 600              		.cfi_endproc
 601              	.LFE115:
 603              		.section	.text.NVIC_EncodePriority,"ax",%progbits
 604              		.align	2
 605              		.thumb
 606              		.thumb_func
 608              	NVIC_EncodePriority:
 609              	.LFB116:
1940:../../Drivers/CMSIS/Include/core_cm7.h **** 
1941:../../Drivers/CMSIS/Include/core_cm7.h **** 
1942:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1943:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
1944:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
1945:../../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
1946:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1947:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1948:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
1949:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1950:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1951:../../Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1952:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1953:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1954:../../Drivers/CMSIS/Include/core_cm7.h **** {
 610              		.loc 1 1954 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 32
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 0000 80B4     		push	{r7}
 616              	.LCFI58:
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 89B0     		sub	sp, sp, #36
 620              	.LCFI59:
 621              		.cfi_def_cfa_offset 40
 622 0004 00AF     		add	r7, sp, #0
 623              	.LCFI60:
 624              		.cfi_def_cfa_register 7
 625 0006 F860     		str	r0, [r7, #12]
 626 0008 B960     		str	r1, [r7, #8]
 627 000a 7A60     		str	r2, [r7, #4]
1955:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 628              		.loc 1 1955 0
 629 000c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccADmsZq.s 			page 46


 630 000e 03F00703 		and	r3, r3, #7
 631 0012 FB61     		str	r3, [r7, #28]
1956:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
1957:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
1958:../../Drivers/CMSIS/Include/core_cm7.h **** 
1959:../../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 632              		.loc 1 1959 0
 633 0014 FB69     		ldr	r3, [r7, #28]
 634 0016 C3F10703 		rsb	r3, r3, #7
 635 001a 042B     		cmp	r3, #4
 636 001c 28BF     		it	cs
 637 001e 0423     		movcs	r3, #4
 638 0020 BB61     		str	r3, [r7, #24]
1960:../../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 639              		.loc 1 1960 0
 640 0022 FB69     		ldr	r3, [r7, #28]
 641 0024 0433     		adds	r3, r3, #4
 642 0026 062B     		cmp	r3, #6
 643 0028 02D9     		bls	.L39
 644              		.loc 1 1960 0 is_stmt 0 discriminator 1
 645 002a FB69     		ldr	r3, [r7, #28]
 646 002c 033B     		subs	r3, r3, #3
 647 002e 00E0     		b	.L40
 648              	.L39:
 649              		.loc 1 1960 0 discriminator 2
 650 0030 0023     		movs	r3, #0
 651              	.L40:
 652              		.loc 1 1960 0 discriminator 4
 653 0032 7B61     		str	r3, [r7, #20]
1961:../../Drivers/CMSIS/Include/core_cm7.h **** 
1962:../../Drivers/CMSIS/Include/core_cm7.h ****   return (
1963:../../Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 654              		.loc 1 1963 0 is_stmt 1 discriminator 4
 655 0034 BB69     		ldr	r3, [r7, #24]
 656 0036 0122     		movs	r2, #1
 657 0038 02FA03F3 		lsl	r3, r2, r3
 658 003c 5A1E     		subs	r2, r3, #1
 659 003e BB68     		ldr	r3, [r7, #8]
 660 0040 1A40     		ands	r2, r2, r3
 661 0042 7B69     		ldr	r3, [r7, #20]
 662 0044 9A40     		lsls	r2, r2, r3
1964:../../Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 663              		.loc 1 1964 0 discriminator 4
 664 0046 7B69     		ldr	r3, [r7, #20]
 665 0048 0121     		movs	r1, #1
 666 004a 01FA03F3 		lsl	r3, r1, r3
 667 004e 591E     		subs	r1, r3, #1
 668 0050 7B68     		ldr	r3, [r7, #4]
 669 0052 0B40     		ands	r3, r3, r1
1962:../../Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 670              		.loc 1 1962 0 discriminator 4
 671 0054 1343     		orrs	r3, r3, r2
1965:../../Drivers/CMSIS/Include/core_cm7.h ****          );
1966:../../Drivers/CMSIS/Include/core_cm7.h **** }
 672              		.loc 1 1966 0 discriminator 4
 673 0056 1846     		mov	r0, r3
 674 0058 2437     		adds	r7, r7, #36
ARM GAS  /tmp/ccADmsZq.s 			page 47


 675              	.LCFI61:
 676              		.cfi_def_cfa_offset 4
 677 005a BD46     		mov	sp, r7
 678              	.LCFI62:
 679              		.cfi_def_cfa_register 13
 680              		@ sp needed
 681 005c 5DF8047B 		ldr	r7, [sp], #4
 682              	.LCFI63:
 683              		.cfi_restore 7
 684              		.cfi_def_cfa_offset 0
 685 0060 7047     		bx	lr
 686              		.cfi_endproc
 687              	.LFE116:
 689 0062 00BF     		.section	.text.NVIC_DecodePriority,"ax",%progbits
 690              		.align	2
 691              		.thumb
 692              		.thumb_func
 694              	NVIC_DecodePriority:
 695              	.LFB117:
1967:../../Drivers/CMSIS/Include/core_cm7.h **** 
1968:../../Drivers/CMSIS/Include/core_cm7.h **** 
1969:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1970:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
1971:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
1972:../../Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
1973:../../Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1974:../../Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1975:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1976:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
1977:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1978:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1979:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1980:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1981:../../Drivers/CMSIS/Include/core_cm7.h **** {
 696              		.loc 1 1981 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 32
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI64:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 89B0     		sub	sp, sp, #36
 706              	.LCFI65:
 707              		.cfi_def_cfa_offset 40
 708 0004 00AF     		add	r7, sp, #0
 709              	.LCFI66:
 710              		.cfi_def_cfa_register 7
 711 0006 F860     		str	r0, [r7, #12]
 712 0008 B960     		str	r1, [r7, #8]
 713 000a 7A60     		str	r2, [r7, #4]
 714 000c 3B60     		str	r3, [r7]
1982:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 715              		.loc 1 1982 0
 716 000e BB68     		ldr	r3, [r7, #8]
 717 0010 03F00703 		and	r3, r3, #7
ARM GAS  /tmp/ccADmsZq.s 			page 48


 718 0014 FB61     		str	r3, [r7, #28]
1983:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
1984:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
1985:../../Drivers/CMSIS/Include/core_cm7.h **** 
1986:../../Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 719              		.loc 1 1986 0
 720 0016 FB69     		ldr	r3, [r7, #28]
 721 0018 C3F10703 		rsb	r3, r3, #7
 722 001c 042B     		cmp	r3, #4
 723 001e 28BF     		it	cs
 724 0020 0423     		movcs	r3, #4
 725 0022 BB61     		str	r3, [r7, #24]
1987:../../Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 726              		.loc 1 1987 0
 727 0024 FB69     		ldr	r3, [r7, #28]
 728 0026 0433     		adds	r3, r3, #4
 729 0028 062B     		cmp	r3, #6
 730 002a 02D9     		bls	.L43
 731              		.loc 1 1987 0 is_stmt 0 discriminator 1
 732 002c FB69     		ldr	r3, [r7, #28]
 733 002e 033B     		subs	r3, r3, #3
 734 0030 00E0     		b	.L44
 735              	.L43:
 736              		.loc 1 1987 0 discriminator 2
 737 0032 0023     		movs	r3, #0
 738              	.L44:
 739              		.loc 1 1987 0 discriminator 4
 740 0034 7B61     		str	r3, [r7, #20]
1988:../../Drivers/CMSIS/Include/core_cm7.h **** 
1989:../../Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
 741              		.loc 1 1989 0 is_stmt 1 discriminator 4
 742 0036 7B69     		ldr	r3, [r7, #20]
 743 0038 FA68     		ldr	r2, [r7, #12]
 744 003a DA40     		lsrs	r2, r2, r3
 745 003c BB69     		ldr	r3, [r7, #24]
 746 003e 0121     		movs	r1, #1
 747 0040 01FA03F3 		lsl	r3, r1, r3
 748 0044 013B     		subs	r3, r3, #1
 749 0046 1A40     		ands	r2, r2, r3
 750 0048 7B68     		ldr	r3, [r7, #4]
 751 004a 1A60     		str	r2, [r3]
1990:../../Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 752              		.loc 1 1990 0 discriminator 4
 753 004c 7B69     		ldr	r3, [r7, #20]
 754 004e 0122     		movs	r2, #1
 755 0050 02FA03F3 		lsl	r3, r2, r3
 756 0054 5A1E     		subs	r2, r3, #1
 757 0056 FB68     		ldr	r3, [r7, #12]
 758 0058 1A40     		ands	r2, r2, r3
 759 005a 3B68     		ldr	r3, [r7]
 760 005c 1A60     		str	r2, [r3]
1991:../../Drivers/CMSIS/Include/core_cm7.h **** }
 761              		.loc 1 1991 0 discriminator 4
 762 005e 2437     		adds	r7, r7, #36
 763              	.LCFI67:
 764              		.cfi_def_cfa_offset 4
 765 0060 BD46     		mov	sp, r7
ARM GAS  /tmp/ccADmsZq.s 			page 49


 766              	.LCFI68:
 767              		.cfi_def_cfa_register 13
 768              		@ sp needed
 769 0062 5DF8047B 		ldr	r7, [sp], #4
 770              	.LCFI69:
 771              		.cfi_restore 7
 772              		.cfi_def_cfa_offset 0
 773 0066 7047     		bx	lr
 774              		.cfi_endproc
 775              	.LFE117:
 777              		.section	.text.NVIC_SystemReset,"ax",%progbits
 778              		.align	2
 779              		.thumb
 780              		.thumb_func
 782              	NVIC_SystemReset:
 783              	.LFB118:
1992:../../Drivers/CMSIS/Include/core_cm7.h **** 
1993:../../Drivers/CMSIS/Include/core_cm7.h **** 
1994:../../Drivers/CMSIS/Include/core_cm7.h **** /**
1995:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
1996:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
1997:../../Drivers/CMSIS/Include/core_cm7.h ****  */
1998:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1999:../../Drivers/CMSIS/Include/core_cm7.h **** {
 784              		.loc 1 1999 0
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 0
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 0000 80B4     		push	{r7}
 790              	.LCFI70:
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 0002 00AF     		add	r7, sp, #0
 794              	.LCFI71:
 795              		.cfi_def_cfa_register 7
 796              	.LBB14:
 797              	.LBB15:
 798              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
ARM GAS  /tmp/ccADmsZq.s 			page 50


  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccADmsZq.s 			page 51


  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
ARM GAS  /tmp/ccADmsZq.s 			page 52


 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccADmsZq.s 			page 53


 190:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  /tmp/ccADmsZq.s 			page 54


 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccADmsZq.s 			page 55


 304:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
ARM GAS  /tmp/ccADmsZq.s 			page 56


 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccADmsZq.s 			page 57


 418:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 799              		.loc 2 429 0
 800              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 801 0004 BFF34F8F 		dsb 0xF
 802              	@ 0 "" 2
 803              		.thumb
 804              	.LBE15:
 805              	.LBE14:
2000:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2001:../../Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2002:../../Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 806              		.loc 1 2002 0
 807 0008 0549     		ldr	r1, .L47
2003:../../Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 808              		.loc 1 2003 0
 809 000a 054B     		ldr	r3, .L47
 810 000c DB68     		ldr	r3, [r3, #12]
 811 000e 03F4E062 		and	r2, r3, #1792
2002:../../Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 812              		.loc 1 2002 0
 813 0012 044B     		ldr	r3, .L47+4
 814 0014 1343     		orrs	r3, r3, r2
 815 0016 CB60     		str	r3, [r1, #12]
 816              	.LBB16:
 817              	.LBB17:
 818              		.loc 2 429 0
 819              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 820 0018 BFF34F8F 		dsb 0xF
 821              	@ 0 "" 2
 822              		.thumb
 823              	.L46:
 824              	.LBE17:
 825              	.LBE16:
 826              	.LBB18:
 827              	.LBB19:
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 828              		.loc 2 375 0 discriminator 1
 829              	@ 375 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 830 001c 00BF     		nop
 831              	@ 0 "" 2
 832              		.thumb
 833              	.LBE19:
 834              	.LBE18:
2004:../../Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2005:../../Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2006:../../Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  /tmp/ccADmsZq.s 			page 58


2007:../../Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2008:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2009:../../Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2010:../../Drivers/CMSIS/Include/core_cm7.h ****   }
 835              		.loc 1 2010 0 discriminator 1
 836 001e FDE7     		b	.L46
 837              	.L48:
 838              		.align	2
 839              	.L47:
 840 0020 00ED00E0 		.word	-536810240
 841 0024 0400FA05 		.word	100270084
 842              		.cfi_endproc
 843              	.LFE118:
 845              		.section	.text.SysTick_Config,"ax",%progbits
 846              		.align	2
 847              		.thumb
 848              		.thumb_func
 850              	SysTick_Config:
 851              	.LFB131:
2011:../../Drivers/CMSIS/Include/core_cm7.h **** }
2012:../../Drivers/CMSIS/Include/core_cm7.h **** 
2013:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2014:../../Drivers/CMSIS/Include/core_cm7.h **** 
2015:../../Drivers/CMSIS/Include/core_cm7.h **** 
2016:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2017:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2018:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2019:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2020:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2021:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2022:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2023:../../Drivers/CMSIS/Include/core_cm7.h **** 
2024:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2025:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2026:../../Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2027:../../Drivers/CMSIS/Include/core_cm7.h ****   \returns
2028:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2029:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2030:../../Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2031:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2032:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2033:../../Drivers/CMSIS/Include/core_cm7.h **** {
2034:../../Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2035:../../Drivers/CMSIS/Include/core_cm7.h **** 
2036:../../Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2037:../../Drivers/CMSIS/Include/core_cm7.h ****   if        ((mvfr0 & 0x00000FF0UL) == 0x220UL)
2038:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2039:../../Drivers/CMSIS/Include/core_cm7.h ****     return 2UL;           /* Double + Single precision FPU */
2040:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2041:../../Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & 0x00000FF0UL) == 0x020UL)
2042:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2043:../../Drivers/CMSIS/Include/core_cm7.h ****     return 1UL;           /* Single precision FPU */
2044:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2045:../../Drivers/CMSIS/Include/core_cm7.h ****   else
2046:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2047:../../Drivers/CMSIS/Include/core_cm7.h ****     return 0UL;           /* No FPU */
2048:../../Drivers/CMSIS/Include/core_cm7.h ****   }
ARM GAS  /tmp/ccADmsZq.s 			page 59


2049:../../Drivers/CMSIS/Include/core_cm7.h **** }
2050:../../Drivers/CMSIS/Include/core_cm7.h **** 
2051:../../Drivers/CMSIS/Include/core_cm7.h **** 
2052:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
2053:../../Drivers/CMSIS/Include/core_cm7.h **** 
2054:../../Drivers/CMSIS/Include/core_cm7.h **** 
2055:../../Drivers/CMSIS/Include/core_cm7.h **** 
2056:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2057:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2058:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2059:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2060:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2061:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2062:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2063:../../Drivers/CMSIS/Include/core_cm7.h **** 
2064:../../Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2065:../../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2066:../../Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2067:../../Drivers/CMSIS/Include/core_cm7.h **** 
2068:../../Drivers/CMSIS/Include/core_cm7.h **** 
2069:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2070:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2071:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2072:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2073:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableICache (void)
2074:../../Drivers/CMSIS/Include/core_cm7.h **** {
2075:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2076:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2077:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2078:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2079:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2080:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2081:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2082:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2083:../../Drivers/CMSIS/Include/core_cm7.h **** }
2084:../../Drivers/CMSIS/Include/core_cm7.h **** 
2085:../../Drivers/CMSIS/Include/core_cm7.h **** 
2086:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2087:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2088:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2089:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2090:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableICache (void)
2091:../../Drivers/CMSIS/Include/core_cm7.h **** {
2092:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2093:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2094:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2095:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2096:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2097:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2098:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2099:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2100:../../Drivers/CMSIS/Include/core_cm7.h **** }
2101:../../Drivers/CMSIS/Include/core_cm7.h **** 
2102:../../Drivers/CMSIS/Include/core_cm7.h **** 
2103:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2104:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2105:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
ARM GAS  /tmp/ccADmsZq.s 			page 60


2106:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2107:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateICache (void)
2108:../../Drivers/CMSIS/Include/core_cm7.h **** {
2109:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__ICACHE_PRESENT == 1U)
2110:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2111:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2112:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2113:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2114:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2115:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2116:../../Drivers/CMSIS/Include/core_cm7.h **** }
2117:../../Drivers/CMSIS/Include/core_cm7.h **** 
2118:../../Drivers/CMSIS/Include/core_cm7.h **** 
2119:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2120:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2121:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2122:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2123:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_EnableDCache (void)
2124:../../Drivers/CMSIS/Include/core_cm7.h **** {
2125:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2126:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2127:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2128:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2129:../../Drivers/CMSIS/Include/core_cm7.h **** 
2130:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2131:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2132:../../Drivers/CMSIS/Include/core_cm7.h **** 
2133:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2134:../../Drivers/CMSIS/Include/core_cm7.h **** 
2135:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2136:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2137:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2138:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2139:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2140:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2141:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2142:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2143:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2144:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2145:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2146:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2147:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2148:../../Drivers/CMSIS/Include/core_cm7.h **** 
2149:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2150:../../Drivers/CMSIS/Include/core_cm7.h **** 
2151:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2152:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2153:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2154:../../Drivers/CMSIS/Include/core_cm7.h **** }
2155:../../Drivers/CMSIS/Include/core_cm7.h **** 
2156:../../Drivers/CMSIS/Include/core_cm7.h **** 
2157:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2158:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2159:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2160:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2161:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_DisableDCache (void)
2162:../../Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccADmsZq.s 			page 61


2163:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2164:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2165:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2166:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2167:../../Drivers/CMSIS/Include/core_cm7.h **** 
2168:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2169:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2170:../../Drivers/CMSIS/Include/core_cm7.h **** 
2171:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2172:../../Drivers/CMSIS/Include/core_cm7.h **** 
2173:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2174:../../Drivers/CMSIS/Include/core_cm7.h **** 
2175:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2176:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2177:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2178:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2179:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2180:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2181:../../Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2182:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2183:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2184:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2185:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2186:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2187:../../Drivers/CMSIS/Include/core_cm7.h **** 
2188:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2189:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2190:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2191:../../Drivers/CMSIS/Include/core_cm7.h **** }
2192:../../Drivers/CMSIS/Include/core_cm7.h **** 
2193:../../Drivers/CMSIS/Include/core_cm7.h **** 
2194:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2195:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2196:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2197:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2198:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache (void)
2199:../../Drivers/CMSIS/Include/core_cm7.h **** {
2200:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2201:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2202:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2203:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2204:../../Drivers/CMSIS/Include/core_cm7.h **** 
2205:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2206:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2207:../../Drivers/CMSIS/Include/core_cm7.h **** 
2208:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2209:../../Drivers/CMSIS/Include/core_cm7.h **** 
2210:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2211:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2212:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2213:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2214:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2215:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2216:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2217:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2218:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2219:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
ARM GAS  /tmp/ccADmsZq.s 			page 62


2220:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2221:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2222:../../Drivers/CMSIS/Include/core_cm7.h **** 
2223:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2224:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2225:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2226:../../Drivers/CMSIS/Include/core_cm7.h **** }
2227:../../Drivers/CMSIS/Include/core_cm7.h **** 
2228:../../Drivers/CMSIS/Include/core_cm7.h **** 
2229:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2230:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2231:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2232:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2233:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache (void)
2234:../../Drivers/CMSIS/Include/core_cm7.h **** {
2235:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2236:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2237:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2238:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2239:../../Drivers/CMSIS/Include/core_cm7.h **** 
2240:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2241:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2242:../../Drivers/CMSIS/Include/core_cm7.h **** 
2243:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2244:../../Drivers/CMSIS/Include/core_cm7.h **** 
2245:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2246:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2247:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2248:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2249:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2250:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2251:../../Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2252:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2253:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2254:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2255:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2256:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2257:../../Drivers/CMSIS/Include/core_cm7.h **** 
2258:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2259:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2260:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2261:../../Drivers/CMSIS/Include/core_cm7.h **** }
2262:../../Drivers/CMSIS/Include/core_cm7.h **** 
2263:../../Drivers/CMSIS/Include/core_cm7.h **** 
2264:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2265:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2266:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2267:../../Drivers/CMSIS/Include/core_cm7.h ****   */
2268:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache (void)
2269:../../Drivers/CMSIS/Include/core_cm7.h **** {
2270:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2271:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2272:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2273:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2274:../../Drivers/CMSIS/Include/core_cm7.h **** 
2275:../../Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = (0U << 1U) | 0U;          /* Level 1 data cache */
2276:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  /tmp/ccADmsZq.s 			page 63


2277:../../Drivers/CMSIS/Include/core_cm7.h **** 
2278:../../Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2279:../../Drivers/CMSIS/Include/core_cm7.h **** 
2280:../../Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2281:../../Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2282:../../Drivers/CMSIS/Include/core_cm7.h ****     do {
2283:../../Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2284:../../Drivers/CMSIS/Include/core_cm7.h ****       do {
2285:../../Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2286:../../Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2287:../../Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2288:../../Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2289:../../Drivers/CMSIS/Include/core_cm7.h ****         #endif
2290:../../Drivers/CMSIS/Include/core_cm7.h ****       } while (ways--);
2291:../../Drivers/CMSIS/Include/core_cm7.h ****     } while(sets--);
2292:../../Drivers/CMSIS/Include/core_cm7.h **** 
2293:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2294:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2295:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2296:../../Drivers/CMSIS/Include/core_cm7.h **** }
2297:../../Drivers/CMSIS/Include/core_cm7.h **** 
2298:../../Drivers/CMSIS/Include/core_cm7.h **** 
2299:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2300:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2301:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address
2302:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2303:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2304:../../Drivers/CMSIS/Include/core_cm7.h **** */
2305:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_InvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2306:../../Drivers/CMSIS/Include/core_cm7.h **** {
2307:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2308:../../Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2309:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t)addr;
2310:../../Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32U;                /* in Cortex-M7 size of cache line is fixed to 8 words 
2311:../../Drivers/CMSIS/Include/core_cm7.h **** 
2312:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2313:../../Drivers/CMSIS/Include/core_cm7.h **** 
2314:../../Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2315:../../Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCIMVAC = op_addr;
2316:../../Drivers/CMSIS/Include/core_cm7.h ****       op_addr += linesize;
2317:../../Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2318:../../Drivers/CMSIS/Include/core_cm7.h ****     }
2319:../../Drivers/CMSIS/Include/core_cm7.h **** 
2320:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2321:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2322:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2323:../../Drivers/CMSIS/Include/core_cm7.h **** }
2324:../../Drivers/CMSIS/Include/core_cm7.h **** 
2325:../../Drivers/CMSIS/Include/core_cm7.h **** 
2326:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2327:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean by address
2328:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache for the given address
2329:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2330:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2331:../../Drivers/CMSIS/Include/core_cm7.h **** */
2332:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanDCache_by_Addr (uint32_t *addr, int32_t dsize)
2333:../../Drivers/CMSIS/Include/core_cm7.h **** {
ARM GAS  /tmp/ccADmsZq.s 			page 64


2334:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1)
2335:../../Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2336:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2337:../../Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32U;                /* in Cortex-M7 size of cache line is fixed to 8 words 
2338:../../Drivers/CMSIS/Include/core_cm7.h **** 
2339:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2340:../../Drivers/CMSIS/Include/core_cm7.h **** 
2341:../../Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2342:../../Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCMVAC = op_addr;
2343:../../Drivers/CMSIS/Include/core_cm7.h ****       op_addr += linesize;
2344:../../Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2345:../../Drivers/CMSIS/Include/core_cm7.h ****     }
2346:../../Drivers/CMSIS/Include/core_cm7.h **** 
2347:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2348:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2349:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2350:../../Drivers/CMSIS/Include/core_cm7.h **** }
2351:../../Drivers/CMSIS/Include/core_cm7.h **** 
2352:../../Drivers/CMSIS/Include/core_cm7.h **** 
2353:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2354:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Clean and Invalidate by address
2355:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and invalidates D_Cache for the given address
2356:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address (aligned to 32-byte boundary)
2357:../../Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2358:../../Drivers/CMSIS/Include/core_cm7.h **** */
2359:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void SCB_CleanInvalidateDCache_by_Addr (uint32_t *addr, int32_t dsize)
2360:../../Drivers/CMSIS/Include/core_cm7.h **** {
2361:../../Drivers/CMSIS/Include/core_cm7.h ****   #if (__DCACHE_PRESENT == 1U)
2362:../../Drivers/CMSIS/Include/core_cm7.h ****      int32_t op_size = dsize;
2363:../../Drivers/CMSIS/Include/core_cm7.h ****     uint32_t op_addr = (uint32_t) addr;
2364:../../Drivers/CMSIS/Include/core_cm7.h ****      int32_t linesize = 32U;                /* in Cortex-M7 size of cache line is fixed to 8 words 
2365:../../Drivers/CMSIS/Include/core_cm7.h **** 
2366:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2367:../../Drivers/CMSIS/Include/core_cm7.h **** 
2368:../../Drivers/CMSIS/Include/core_cm7.h ****     while (op_size > 0) {
2369:../../Drivers/CMSIS/Include/core_cm7.h ****       SCB->DCCIMVAC = op_addr;
2370:../../Drivers/CMSIS/Include/core_cm7.h ****       op_addr += linesize;
2371:../../Drivers/CMSIS/Include/core_cm7.h ****       op_size -= linesize;
2372:../../Drivers/CMSIS/Include/core_cm7.h ****     }
2373:../../Drivers/CMSIS/Include/core_cm7.h **** 
2374:../../Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2375:../../Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2376:../../Drivers/CMSIS/Include/core_cm7.h ****   #endif
2377:../../Drivers/CMSIS/Include/core_cm7.h **** }
2378:../../Drivers/CMSIS/Include/core_cm7.h **** 
2379:../../Drivers/CMSIS/Include/core_cm7.h **** 
2380:../../Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_CacheFunctions */
2381:../../Drivers/CMSIS/Include/core_cm7.h **** 
2382:../../Drivers/CMSIS/Include/core_cm7.h **** 
2383:../../Drivers/CMSIS/Include/core_cm7.h **** 
2384:../../Drivers/CMSIS/Include/core_cm7.h **** /* ##################################    SysTick function  ########################################
2385:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2386:../../Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2387:../../Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2388:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure the System.
2389:../../Drivers/CMSIS/Include/core_cm7.h ****   @{
2390:../../Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  /tmp/ccADmsZq.s 			page 65


2391:../../Drivers/CMSIS/Include/core_cm7.h **** 
2392:../../Drivers/CMSIS/Include/core_cm7.h **** #if (__Vendor_SysTickConfig == 0U)
2393:../../Drivers/CMSIS/Include/core_cm7.h **** 
2394:../../Drivers/CMSIS/Include/core_cm7.h **** /**
2395:../../Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Tick Configuration
2396:../../Drivers/CMSIS/Include/core_cm7.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2397:../../Drivers/CMSIS/Include/core_cm7.h ****            Counter is in free running mode to generate periodic interrupts.
2398:../../Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2399:../../Drivers/CMSIS/Include/core_cm7.h ****   \return          0  Function succeeded.
2400:../../Drivers/CMSIS/Include/core_cm7.h ****   \return          1  Function failed.
2401:../../Drivers/CMSIS/Include/core_cm7.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2402:../../Drivers/CMSIS/Include/core_cm7.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2403:../../Drivers/CMSIS/Include/core_cm7.h ****            must contain a vendor-specific implementation of this function.
2404:../../Drivers/CMSIS/Include/core_cm7.h ****  */
2405:../../Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
2406:../../Drivers/CMSIS/Include/core_cm7.h **** {
 852              		.loc 1 2406 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856 0000 80B5     		push	{r7, lr}
 857              	.LCFI72:
 858              		.cfi_def_cfa_offset 8
 859              		.cfi_offset 7, -8
 860              		.cfi_offset 14, -4
 861 0002 82B0     		sub	sp, sp, #8
 862              	.LCFI73:
 863              		.cfi_def_cfa_offset 16
 864 0004 00AF     		add	r7, sp, #0
 865              	.LCFI74:
 866              		.cfi_def_cfa_register 7
 867 0006 7860     		str	r0, [r7, #4]
2407:../../Drivers/CMSIS/Include/core_cm7.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 868              		.loc 1 2407 0
 869 0008 7B68     		ldr	r3, [r7, #4]
 870 000a 013B     		subs	r3, r3, #1
 871 000c B3F1807F 		cmp	r3, #16777216
 872 0010 01D3     		bcc	.L50
2408:../../Drivers/CMSIS/Include/core_cm7.h ****   {
2409:../../Drivers/CMSIS/Include/core_cm7.h ****     return (1UL);                                                   /* Reload value impossible */
 873              		.loc 1 2409 0
 874 0012 0123     		movs	r3, #1
 875 0014 0FE0     		b	.L51
 876              	.L50:
2410:../../Drivers/CMSIS/Include/core_cm7.h ****   }
2411:../../Drivers/CMSIS/Include/core_cm7.h **** 
2412:../../Drivers/CMSIS/Include/core_cm7.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 877              		.loc 1 2412 0
 878 0016 0A4A     		ldr	r2, .L52
 879 0018 7B68     		ldr	r3, [r7, #4]
 880 001a 013B     		subs	r3, r3, #1
 881 001c 5360     		str	r3, [r2, #4]
2413:../../Drivers/CMSIS/Include/core_cm7.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 882              		.loc 1 2413 0
 883 001e 4FF0FF30 		mov	r0, #-1
 884 0022 0F21     		movs	r1, #15
 885 0024 FFF7FEFF 		bl	NVIC_SetPriority
ARM GAS  /tmp/ccADmsZq.s 			page 66


2414:../../Drivers/CMSIS/Include/core_cm7.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 886              		.loc 1 2414 0
 887 0028 054B     		ldr	r3, .L52
 888 002a 0022     		movs	r2, #0
 889 002c 9A60     		str	r2, [r3, #8]
2415:../../Drivers/CMSIS/Include/core_cm7.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 890              		.loc 1 2415 0
 891 002e 044B     		ldr	r3, .L52
 892 0030 0722     		movs	r2, #7
 893 0032 1A60     		str	r2, [r3]
2416:../../Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_TICKINT_Msk   |
2417:../../Drivers/CMSIS/Include/core_cm7.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2418:../../Drivers/CMSIS/Include/core_cm7.h ****   return (0UL);                                                     /* Function successful */
 894              		.loc 1 2418 0
 895 0034 0023     		movs	r3, #0
 896              	.L51:
2419:../../Drivers/CMSIS/Include/core_cm7.h **** }
 897              		.loc 1 2419 0
 898 0036 1846     		mov	r0, r3
 899 0038 0837     		adds	r7, r7, #8
 900              	.LCFI75:
 901              		.cfi_def_cfa_offset 8
 902 003a BD46     		mov	sp, r7
 903              	.LCFI76:
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 003c 80BD     		pop	{r7, pc}
 907              	.L53:
 908 003e 00BF     		.align	2
 909              	.L52:
 910 0040 10E000E0 		.word	-536813552
 911              		.cfi_endproc
 912              	.LFE131:
 914              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
 915              		.align	2
 916              		.global	HAL_NVIC_SetPriorityGrouping
 917              		.thumb
 918              		.thumb_func
 920              	HAL_NVIC_SetPriorityGrouping:
 921              	.LFB135:
 922              		.file 3 "../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c"
   1:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
   2:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
   3:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @file    stm32f7xx_hal_cortex.c
   4:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @version V1.1.2
   6:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @date    23-September-2016 
   7:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following 
   9:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  10:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
  11:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           + Peripheral Control functions 
  12:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  13:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @verbatim  
  14:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
  15:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                         ##### How to use this driver #####
  16:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
ARM GAS  /tmp/ccADmsZq.s 			page 67


  17:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  18:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  19:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  20:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ===========================================================
  21:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]     
  22:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  23:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  24:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  25:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  26:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         function according to the following table.
  27:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority(). 
  28:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  29:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     (#) please refer to programming manual for details in how to configure priority. 
  30:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
  31:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ preemption is no more possible. 
  32:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  33:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  34:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  35:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest preemption priority
  36:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest sub priority
  37:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  38:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
  39:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]  
  40:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     *** How to configure Systick using CORTEX HAL driver ***
  41:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     ========================================================
  42:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
  43:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  44:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****            
  45:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  46:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        is a CMSIS function that:
  47:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  48:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  49:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  50:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  51:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  52:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  53:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
  54:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  55:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  56:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  57:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        inside the stm32f7xx_hal_cortex.h file.
  58:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  59:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  60:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  61:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  62:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
  63:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  64:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                             
  65:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  66:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  67:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  68:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    
  69:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   @endverbatim
  70:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  71:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @attention
  72:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  73:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
ARM GAS  /tmp/ccADmsZq.s 			page 68


  74:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  75:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  76:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  77:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  78:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
  79:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  80:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
  81:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
  82:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  83:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
  84:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *      without specific prior written permission.
  85:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  86:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  87:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  88:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  89:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  90:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  91:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  92:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  93:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  94:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  95:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  96:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *
  97:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ******************************************************************************
  98:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
  99:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #include "stm32f7xx_hal.h"
 102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @addtogroup STM32F7xx_HAL_Driver
 104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
 108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
 109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim    
 130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
ARM GAS  /tmp/ccADmsZq.s 			page 69


 131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       Systick functionalities 
 136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (preemption priority and subpriority)
 144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         using the required unlock sequence.
 145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length. 
 146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    4 bits for subpriority
 149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    3 bits for subpriority
 151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    2 bits for subpriority
 153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    1 bits for subpriority
 155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                    0 bits for subpriority
 157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
 158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 923              		.loc 3 162 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 8
 926              		@ frame_needed = 1, uses_anonymous_args = 0
 927 0000 80B5     		push	{r7, lr}
 928              	.LCFI77:
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 82B0     		sub	sp, sp, #8
 933              	.LCFI78:
 934              		.cfi_def_cfa_offset 16
 935 0004 00AF     		add	r7, sp, #0
 936              	.LCFI79:
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
 163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 939              		.loc 3 167 0
 940 0008 7868     		ldr	r0, [r7, #4]
 941 000a FFF7FEFF 		bl	NVIC_SetPriorityGrouping
 168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
ARM GAS  /tmp/ccADmsZq.s 			page 70


 942              		.loc 3 168 0
 943 000e 0837     		adds	r7, r7, #8
 944              	.LCFI80:
 945              		.cfi_def_cfa_offset 8
 946 0010 BD46     		mov	sp, r7
 947              	.LCFI81:
 948              		.cfi_def_cfa_register 13
 949              		@ sp needed
 950 0012 80BD     		pop	{r7, pc}
 951              		.cfi_endproc
 952              	.LFE135:
 954              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
 955              		.align	2
 956              		.global	HAL_NVIC_SetPriority
 957              		.thumb
 958              		.thumb_func
 960              	HAL_NVIC_SetPriority:
 961              	.LFB136:
 169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  PreemptPriority: The preemption priority for the IRQn channel.
 176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
 181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** { 
 962              		.loc 3 184 0
 963              		.cfi_startproc
 964              		@ args = 0, pretend = 0, frame = 24
 965              		@ frame_needed = 1, uses_anonymous_args = 0
 966 0000 80B5     		push	{r7, lr}
 967              	.LCFI82:
 968              		.cfi_def_cfa_offset 8
 969              		.cfi_offset 7, -8
 970              		.cfi_offset 14, -4
 971 0002 86B0     		sub	sp, sp, #24
 972              	.LCFI83:
 973              		.cfi_def_cfa_offset 32
 974 0004 00AF     		add	r7, sp, #0
 975              	.LCFI84:
 976              		.cfi_def_cfa_register 7
 977 0006 0346     		mov	r3, r0
 978 0008 B960     		str	r1, [r7, #8]
 979 000a 7A60     		str	r2, [r7, #4]
 980 000c FB73     		strb	r3, [r7, #15]
 185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 981              		.loc 3 185 0
 982 000e 0023     		movs	r3, #0
 983 0010 7B61     		str	r3, [r7, #20]
ARM GAS  /tmp/ccADmsZq.s 			page 71


 186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 984              		.loc 3 191 0
 985 0012 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 986 0016 7861     		str	r0, [r7, #20]
 192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 987              		.loc 3 193 0
 988 0018 7869     		ldr	r0, [r7, #20]
 989 001a B968     		ldr	r1, [r7, #8]
 990 001c 7A68     		ldr	r2, [r7, #4]
 991 001e FFF7FEFF 		bl	NVIC_EncodePriority
 992 0022 0246     		mov	r2, r0
 993 0024 97F90F30 		ldrsb	r3, [r7, #15]
 994 0028 1846     		mov	r0, r3
 995 002a 1146     		mov	r1, r2
 996 002c FFF7FEFF 		bl	NVIC_SetPriority
 194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 997              		.loc 3 194 0
 998 0030 1837     		adds	r7, r7, #24
 999              	.LCFI85:
 1000              		.cfi_def_cfa_offset 8
 1001 0032 BD46     		mov	sp, r7
 1002              	.LCFI86:
 1003              		.cfi_def_cfa_register 13
 1004              		@ sp needed
 1005 0034 80BD     		pop	{r7, pc}
 1006              		.cfi_endproc
 1007              	.LFE136:
 1009 0036 00BF     		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 1010              		.align	2
 1011              		.global	HAL_NVIC_EnableIRQ
 1012              		.thumb
 1013              		.thumb_func
 1015              	HAL_NVIC_EnableIRQ:
 1016              	.LFB137:
 195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         function should be called before. 
 200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1017              		.loc 3 206 0
 1018              		.cfi_startproc
 1019              		@ args = 0, pretend = 0, frame = 8
 1020              		@ frame_needed = 1, uses_anonymous_args = 0
 1021 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccADmsZq.s 			page 72


 1022              	.LCFI87:
 1023              		.cfi_def_cfa_offset 8
 1024              		.cfi_offset 7, -8
 1025              		.cfi_offset 14, -4
 1026 0002 82B0     		sub	sp, sp, #8
 1027              	.LCFI88:
 1028              		.cfi_def_cfa_offset 16
 1029 0004 00AF     		add	r7, sp, #0
 1030              	.LCFI89:
 1031              		.cfi_def_cfa_register 7
 1032 0006 0346     		mov	r3, r0
 1033 0008 FB71     		strb	r3, [r7, #7]
 207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable interrupt */
 211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 1034              		.loc 3 211 0
 1035 000a 97F90730 		ldrsb	r3, [r7, #7]
 1036 000e 1846     		mov	r0, r3
 1037 0010 FFF7FEFF 		bl	NVIC_EnableIRQ
 212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1038              		.loc 3 212 0
 1039 0014 0837     		adds	r7, r7, #8
 1040              	.LCFI90:
 1041              		.cfi_def_cfa_offset 8
 1042 0016 BD46     		mov	sp, r7
 1043              	.LCFI91:
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 0018 80BD     		pop	{r7, pc}
 1047              		.cfi_endproc
 1048              	.LFE137:
 1050 001a 00BF     		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 1051              		.align	2
 1052              		.global	HAL_NVIC_DisableIRQ
 1053              		.thumb
 1054              		.thumb_func
 1056              	HAL_NVIC_DisableIRQ:
 1057              	.LFB138:
 213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1058              		.loc 3 222 0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 8
 1061              		@ frame_needed = 1, uses_anonymous_args = 0
 1062 0000 80B5     		push	{r7, lr}
 1063              	.LCFI92:
 1064              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccADmsZq.s 			page 73


 1065              		.cfi_offset 7, -8
 1066              		.cfi_offset 14, -4
 1067 0002 82B0     		sub	sp, sp, #8
 1068              	.LCFI93:
 1069              		.cfi_def_cfa_offset 16
 1070 0004 00AF     		add	r7, sp, #0
 1071              	.LCFI94:
 1072              		.cfi_def_cfa_register 7
 1073 0006 0346     		mov	r3, r0
 1074 0008 FB71     		strb	r3, [r7, #7]
 223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable interrupt */
 227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 1075              		.loc 3 227 0
 1076 000a 97F90730 		ldrsb	r3, [r7, #7]
 1077 000e 1846     		mov	r0, r3
 1078 0010 FFF7FEFF 		bl	NVIC_DisableIRQ
 228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1079              		.loc 3 228 0
 1080 0014 0837     		adds	r7, r7, #8
 1081              	.LCFI95:
 1082              		.cfi_def_cfa_offset 8
 1083 0016 BD46     		mov	sp, r7
 1084              	.LCFI96:
 1085              		.cfi_def_cfa_register 13
 1086              		@ sp needed
 1087 0018 80BD     		pop	{r7, pc}
 1088              		.cfi_endproc
 1089              	.LFE138:
 1091 001a 00BF     		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 1092              		.align	2
 1093              		.global	HAL_NVIC_SystemReset
 1094              		.thumb
 1095              		.thumb_func
 1097              	HAL_NVIC_SystemReset:
 1098              	.LFB139:
 229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1099              		.loc 3 235 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 0
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103 0000 80B5     		push	{r7, lr}
 1104              	.LCFI97:
 1105              		.cfi_def_cfa_offset 8
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 00AF     		add	r7, sp, #0
 1109              	.LCFI98:
 1110              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccADmsZq.s 			page 74


 236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* System Reset */
 237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SystemReset();
 1111              		.loc 3 237 0
 1112 0004 FFF7FEFF 		bl	NVIC_SystemReset
 238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1113              		.loc 3 238 0
 1114 0008 80BD     		pop	{r7, pc}
 1115              		.cfi_endproc
 1116              	.LFE139:
 1118 000a 00BF     		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 1119              		.align	2
 1120              		.global	HAL_SYSTICK_Config
 1121              		.thumb
 1122              		.thumb_func
 1124              	HAL_SYSTICK_Config:
 1125              	.LFB140:
 239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                  - 1  Function failed.
 246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1126              		.loc 3 248 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 8
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130 0000 80B5     		push	{r7, lr}
 1131              	.LCFI99:
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 7, -8
 1134              		.cfi_offset 14, -4
 1135 0002 82B0     		sub	sp, sp, #8
 1136              	.LCFI100:
 1137              		.cfi_def_cfa_offset 16
 1138 0004 00AF     		add	r7, sp, #0
 1139              	.LCFI101:
 1140              		.cfi_def_cfa_register 7
 1141 0006 7860     		str	r0, [r7, #4]
 249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 1142              		.loc 3 249 0
 1143 0008 7868     		ldr	r0, [r7, #4]
 1144 000a FFF7FEFF 		bl	SysTick_Config
 1145 000e 0346     		mov	r3, r0
 250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1146              		.loc 3 250 0
 1147 0010 1846     		mov	r0, r3
 1148 0012 0837     		adds	r7, r7, #8
 1149              	.LCFI102:
 1150              		.cfi_def_cfa_offset 8
 1151 0014 BD46     		mov	sp, r7
 1152              	.LCFI103:
 1153              		.cfi_def_cfa_register 13
 1154              		@ sp needed
ARM GAS  /tmp/ccADmsZq.s 			page 75


 1155 0016 80BD     		pop	{r7, pc}
 1156              		.cfi_endproc
 1157              	.LFE140:
 1159              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 1160              		.align	2
 1161              		.global	HAL_MPU_Disable
 1162              		.thumb
 1163              		.thumb_func
 1165              	HAL_MPU_Disable:
 1166              	.LFB141:
 251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @}
 253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *  @brief   Cortex control functions 
 257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  *
 258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @verbatim   
 259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================
 260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   ==============================================================================  
 262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     [..]
 263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  
 266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****       
 267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** @endverbatim
 268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @{
 269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Disables the MPU
 274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1167              		.loc 3 277 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 1, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
 1172 0000 80B4     		push	{r7}
 1173              	.LCFI104:
 1174              		.cfi_def_cfa_offset 4
 1175              		.cfi_offset 7, -4
 1176 0002 00AF     		add	r7, sp, #0
 1177              	.LCFI105:
 1178              		.cfi_def_cfa_register 7
 1179              	.LBB20:
 1180              	.LBB21:
 430:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
ARM GAS  /tmp/ccADmsZq.s 			page 76


 436:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 1181              		.loc 2 440 0
 1182              	@ 440 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1183 0004 BFF35F8F 		dmb 0xF
 1184              	@ 0 "" 2
 1185              		.thumb
 1186              	.LBE21:
 1187              	.LBE20:
 278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
 279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DMB();
 280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable fault exceptions */
 282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR &= ~SCB_SHCSR_MEMFAULTENA_Msk;
 1188              		.loc 3 282 0
 1189 0008 064A     		ldr	r2, .L62
 1190 000a 064B     		ldr	r3, .L62
 1191 000c 5B6A     		ldr	r3, [r3, #36]
 1192 000e 23F48033 		bic	r3, r3, #65536
 1193 0012 5362     		str	r3, [r2, #36]
 283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = 0;
 1194              		.loc 3 285 0
 1195 0014 044B     		ldr	r3, .L62+4
 1196 0016 0022     		movs	r2, #0
 1197 0018 5A60     		str	r2, [r3, #4]
 286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1198              		.loc 3 286 0
 1199 001a BD46     		mov	sp, r7
 1200              	.LCFI106:
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed
 1203 001c 5DF8047B 		ldr	r7, [sp], #4
 1204              	.LCFI107:
 1205              		.cfi_restore 7
 1206              		.cfi_def_cfa_offset 0
 1207 0020 7047     		bx	lr
 1208              	.L63:
 1209 0022 00BF     		.align	2
 1210              	.L62:
 1211 0024 00ED00E0 		.word	-536810240
 1212 0028 90ED00E0 		.word	-536810096
 1213              		.cfi_endproc
 1214              	.LFE141:
 1216              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1217              		.align	2
 1218              		.global	HAL_MPU_Enable
 1219              		.thumb
 1220              		.thumb_func
 1222              	HAL_MPU_Enable:
 1223              	.LFB142:
 287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
ARM GAS  /tmp/ccADmsZq.s 			page 77


 289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Enables the MPU
 290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault, 
 291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged access to the default memory 
 292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1224              		.loc 3 300 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 8
 1227              		@ frame_needed = 1, uses_anonymous_args = 0
 1228              		@ link register save eliminated.
 1229 0000 80B4     		push	{r7}
 1230              	.LCFI108:
 1231              		.cfi_def_cfa_offset 4
 1232              		.cfi_offset 7, -4
 1233 0002 83B0     		sub	sp, sp, #12
 1234              	.LCFI109:
 1235              		.cfi_def_cfa_offset 16
 1236 0004 00AF     		add	r7, sp, #0
 1237              	.LCFI110:
 1238              		.cfi_def_cfa_register 7
 1239 0006 7860     		str	r0, [r7, #4]
 301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable the MPU */
 302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->CTRL = MPU_Control | MPU_CTRL_ENABLE_Msk;
 1240              		.loc 3 302 0
 1241 0008 094A     		ldr	r2, .L65
 1242 000a 7B68     		ldr	r3, [r7, #4]
 1243 000c 43F00103 		orr	r3, r3, #1
 1244 0010 5360     		str	r3, [r2, #4]
 303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Enable fault exceptions */
 305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   SCB->SHCSR |= SCB_SHCSR_MEMFAULTENA_Msk;
 1245              		.loc 3 305 0
 1246 0012 084A     		ldr	r2, .L65+4
 1247 0014 074B     		ldr	r3, .L65+4
 1248 0016 5B6A     		ldr	r3, [r3, #36]
 1249 0018 43F48033 		orr	r3, r3, #65536
 1250 001c 5362     		str	r3, [r2, #36]
 1251              	.LBB22:
 1252              	.LBB23:
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1253              		.loc 2 429 0
 1254              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1255 001e BFF34F8F 		dsb 0xF
 1256              	@ 0 "" 2
 1257              		.thumb
 1258              	.LBE23:
 1259              	.LBE22:
 1260              	.LBB24:
 1261              	.LBB25:
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccADmsZq.s 			page 78


 1262              		.loc 2 418 0
 1263              	@ 418 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1264 0022 BFF36F8F 		isb 0xF
 1265              	@ 0 "" 2
 1266              		.thumb
 1267              	.LBE25:
 1268              	.LBE24:
 306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __DSB();
 309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   __ISB();
 310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1269              		.loc 3 310 0
 1270 0026 0C37     		adds	r7, r7, #12
 1271              	.LCFI111:
 1272              		.cfi_def_cfa_offset 4
 1273 0028 BD46     		mov	sp, r7
 1274              	.LCFI112:
 1275              		.cfi_def_cfa_register 13
 1276              		@ sp needed
 1277 002a 5DF8047B 		ldr	r7, [sp], #4
 1278              	.LCFI113:
 1279              		.cfi_restore 7
 1280              		.cfi_def_cfa_offset 0
 1281 002e 7047     		bx	lr
 1282              	.L66:
 1283              		.align	2
 1284              	.L65:
 1285 0030 90ED00E0 		.word	-536810096
 1286 0034 00ED00E0 		.word	-536810240
 1287              		.cfi_endproc
 1288              	.LFE142:
 1290              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1291              		.align	2
 1292              		.global	HAL_MPU_ConfigRegion
 1293              		.thumb
 1294              		.thumb_func
 1296              	HAL_MPU_ConfigRegion:
 1297              	.LFB143:
 311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                the initialization and configuration information.
 316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1298              		.loc 3 319 0
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 8
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 80B4     		push	{r7}
 1304              	.LCFI114:
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
ARM GAS  /tmp/ccADmsZq.s 			page 79


 1307 0002 83B0     		sub	sp, sp, #12
 1308              	.LCFI115:
 1309              		.cfi_def_cfa_offset 16
 1310 0004 00AF     		add	r7, sp, #0
 1311              	.LCFI116:
 1312              		.cfi_def_cfa_register 7
 1313 0006 7860     		str	r0, [r7, #4]
 320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set the Region number */
 325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1314              		.loc 3 325 0
 1315 0008 1D4A     		ldr	r2, .L70
 1316 000a 7B68     		ldr	r3, [r7, #4]
 1317 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1318 000e 9360     		str	r3, [r2, #8]
 326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 1319              		.loc 3 327 0
 1320 0010 7B68     		ldr	r3, [r7, #4]
 1321 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1322 0014 002B     		cmp	r3, #0
 1323 0016 28D0     		beq	.L68
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     /* Check the parameters */
 330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     
 339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1324              		.loc 3 339 0
 1325 0018 194A     		ldr	r2, .L70
 1326 001a 7B68     		ldr	r3, [r7, #4]
 1327 001c 5B68     		ldr	r3, [r3, #4]
 1328 001e D360     		str	r3, [r2, #12]
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1329              		.loc 3 340 0
 1330 0020 1749     		ldr	r1, .L70
 1331 0022 7B68     		ldr	r3, [r7, #4]
 1332 0024 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1333 0026 1A07     		lsls	r2, r3, #28
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1334              		.loc 3 341 0
 1335 0028 7B68     		ldr	r3, [r7, #4]
 1336 002a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 1337 002c 1B06     		lsls	r3, r3, #24
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 1338              		.loc 3 340 0
 1339 002e 1A43     		orrs	r2, r2, r3
 342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
ARM GAS  /tmp/ccADmsZq.s 			page 80


 1340              		.loc 3 342 0
 1341 0030 7B68     		ldr	r3, [r7, #4]
 1342 0032 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1343 0034 DB04     		lsls	r3, r3, #19
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1344              		.loc 3 341 0
 1345 0036 1A43     		orrs	r2, r2, r3
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1346              		.loc 3 343 0
 1347 0038 7B68     		ldr	r3, [r7, #4]
 1348 003a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 1349 003c 9B04     		lsls	r3, r3, #18
 342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 1350              		.loc 3 342 0
 1351 003e 1A43     		orrs	r2, r2, r3
 344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1352              		.loc 3 344 0
 1353 0040 7B68     		ldr	r3, [r7, #4]
 1354 0042 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 1355 0044 5B04     		lsls	r3, r3, #17
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 1356              		.loc 3 343 0
 1357 0046 1A43     		orrs	r2, r2, r3
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1358              		.loc 3 345 0
 1359 0048 7B68     		ldr	r3, [r7, #4]
 1360 004a DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1361 004c 1B04     		lsls	r3, r3, #16
 344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 1362              		.loc 3 344 0
 1363 004e 1A43     		orrs	r2, r2, r3
 346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1364              		.loc 3 346 0
 1365 0050 7B68     		ldr	r3, [r7, #4]
 1366 0052 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1367 0054 1B02     		lsls	r3, r3, #8
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 1368              		.loc 3 345 0
 1369 0056 1A43     		orrs	r2, r2, r3
 347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1370              		.loc 3 347 0
 1371 0058 7B68     		ldr	r3, [r7, #4]
 1372 005a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1373 005c 5B00     		lsls	r3, r3, #1
 346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 1374              		.loc 3 346 0
 1375 005e 1343     		orrs	r3, r3, r2
 348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 1376              		.loc 3 348 0
 1377 0060 7A68     		ldr	r2, [r7, #4]
 1378 0062 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 1379              		.loc 3 347 0
 1380 0064 1343     		orrs	r3, r3, r2
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 1381              		.loc 3 340 0
 1382 0066 0B61     		str	r3, [r1, #16]
ARM GAS  /tmp/ccADmsZq.s 			page 81


 1383 0068 05E0     		b	.L67
 1384              	.L68:
 349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 1385              		.loc 3 352 0
 1386 006a 054B     		ldr	r3, .L70
 1387 006c 0022     		movs	r2, #0
 1388 006e DA60     		str	r2, [r3, #12]
 353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1389              		.loc 3 353 0
 1390 0070 034B     		ldr	r3, .L70
 1391 0072 0022     		movs	r2, #0
 1392 0074 1A61     		str	r2, [r3, #16]
 1393              	.L67:
 354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1394              		.loc 3 355 0
 1395 0076 0C37     		adds	r7, r7, #12
 1396              	.LCFI117:
 1397              		.cfi_def_cfa_offset 4
 1398 0078 BD46     		mov	sp, r7
 1399              	.LCFI118:
 1400              		.cfi_def_cfa_register 13
 1401              		@ sp needed
 1402 007a 5DF8047B 		ldr	r7, [sp], #4
 1403              	.LCFI119:
 1404              		.cfi_restore 7
 1405              		.cfi_def_cfa_offset 0
 1406 007e 7047     		bx	lr
 1407              	.L71:
 1408              		.align	2
 1409              	.L70:
 1410 0080 90ED00E0 		.word	-536810096
 1411              		.cfi_endproc
 1412              	.LFE143:
 1414              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 1415              		.align	2
 1416              		.global	HAL_NVIC_GetPriorityGrouping
 1417              		.thumb
 1418              		.thumb_func
 1420              	HAL_NVIC_GetPriorityGrouping:
 1421              	.LFB144:
 356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1422              		.loc 3 363 0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 1, uses_anonymous_args = 0
 1426 0000 80B5     		push	{r7, lr}
ARM GAS  /tmp/ccADmsZq.s 			page 82


 1427              	.LCFI120:
 1428              		.cfi_def_cfa_offset 8
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 00AF     		add	r7, sp, #0
 1432              	.LCFI121:
 1433              		.cfi_def_cfa_register 7
 364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 1434              		.loc 3 365 0
 1435 0004 FFF7FEFF 		bl	NVIC_GetPriorityGrouping
 1436 0008 0346     		mov	r3, r0
 366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1437              		.loc 3 366 0
 1438 000a 1846     		mov	r0, r3
 1439 000c 80BD     		pop	{r7, pc}
 1440              		.cfi_endproc
 1441              	.LFE144:
 1443 000e 00BF     		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 1444              		.align	2
 1445              		.global	HAL_NVIC_GetPriority
 1446              		.thumb
 1447              		.thumb_func
 1449              	HAL_NVIC_GetPriority:
 1450              	.LFB145:
 367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for preemption priority
 376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      4 bits for subpriority
 377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for preemption priority
 378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      3 bits for subpriority
 379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for preemption priority
 380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      2 bits for subpriority
 381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for preemption priority
 382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      1 bits for subpriority
 383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for preemption priority
 384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                                      0 bits for subpriority
 385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1451              		.loc 3 390 0
 1452              		.cfi_startproc
 1453              		@ args = 0, pretend = 0, frame = 16
 1454              		@ frame_needed = 1, uses_anonymous_args = 0
 1455 0000 80B5     		push	{r7, lr}
 1456              	.LCFI122:
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 7, -8
ARM GAS  /tmp/ccADmsZq.s 			page 83


 1459              		.cfi_offset 14, -4
 1460 0002 84B0     		sub	sp, sp, #16
 1461              	.LCFI123:
 1462              		.cfi_def_cfa_offset 24
 1463 0004 00AF     		add	r7, sp, #0
 1464              	.LCFI124:
 1465              		.cfi_def_cfa_register 7
 1466 0006 B960     		str	r1, [r7, #8]
 1467 0008 7A60     		str	r2, [r7, #4]
 1468 000a 3B60     		str	r3, [r7]
 1469 000c 0346     		mov	r3, r0
 1470 000e FB73     		strb	r3, [r7, #15]
 391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 1471              		.loc 3 394 0
 1472 0010 97F90F30 		ldrsb	r3, [r7, #15]
 1473 0014 1846     		mov	r0, r3
 1474 0016 FFF7FEFF 		bl	NVIC_GetPriority
 1475 001a 0346     		mov	r3, r0
 1476 001c 1846     		mov	r0, r3
 1477 001e B968     		ldr	r1, [r7, #8]
 1478 0020 7A68     		ldr	r2, [r7, #4]
 1479 0022 3B68     		ldr	r3, [r7]
 1480 0024 FFF7FEFF 		bl	NVIC_DecodePriority
 395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1481              		.loc 3 395 0
 1482 0028 1037     		adds	r7, r7, #16
 1483              	.LCFI125:
 1484              		.cfi_def_cfa_offset 8
 1485 002a BD46     		mov	sp, r7
 1486              	.LCFI126:
 1487              		.cfi_def_cfa_register 13
 1488              		@ sp needed
 1489 002c 80BD     		pop	{r7, pc}
 1490              		.cfi_endproc
 1491              	.LFE145:
 1493 002e 00BF     		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 1494              		.align	2
 1495              		.global	HAL_NVIC_SetPendingIRQ
 1496              		.thumb
 1497              		.thumb_func
 1499              	HAL_NVIC_SetPendingIRQ:
 1500              	.LFB146:
 396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1501              		.loc 3 405 0
 1502              		.cfi_startproc
ARM GAS  /tmp/ccADmsZq.s 			page 84


 1503              		@ args = 0, pretend = 0, frame = 8
 1504              		@ frame_needed = 1, uses_anonymous_args = 0
 1505 0000 80B5     		push	{r7, lr}
 1506              	.LCFI127:
 1507              		.cfi_def_cfa_offset 8
 1508              		.cfi_offset 7, -8
 1509              		.cfi_offset 14, -4
 1510 0002 82B0     		sub	sp, sp, #8
 1511              	.LCFI128:
 1512              		.cfi_def_cfa_offset 16
 1513 0004 00AF     		add	r7, sp, #0
 1514              	.LCFI129:
 1515              		.cfi_def_cfa_register 7
 1516 0006 0346     		mov	r3, r0
 1517 0008 FB71     		strb	r3, [r7, #7]
 406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Set interrupt pending */
 410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 1518              		.loc 3 410 0
 1519 000a 97F90730 		ldrsb	r3, [r7, #7]
 1520 000e 1846     		mov	r0, r3
 1521 0010 FFF7FEFF 		bl	NVIC_SetPendingIRQ
 411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1522              		.loc 3 411 0
 1523 0014 0837     		adds	r7, r7, #8
 1524              	.LCFI130:
 1525              		.cfi_def_cfa_offset 8
 1526 0016 BD46     		mov	sp, r7
 1527              	.LCFI131:
 1528              		.cfi_def_cfa_register 13
 1529              		@ sp needed
 1530 0018 80BD     		pop	{r7, pc}
 1531              		.cfi_endproc
 1532              	.LFE146:
 1534 001a 00BF     		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 1535              		.align	2
 1536              		.global	HAL_NVIC_GetPendingIRQ
 1537              		.thumb
 1538              		.thumb_func
 1540              	HAL_NVIC_GetPendingIRQ:
 1541              	.LFB147:
 412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Gets Pending Interrupt (reads the pending register in the NVIC 
 415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
 418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1542              		.loc 3 423 0
 1543              		.cfi_startproc
ARM GAS  /tmp/ccADmsZq.s 			page 85


 1544              		@ args = 0, pretend = 0, frame = 8
 1545              		@ frame_needed = 1, uses_anonymous_args = 0
 1546 0000 80B5     		push	{r7, lr}
 1547              	.LCFI132:
 1548              		.cfi_def_cfa_offset 8
 1549              		.cfi_offset 7, -8
 1550              		.cfi_offset 14, -4
 1551 0002 82B0     		sub	sp, sp, #8
 1552              	.LCFI133:
 1553              		.cfi_def_cfa_offset 16
 1554 0004 00AF     		add	r7, sp, #0
 1555              	.LCFI134:
 1556              		.cfi_def_cfa_register 7
 1557 0006 0346     		mov	r3, r0
 1558 0008 FB71     		strb	r3, [r7, #7]
 424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 1559              		.loc 3 428 0
 1560 000a 97F90730 		ldrsb	r3, [r7, #7]
 1561 000e 1846     		mov	r0, r3
 1562 0010 FFF7FEFF 		bl	NVIC_GetPendingIRQ
 1563 0014 0346     		mov	r3, r0
 429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1564              		.loc 3 429 0
 1565 0016 1846     		mov	r0, r3
 1566 0018 0837     		adds	r7, r7, #8
 1567              	.LCFI135:
 1568              		.cfi_def_cfa_offset 8
 1569 001a BD46     		mov	sp, r7
 1570              	.LCFI136:
 1571              		.cfi_def_cfa_register 13
 1572              		@ sp needed
 1573 001c 80BD     		pop	{r7, pc}
 1574              		.cfi_endproc
 1575              	.LFE147:
 1577 001e 00BF     		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 1578              		.align	2
 1579              		.global	HAL_NVIC_ClearPendingIRQ
 1580              		.thumb
 1581              		.thumb_func
 1583              	HAL_NVIC_ClearPendingIRQ:
 1584              	.LFB148:
 430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Clears the pending bit of an external interrupt.
 433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1585              		.loc 3 439 0
 1586              		.cfi_startproc
ARM GAS  /tmp/ccADmsZq.s 			page 86


 1587              		@ args = 0, pretend = 0, frame = 8
 1588              		@ frame_needed = 1, uses_anonymous_args = 0
 1589 0000 80B5     		push	{r7, lr}
 1590              	.LCFI137:
 1591              		.cfi_def_cfa_offset 8
 1592              		.cfi_offset 7, -8
 1593              		.cfi_offset 14, -4
 1594 0002 82B0     		sub	sp, sp, #8
 1595              	.LCFI138:
 1596              		.cfi_def_cfa_offset 16
 1597 0004 00AF     		add	r7, sp, #0
 1598              	.LCFI139:
 1599              		.cfi_def_cfa_register 7
 1600 0006 0346     		mov	r3, r0
 1601 0008 FB71     		strb	r3, [r7, #7]
 440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Clear pending interrupt */
 444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 1602              		.loc 3 444 0
 1603 000a 97F90730 		ldrsb	r3, [r7, #7]
 1604 000e 1846     		mov	r0, r3
 1605 0010 FFF7FEFF 		bl	NVIC_ClearPendingIRQ
 445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1606              		.loc 3 445 0
 1607 0014 0837     		adds	r7, r7, #8
 1608              	.LCFI140:
 1609              		.cfi_def_cfa_offset 8
 1610 0016 BD46     		mov	sp, r7
 1611              	.LCFI141:
 1612              		.cfi_def_cfa_register 13
 1613              		@ sp needed
 1614 0018 80BD     		pop	{r7, pc}
 1615              		.cfi_endproc
 1616              	.LFE148:
 1618 001a 00BF     		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 1619              		.align	2
 1620              		.global	HAL_NVIC_GetActive
 1621              		.thumb
 1622              		.thumb_func
 1624              	HAL_NVIC_GetActive:
 1625              	.LFB149:
 446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param IRQn External interrupt number
 450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1626              		.loc 3 456 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/ccADmsZq.s 			page 87


 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630 0000 80B5     		push	{r7, lr}
 1631              	.LCFI142:
 1632              		.cfi_def_cfa_offset 8
 1633              		.cfi_offset 7, -8
 1634              		.cfi_offset 14, -4
 1635 0002 82B0     		sub	sp, sp, #8
 1636              	.LCFI143:
 1637              		.cfi_def_cfa_offset 16
 1638 0004 00AF     		add	r7, sp, #0
 1639              	.LCFI144:
 1640              		.cfi_def_cfa_register 7
 1641 0006 0346     		mov	r3, r0
 1642 0008 FB71     		strb	r3, [r7, #7]
 457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   
 460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 1643              		.loc 3 461 0
 1644 000a 97F90730 		ldrsb	r3, [r7, #7]
 1645 000e 1846     		mov	r0, r3
 1646 0010 FFF7FEFF 		bl	NVIC_GetActive
 1647 0014 0346     		mov	r3, r0
 462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1648              		.loc 3 462 0
 1649 0016 1846     		mov	r0, r3
 1650 0018 0837     		adds	r7, r7, #8
 1651              	.LCFI145:
 1652              		.cfi_def_cfa_offset 8
 1653 001a BD46     		mov	sp, r7
 1654              	.LCFI146:
 1655              		.cfi_def_cfa_register 13
 1656              		@ sp needed
 1657 001c 80BD     		pop	{r7, pc}
 1658              		.cfi_endproc
 1659              	.LFE149:
 1661 001e 00BF     		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 1662              		.align	2
 1663              		.global	HAL_SYSTICK_CLKSourceConfig
 1664              		.thumb
 1665              		.thumb_func
 1667              	HAL_SYSTICK_CLKSourceConfig:
 1668              	.LFB150:
 463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1669              		.loc 3 473 0
 1670              		.cfi_startproc
ARM GAS  /tmp/ccADmsZq.s 			page 88


 1671              		@ args = 0, pretend = 0, frame = 8
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673              		@ link register save eliminated.
 1674 0000 80B4     		push	{r7}
 1675              	.LCFI147:
 1676              		.cfi_def_cfa_offset 4
 1677              		.cfi_offset 7, -4
 1678 0002 83B0     		sub	sp, sp, #12
 1679              	.LCFI148:
 1680              		.cfi_def_cfa_offset 16
 1681 0004 00AF     		add	r7, sp, #0
 1682              	.LCFI149:
 1683              		.cfi_def_cfa_register 7
 1684 0006 7860     		str	r0, [r7, #4]
 474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* Check the parameters */
 475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 1685              		.loc 3 476 0
 1686 0008 7B68     		ldr	r3, [r7, #4]
 1687 000a 042B     		cmp	r3, #4
 1688 000c 06D1     		bne	.L82
 477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 1689              		.loc 3 478 0
 1690 000e 094A     		ldr	r2, .L84
 1691 0010 084B     		ldr	r3, .L84
 1692 0012 1B68     		ldr	r3, [r3]
 1693 0014 43F00403 		orr	r3, r3, #4
 1694 0018 1360     		str	r3, [r2]
 1695 001a 05E0     		b	.L81
 1696              	.L82:
 479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   else
 481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   {
 482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 1697              		.loc 3 482 0
 1698 001c 054A     		ldr	r2, .L84
 1699 001e 054B     		ldr	r3, .L84
 1700 0020 1B68     		ldr	r3, [r3]
 1701 0022 23F00403 		bic	r3, r3, #4
 1702 0026 1360     		str	r3, [r2]
 1703              	.L81:
 483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   }
 484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1704              		.loc 3 484 0
 1705 0028 0C37     		adds	r7, r7, #12
 1706              	.LCFI150:
 1707              		.cfi_def_cfa_offset 4
 1708 002a BD46     		mov	sp, r7
 1709              	.LCFI151:
 1710              		.cfi_def_cfa_register 13
 1711              		@ sp needed
 1712 002c 5DF8047B 		ldr	r7, [sp], #4
 1713              	.LCFI152:
 1714              		.cfi_restore 7
 1715              		.cfi_def_cfa_offset 0
 1716 0030 7047     		bx	lr
ARM GAS  /tmp/ccADmsZq.s 			page 89


 1717              	.L85:
 1718 0032 00BF     		.align	2
 1719              	.L84:
 1720 0034 10E000E0 		.word	-536813552
 1721              		.cfi_endproc
 1722              	.LFE150:
 1724              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 1725              		.align	2
 1726              		.global	HAL_SYSTICK_IRQHandler
 1727              		.thumb
 1728              		.thumb_func
 1730              	HAL_SYSTICK_IRQHandler:
 1731              	.LFB151:
 485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1732              		.loc 3 491 0
 1733              		.cfi_startproc
 1734              		@ args = 0, pretend = 0, frame = 0
 1735              		@ frame_needed = 1, uses_anonymous_args = 0
 1736 0000 80B5     		push	{r7, lr}
 1737              	.LCFI153:
 1738              		.cfi_def_cfa_offset 8
 1739              		.cfi_offset 7, -8
 1740              		.cfi_offset 14, -4
 1741 0002 00AF     		add	r7, sp, #0
 1742              	.LCFI154:
 1743              		.cfi_def_cfa_register 7
 492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 1744              		.loc 3 492 0
 1745 0004 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1746              		.loc 3 493 0
 1747 0008 80BD     		pop	{r7, pc}
 1748              		.cfi_endproc
 1749              	.LFE151:
 1751 000a 00BF     		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 1752              		.align	2
 1753              		.weak	HAL_SYSTICK_Callback
 1754              		.thumb
 1755              		.thumb_func
 1757              	HAL_SYSTICK_Callback:
 1758              	.LFB152:
 494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** 
 495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** /**
 496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   * @retval None
 498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   */
 499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** {
 1759              		.loc 3 500 0
 1760              		.cfi_startproc
 1761              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccADmsZq.s 			page 90


 1762              		@ frame_needed = 1, uses_anonymous_args = 0
 1763              		@ link register save eliminated.
 1764 0000 80B4     		push	{r7}
 1765              	.LCFI155:
 1766              		.cfi_def_cfa_offset 4
 1767              		.cfi_offset 7, -4
 1768 0002 00AF     		add	r7, sp, #0
 1769              	.LCFI156:
 1770              		.cfi_def_cfa_register 7
 501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c ****    */
 504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_cortex.c **** }
 1771              		.loc 3 504 0
 1772 0004 BD46     		mov	sp, r7
 1773              	.LCFI157:
 1774              		.cfi_def_cfa_register 13
 1775              		@ sp needed
 1776 0006 5DF8047B 		ldr	r7, [sp], #4
 1777              	.LCFI158:
 1778              		.cfi_restore 7
 1779              		.cfi_def_cfa_offset 0
 1780 000a 7047     		bx	lr
 1781              		.cfi_endproc
 1782              	.LFE152:
 1784              		.text
 1785              	.Letext0:
 1786              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 1787              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1788              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1789              		.file 7 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1790              		.file 8 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_cortex.h"
ARM GAS  /tmp/ccADmsZq.s 			page 91


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_cortex.c
     /tmp/ccADmsZq.s:21     .text.NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccADmsZq.s:25     .text.NVIC_SetPriorityGrouping:0000000000000000 NVIC_SetPriorityGrouping
     /tmp/ccADmsZq.s:87     .text.NVIC_SetPriorityGrouping:0000000000000040 $d
     /tmp/ccADmsZq.s:93     .text.NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccADmsZq.s:97     .text.NVIC_GetPriorityGrouping:0000000000000000 NVIC_GetPriorityGrouping
     /tmp/ccADmsZq.s:130    .text.NVIC_GetPriorityGrouping:0000000000000018 $d
     /tmp/ccADmsZq.s:135    .text.NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:139    .text.NVIC_EnableIRQ:0000000000000000 NVIC_EnableIRQ
     /tmp/ccADmsZq.s:183    .text.NVIC_EnableIRQ:000000000000002c $d
     /tmp/ccADmsZq.s:188    .text.NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:192    .text.NVIC_DisableIRQ:0000000000000000 NVIC_DisableIRQ
     /tmp/ccADmsZq.s:237    .text.NVIC_DisableIRQ:0000000000000030 $d
     /tmp/ccADmsZq.s:242    .text.NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:246    .text.NVIC_GetPendingIRQ:0000000000000000 NVIC_GetPendingIRQ
     /tmp/ccADmsZq.s:292    .text.NVIC_GetPendingIRQ:0000000000000034 $d
     /tmp/ccADmsZq.s:297    .text.NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:301    .text.NVIC_SetPendingIRQ:0000000000000000 NVIC_SetPendingIRQ
     /tmp/ccADmsZq.s:346    .text.NVIC_SetPendingIRQ:0000000000000030 $d
     /tmp/ccADmsZq.s:351    .text.NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:355    .text.NVIC_ClearPendingIRQ:0000000000000000 NVIC_ClearPendingIRQ
     /tmp/ccADmsZq.s:400    .text.NVIC_ClearPendingIRQ:0000000000000030 $d
     /tmp/ccADmsZq.s:405    .text.NVIC_GetActive:0000000000000000 $t
     /tmp/ccADmsZq.s:409    .text.NVIC_GetActive:0000000000000000 NVIC_GetActive
     /tmp/ccADmsZq.s:455    .text.NVIC_GetActive:0000000000000034 $d
     /tmp/ccADmsZq.s:460    .text.NVIC_SetPriority:0000000000000000 $t
     /tmp/ccADmsZq.s:464    .text.NVIC_SetPriority:0000000000000000 NVIC_SetPriority
     /tmp/ccADmsZq.s:527    .text.NVIC_SetPriority:000000000000004c $d
     /tmp/ccADmsZq.s:533    .text.NVIC_GetPriority:0000000000000000 $t
     /tmp/ccADmsZq.s:537    .text.NVIC_GetPriority:0000000000000000 NVIC_GetPriority
     /tmp/ccADmsZq.s:598    .text.NVIC_GetPriority:0000000000000048 $d
     /tmp/ccADmsZq.s:604    .text.NVIC_EncodePriority:0000000000000000 $t
     /tmp/ccADmsZq.s:608    .text.NVIC_EncodePriority:0000000000000000 NVIC_EncodePriority
     /tmp/ccADmsZq.s:690    .text.NVIC_DecodePriority:0000000000000000 $t
     /tmp/ccADmsZq.s:694    .text.NVIC_DecodePriority:0000000000000000 NVIC_DecodePriority
     /tmp/ccADmsZq.s:778    .text.NVIC_SystemReset:0000000000000000 $t
     /tmp/ccADmsZq.s:782    .text.NVIC_SystemReset:0000000000000000 NVIC_SystemReset
     /tmp/ccADmsZq.s:840    .text.NVIC_SystemReset:0000000000000020 $d
     /tmp/ccADmsZq.s:846    .text.SysTick_Config:0000000000000000 $t
     /tmp/ccADmsZq.s:850    .text.SysTick_Config:0000000000000000 SysTick_Config
     /tmp/ccADmsZq.s:910    .text.SysTick_Config:0000000000000040 $d
     /tmp/ccADmsZq.s:915    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
     /tmp/ccADmsZq.s:920    .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
     /tmp/ccADmsZq.s:955    .text.HAL_NVIC_SetPriority:0000000000000000 $t
     /tmp/ccADmsZq.s:960    .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
     /tmp/ccADmsZq.s:1010   .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:1015   .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
     /tmp/ccADmsZq.s:1051   .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:1056   .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
     /tmp/ccADmsZq.s:1092   .text.HAL_NVIC_SystemReset:0000000000000000 $t
     /tmp/ccADmsZq.s:1097   .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
     /tmp/ccADmsZq.s:1119   .text.HAL_SYSTICK_Config:0000000000000000 $t
     /tmp/ccADmsZq.s:1124   .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
     /tmp/ccADmsZq.s:1160   .text.HAL_MPU_Disable:0000000000000000 $t
     /tmp/ccADmsZq.s:1165   .text.HAL_MPU_Disable:0000000000000000 HAL_MPU_Disable
     /tmp/ccADmsZq.s:1211   .text.HAL_MPU_Disable:0000000000000024 $d
ARM GAS  /tmp/ccADmsZq.s 			page 92


     /tmp/ccADmsZq.s:1217   .text.HAL_MPU_Enable:0000000000000000 $t
     /tmp/ccADmsZq.s:1222   .text.HAL_MPU_Enable:0000000000000000 HAL_MPU_Enable
     /tmp/ccADmsZq.s:1285   .text.HAL_MPU_Enable:0000000000000030 $d
     /tmp/ccADmsZq.s:1291   .text.HAL_MPU_ConfigRegion:0000000000000000 $t
     /tmp/ccADmsZq.s:1296   .text.HAL_MPU_ConfigRegion:0000000000000000 HAL_MPU_ConfigRegion
     /tmp/ccADmsZq.s:1410   .text.HAL_MPU_ConfigRegion:0000000000000080 $d
     /tmp/ccADmsZq.s:1415   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
     /tmp/ccADmsZq.s:1420   .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
     /tmp/ccADmsZq.s:1444   .text.HAL_NVIC_GetPriority:0000000000000000 $t
     /tmp/ccADmsZq.s:1449   .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
     /tmp/ccADmsZq.s:1494   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:1499   .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
     /tmp/ccADmsZq.s:1535   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:1540   .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
     /tmp/ccADmsZq.s:1578   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
     /tmp/ccADmsZq.s:1583   .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
     /tmp/ccADmsZq.s:1619   .text.HAL_NVIC_GetActive:0000000000000000 $t
     /tmp/ccADmsZq.s:1624   .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
     /tmp/ccADmsZq.s:1662   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
     /tmp/ccADmsZq.s:1667   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
     /tmp/ccADmsZq.s:1720   .text.HAL_SYSTICK_CLKSourceConfig:0000000000000034 $d
     /tmp/ccADmsZq.s:1725   .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
     /tmp/ccADmsZq.s:1730   .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
     /tmp/ccADmsZq.s:1757   .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
     /tmp/ccADmsZq.s:1752   .text.HAL_SYSTICK_Callback:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
