ARM GAS  /tmp/ccTRYnLd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"lcd_log.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	LCD_CacheBuffer,15444,4
  21              		.comm	LCD_LineColor,4,4
  22              		.comm	LCD_CacheBuffer_xptr,2,2
  23              		.comm	LCD_CacheBuffer_yptr_top,2,2
  24              		.comm	LCD_CacheBuffer_yptr_bottom,2,2
  25              		.comm	LCD_CacheBuffer_yptr_top_bak,2,2
  26              		.comm	LCD_CacheBuffer_yptr_bottom_bak,2,2
  27              		.comm	LCD_CacheBuffer_yptr_invert,1,1
  28              		.comm	LCD_ScrollActive,1,1
  29              		.comm	LCD_Lock,1,1
  30              		.comm	LCD_Scrolled,1,1
  31              		.comm	LCD_ScrollBackStep,2,2
  32              		.section	.text.LCD_LOG_Init,"ax",%progbits
  33              		.align	2
  34              		.global	LCD_LOG_Init
  35              		.thumb
  36              		.thumb_func
  38              	LCD_LOG_Init:
  39              	.LFB135:
  40              		.file 1 "../../Utilities/Log/lcd_log.c"
   1:../../Utilities/Log/lcd_log.c **** /**
   2:../../Utilities/Log/lcd_log.c ****   ******************************************************************************
   3:../../Utilities/Log/lcd_log.c ****   * @file    lcd_log.c
   4:../../Utilities/Log/lcd_log.c ****   * @author  MCD Application Team
   5:../../Utilities/Log/lcd_log.c ****   * @version V1.0.0
   6:../../Utilities/Log/lcd_log.c ****   * @date    18-February-2014
   7:../../Utilities/Log/lcd_log.c ****   * @brief   This file provides all the LCD Log firmware functions.
   8:../../Utilities/Log/lcd_log.c ****   *          
   9:../../Utilities/Log/lcd_log.c ****   *          The LCD Log module allows to automatically set a header and footer
  10:../../Utilities/Log/lcd_log.c ****   *          on any application using the LCD display and allows to dump user,
  11:../../Utilities/Log/lcd_log.c ****   *          debug and error messages by using the following macros: LCD_ErrLog(),
  12:../../Utilities/Log/lcd_log.c ****   *          LCD_UsrLog() and LCD_DbgLog().
  13:../../Utilities/Log/lcd_log.c ****   *         
  14:../../Utilities/Log/lcd_log.c ****   *          It supports also the scroll feature by embedding an internal software
  15:../../Utilities/Log/lcd_log.c ****   *          cache for display. This feature allows to dump message sequentially
  16:../../Utilities/Log/lcd_log.c ****   *          on the display even if the number of displayed lines is bigger than
  17:../../Utilities/Log/lcd_log.c ****   *          the total number of line allowed by the display.
  18:../../Utilities/Log/lcd_log.c ****   *      
ARM GAS  /tmp/ccTRYnLd.s 			page 2


  19:../../Utilities/Log/lcd_log.c ****   ******************************************************************************
  20:../../Utilities/Log/lcd_log.c ****   * @attention
  21:../../Utilities/Log/lcd_log.c ****   *
  22:../../Utilities/Log/lcd_log.c ****   * <h2><center>&copy; COPYRIGHT(c) 2014 STMicroelectronics</center></h2>
  23:../../Utilities/Log/lcd_log.c ****   *
  24:../../Utilities/Log/lcd_log.c ****   * Redistribution and use in source and binary forms, with or without modification,
  25:../../Utilities/Log/lcd_log.c ****   * are permitted provided that the following conditions are met:
  26:../../Utilities/Log/lcd_log.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  27:../../Utilities/Log/lcd_log.c ****   *      this list of conditions and the following disclaimer.
  28:../../Utilities/Log/lcd_log.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  29:../../Utilities/Log/lcd_log.c ****   *      this list of conditions and the following disclaimer in the documentation
  30:../../Utilities/Log/lcd_log.c ****   *      and/or other materials provided with the distribution.
  31:../../Utilities/Log/lcd_log.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:../../Utilities/Log/lcd_log.c ****   *      may be used to endorse or promote products derived from this software
  33:../../Utilities/Log/lcd_log.c ****   *      without specific prior written permission.
  34:../../Utilities/Log/lcd_log.c ****   *
  35:../../Utilities/Log/lcd_log.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:../../Utilities/Log/lcd_log.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:../../Utilities/Log/lcd_log.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:../../Utilities/Log/lcd_log.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:../../Utilities/Log/lcd_log.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:../../Utilities/Log/lcd_log.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:../../Utilities/Log/lcd_log.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:../../Utilities/Log/lcd_log.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:../../Utilities/Log/lcd_log.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:../../Utilities/Log/lcd_log.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:../../Utilities/Log/lcd_log.c ****   *
  46:../../Utilities/Log/lcd_log.c ****   ******************************************************************************
  47:../../Utilities/Log/lcd_log.c ****   */
  48:../../Utilities/Log/lcd_log.c **** 
  49:../../Utilities/Log/lcd_log.c **** /* Includes ------------------------------------------------------------------*/
  50:../../Utilities/Log/lcd_log.c **** #include  <stdio.h>
  51:../../Utilities/Log/lcd_log.c **** #include  "lcd_log.h"
  52:../../Utilities/Log/lcd_log.c **** 
  53:../../Utilities/Log/lcd_log.c **** /** @addtogroup Utilities
  54:../../Utilities/Log/lcd_log.c ****   * @{
  55:../../Utilities/Log/lcd_log.c ****   */
  56:../../Utilities/Log/lcd_log.c **** 
  57:../../Utilities/Log/lcd_log.c **** /** @addtogroup STM32_EVAL
  58:../../Utilities/Log/lcd_log.c **** * @{
  59:../../Utilities/Log/lcd_log.c **** */
  60:../../Utilities/Log/lcd_log.c **** 
  61:../../Utilities/Log/lcd_log.c **** /** @addtogroup Common
  62:../../Utilities/Log/lcd_log.c ****   * @{
  63:../../Utilities/Log/lcd_log.c ****   */
  64:../../Utilities/Log/lcd_log.c **** 
  65:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG 
  66:../../Utilities/Log/lcd_log.c **** * @brief LCD Log LCD_Application module
  67:../../Utilities/Log/lcd_log.c **** * @{
  68:../../Utilities/Log/lcd_log.c **** */ 
  69:../../Utilities/Log/lcd_log.c **** 
  70:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG_Private_Types
  71:../../Utilities/Log/lcd_log.c **** * @{
  72:../../Utilities/Log/lcd_log.c **** */ 
  73:../../Utilities/Log/lcd_log.c **** /**
  74:../../Utilities/Log/lcd_log.c **** * @}
  75:../../Utilities/Log/lcd_log.c **** */ 
ARM GAS  /tmp/ccTRYnLd.s 			page 3


  76:../../Utilities/Log/lcd_log.c **** 
  77:../../Utilities/Log/lcd_log.c **** 
  78:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG_Private_Defines
  79:../../Utilities/Log/lcd_log.c **** * @{
  80:../../Utilities/Log/lcd_log.c **** */ 
  81:../../Utilities/Log/lcd_log.c **** 
  82:../../Utilities/Log/lcd_log.c **** /**
  83:../../Utilities/Log/lcd_log.c **** * @}
  84:../../Utilities/Log/lcd_log.c **** */ 
  85:../../Utilities/Log/lcd_log.c **** 
  86:../../Utilities/Log/lcd_log.c **** /* Define the display window settings */
  87:../../Utilities/Log/lcd_log.c **** #define     YWINDOW_MIN         4
  88:../../Utilities/Log/lcd_log.c **** 
  89:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG_Private_Macros
  90:../../Utilities/Log/lcd_log.c **** * @{
  91:../../Utilities/Log/lcd_log.c **** */ 
  92:../../Utilities/Log/lcd_log.c **** /**
  93:../../Utilities/Log/lcd_log.c **** * @}
  94:../../Utilities/Log/lcd_log.c **** */ 
  95:../../Utilities/Log/lcd_log.c **** 
  96:../../Utilities/Log/lcd_log.c **** 
  97:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG_Private_Variables
  98:../../Utilities/Log/lcd_log.c **** * @{
  99:../../Utilities/Log/lcd_log.c **** */ 
 100:../../Utilities/Log/lcd_log.c **** 
 101:../../Utilities/Log/lcd_log.c **** LCD_LOG_line LCD_CacheBuffer [LCD_CACHE_DEPTH]; 
 102:../../Utilities/Log/lcd_log.c **** uint32_t LCD_LineColor;
 103:../../Utilities/Log/lcd_log.c **** uint16_t LCD_CacheBuffer_xptr;
 104:../../Utilities/Log/lcd_log.c **** uint16_t LCD_CacheBuffer_yptr_top;
 105:../../Utilities/Log/lcd_log.c **** uint16_t LCD_CacheBuffer_yptr_bottom;
 106:../../Utilities/Log/lcd_log.c **** 
 107:../../Utilities/Log/lcd_log.c **** uint16_t LCD_CacheBuffer_yptr_top_bak;
 108:../../Utilities/Log/lcd_log.c **** uint16_t LCD_CacheBuffer_yptr_bottom_bak;
 109:../../Utilities/Log/lcd_log.c **** 
 110:../../Utilities/Log/lcd_log.c **** FunctionalState LCD_CacheBuffer_yptr_invert;
 111:../../Utilities/Log/lcd_log.c **** FunctionalState LCD_ScrollActive;
 112:../../Utilities/Log/lcd_log.c **** FunctionalState LCD_Lock;
 113:../../Utilities/Log/lcd_log.c **** FunctionalState LCD_Scrolled;
 114:../../Utilities/Log/lcd_log.c **** uint16_t LCD_ScrollBackStep;
 115:../../Utilities/Log/lcd_log.c **** 
 116:../../Utilities/Log/lcd_log.c **** /**
 117:../../Utilities/Log/lcd_log.c **** * @}
 118:../../Utilities/Log/lcd_log.c **** */ 
 119:../../Utilities/Log/lcd_log.c **** 
 120:../../Utilities/Log/lcd_log.c **** 
 121:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG_Private_FunctionPrototypes
 122:../../Utilities/Log/lcd_log.c **** * @{
 123:../../Utilities/Log/lcd_log.c **** */ 
 124:../../Utilities/Log/lcd_log.c **** 
 125:../../Utilities/Log/lcd_log.c **** /**
 126:../../Utilities/Log/lcd_log.c **** * @}
 127:../../Utilities/Log/lcd_log.c **** */ 
 128:../../Utilities/Log/lcd_log.c **** 
 129:../../Utilities/Log/lcd_log.c **** 
 130:../../Utilities/Log/lcd_log.c **** /** @defgroup LCD_LOG_Private_Functions
 131:../../Utilities/Log/lcd_log.c **** * @{
 132:../../Utilities/Log/lcd_log.c **** */ 
ARM GAS  /tmp/ccTRYnLd.s 			page 4


 133:../../Utilities/Log/lcd_log.c **** 
 134:../../Utilities/Log/lcd_log.c **** 
 135:../../Utilities/Log/lcd_log.c **** /**
 136:../../Utilities/Log/lcd_log.c ****   * @brief  Initializes the LCD Log module 
 137:../../Utilities/Log/lcd_log.c ****   * @param  None
 138:../../Utilities/Log/lcd_log.c ****   * @retval None
 139:../../Utilities/Log/lcd_log.c ****   */
 140:../../Utilities/Log/lcd_log.c **** 
 141:../../Utilities/Log/lcd_log.c **** void LCD_LOG_Init ( void)
 142:../../Utilities/Log/lcd_log.c **** {
  41              		.loc 1 142 0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 0
  44              		@ frame_needed = 1, uses_anonymous_args = 0
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
 143:../../Utilities/Log/lcd_log.c ****   /* Deinit LCD cache */
 144:../../Utilities/Log/lcd_log.c ****   LCD_LOG_DeInit();
  53              		.loc 1 144 0
  54 0004 FFF7FEFF 		bl	LCD_LOG_DeInit
 145:../../Utilities/Log/lcd_log.c ****   
 146:../../Utilities/Log/lcd_log.c ****   /* Clear the LCD */
 147:../../Utilities/Log/lcd_log.c ****   BSP_LCD_Clear(LCD_LOG_BACKGROUND_COLOR);  
  55              		.loc 1 147 0
  56 0008 4FF0FF30 		mov	r0, #-1
  57 000c FFF7FEFF 		bl	BSP_LCD_Clear
 148:../../Utilities/Log/lcd_log.c **** }
  58              		.loc 1 148 0
  59 0010 80BD     		pop	{r7, pc}
  60              		.cfi_endproc
  61              	.LFE135:
  63 0012 00BF     		.section	.text.LCD_LOG_DeInit,"ax",%progbits
  64              		.align	2
  65              		.global	LCD_LOG_DeInit
  66              		.thumb
  67              		.thumb_func
  69              	LCD_LOG_DeInit:
  70              	.LFB136:
 149:../../Utilities/Log/lcd_log.c **** 
 150:../../Utilities/Log/lcd_log.c **** /**
 151:../../Utilities/Log/lcd_log.c ****   * @brief DeInitializes the LCD Log module. 
 152:../../Utilities/Log/lcd_log.c ****   * @param  None
 153:../../Utilities/Log/lcd_log.c ****   * @retval None
 154:../../Utilities/Log/lcd_log.c ****   */
 155:../../Utilities/Log/lcd_log.c **** void LCD_LOG_DeInit(void)
 156:../../Utilities/Log/lcd_log.c **** {
  71              		.loc 1 156 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75              		@ link register save eliminated.
ARM GAS  /tmp/ccTRYnLd.s 			page 5


  76 0000 80B4     		push	{r7}
  77              	.LCFI2:
  78              		.cfi_def_cfa_offset 4
  79              		.cfi_offset 7, -4
  80 0002 00AF     		add	r7, sp, #0
  81              	.LCFI3:
  82              		.cfi_def_cfa_register 7
 157:../../Utilities/Log/lcd_log.c ****   LCD_LineColor = LCD_LOG_TEXT_COLOR;
  83              		.loc 1 157 0
  84 0004 124B     		ldr	r3, .L3
  85 0006 134A     		ldr	r2, .L3+4
  86 0008 1A60     		str	r2, [r3]
 158:../../Utilities/Log/lcd_log.c ****   LCD_CacheBuffer_xptr = 0;
  87              		.loc 1 158 0
  88 000a 134B     		ldr	r3, .L3+8
  89 000c 0022     		movs	r2, #0
  90 000e 1A80     		strh	r2, [r3]	@ movhi
 159:../../Utilities/Log/lcd_log.c ****   LCD_CacheBuffer_yptr_top = 0;
  91              		.loc 1 159 0
  92 0010 124B     		ldr	r3, .L3+12
  93 0012 0022     		movs	r2, #0
  94 0014 1A80     		strh	r2, [r3]	@ movhi
 160:../../Utilities/Log/lcd_log.c ****   LCD_CacheBuffer_yptr_bottom = 0;
  95              		.loc 1 160 0
  96 0016 124B     		ldr	r3, .L3+16
  97 0018 0022     		movs	r2, #0
  98 001a 1A80     		strh	r2, [r3]	@ movhi
 161:../../Utilities/Log/lcd_log.c ****   
 162:../../Utilities/Log/lcd_log.c ****   LCD_CacheBuffer_yptr_top_bak = 0;
  99              		.loc 1 162 0
 100 001c 114B     		ldr	r3, .L3+20
 101 001e 0022     		movs	r2, #0
 102 0020 1A80     		strh	r2, [r3]	@ movhi
 163:../../Utilities/Log/lcd_log.c ****   LCD_CacheBuffer_yptr_bottom_bak = 0;
 103              		.loc 1 163 0
 104 0022 114B     		ldr	r3, .L3+24
 105 0024 0022     		movs	r2, #0
 106 0026 1A80     		strh	r2, [r3]	@ movhi
 164:../../Utilities/Log/lcd_log.c ****   
 165:../../Utilities/Log/lcd_log.c ****   LCD_CacheBuffer_yptr_invert= ENABLE;
 107              		.loc 1 165 0
 108 0028 104B     		ldr	r3, .L3+28
 109 002a 0122     		movs	r2, #1
 110 002c 1A70     		strb	r2, [r3]
 166:../../Utilities/Log/lcd_log.c ****   LCD_ScrollActive = DISABLE;
 111              		.loc 1 166 0
 112 002e 104B     		ldr	r3, .L3+32
 113 0030 0022     		movs	r2, #0
 114 0032 1A70     		strb	r2, [r3]
 167:../../Utilities/Log/lcd_log.c ****   LCD_Lock = DISABLE;
 115              		.loc 1 167 0
 116 0034 0F4B     		ldr	r3, .L3+36
 117 0036 0022     		movs	r2, #0
 118 0038 1A70     		strb	r2, [r3]
 168:../../Utilities/Log/lcd_log.c ****   LCD_Scrolled = DISABLE;
 119              		.loc 1 168 0
 120 003a 0F4B     		ldr	r3, .L3+40
ARM GAS  /tmp/ccTRYnLd.s 			page 6


 121 003c 0022     		movs	r2, #0
 122 003e 1A70     		strb	r2, [r3]
 169:../../Utilities/Log/lcd_log.c ****   LCD_ScrollBackStep = 0;
 123              		.loc 1 169 0
 124 0040 0E4B     		ldr	r3, .L3+44
 125 0042 0022     		movs	r2, #0
 126 0044 1A80     		strh	r2, [r3]	@ movhi
 170:../../Utilities/Log/lcd_log.c **** }
 127              		.loc 1 170 0
 128 0046 BD46     		mov	sp, r7
 129              	.LCFI4:
 130              		.cfi_def_cfa_register 13
 131              		@ sp needed
 132 0048 5DF8047B 		ldr	r7, [sp], #4
 133              	.LCFI5:
 134              		.cfi_restore 7
 135              		.cfi_def_cfa_offset 0
 136 004c 7047     		bx	lr
 137              	.L4:
 138 004e 00BF     		.align	2
 139              	.L3:
 140 0050 00000000 		.word	LCD_LineColor
 141 0054 800000FF 		.word	-16777088
 142 0058 00000000 		.word	LCD_CacheBuffer_xptr
 143 005c 00000000 		.word	LCD_CacheBuffer_yptr_top
 144 0060 00000000 		.word	LCD_CacheBuffer_yptr_bottom
 145 0064 00000000 		.word	LCD_CacheBuffer_yptr_top_bak
 146 0068 00000000 		.word	LCD_CacheBuffer_yptr_bottom_bak
 147 006c 00000000 		.word	LCD_CacheBuffer_yptr_invert
 148 0070 00000000 		.word	LCD_ScrollActive
 149 0074 00000000 		.word	LCD_Lock
 150 0078 00000000 		.word	LCD_Scrolled
 151 007c 00000000 		.word	LCD_ScrollBackStep
 152              		.cfi_endproc
 153              	.LFE136:
 155              		.section	.text.LCD_LOG_SetHeader,"ax",%progbits
 156              		.align	2
 157              		.global	LCD_LOG_SetHeader
 158              		.thumb
 159              		.thumb_func
 161              	LCD_LOG_SetHeader:
 162              	.LFB137:
 171:../../Utilities/Log/lcd_log.c **** 
 172:../../Utilities/Log/lcd_log.c **** /**
 173:../../Utilities/Log/lcd_log.c ****   * @brief  Display the application header on the LCD screen 
 174:../../Utilities/Log/lcd_log.c ****   * @param  header: pointer to the string to be displayed
 175:../../Utilities/Log/lcd_log.c ****   * @retval None
 176:../../Utilities/Log/lcd_log.c ****   */
 177:../../Utilities/Log/lcd_log.c **** void LCD_LOG_SetHeader (uint8_t *header)
 178:../../Utilities/Log/lcd_log.c **** {
 163              		.loc 1 178 0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 8
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              	.LCFI6:
 169              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccTRYnLd.s 			page 7


 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 82B0     		sub	sp, sp, #8
 173              	.LCFI7:
 174              		.cfi_def_cfa_offset 16
 175 0004 00AF     		add	r7, sp, #0
 176              	.LCFI8:
 177              		.cfi_def_cfa_register 7
 178 0006 7860     		str	r0, [r7, #4]
 179:../../Utilities/Log/lcd_log.c ****   /* Set the LCD Font */
 180:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetFont (&LCD_LOG_HEADER_FONT);
 179              		.loc 1 180 0
 180 0008 1748     		ldr	r0, .L6
 181 000a FFF7FEFF 		bl	BSP_LCD_SetFont
 181:../../Utilities/Log/lcd_log.c **** 
 182:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetTextColor(LCD_LOG_SOLID_BACKGROUND_COLOR);
 182              		.loc 1 182 0
 183 000e 1748     		ldr	r0, .L6+4
 184 0010 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 183:../../Utilities/Log/lcd_log.c ****   BSP_LCD_FillRect(0, 0, BSP_LCD_GetXSize(), LCD_LOG_HEADER_FONT.Height * 3);
 185              		.loc 1 183 0
 186 0014 FFF7FEFF 		bl	BSP_LCD_GetXSize
 187 0018 0346     		mov	r3, r0
 188 001a 9AB2     		uxth	r2, r3
 189 001c 124B     		ldr	r3, .L6
 190 001e DB88     		ldrh	r3, [r3, #6]
 191 0020 1946     		mov	r1, r3	@ movhi
 192 0022 4900     		lsls	r1, r1, #1
 193 0024 0B44     		add	r3, r3, r1
 194 0026 9BB2     		uxth	r3, r3
 195 0028 0020     		movs	r0, #0
 196 002a 0021     		movs	r1, #0
 197 002c FFF7FEFF 		bl	BSP_LCD_FillRect
 184:../../Utilities/Log/lcd_log.c ****   
 185:../../Utilities/Log/lcd_log.c ****   /* Set the LCD Text Color */
 186:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetTextColor(LCD_LOG_SOLID_TEXT_COLOR);
 198              		.loc 1 186 0
 199 0030 4FF0FF30 		mov	r0, #-1
 200 0034 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 187:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetBackColor(LCD_LOG_SOLID_BACKGROUND_COLOR);
 201              		.loc 1 187 0
 202 0038 0C48     		ldr	r0, .L6+4
 203 003a FFF7FEFF 		bl	BSP_LCD_SetBackColor
 188:../../Utilities/Log/lcd_log.c **** 
 189:../../Utilities/Log/lcd_log.c ****   BSP_LCD_DisplayStringAt(0, LCD_LOG_HEADER_FONT.Height, header, CENTER_MODE);
 204              		.loc 1 189 0
 205 003e 0A4B     		ldr	r3, .L6
 206 0040 DB88     		ldrh	r3, [r3, #6]
 207 0042 0020     		movs	r0, #0
 208 0044 1946     		mov	r1, r3
 209 0046 7A68     		ldr	r2, [r7, #4]
 210 0048 0123     		movs	r3, #1
 211 004a FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 190:../../Utilities/Log/lcd_log.c **** 
 191:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetBackColor(LCD_LOG_BACKGROUND_COLOR);
 212              		.loc 1 191 0
 213 004e 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/ccTRYnLd.s 			page 8


 214 0052 FFF7FEFF 		bl	BSP_LCD_SetBackColor
 192:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetTextColor(LCD_LOG_TEXT_COLOR);
 215              		.loc 1 192 0
 216 0056 0648     		ldr	r0, .L6+8
 217 0058 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 193:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetFont (&LCD_LOG_TEXT_FONT);
 218              		.loc 1 193 0
 219 005c 0548     		ldr	r0, .L6+12
 220 005e FFF7FEFF 		bl	BSP_LCD_SetFont
 194:../../Utilities/Log/lcd_log.c **** }
 221              		.loc 1 194 0
 222 0062 0837     		adds	r7, r7, #8
 223              	.LCFI9:
 224              		.cfi_def_cfa_offset 8
 225 0064 BD46     		mov	sp, r7
 226              	.LCFI10:
 227              		.cfi_def_cfa_register 13
 228              		@ sp needed
 229 0066 80BD     		pop	{r7, pc}
 230              	.L7:
 231              		.align	2
 232              	.L6:
 233 0068 00000000 		.word	Font16
 234 006c FF0000FF 		.word	-16776961
 235 0070 800000FF 		.word	-16777088
 236 0074 00000000 		.word	Font12
 237              		.cfi_endproc
 238              	.LFE137:
 240              		.section	.text.LCD_LOG_SetFooter,"ax",%progbits
 241              		.align	2
 242              		.global	LCD_LOG_SetFooter
 243              		.thumb
 244              		.thumb_func
 246              	LCD_LOG_SetFooter:
 247              	.LFB138:
 195:../../Utilities/Log/lcd_log.c **** 
 196:../../Utilities/Log/lcd_log.c **** /**
 197:../../Utilities/Log/lcd_log.c ****   * @brief  Display the application footer on the LCD screen 
 198:../../Utilities/Log/lcd_log.c ****   * @param  footer: pointer to the string to be displayed
 199:../../Utilities/Log/lcd_log.c ****   * @retval None
 200:../../Utilities/Log/lcd_log.c ****   */
 201:../../Utilities/Log/lcd_log.c **** void LCD_LOG_SetFooter(uint8_t *footer)
 202:../../Utilities/Log/lcd_log.c **** {
 248              		.loc 1 202 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 8
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 90B5     		push	{r4, r7, lr}
 253              	.LCFI11:
 254              		.cfi_def_cfa_offset 12
 255              		.cfi_offset 4, -12
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 83B0     		sub	sp, sp, #12
 259              	.LCFI12:
 260              		.cfi_def_cfa_offset 24
 261 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccTRYnLd.s 			page 9


 262              	.LCFI13:
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 203:../../Utilities/Log/lcd_log.c ****   /* Set the LCD Font */
 204:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetFont (&LCD_LOG_FOOTER_FONT);
 265              		.loc 1 204 0
 266 0008 1E48     		ldr	r0, .L9
 267 000a FFF7FEFF 		bl	BSP_LCD_SetFont
 205:../../Utilities/Log/lcd_log.c **** 
 206:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetTextColor(LCD_LOG_SOLID_BACKGROUND_COLOR);
 268              		.loc 1 206 0
 269 000e 1E48     		ldr	r0, .L9+4
 270 0010 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 207:../../Utilities/Log/lcd_log.c ****   BSP_LCD_FillRect(0, BSP_LCD_GetYSize() - LCD_LOG_FOOTER_FONT.Height - 4, BSP_LCD_GetXSize(), LCD_
 271              		.loc 1 207 0
 272 0014 FFF7FEFF 		bl	BSP_LCD_GetYSize
 273 0018 0346     		mov	r3, r0
 274 001a 9AB2     		uxth	r2, r3
 275 001c 194B     		ldr	r3, .L9
 276 001e DB88     		ldrh	r3, [r3, #6]
 277 0020 D31A     		subs	r3, r2, r3
 278 0022 9BB2     		uxth	r3, r3
 279 0024 043B     		subs	r3, r3, #4
 280 0026 9CB2     		uxth	r4, r3
 281 0028 FFF7FEFF 		bl	BSP_LCD_GetXSize
 282 002c 0346     		mov	r3, r0
 283 002e 9AB2     		uxth	r2, r3
 284 0030 144B     		ldr	r3, .L9
 285 0032 DB88     		ldrh	r3, [r3, #6]
 286 0034 0433     		adds	r3, r3, #4
 287 0036 9BB2     		uxth	r3, r3
 288 0038 0020     		movs	r0, #0
 289 003a 2146     		mov	r1, r4
 290 003c FFF7FEFF 		bl	BSP_LCD_FillRect
 208:../../Utilities/Log/lcd_log.c ****   
 209:../../Utilities/Log/lcd_log.c ****   /* Set the LCD Text Color */
 210:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetTextColor(LCD_LOG_SOLID_TEXT_COLOR);
 291              		.loc 1 210 0
 292 0040 4FF0FF30 		mov	r0, #-1
 293 0044 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 211:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetBackColor(LCD_LOG_SOLID_BACKGROUND_COLOR);
 294              		.loc 1 211 0
 295 0048 0F48     		ldr	r0, .L9+4
 296 004a FFF7FEFF 		bl	BSP_LCD_SetBackColor
 212:../../Utilities/Log/lcd_log.c **** 
 213:../../Utilities/Log/lcd_log.c ****   BSP_LCD_DisplayStringAt(0, BSP_LCD_GetYSize() - LCD_LOG_FOOTER_FONT.Height, footer, CENTER_MODE);
 297              		.loc 1 213 0
 298 004e FFF7FEFF 		bl	BSP_LCD_GetYSize
 299 0052 0346     		mov	r3, r0
 300 0054 9AB2     		uxth	r2, r3
 301 0056 0B4B     		ldr	r3, .L9
 302 0058 DB88     		ldrh	r3, [r3, #6]
 303 005a D31A     		subs	r3, r2, r3
 304 005c 9BB2     		uxth	r3, r3
 305 005e 0020     		movs	r0, #0
 306 0060 1946     		mov	r1, r3
 307 0062 7A68     		ldr	r2, [r7, #4]
ARM GAS  /tmp/ccTRYnLd.s 			page 10


 308 0064 0123     		movs	r3, #1
 309 0066 FFF7FEFF 		bl	BSP_LCD_DisplayStringAt
 214:../../Utilities/Log/lcd_log.c **** 
 215:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetBackColor(LCD_LOG_BACKGROUND_COLOR);
 310              		.loc 1 215 0
 311 006a 4FF0FF30 		mov	r0, #-1
 312 006e FFF7FEFF 		bl	BSP_LCD_SetBackColor
 216:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetTextColor(LCD_LOG_TEXT_COLOR);
 313              		.loc 1 216 0
 314 0072 0648     		ldr	r0, .L9+8
 315 0074 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 217:../../Utilities/Log/lcd_log.c ****   BSP_LCD_SetFont (&LCD_LOG_TEXT_FONT);
 316              		.loc 1 217 0
 317 0078 0248     		ldr	r0, .L9
 318 007a FFF7FEFF 		bl	BSP_LCD_SetFont
 218:../../Utilities/Log/lcd_log.c **** }
 319              		.loc 1 218 0
 320 007e 0C37     		adds	r7, r7, #12
 321              	.LCFI14:
 322              		.cfi_def_cfa_offset 12
 323 0080 BD46     		mov	sp, r7
 324              	.LCFI15:
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0082 90BD     		pop	{r4, r7, pc}
 328              	.L10:
 329              		.align	2
 330              	.L9:
 331 0084 00000000 		.word	Font12
 332 0088 FF0000FF 		.word	-16776961
 333 008c 800000FF 		.word	-16777088
 334              		.cfi_endproc
 335              	.LFE138:
 337              		.section	.text.LCD_LOG_ClearTextZone,"ax",%progbits
 338              		.align	2
 339              		.global	LCD_LOG_ClearTextZone
 340              		.thumb
 341              		.thumb_func
 343              	LCD_LOG_ClearTextZone:
 344              	.LFB139:
 219:../../Utilities/Log/lcd_log.c **** 
 220:../../Utilities/Log/lcd_log.c **** /**
 221:../../Utilities/Log/lcd_log.c ****   * @brief  Clear the Text Zone 
 222:../../Utilities/Log/lcd_log.c ****   * @param  None 
 223:../../Utilities/Log/lcd_log.c ****   * @retval None
 224:../../Utilities/Log/lcd_log.c ****   */
 225:../../Utilities/Log/lcd_log.c **** void LCD_LOG_ClearTextZone(void)
 226:../../Utilities/Log/lcd_log.c **** {
 345              		.loc 1 226 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 8
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              	.LCFI16:
 351              		.cfi_def_cfa_offset 8
 352              		.cfi_offset 7, -8
 353              		.cfi_offset 14, -4
ARM GAS  /tmp/ccTRYnLd.s 			page 11


 354 0002 82B0     		sub	sp, sp, #8
 355              	.LCFI17:
 356              		.cfi_def_cfa_offset 16
 357 0004 00AF     		add	r7, sp, #0
 358              	.LCFI18:
 359              		.cfi_def_cfa_register 7
 227:../../Utilities/Log/lcd_log.c ****   uint8_t i=0;
 360              		.loc 1 227 0
 361 0006 0023     		movs	r3, #0
 362 0008 FB71     		strb	r3, [r7, #7]
 228:../../Utilities/Log/lcd_log.c ****   
 229:../../Utilities/Log/lcd_log.c ****   for (i= 0 ; i < YWINDOW_SIZE; i++)
 363              		.loc 1 229 0
 364 000a 0023     		movs	r3, #0
 365 000c FB71     		strb	r3, [r7, #7]
 366 000e 07E0     		b	.L12
 367              	.L13:
 230:../../Utilities/Log/lcd_log.c ****   {
 231:../../Utilities/Log/lcd_log.c ****     BSP_LCD_ClearStringLine(i + YWINDOW_MIN);
 368              		.loc 1 231 0 discriminator 3
 369 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 370 0012 0433     		adds	r3, r3, #4
 371 0014 1846     		mov	r0, r3
 372 0016 FFF7FEFF 		bl	BSP_LCD_ClearStringLine
 229:../../Utilities/Log/lcd_log.c ****   {
 373              		.loc 1 229 0 discriminator 3
 374 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 375 001c 0133     		adds	r3, r3, #1
 376 001e FB71     		strb	r3, [r7, #7]
 377              	.L12:
 229:../../Utilities/Log/lcd_log.c ****   {
 378              		.loc 1 229 0 is_stmt 0 discriminator 1
 379 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 380 0022 102B     		cmp	r3, #16
 381 0024 F4D9     		bls	.L13
 232:../../Utilities/Log/lcd_log.c ****   }
 233:../../Utilities/Log/lcd_log.c ****   
 234:../../Utilities/Log/lcd_log.c ****   LCD_LOG_DeInit();
 382              		.loc 1 234 0 is_stmt 1
 383 0026 FFF7FEFF 		bl	LCD_LOG_DeInit
 235:../../Utilities/Log/lcd_log.c **** }
 384              		.loc 1 235 0
 385 002a 0837     		adds	r7, r7, #8
 386              	.LCFI19:
 387              		.cfi_def_cfa_offset 8
 388 002c BD46     		mov	sp, r7
 389              	.LCFI20:
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 002e 80BD     		pop	{r7, pc}
 393              		.cfi_endproc
 394              	.LFE139:
 396              		.section	.text.__io_putchar,"ax",%progbits
 397              		.align	2
 398              		.global	__io_putchar
 399              		.thumb
 400              		.thumb_func
ARM GAS  /tmp/ccTRYnLd.s 			page 12


 402              	__io_putchar:
 403              	.LFB140:
 236:../../Utilities/Log/lcd_log.c **** 
 237:../../Utilities/Log/lcd_log.c **** /**
 238:../../Utilities/Log/lcd_log.c ****   * @brief  Redirect the printf to the LCD
 239:../../Utilities/Log/lcd_log.c ****   * @param  c: character to be displayed
 240:../../Utilities/Log/lcd_log.c ****   * @param  f: output file pointer
 241:../../Utilities/Log/lcd_log.c ****   * @retval None
 242:../../Utilities/Log/lcd_log.c ****  */
 243:../../Utilities/Log/lcd_log.c **** LCD_LOG_PUTCHAR
 244:../../Utilities/Log/lcd_log.c **** {
 404              		.loc 1 244 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 16
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408 0000 90B5     		push	{r4, r7, lr}
 409              	.LCFI21:
 410              		.cfi_def_cfa_offset 12
 411              		.cfi_offset 4, -12
 412              		.cfi_offset 7, -8
 413              		.cfi_offset 14, -4
 414 0002 85B0     		sub	sp, sp, #20
 415              	.LCFI22:
 416              		.cfi_def_cfa_offset 32
 417 0004 00AF     		add	r7, sp, #0
 418              	.LCFI23:
 419              		.cfi_def_cfa_register 7
 420 0006 7860     		str	r0, [r7, #4]
 245:../../Utilities/Log/lcd_log.c ****   
 246:../../Utilities/Log/lcd_log.c ****   sFONT *cFont = BSP_LCD_GetFont();
 421              		.loc 1 246 0
 422 0008 FFF7FEFF 		bl	BSP_LCD_GetFont
 423 000c B860     		str	r0, [r7, #8]
 247:../../Utilities/Log/lcd_log.c ****   uint32_t idx;
 248:../../Utilities/Log/lcd_log.c ****   
 249:../../Utilities/Log/lcd_log.c ****   if(LCD_Lock == DISABLE)
 424              		.loc 1 249 0
 425 000e 604B     		ldr	r3, .L25
 426 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 427 0012 002B     		cmp	r3, #0
 428 0014 40F0B680 		bne	.L15
 250:../../Utilities/Log/lcd_log.c ****   {
 251:../../Utilities/Log/lcd_log.c ****     if(LCD_ScrollActive == ENABLE)
 429              		.loc 1 251 0
 430 0018 5E4B     		ldr	r3, .L25+4
 431 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 001c 012B     		cmp	r3, #1
 433 001e 10D1     		bne	.L16
 252:../../Utilities/Log/lcd_log.c ****     {
 253:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_bottom = LCD_CacheBuffer_yptr_bottom_bak;
 434              		.loc 1 253 0
 435 0020 5D4B     		ldr	r3, .L25+8
 436 0022 1A88     		ldrh	r2, [r3]
 437 0024 5D4B     		ldr	r3, .L25+12
 438 0026 1A80     		strh	r2, [r3]	@ movhi
 254:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_top    = LCD_CacheBuffer_yptr_top_bak;
 439              		.loc 1 254 0
ARM GAS  /tmp/ccTRYnLd.s 			page 13


 440 0028 5D4B     		ldr	r3, .L25+16
 441 002a 1A88     		ldrh	r2, [r3]
 442 002c 5D4B     		ldr	r3, .L25+20
 443 002e 1A80     		strh	r2, [r3]	@ movhi
 255:../../Utilities/Log/lcd_log.c ****       LCD_ScrollActive = DISABLE;
 444              		.loc 1 255 0
 445 0030 584B     		ldr	r3, .L25+4
 446 0032 0022     		movs	r2, #0
 447 0034 1A70     		strb	r2, [r3]
 256:../../Utilities/Log/lcd_log.c ****       LCD_Scrolled = DISABLE;
 448              		.loc 1 256 0
 449 0036 5C4B     		ldr	r3, .L25+24
 450 0038 0022     		movs	r2, #0
 451 003a 1A70     		strb	r2, [r3]
 257:../../Utilities/Log/lcd_log.c ****       LCD_ScrollBackStep = 0;
 452              		.loc 1 257 0
 453 003c 5B4B     		ldr	r3, .L25+28
 454 003e 0022     		movs	r2, #0
 455 0040 1A80     		strh	r2, [r3]	@ movhi
 456              	.L16:
 258:../../Utilities/Log/lcd_log.c ****       
 259:../../Utilities/Log/lcd_log.c ****     }
 260:../../Utilities/Log/lcd_log.c ****     
 261:../../Utilities/Log/lcd_log.c ****     if(( LCD_CacheBuffer_xptr < (BSP_LCD_GetXSize()) /cFont->Width ) &&  ( ch != '\n'))
 457              		.loc 1 261 0
 458 0042 5B4B     		ldr	r3, .L25+32
 459 0044 1B88     		ldrh	r3, [r3]
 460 0046 1C46     		mov	r4, r3
 461 0048 FFF7FEFF 		bl	BSP_LCD_GetXSize
 462 004c 0246     		mov	r2, r0
 463 004e BB68     		ldr	r3, [r7, #8]
 464 0050 9B88     		ldrh	r3, [r3, #4]
 465 0052 B2FBF3F3 		udiv	r3, r2, r3
 466 0056 9C42     		cmp	r4, r3
 467 0058 18D2     		bcs	.L17
 468              		.loc 1 261 0 is_stmt 0 discriminator 1
 469 005a 7B68     		ldr	r3, [r7, #4]
 470 005c 0A2B     		cmp	r3, #10
 471 005e 15D0     		beq	.L17
 262:../../Utilities/Log/lcd_log.c ****     {
 263:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer[LCD_CacheBuffer_yptr_bottom].line[LCD_CacheBuffer_xptr++] = (uint16_t)ch;
 472              		.loc 1 263 0 is_stmt 1
 473 0060 4E4B     		ldr	r3, .L25+12
 474 0062 1B88     		ldrh	r3, [r3]
 475 0064 1946     		mov	r1, r3
 476 0066 524B     		ldr	r3, .L25+32
 477 0068 1B88     		ldrh	r3, [r3]
 478 006a 5A1C     		adds	r2, r3, #1
 479 006c 90B2     		uxth	r0, r2
 480 006e 504A     		ldr	r2, .L25+32
 481 0070 1080     		strh	r0, [r2]	@ movhi
 482 0072 1C46     		mov	r4, r3
 483 0074 7B68     		ldr	r3, [r7, #4]
 484 0076 D8B2     		uxtb	r0, r3
 485 0078 4E4A     		ldr	r2, .L25+36
 486 007a 0B46     		mov	r3, r1
 487 007c 5B01     		lsls	r3, r3, #5
ARM GAS  /tmp/ccTRYnLd.s 			page 14


 488 007e 0B44     		add	r3, r3, r1
 489 0080 9B00     		lsls	r3, r3, #2
 490 0082 2344     		add	r3, r3, r4
 491 0084 1344     		add	r3, r3, r2
 492 0086 0246     		mov	r2, r0
 493 0088 1A70     		strb	r2, [r3]
 494 008a 7BE0     		b	.L15
 495              	.L17:
 264:../../Utilities/Log/lcd_log.c ****     }   
 265:../../Utilities/Log/lcd_log.c ****     else 
 266:../../Utilities/Log/lcd_log.c ****     {
 267:../../Utilities/Log/lcd_log.c ****       if(LCD_CacheBuffer_yptr_top >= LCD_CacheBuffer_yptr_bottom)
 496              		.loc 1 267 0
 497 008c 454B     		ldr	r3, .L25+20
 498 008e 1A88     		ldrh	r2, [r3]
 499 0090 424B     		ldr	r3, .L25+12
 500 0092 1B88     		ldrh	r3, [r3]
 501 0094 9A42     		cmp	r2, r3
 502 0096 14D3     		bcc	.L18
 268:../../Utilities/Log/lcd_log.c ****       {
 269:../../Utilities/Log/lcd_log.c ****         
 270:../../Utilities/Log/lcd_log.c ****         if(LCD_CacheBuffer_yptr_invert == DISABLE)
 503              		.loc 1 270 0
 504 0098 474B     		ldr	r3, .L25+40
 505 009a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 009c 002B     		cmp	r3, #0
 507 009e 0DD1     		bne	.L19
 271:../../Utilities/Log/lcd_log.c ****         {
 272:../../Utilities/Log/lcd_log.c ****           LCD_CacheBuffer_yptr_top++;
 508              		.loc 1 272 0
 509 00a0 404B     		ldr	r3, .L25+20
 510 00a2 1B88     		ldrh	r3, [r3]
 511 00a4 0133     		adds	r3, r3, #1
 512 00a6 9AB2     		uxth	r2, r3
 513 00a8 3E4B     		ldr	r3, .L25+20
 514 00aa 1A80     		strh	r2, [r3]	@ movhi
 273:../../Utilities/Log/lcd_log.c ****           
 274:../../Utilities/Log/lcd_log.c ****           if(LCD_CacheBuffer_yptr_top == LCD_CACHE_DEPTH)
 515              		.loc 1 274 0
 516 00ac 3D4B     		ldr	r3, .L25+20
 517 00ae 1B88     		ldrh	r3, [r3]
 518 00b0 752B     		cmp	r3, #117
 519 00b2 06D1     		bne	.L18
 275:../../Utilities/Log/lcd_log.c ****           {
 276:../../Utilities/Log/lcd_log.c ****             LCD_CacheBuffer_yptr_top = 0;  
 520              		.loc 1 276 0
 521 00b4 3B4B     		ldr	r3, .L25+20
 522 00b6 0022     		movs	r2, #0
 523 00b8 1A80     		strh	r2, [r3]	@ movhi
 524 00ba 02E0     		b	.L18
 525              	.L19:
 277:../../Utilities/Log/lcd_log.c ****           }
 278:../../Utilities/Log/lcd_log.c ****         }
 279:../../Utilities/Log/lcd_log.c ****         else
 280:../../Utilities/Log/lcd_log.c ****         {
 281:../../Utilities/Log/lcd_log.c ****           LCD_CacheBuffer_yptr_invert= DISABLE;
 526              		.loc 1 281 0
ARM GAS  /tmp/ccTRYnLd.s 			page 15


 527 00bc 3E4B     		ldr	r3, .L25+40
 528 00be 0022     		movs	r2, #0
 529 00c0 1A70     		strb	r2, [r3]
 530              	.L18:
 282:../../Utilities/Log/lcd_log.c ****         }
 283:../../Utilities/Log/lcd_log.c ****       }
 284:../../Utilities/Log/lcd_log.c ****       
 285:../../Utilities/Log/lcd_log.c ****       for(idx = LCD_CacheBuffer_xptr ; idx < (BSP_LCD_GetXSize()) /cFont->Width; idx++)
 531              		.loc 1 285 0
 532 00c2 3B4B     		ldr	r3, .L25+32
 533 00c4 1B88     		ldrh	r3, [r3]
 534 00c6 FB60     		str	r3, [r7, #12]
 535 00c8 15E0     		b	.L21
 536              	.L22:
 286:../../Utilities/Log/lcd_log.c ****       {
 287:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer[LCD_CacheBuffer_yptr_bottom].line[LCD_CacheBuffer_xptr++] = ' ';
 537              		.loc 1 287 0 discriminator 3
 538 00ca 344B     		ldr	r3, .L25+12
 539 00cc 1B88     		ldrh	r3, [r3]
 540 00ce 1946     		mov	r1, r3
 541 00d0 374B     		ldr	r3, .L25+32
 542 00d2 1B88     		ldrh	r3, [r3]
 543 00d4 5A1C     		adds	r2, r3, #1
 544 00d6 90B2     		uxth	r0, r2
 545 00d8 354A     		ldr	r2, .L25+32
 546 00da 1080     		strh	r0, [r2]	@ movhi
 547 00dc 1846     		mov	r0, r3
 548 00de 354A     		ldr	r2, .L25+36
 549 00e0 0B46     		mov	r3, r1
 550 00e2 5B01     		lsls	r3, r3, #5
 551 00e4 0B44     		add	r3, r3, r1
 552 00e6 9B00     		lsls	r3, r3, #2
 553 00e8 0344     		add	r3, r3, r0
 554 00ea 1344     		add	r3, r3, r2
 555 00ec 2022     		movs	r2, #32
 556 00ee 1A70     		strb	r2, [r3]
 285:../../Utilities/Log/lcd_log.c ****       {
 557              		.loc 1 285 0 discriminator 3
 558 00f0 FB68     		ldr	r3, [r7, #12]
 559 00f2 0133     		adds	r3, r3, #1
 560 00f4 FB60     		str	r3, [r7, #12]
 561              	.L21:
 285:../../Utilities/Log/lcd_log.c ****       {
 562              		.loc 1 285 0 is_stmt 0 discriminator 1
 563 00f6 FFF7FEFF 		bl	BSP_LCD_GetXSize
 564 00fa 0246     		mov	r2, r0
 565 00fc BB68     		ldr	r3, [r7, #8]
 566 00fe 9B88     		ldrh	r3, [r3, #4]
 567 0100 B2FBF3F2 		udiv	r2, r2, r3
 568 0104 FB68     		ldr	r3, [r7, #12]
 569 0106 9A42     		cmp	r2, r3
 570 0108 DFD8     		bhi	.L22
 288:../../Utilities/Log/lcd_log.c ****       }   
 289:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer[LCD_CacheBuffer_yptr_bottom].color = LCD_LineColor;  
 571              		.loc 1 289 0 is_stmt 1
 572 010a 244B     		ldr	r3, .L25+12
 573 010c 1B88     		ldrh	r3, [r3]
ARM GAS  /tmp/ccTRYnLd.s 			page 16


 574 010e 1846     		mov	r0, r3
 575 0110 2A4B     		ldr	r3, .L25+44
 576 0112 1A68     		ldr	r2, [r3]
 577 0114 2749     		ldr	r1, .L25+36
 578 0116 0346     		mov	r3, r0
 579 0118 5B01     		lsls	r3, r3, #5
 580 011a 0344     		add	r3, r3, r0
 581 011c 9B00     		lsls	r3, r3, #2
 582 011e 0B44     		add	r3, r3, r1
 583 0120 8033     		adds	r3, r3, #128
 584 0122 1A60     		str	r2, [r3]
 290:../../Utilities/Log/lcd_log.c ****       
 291:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_xptr = 0;
 585              		.loc 1 291 0
 586 0124 224B     		ldr	r3, .L25+32
 587 0126 0022     		movs	r2, #0
 588 0128 1A80     		strh	r2, [r3]	@ movhi
 292:../../Utilities/Log/lcd_log.c ****       
 293:../../Utilities/Log/lcd_log.c ****       LCD_LOG_UpdateDisplay (); 
 589              		.loc 1 293 0
 590 012a FFF7FEFF 		bl	LCD_LOG_UpdateDisplay
 294:../../Utilities/Log/lcd_log.c ****       
 295:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_bottom ++; 
 591              		.loc 1 295 0
 592 012e 1B4B     		ldr	r3, .L25+12
 593 0130 1B88     		ldrh	r3, [r3]
 594 0132 0133     		adds	r3, r3, #1
 595 0134 9AB2     		uxth	r2, r3
 596 0136 194B     		ldr	r3, .L25+12
 597 0138 1A80     		strh	r2, [r3]	@ movhi
 296:../../Utilities/Log/lcd_log.c ****       
 297:../../Utilities/Log/lcd_log.c ****       if (LCD_CacheBuffer_yptr_bottom == LCD_CACHE_DEPTH) 
 598              		.loc 1 297 0
 599 013a 184B     		ldr	r3, .L25+12
 600 013c 1B88     		ldrh	r3, [r3]
 601 013e 752B     		cmp	r3, #117
 602 0140 08D1     		bne	.L23
 298:../../Utilities/Log/lcd_log.c ****       {
 299:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer_yptr_bottom = 0;
 603              		.loc 1 299 0
 604 0142 164B     		ldr	r3, .L25+12
 605 0144 0022     		movs	r2, #0
 606 0146 1A80     		strh	r2, [r3]	@ movhi
 300:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer_yptr_top = 1;    
 607              		.loc 1 300 0
 608 0148 164B     		ldr	r3, .L25+20
 609 014a 0122     		movs	r2, #1
 610 014c 1A80     		strh	r2, [r3]	@ movhi
 301:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer_yptr_invert = ENABLE;
 611              		.loc 1 301 0
 612 014e 1A4B     		ldr	r3, .L25+40
 613 0150 0122     		movs	r2, #1
 614 0152 1A70     		strb	r2, [r3]
 615              	.L23:
 302:../../Utilities/Log/lcd_log.c ****       }
 303:../../Utilities/Log/lcd_log.c ****       
 304:../../Utilities/Log/lcd_log.c ****       if( ch != '\n')
ARM GAS  /tmp/ccTRYnLd.s 			page 17


 616              		.loc 1 304 0
 617 0154 7B68     		ldr	r3, [r7, #4]
 618 0156 0A2B     		cmp	r3, #10
 619 0158 14D0     		beq	.L15
 305:../../Utilities/Log/lcd_log.c ****       {
 306:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer[LCD_CacheBuffer_yptr_bottom].line[LCD_CacheBuffer_xptr++] = (uint16_t)ch;
 620              		.loc 1 306 0
 621 015a 104B     		ldr	r3, .L25+12
 622 015c 1B88     		ldrh	r3, [r3]
 623 015e 1946     		mov	r1, r3
 624 0160 134B     		ldr	r3, .L25+32
 625 0162 1B88     		ldrh	r3, [r3]
 626 0164 5A1C     		adds	r2, r3, #1
 627 0166 90B2     		uxth	r0, r2
 628 0168 114A     		ldr	r2, .L25+32
 629 016a 1080     		strh	r0, [r2]	@ movhi
 630 016c 1C46     		mov	r4, r3
 631 016e 7B68     		ldr	r3, [r7, #4]
 632 0170 D8B2     		uxtb	r0, r3
 633 0172 104A     		ldr	r2, .L25+36
 634 0174 0B46     		mov	r3, r1
 635 0176 5B01     		lsls	r3, r3, #5
 636 0178 0B44     		add	r3, r3, r1
 637 017a 9B00     		lsls	r3, r3, #2
 638 017c 2344     		add	r3, r3, r4
 639 017e 1344     		add	r3, r3, r2
 640 0180 0246     		mov	r2, r0
 641 0182 1A70     		strb	r2, [r3]
 642              	.L15:
 307:../../Utilities/Log/lcd_log.c ****       }
 308:../../Utilities/Log/lcd_log.c ****       
 309:../../Utilities/Log/lcd_log.c ****     }
 310:../../Utilities/Log/lcd_log.c ****   }
 311:../../Utilities/Log/lcd_log.c ****   return ch;
 643              		.loc 1 311 0
 644 0184 7B68     		ldr	r3, [r7, #4]
 312:../../Utilities/Log/lcd_log.c **** }
 645              		.loc 1 312 0
 646 0186 1846     		mov	r0, r3
 647 0188 1437     		adds	r7, r7, #20
 648              	.LCFI24:
 649              		.cfi_def_cfa_offset 12
 650 018a BD46     		mov	sp, r7
 651              	.LCFI25:
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 018c 90BD     		pop	{r4, r7, pc}
 655              	.L26:
 656 018e 00BF     		.align	2
 657              	.L25:
 658 0190 00000000 		.word	LCD_Lock
 659 0194 00000000 		.word	LCD_ScrollActive
 660 0198 00000000 		.word	LCD_CacheBuffer_yptr_bottom_bak
 661 019c 00000000 		.word	LCD_CacheBuffer_yptr_bottom
 662 01a0 00000000 		.word	LCD_CacheBuffer_yptr_top_bak
 663 01a4 00000000 		.word	LCD_CacheBuffer_yptr_top
 664 01a8 00000000 		.word	LCD_Scrolled
ARM GAS  /tmp/ccTRYnLd.s 			page 18


 665 01ac 00000000 		.word	LCD_ScrollBackStep
 666 01b0 00000000 		.word	LCD_CacheBuffer_xptr
 667 01b4 00000000 		.word	LCD_CacheBuffer
 668 01b8 00000000 		.word	LCD_CacheBuffer_yptr_invert
 669 01bc 00000000 		.word	LCD_LineColor
 670              		.cfi_endproc
 671              	.LFE140:
 673              		.section	.text.LCD_LOG_UpdateDisplay,"ax",%progbits
 674              		.align	2
 675              		.global	LCD_LOG_UpdateDisplay
 676              		.thumb
 677              		.thumb_func
 679              	LCD_LOG_UpdateDisplay:
 680              	.LFB141:
 313:../../Utilities/Log/lcd_log.c ****   
 314:../../Utilities/Log/lcd_log.c **** /**
 315:../../Utilities/Log/lcd_log.c ****   * @brief  Update the text area display
 316:../../Utilities/Log/lcd_log.c ****   * @param  None
 317:../../Utilities/Log/lcd_log.c ****   * @retval None
 318:../../Utilities/Log/lcd_log.c ****   */
 319:../../Utilities/Log/lcd_log.c **** void LCD_LOG_UpdateDisplay (void)
 320:../../Utilities/Log/lcd_log.c **** {
 681              		.loc 1 320 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 8
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685 0000 80B5     		push	{r7, lr}
 686              	.LCFI26:
 687              		.cfi_def_cfa_offset 8
 688              		.cfi_offset 7, -8
 689              		.cfi_offset 14, -4
 690 0002 82B0     		sub	sp, sp, #8
 691              	.LCFI27:
 692              		.cfi_def_cfa_offset 16
 693 0004 00AF     		add	r7, sp, #0
 694              	.LCFI28:
 695              		.cfi_def_cfa_register 7
 321:../../Utilities/Log/lcd_log.c ****   uint8_t cnt = 0 ;
 696              		.loc 1 321 0
 697 0006 0023     		movs	r3, #0
 698 0008 FB71     		strb	r3, [r7, #7]
 322:../../Utilities/Log/lcd_log.c ****   uint16_t length = 0 ;
 699              		.loc 1 322 0
 700 000a 0023     		movs	r3, #0
 701 000c BB80     		strh	r3, [r7, #4]	@ movhi
 323:../../Utilities/Log/lcd_log.c ****   uint16_t ptr = 0, index = 0;
 702              		.loc 1 323 0
 703 000e 0023     		movs	r3, #0
 704 0010 7B80     		strh	r3, [r7, #2]	@ movhi
 705 0012 0023     		movs	r3, #0
 706 0014 3B80     		strh	r3, [r7]	@ movhi
 324:../../Utilities/Log/lcd_log.c ****   
 325:../../Utilities/Log/lcd_log.c ****   if((LCD_CacheBuffer_yptr_bottom  < (YWINDOW_SIZE -1)) && 
 707              		.loc 1 325 0
 708 0016 3A4B     		ldr	r3, .L34
 709 0018 1B88     		ldrh	r3, [r3]
 710 001a 0F2B     		cmp	r3, #15
ARM GAS  /tmp/ccTRYnLd.s 			page 19


 711 001c 27D8     		bhi	.L28
 326:../../Utilities/Log/lcd_log.c ****      (LCD_CacheBuffer_yptr_bottom  >= LCD_CacheBuffer_yptr_top))
 712              		.loc 1 326 0 discriminator 1
 713 001e 384B     		ldr	r3, .L34
 714 0020 1A88     		ldrh	r2, [r3]
 715 0022 384B     		ldr	r3, .L34+4
 716 0024 1B88     		ldrh	r3, [r3]
 325:../../Utilities/Log/lcd_log.c ****      (LCD_CacheBuffer_yptr_bottom  >= LCD_CacheBuffer_yptr_top))
 717              		.loc 1 325 0 discriminator 1
 718 0026 9A42     		cmp	r2, r3
 719 0028 21D3     		bcc	.L28
 327:../../Utilities/Log/lcd_log.c ****   {
 328:../../Utilities/Log/lcd_log.c ****     BSP_LCD_SetTextColor(LCD_CacheBuffer[cnt + LCD_CacheBuffer_yptr_bottom].color);
 720              		.loc 1 328 0
 721 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 722 002c 344A     		ldr	r2, .L34
 723 002e 1288     		ldrh	r2, [r2]
 724 0030 1A44     		add	r2, r2, r3
 725 0032 3549     		ldr	r1, .L34+8
 726 0034 1346     		mov	r3, r2
 727 0036 5B01     		lsls	r3, r3, #5
 728 0038 1344     		add	r3, r3, r2
 729 003a 9B00     		lsls	r3, r3, #2
 730 003c 0B44     		add	r3, r3, r1
 731 003e 8033     		adds	r3, r3, #128
 732 0040 1B68     		ldr	r3, [r3]
 733 0042 1846     		mov	r0, r3
 734 0044 FFF7FEFF 		bl	BSP_LCD_SetTextColor
 329:../../Utilities/Log/lcd_log.c ****     BSP_LCD_DisplayStringAtLine ((YWINDOW_MIN + LCD_CacheBuffer_yptr_bottom),
 735              		.loc 1 329 0
 736 0048 2D4B     		ldr	r3, .L34
 737 004a 1B88     		ldrh	r3, [r3]
 738 004c 0433     		adds	r3, r3, #4
 739 004e 99B2     		uxth	r1, r3
 330:../../Utilities/Log/lcd_log.c ****                            (uint8_t *)(LCD_CacheBuffer[cnt + LCD_CacheBuffer_yptr_bottom].line));
 740              		.loc 1 330 0
 741 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 742 0052 2B4A     		ldr	r2, .L34
 743 0054 1288     		ldrh	r2, [r2]
 744 0056 1A44     		add	r2, r2, r3
 745 0058 1346     		mov	r3, r2
 746 005a 5B01     		lsls	r3, r3, #5
 747 005c 1344     		add	r3, r3, r2
 748 005e 9B00     		lsls	r3, r3, #2
 749 0060 294A     		ldr	r2, .L34+8
 750 0062 1344     		add	r3, r3, r2
 329:../../Utilities/Log/lcd_log.c ****     BSP_LCD_DisplayStringAtLine ((YWINDOW_MIN + LCD_CacheBuffer_yptr_bottom),
 751              		.loc 1 329 0
 752 0064 0846     		mov	r0, r1
 753 0066 1946     		mov	r1, r3
 754 0068 FFF7FEFF 		bl	BSP_LCD_DisplayStringAtLine
 755 006c 44E0     		b	.L27
 756              	.L28:
 331:../../Utilities/Log/lcd_log.c ****   }
 332:../../Utilities/Log/lcd_log.c ****   else
 333:../../Utilities/Log/lcd_log.c ****   {
 334:../../Utilities/Log/lcd_log.c ****     
ARM GAS  /tmp/ccTRYnLd.s 			page 20


 335:../../Utilities/Log/lcd_log.c ****     if(LCD_CacheBuffer_yptr_bottom < LCD_CacheBuffer_yptr_top)
 757              		.loc 1 335 0
 758 006e 244B     		ldr	r3, .L34
 759 0070 1A88     		ldrh	r2, [r3]
 760 0072 244B     		ldr	r3, .L34+4
 761 0074 1B88     		ldrh	r3, [r3]
 762 0076 9A42     		cmp	r2, r3
 763 0078 04D2     		bcs	.L30
 336:../../Utilities/Log/lcd_log.c ****     {
 337:../../Utilities/Log/lcd_log.c ****       /* Virtual length for rolling */
 338:../../Utilities/Log/lcd_log.c ****       length = LCD_CACHE_DEPTH + LCD_CacheBuffer_yptr_bottom ;
 764              		.loc 1 338 0
 765 007a 214B     		ldr	r3, .L34
 766 007c 1B88     		ldrh	r3, [r3]
 767 007e 7533     		adds	r3, r3, #117
 768 0080 BB80     		strh	r3, [r7, #4]	@ movhi
 769 0082 02E0     		b	.L31
 770              	.L30:
 339:../../Utilities/Log/lcd_log.c ****     }
 340:../../Utilities/Log/lcd_log.c ****     else
 341:../../Utilities/Log/lcd_log.c ****     {
 342:../../Utilities/Log/lcd_log.c ****       length = LCD_CacheBuffer_yptr_bottom;
 771              		.loc 1 342 0
 772 0084 1E4B     		ldr	r3, .L34
 773 0086 1B88     		ldrh	r3, [r3]	@ movhi
 774 0088 BB80     		strh	r3, [r7, #4]	@ movhi
 775              	.L31:
 343:../../Utilities/Log/lcd_log.c ****     }
 344:../../Utilities/Log/lcd_log.c ****     
 345:../../Utilities/Log/lcd_log.c ****     ptr = length - YWINDOW_SIZE + 1;
 776              		.loc 1 345 0
 777 008a BB88     		ldrh	r3, [r7, #4]	@ movhi
 778 008c 103B     		subs	r3, r3, #16
 779 008e 7B80     		strh	r3, [r7, #2]	@ movhi
 346:../../Utilities/Log/lcd_log.c ****     
 347:../../Utilities/Log/lcd_log.c ****     for  (cnt = 0 ; cnt < YWINDOW_SIZE ; cnt ++)
 780              		.loc 1 347 0
 781 0090 0023     		movs	r3, #0
 782 0092 FB71     		strb	r3, [r7, #7]
 783 0094 2DE0     		b	.L32
 784              	.L33:
 348:../../Utilities/Log/lcd_log.c ****     {
 349:../../Utilities/Log/lcd_log.c ****       
 350:../../Utilities/Log/lcd_log.c ****       index = (cnt + ptr )% LCD_CACHE_DEPTH ;
 785              		.loc 1 350 0 discriminator 3
 786 0096 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 787 0098 7B88     		ldrh	r3, [r7, #2]
 788 009a 1344     		add	r3, r3, r2
 789 009c 1B4A     		ldr	r2, .L34+12
 790 009e 83FB0201 		smull	r0, r1, r3, r2
 791 00a2 5A18     		adds	r2, r3, r1
 792 00a4 9111     		asrs	r1, r2, #6
 793 00a6 DA17     		asrs	r2, r3, #31
 794 00a8 8A1A     		subs	r2, r1, r2
 795 00aa 7521     		movs	r1, #117
 796 00ac 01FB02F2 		mul	r2, r1, r2
 797 00b0 9A1A     		subs	r2, r3, r2
ARM GAS  /tmp/ccTRYnLd.s 			page 21


 798 00b2 1346     		mov	r3, r2	@ movhi
 799 00b4 3B80     		strh	r3, [r7]	@ movhi
 351:../../Utilities/Log/lcd_log.c ****       
 352:../../Utilities/Log/lcd_log.c ****       BSP_LCD_SetTextColor(LCD_CacheBuffer[index].color);
 800              		.loc 1 352 0 discriminator 3
 801 00b6 3A88     		ldrh	r2, [r7]
 802 00b8 1349     		ldr	r1, .L34+8
 803 00ba 1346     		mov	r3, r2
 804 00bc 5B01     		lsls	r3, r3, #5
 805 00be 1344     		add	r3, r3, r2
 806 00c0 9B00     		lsls	r3, r3, #2
 807 00c2 0B44     		add	r3, r3, r1
 808 00c4 8033     		adds	r3, r3, #128
 809 00c6 1B68     		ldr	r3, [r3]
 810 00c8 1846     		mov	r0, r3
 811 00ca FFF7FEFF 		bl	BSP_LCD_SetTextColor
 353:../../Utilities/Log/lcd_log.c ****       BSP_LCD_DisplayStringAtLine ((cnt + YWINDOW_MIN), 
 812              		.loc 1 353 0 discriminator 3
 813 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 814 00d0 9BB2     		uxth	r3, r3
 815 00d2 0433     		adds	r3, r3, #4
 816 00d4 99B2     		uxth	r1, r3
 354:../../Utilities/Log/lcd_log.c ****                              (uint8_t *)(LCD_CacheBuffer[index].line));
 817              		.loc 1 354 0 discriminator 3
 818 00d6 3A88     		ldrh	r2, [r7]
 819 00d8 1346     		mov	r3, r2
 820 00da 5B01     		lsls	r3, r3, #5
 821 00dc 1344     		add	r3, r3, r2
 822 00de 9B00     		lsls	r3, r3, #2
 823 00e0 094A     		ldr	r2, .L34+8
 824 00e2 1344     		add	r3, r3, r2
 353:../../Utilities/Log/lcd_log.c ****       BSP_LCD_DisplayStringAtLine ((cnt + YWINDOW_MIN), 
 825              		.loc 1 353 0 discriminator 3
 826 00e4 0846     		mov	r0, r1
 827 00e6 1946     		mov	r1, r3
 828 00e8 FFF7FEFF 		bl	BSP_LCD_DisplayStringAtLine
 347:../../Utilities/Log/lcd_log.c ****     {
 829              		.loc 1 347 0 discriminator 3
 830 00ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 831 00ee 0133     		adds	r3, r3, #1
 832 00f0 FB71     		strb	r3, [r7, #7]
 833              	.L32:
 347:../../Utilities/Log/lcd_log.c ****     {
 834              		.loc 1 347 0 is_stmt 0 discriminator 1
 835 00f2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 836 00f4 102B     		cmp	r3, #16
 837 00f6 CED9     		bls	.L33
 838              	.L27:
 355:../../Utilities/Log/lcd_log.c ****       
 356:../../Utilities/Log/lcd_log.c ****     }
 357:../../Utilities/Log/lcd_log.c ****   }
 358:../../Utilities/Log/lcd_log.c ****   
 359:../../Utilities/Log/lcd_log.c **** }
 839              		.loc 1 359 0 is_stmt 1
 840 00f8 0837     		adds	r7, r7, #8
 841              	.LCFI29:
 842              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccTRYnLd.s 			page 22


 843 00fa BD46     		mov	sp, r7
 844              	.LCFI30:
 845              		.cfi_def_cfa_register 13
 846              		@ sp needed
 847 00fc 80BD     		pop	{r7, pc}
 848              	.L35:
 849 00fe 00BF     		.align	2
 850              	.L34:
 851 0100 00000000 		.word	LCD_CacheBuffer_yptr_bottom
 852 0104 00000000 		.word	LCD_CacheBuffer_yptr_top
 853 0108 00000000 		.word	LCD_CacheBuffer
 854 010c 8DC0088C 		.word	-1945583475
 855              		.cfi_endproc
 856              	.LFE141:
 858              		.section	.text.LCD_LOG_ScrollBack,"ax",%progbits
 859              		.align	2
 860              		.global	LCD_LOG_ScrollBack
 861              		.thumb
 862              		.thumb_func
 864              	LCD_LOG_ScrollBack:
 865              	.LFB142:
 360:../../Utilities/Log/lcd_log.c **** 
 361:../../Utilities/Log/lcd_log.c **** #if( LCD_SCROLL_ENABLED == 1)
 362:../../Utilities/Log/lcd_log.c **** /**
 363:../../Utilities/Log/lcd_log.c ****   * @brief  Display previous text frame
 364:../../Utilities/Log/lcd_log.c ****   * @param  None
 365:../../Utilities/Log/lcd_log.c ****   * @retval Status
 366:../../Utilities/Log/lcd_log.c ****   */
 367:../../Utilities/Log/lcd_log.c **** ErrorStatus LCD_LOG_ScrollBack(void)
 368:../../Utilities/Log/lcd_log.c **** {
 866              		.loc 1 368 0
 867              		.cfi_startproc
 868              		@ args = 0, pretend = 0, frame = 0
 869              		@ frame_needed = 1, uses_anonymous_args = 0
 870 0000 80B5     		push	{r7, lr}
 871              	.LCFI31:
 872              		.cfi_def_cfa_offset 8
 873              		.cfi_offset 7, -8
 874              		.cfi_offset 14, -4
 875 0002 00AF     		add	r7, sp, #0
 876              	.LCFI32:
 877              		.cfi_def_cfa_register 7
 369:../../Utilities/Log/lcd_log.c ****     
 370:../../Utilities/Log/lcd_log.c ****   if(LCD_ScrollActive == DISABLE)
 878              		.loc 1 370 0
 879 0004 434B     		ldr	r3, .L45
 880 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 881 0008 002B     		cmp	r3, #0
 882 000a 30D1     		bne	.L37
 371:../../Utilities/Log/lcd_log.c ****   {
 372:../../Utilities/Log/lcd_log.c ****     
 373:../../Utilities/Log/lcd_log.c ****     LCD_CacheBuffer_yptr_bottom_bak = LCD_CacheBuffer_yptr_bottom;
 883              		.loc 1 373 0
 884 000c 424B     		ldr	r3, .L45+4
 885 000e 1A88     		ldrh	r2, [r3]
 886 0010 424B     		ldr	r3, .L45+8
 887 0012 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /tmp/ccTRYnLd.s 			page 23


 374:../../Utilities/Log/lcd_log.c ****     LCD_CacheBuffer_yptr_top_bak    = LCD_CacheBuffer_yptr_top;
 888              		.loc 1 374 0
 889 0014 424B     		ldr	r3, .L45+12
 890 0016 1A88     		ldrh	r2, [r3]
 891 0018 424B     		ldr	r3, .L45+16
 892 001a 1A80     		strh	r2, [r3]	@ movhi
 375:../../Utilities/Log/lcd_log.c ****     
 376:../../Utilities/Log/lcd_log.c ****     
 377:../../Utilities/Log/lcd_log.c ****     if(LCD_CacheBuffer_yptr_bottom > LCD_CacheBuffer_yptr_top) 
 893              		.loc 1 377 0
 894 001c 3E4B     		ldr	r3, .L45+4
 895 001e 1A88     		ldrh	r2, [r3]
 896 0020 3F4B     		ldr	r3, .L45+12
 897 0022 1B88     		ldrh	r3, [r3]
 898 0024 9A42     		cmp	r2, r3
 899 0026 0CD9     		bls	.L38
 378:../../Utilities/Log/lcd_log.c ****     {
 379:../../Utilities/Log/lcd_log.c ****       
 380:../../Utilities/Log/lcd_log.c ****       if ((LCD_CacheBuffer_yptr_bottom - LCD_CacheBuffer_yptr_top) <=  YWINDOW_SIZE)
 900              		.loc 1 380 0
 901 0028 3B4B     		ldr	r3, .L45+4
 902 002a 1B88     		ldrh	r3, [r3]
 903 002c 1A46     		mov	r2, r3
 904 002e 3C4B     		ldr	r3, .L45+12
 905 0030 1B88     		ldrh	r3, [r3]
 906 0032 D31A     		subs	r3, r2, r3
 907 0034 112B     		cmp	r3, #17
 908 0036 04DC     		bgt	.L38
 381:../../Utilities/Log/lcd_log.c ****       {
 382:../../Utilities/Log/lcd_log.c ****         LCD_Lock = DISABLE;
 909              		.loc 1 382 0
 910 0038 3B4B     		ldr	r3, .L45+20
 911 003a 0022     		movs	r2, #0
 912 003c 1A70     		strb	r2, [r3]
 383:../../Utilities/Log/lcd_log.c ****         return ERROR;
 913              		.loc 1 383 0
 914 003e 0023     		movs	r3, #0
 915 0040 65E0     		b	.L39
 916              	.L38:
 384:../../Utilities/Log/lcd_log.c ****       }
 385:../../Utilities/Log/lcd_log.c ****     }
 386:../../Utilities/Log/lcd_log.c ****     LCD_ScrollActive = ENABLE;
 917              		.loc 1 386 0
 918 0042 344B     		ldr	r3, .L45
 919 0044 0122     		movs	r2, #1
 920 0046 1A70     		strb	r2, [r3]
 387:../../Utilities/Log/lcd_log.c ****     
 388:../../Utilities/Log/lcd_log.c ****     if((LCD_CacheBuffer_yptr_bottom  > LCD_CacheBuffer_yptr_top)&&
 921              		.loc 1 388 0
 922 0048 334B     		ldr	r3, .L45+4
 923 004a 1A88     		ldrh	r2, [r3]
 924 004c 344B     		ldr	r3, .L45+12
 925 004e 1B88     		ldrh	r3, [r3]
 926 0050 9A42     		cmp	r2, r3
 927 0052 0CD9     		bls	.L37
 389:../../Utilities/Log/lcd_log.c ****        (LCD_Scrolled == DISABLE ))
 928              		.loc 1 389 0 discriminator 1
ARM GAS  /tmp/ccTRYnLd.s 			page 24


 929 0054 354B     		ldr	r3, .L45+24
 930 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 388:../../Utilities/Log/lcd_log.c ****        (LCD_Scrolled == DISABLE ))
 931              		.loc 1 388 0 discriminator 1
 932 0058 002B     		cmp	r3, #0
 933 005a 08D1     		bne	.L37
 390:../../Utilities/Log/lcd_log.c ****     {
 391:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_bottom--;
 934              		.loc 1 391 0
 935 005c 2E4B     		ldr	r3, .L45+4
 936 005e 1B88     		ldrh	r3, [r3]
 937 0060 013B     		subs	r3, r3, #1
 938 0062 9AB2     		uxth	r2, r3
 939 0064 2C4B     		ldr	r3, .L45+4
 940 0066 1A80     		strh	r2, [r3]	@ movhi
 392:../../Utilities/Log/lcd_log.c ****       LCD_Scrolled = ENABLE;
 941              		.loc 1 392 0
 942 0068 304B     		ldr	r3, .L45+24
 943 006a 0122     		movs	r2, #1
 944 006c 1A70     		strb	r2, [r3]
 945              	.L37:
 393:../../Utilities/Log/lcd_log.c ****     }
 394:../../Utilities/Log/lcd_log.c ****     
 395:../../Utilities/Log/lcd_log.c ****   }
 396:../../Utilities/Log/lcd_log.c ****   
 397:../../Utilities/Log/lcd_log.c ****   if(LCD_ScrollActive == ENABLE)
 946              		.loc 1 397 0
 947 006e 294B     		ldr	r3, .L45
 948 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 949 0072 012B     		cmp	r3, #1
 950 0074 4AD1     		bne	.L40
 398:../../Utilities/Log/lcd_log.c ****   {
 399:../../Utilities/Log/lcd_log.c ****     LCD_Lock = ENABLE;
 951              		.loc 1 399 0
 952 0076 2C4B     		ldr	r3, .L45+20
 953 0078 0122     		movs	r2, #1
 954 007a 1A70     		strb	r2, [r3]
 400:../../Utilities/Log/lcd_log.c ****     
 401:../../Utilities/Log/lcd_log.c ****     if(LCD_CacheBuffer_yptr_bottom > LCD_CacheBuffer_yptr_top) 
 955              		.loc 1 401 0
 956 007c 264B     		ldr	r3, .L45+4
 957 007e 1A88     		ldrh	r2, [r3]
 958 0080 274B     		ldr	r3, .L45+12
 959 0082 1B88     		ldrh	r3, [r3]
 960 0084 9A42     		cmp	r2, r3
 961 0086 13D9     		bls	.L41
 402:../../Utilities/Log/lcd_log.c ****     {
 403:../../Utilities/Log/lcd_log.c ****       
 404:../../Utilities/Log/lcd_log.c ****       if((LCD_CacheBuffer_yptr_bottom  - LCD_CacheBuffer_yptr_top) <  YWINDOW_SIZE )
 962              		.loc 1 404 0
 963 0088 234B     		ldr	r3, .L45+4
 964 008a 1B88     		ldrh	r3, [r3]
 965 008c 1A46     		mov	r2, r3
 966 008e 244B     		ldr	r3, .L45+12
 967 0090 1B88     		ldrh	r3, [r3]
 968 0092 D31A     		subs	r3, r2, r3
 969 0094 102B     		cmp	r3, #16
ARM GAS  /tmp/ccTRYnLd.s 			page 25


 970 0096 04DC     		bgt	.L42
 405:../../Utilities/Log/lcd_log.c ****       {
 406:../../Utilities/Log/lcd_log.c ****         LCD_Lock = DISABLE;
 971              		.loc 1 406 0
 972 0098 234B     		ldr	r3, .L45+20
 973 009a 0022     		movs	r2, #0
 974 009c 1A70     		strb	r2, [r3]
 407:../../Utilities/Log/lcd_log.c ****         return ERROR;
 975              		.loc 1 407 0
 976 009e 0023     		movs	r3, #0
 977 00a0 35E0     		b	.L39
 978              	.L42:
 408:../../Utilities/Log/lcd_log.c ****       }
 409:../../Utilities/Log/lcd_log.c ****       
 410:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_bottom --;
 979              		.loc 1 410 0
 980 00a2 1D4B     		ldr	r3, .L45+4
 981 00a4 1B88     		ldrh	r3, [r3]
 982 00a6 013B     		subs	r3, r3, #1
 983 00a8 9AB2     		uxth	r2, r3
 984 00aa 1B4B     		ldr	r3, .L45+4
 985 00ac 1A80     		strh	r2, [r3]	@ movhi
 986 00ae 22E0     		b	.L43
 987              	.L41:
 411:../../Utilities/Log/lcd_log.c ****     }
 412:../../Utilities/Log/lcd_log.c ****     else if(LCD_CacheBuffer_yptr_bottom <= LCD_CacheBuffer_yptr_top)
 988              		.loc 1 412 0
 989 00b0 194B     		ldr	r3, .L45+4
 990 00b2 1A88     		ldrh	r2, [r3]
 991 00b4 1A4B     		ldr	r3, .L45+12
 992 00b6 1B88     		ldrh	r3, [r3]
 993 00b8 9A42     		cmp	r2, r3
 994 00ba 1CD8     		bhi	.L43
 413:../../Utilities/Log/lcd_log.c ****     {
 414:../../Utilities/Log/lcd_log.c ****       
 415:../../Utilities/Log/lcd_log.c ****       if((LCD_CACHE_DEPTH  - LCD_CacheBuffer_yptr_top + LCD_CacheBuffer_yptr_bottom) < YWINDOW_SIZE
 995              		.loc 1 415 0
 996 00bc 184B     		ldr	r3, .L45+12
 997 00be 1B88     		ldrh	r3, [r3]
 998 00c0 C3F17503 		rsb	r3, r3, #117
 999 00c4 144A     		ldr	r2, .L45+4
 1000 00c6 1288     		ldrh	r2, [r2]
 1001 00c8 1344     		add	r3, r3, r2
 1002 00ca 102B     		cmp	r3, #16
 1003 00cc 04DC     		bgt	.L44
 416:../../Utilities/Log/lcd_log.c ****       {
 417:../../Utilities/Log/lcd_log.c ****         LCD_Lock = DISABLE;
 1004              		.loc 1 417 0
 1005 00ce 164B     		ldr	r3, .L45+20
 1006 00d0 0022     		movs	r2, #0
 1007 00d2 1A70     		strb	r2, [r3]
 418:../../Utilities/Log/lcd_log.c ****         return ERROR;
 1008              		.loc 1 418 0
 1009 00d4 0023     		movs	r3, #0
 1010 00d6 1AE0     		b	.L39
 1011              	.L44:
 419:../../Utilities/Log/lcd_log.c ****       }
ARM GAS  /tmp/ccTRYnLd.s 			page 26


 420:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_bottom --;
 1012              		.loc 1 420 0
 1013 00d8 0F4B     		ldr	r3, .L45+4
 1014 00da 1B88     		ldrh	r3, [r3]
 1015 00dc 013B     		subs	r3, r3, #1
 1016 00de 9AB2     		uxth	r2, r3
 1017 00e0 0D4B     		ldr	r3, .L45+4
 1018 00e2 1A80     		strh	r2, [r3]	@ movhi
 421:../../Utilities/Log/lcd_log.c ****       
 422:../../Utilities/Log/lcd_log.c ****       if(LCD_CacheBuffer_yptr_bottom == 0xFFFF)
 1019              		.loc 1 422 0
 1020 00e4 0C4B     		ldr	r3, .L45+4
 1021 00e6 1B88     		ldrh	r3, [r3]
 1022 00e8 4FF6FF72 		movw	r2, #65535
 1023 00ec 9342     		cmp	r3, r2
 1024 00ee 02D1     		bne	.L43
 423:../../Utilities/Log/lcd_log.c ****       {
 424:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer_yptr_bottom = LCD_CACHE_DEPTH - 2;
 1025              		.loc 1 424 0
 1026 00f0 094B     		ldr	r3, .L45+4
 1027 00f2 7322     		movs	r2, #115
 1028 00f4 1A80     		strh	r2, [r3]	@ movhi
 1029              	.L43:
 425:../../Utilities/Log/lcd_log.c ****       }
 426:../../Utilities/Log/lcd_log.c ****     }
 427:../../Utilities/Log/lcd_log.c ****     LCD_ScrollBackStep++;
 1030              		.loc 1 427 0
 1031 00f6 0E4B     		ldr	r3, .L45+28
 1032 00f8 1B88     		ldrh	r3, [r3]
 1033 00fa 0133     		adds	r3, r3, #1
 1034 00fc 9AB2     		uxth	r2, r3
 1035 00fe 0C4B     		ldr	r3, .L45+28
 1036 0100 1A80     		strh	r2, [r3]	@ movhi
 428:../../Utilities/Log/lcd_log.c ****     LCD_LOG_UpdateDisplay();
 1037              		.loc 1 428 0
 1038 0102 FFF7FEFF 		bl	LCD_LOG_UpdateDisplay
 429:../../Utilities/Log/lcd_log.c ****     LCD_Lock = DISABLE;
 1039              		.loc 1 429 0
 1040 0106 084B     		ldr	r3, .L45+20
 1041 0108 0022     		movs	r2, #0
 1042 010a 1A70     		strb	r2, [r3]
 1043              	.L40:
 430:../../Utilities/Log/lcd_log.c ****   }
 431:../../Utilities/Log/lcd_log.c ****   return SUCCESS;
 1044              		.loc 1 431 0
 1045 010c 0123     		movs	r3, #1
 1046              	.L39:
 432:../../Utilities/Log/lcd_log.c **** }
 1047              		.loc 1 432 0
 1048 010e 1846     		mov	r0, r3
 1049 0110 80BD     		pop	{r7, pc}
 1050              	.L46:
 1051 0112 00BF     		.align	2
 1052              	.L45:
 1053 0114 00000000 		.word	LCD_ScrollActive
 1054 0118 00000000 		.word	LCD_CacheBuffer_yptr_bottom
 1055 011c 00000000 		.word	LCD_CacheBuffer_yptr_bottom_bak
ARM GAS  /tmp/ccTRYnLd.s 			page 27


 1056 0120 00000000 		.word	LCD_CacheBuffer_yptr_top
 1057 0124 00000000 		.word	LCD_CacheBuffer_yptr_top_bak
 1058 0128 00000000 		.word	LCD_Lock
 1059 012c 00000000 		.word	LCD_Scrolled
 1060 0130 00000000 		.word	LCD_ScrollBackStep
 1061              		.cfi_endproc
 1062              	.LFE142:
 1064              		.section	.text.LCD_LOG_ScrollForward,"ax",%progbits
 1065              		.align	2
 1066              		.global	LCD_LOG_ScrollForward
 1067              		.thumb
 1068              		.thumb_func
 1070              	LCD_LOG_ScrollForward:
 1071              	.LFB143:
 433:../../Utilities/Log/lcd_log.c **** 
 434:../../Utilities/Log/lcd_log.c **** /**
 435:../../Utilities/Log/lcd_log.c ****   * @brief  Display next text frame
 436:../../Utilities/Log/lcd_log.c ****   * @param  None
 437:../../Utilities/Log/lcd_log.c ****   * @retval Status
 438:../../Utilities/Log/lcd_log.c ****   */
 439:../../Utilities/Log/lcd_log.c **** ErrorStatus LCD_LOG_ScrollForward(void)
 440:../../Utilities/Log/lcd_log.c **** {
 1072              		.loc 1 440 0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 1, uses_anonymous_args = 0
 1076 0000 80B5     		push	{r7, lr}
 1077              	.LCFI33:
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 00AF     		add	r7, sp, #0
 1082              	.LCFI34:
 1083              		.cfi_def_cfa_register 7
 441:../../Utilities/Log/lcd_log.c ****   
 442:../../Utilities/Log/lcd_log.c ****   if(LCD_ScrollBackStep != 0)
 1084              		.loc 1 442 0
 1085 0004 2F4B     		ldr	r3, .L54
 1086 0006 1B88     		ldrh	r3, [r3]
 1087 0008 002B     		cmp	r3, #0
 1088 000a 55D0     		beq	.L48
 443:../../Utilities/Log/lcd_log.c ****   {
 444:../../Utilities/Log/lcd_log.c ****     if(LCD_ScrollActive == DISABLE)
 1089              		.loc 1 444 0
 1090 000c 2E4B     		ldr	r3, .L54+4
 1091 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1092 0010 002B     		cmp	r3, #0
 1093 0012 30D1     		bne	.L49
 445:../../Utilities/Log/lcd_log.c ****     {
 446:../../Utilities/Log/lcd_log.c ****       
 447:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_bottom_bak = LCD_CacheBuffer_yptr_bottom;
 1094              		.loc 1 447 0
 1095 0014 2D4B     		ldr	r3, .L54+8
 1096 0016 1A88     		ldrh	r2, [r3]
 1097 0018 2D4B     		ldr	r3, .L54+12
 1098 001a 1A80     		strh	r2, [r3]	@ movhi
 448:../../Utilities/Log/lcd_log.c ****       LCD_CacheBuffer_yptr_top_bak    = LCD_CacheBuffer_yptr_top;
ARM GAS  /tmp/ccTRYnLd.s 			page 28


 1099              		.loc 1 448 0
 1100 001c 2D4B     		ldr	r3, .L54+16
 1101 001e 1A88     		ldrh	r2, [r3]
 1102 0020 2D4B     		ldr	r3, .L54+20
 1103 0022 1A80     		strh	r2, [r3]	@ movhi
 449:../../Utilities/Log/lcd_log.c ****       
 450:../../Utilities/Log/lcd_log.c ****       if(LCD_CacheBuffer_yptr_bottom > LCD_CacheBuffer_yptr_top) 
 1104              		.loc 1 450 0
 1105 0024 294B     		ldr	r3, .L54+8
 1106 0026 1A88     		ldrh	r2, [r3]
 1107 0028 2A4B     		ldr	r3, .L54+16
 1108 002a 1B88     		ldrh	r3, [r3]
 1109 002c 9A42     		cmp	r2, r3
 1110 002e 0CD9     		bls	.L50
 451:../../Utilities/Log/lcd_log.c ****       {
 452:../../Utilities/Log/lcd_log.c ****         
 453:../../Utilities/Log/lcd_log.c ****         if ((LCD_CacheBuffer_yptr_bottom - LCD_CacheBuffer_yptr_top) <=  YWINDOW_SIZE)
 1111              		.loc 1 453 0
 1112 0030 264B     		ldr	r3, .L54+8
 1113 0032 1B88     		ldrh	r3, [r3]
 1114 0034 1A46     		mov	r2, r3
 1115 0036 274B     		ldr	r3, .L54+16
 1116 0038 1B88     		ldrh	r3, [r3]
 1117 003a D31A     		subs	r3, r2, r3
 1118 003c 112B     		cmp	r3, #17
 1119 003e 04DC     		bgt	.L50
 454:../../Utilities/Log/lcd_log.c ****         {
 455:../../Utilities/Log/lcd_log.c ****           LCD_Lock = DISABLE;
 1120              		.loc 1 455 0
 1121 0040 264B     		ldr	r3, .L54+24
 1122 0042 0022     		movs	r2, #0
 1123 0044 1A70     		strb	r2, [r3]
 456:../../Utilities/Log/lcd_log.c ****           return ERROR;
 1124              		.loc 1 456 0
 1125 0046 0023     		movs	r3, #0
 1126 0048 3AE0     		b	.L51
 1127              	.L50:
 457:../../Utilities/Log/lcd_log.c ****         }
 458:../../Utilities/Log/lcd_log.c ****       }
 459:../../Utilities/Log/lcd_log.c ****       LCD_ScrollActive = ENABLE;
 1128              		.loc 1 459 0
 1129 004a 1F4B     		ldr	r3, .L54+4
 1130 004c 0122     		movs	r2, #1
 1131 004e 1A70     		strb	r2, [r3]
 460:../../Utilities/Log/lcd_log.c ****       
 461:../../Utilities/Log/lcd_log.c ****       if((LCD_CacheBuffer_yptr_bottom  > LCD_CacheBuffer_yptr_top)&&
 1132              		.loc 1 461 0
 1133 0050 1E4B     		ldr	r3, .L54+8
 1134 0052 1A88     		ldrh	r2, [r3]
 1135 0054 1F4B     		ldr	r3, .L54+16
 1136 0056 1B88     		ldrh	r3, [r3]
 1137 0058 9A42     		cmp	r2, r3
 1138 005a 0CD9     		bls	.L49
 462:../../Utilities/Log/lcd_log.c ****          (LCD_Scrolled == DISABLE ))
 1139              		.loc 1 462 0 discriminator 1
 1140 005c 204B     		ldr	r3, .L54+28
 1141 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccTRYnLd.s 			page 29


 461:../../Utilities/Log/lcd_log.c ****          (LCD_Scrolled == DISABLE ))
 1142              		.loc 1 461 0 discriminator 1
 1143 0060 002B     		cmp	r3, #0
 1144 0062 08D1     		bne	.L49
 463:../../Utilities/Log/lcd_log.c ****       {
 464:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer_yptr_bottom--;
 1145              		.loc 1 464 0
 1146 0064 194B     		ldr	r3, .L54+8
 1147 0066 1B88     		ldrh	r3, [r3]
 1148 0068 013B     		subs	r3, r3, #1
 1149 006a 9AB2     		uxth	r2, r3
 1150 006c 174B     		ldr	r3, .L54+8
 1151 006e 1A80     		strh	r2, [r3]	@ movhi
 465:../../Utilities/Log/lcd_log.c ****         LCD_Scrolled = ENABLE;
 1152              		.loc 1 465 0
 1153 0070 1B4B     		ldr	r3, .L54+28
 1154 0072 0122     		movs	r2, #1
 1155 0074 1A70     		strb	r2, [r3]
 1156              	.L49:
 466:../../Utilities/Log/lcd_log.c ****       }
 467:../../Utilities/Log/lcd_log.c ****       
 468:../../Utilities/Log/lcd_log.c ****     }
 469:../../Utilities/Log/lcd_log.c ****     
 470:../../Utilities/Log/lcd_log.c ****     if(LCD_ScrollActive == ENABLE)
 1157              		.loc 1 470 0
 1158 0076 144B     		ldr	r3, .L54+4
 1159 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1160 007a 012B     		cmp	r3, #1
 1161 007c 1AD1     		bne	.L52
 471:../../Utilities/Log/lcd_log.c ****     {
 472:../../Utilities/Log/lcd_log.c ****       LCD_Lock = ENABLE;
 1162              		.loc 1 472 0
 1163 007e 174B     		ldr	r3, .L54+24
 1164 0080 0122     		movs	r2, #1
 1165 0082 1A70     		strb	r2, [r3]
 473:../../Utilities/Log/lcd_log.c ****       LCD_ScrollBackStep--;
 1166              		.loc 1 473 0
 1167 0084 0F4B     		ldr	r3, .L54
 1168 0086 1B88     		ldrh	r3, [r3]
 1169 0088 013B     		subs	r3, r3, #1
 1170 008a 9AB2     		uxth	r2, r3
 1171 008c 0D4B     		ldr	r3, .L54
 1172 008e 1A80     		strh	r2, [r3]	@ movhi
 474:../../Utilities/Log/lcd_log.c ****       
 475:../../Utilities/Log/lcd_log.c ****       if(++LCD_CacheBuffer_yptr_bottom == LCD_CACHE_DEPTH)
 1173              		.loc 1 475 0
 1174 0090 0E4B     		ldr	r3, .L54+8
 1175 0092 1B88     		ldrh	r3, [r3]
 1176 0094 0133     		adds	r3, r3, #1
 1177 0096 9AB2     		uxth	r2, r3
 1178 0098 0C4B     		ldr	r3, .L54+8
 1179 009a 1A80     		strh	r2, [r3]	@ movhi
 1180 009c 0B4B     		ldr	r3, .L54+8
 1181 009e 1B88     		ldrh	r3, [r3]
 1182 00a0 752B     		cmp	r3, #117
 1183 00a2 02D1     		bne	.L53
 476:../../Utilities/Log/lcd_log.c ****       {
ARM GAS  /tmp/ccTRYnLd.s 			page 30


 477:../../Utilities/Log/lcd_log.c ****         LCD_CacheBuffer_yptr_bottom = 0;
 1184              		.loc 1 477 0
 1185 00a4 094B     		ldr	r3, .L54+8
 1186 00a6 0022     		movs	r2, #0
 1187 00a8 1A80     		strh	r2, [r3]	@ movhi
 1188              	.L53:
 478:../../Utilities/Log/lcd_log.c ****       }
 479:../../Utilities/Log/lcd_log.c ****       
 480:../../Utilities/Log/lcd_log.c ****       LCD_LOG_UpdateDisplay();
 1189              		.loc 1 480 0
 1190 00aa FFF7FEFF 		bl	LCD_LOG_UpdateDisplay
 481:../../Utilities/Log/lcd_log.c ****       LCD_Lock = DISABLE;
 1191              		.loc 1 481 0
 1192 00ae 0B4B     		ldr	r3, .L54+24
 1193 00b0 0022     		movs	r2, #0
 1194 00b2 1A70     		strb	r2, [r3]
 1195              	.L52:
 482:../../Utilities/Log/lcd_log.c ****       
 483:../../Utilities/Log/lcd_log.c ****     } 
 484:../../Utilities/Log/lcd_log.c ****     return SUCCESS;
 1196              		.loc 1 484 0
 1197 00b4 0123     		movs	r3, #1
 1198 00b6 03E0     		b	.L51
 1199              	.L48:
 485:../../Utilities/Log/lcd_log.c ****   }
 486:../../Utilities/Log/lcd_log.c ****   else // LCD_ScrollBackStep == 0 
 487:../../Utilities/Log/lcd_log.c ****   {
 488:../../Utilities/Log/lcd_log.c ****     LCD_Lock = DISABLE;
 1200              		.loc 1 488 0
 1201 00b8 084B     		ldr	r3, .L54+24
 1202 00ba 0022     		movs	r2, #0
 1203 00bc 1A70     		strb	r2, [r3]
 489:../../Utilities/Log/lcd_log.c ****     return ERROR;
 1204              		.loc 1 489 0
 1205 00be 0023     		movs	r3, #0
 1206              	.L51:
 490:../../Utilities/Log/lcd_log.c ****   }  
 491:../../Utilities/Log/lcd_log.c **** }
 1207              		.loc 1 491 0
 1208 00c0 1846     		mov	r0, r3
 1209 00c2 80BD     		pop	{r7, pc}
 1210              	.L55:
 1211              		.align	2
 1212              	.L54:
 1213 00c4 00000000 		.word	LCD_ScrollBackStep
 1214 00c8 00000000 		.word	LCD_ScrollActive
 1215 00cc 00000000 		.word	LCD_CacheBuffer_yptr_bottom
 1216 00d0 00000000 		.word	LCD_CacheBuffer_yptr_bottom_bak
 1217 00d4 00000000 		.word	LCD_CacheBuffer_yptr_top
 1218 00d8 00000000 		.word	LCD_CacheBuffer_yptr_top_bak
 1219 00dc 00000000 		.word	LCD_Lock
 1220 00e0 00000000 		.word	LCD_Scrolled
 1221              		.cfi_endproc
 1222              	.LFE143:
 1224              		.text
 1225              	.Letext0:
 1226              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
ARM GAS  /tmp/ccTRYnLd.s 			page 31


 1227              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1228              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1229              		.file 5 "../../Drivers/BSP/STM32F769I-Discovery/../../../Utilities/Fonts/fonts.h"
 1230              		.file 6 "../../Drivers/BSP/STM32F769I-Discovery/stm32f769i_discovery_lcd.h"
 1231              		.file 7 "../../Utilities/Log/lcd_log.h"
 1232              		.file 8 "../../Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/ccTRYnLd.s 			page 32


DEFINED SYMBOLS
                            *ABS*:0000000000000000 lcd_log.c
                            *COM*:0000000000003c54 LCD_CacheBuffer
                            *COM*:0000000000000004 LCD_LineColor
                            *COM*:0000000000000002 LCD_CacheBuffer_xptr
                            *COM*:0000000000000002 LCD_CacheBuffer_yptr_top
                            *COM*:0000000000000002 LCD_CacheBuffer_yptr_bottom
                            *COM*:0000000000000002 LCD_CacheBuffer_yptr_top_bak
                            *COM*:0000000000000002 LCD_CacheBuffer_yptr_bottom_bak
                            *COM*:0000000000000001 LCD_CacheBuffer_yptr_invert
                            *COM*:0000000000000001 LCD_ScrollActive
                            *COM*:0000000000000001 LCD_Lock
                            *COM*:0000000000000001 LCD_Scrolled
                            *COM*:0000000000000002 LCD_ScrollBackStep
     /tmp/ccTRYnLd.s:33     .text.LCD_LOG_Init:0000000000000000 $t
     /tmp/ccTRYnLd.s:38     .text.LCD_LOG_Init:0000000000000000 LCD_LOG_Init
     /tmp/ccTRYnLd.s:69     .text.LCD_LOG_DeInit:0000000000000000 LCD_LOG_DeInit
     /tmp/ccTRYnLd.s:64     .text.LCD_LOG_DeInit:0000000000000000 $t
     /tmp/ccTRYnLd.s:140    .text.LCD_LOG_DeInit:0000000000000050 $d
     /tmp/ccTRYnLd.s:156    .text.LCD_LOG_SetHeader:0000000000000000 $t
     /tmp/ccTRYnLd.s:161    .text.LCD_LOG_SetHeader:0000000000000000 LCD_LOG_SetHeader
     /tmp/ccTRYnLd.s:233    .text.LCD_LOG_SetHeader:0000000000000068 $d
     /tmp/ccTRYnLd.s:241    .text.LCD_LOG_SetFooter:0000000000000000 $t
     /tmp/ccTRYnLd.s:246    .text.LCD_LOG_SetFooter:0000000000000000 LCD_LOG_SetFooter
     /tmp/ccTRYnLd.s:331    .text.LCD_LOG_SetFooter:0000000000000084 $d
     /tmp/ccTRYnLd.s:338    .text.LCD_LOG_ClearTextZone:0000000000000000 $t
     /tmp/ccTRYnLd.s:343    .text.LCD_LOG_ClearTextZone:0000000000000000 LCD_LOG_ClearTextZone
     /tmp/ccTRYnLd.s:397    .text.__io_putchar:0000000000000000 $t
     /tmp/ccTRYnLd.s:402    .text.__io_putchar:0000000000000000 __io_putchar
     /tmp/ccTRYnLd.s:679    .text.LCD_LOG_UpdateDisplay:0000000000000000 LCD_LOG_UpdateDisplay
     /tmp/ccTRYnLd.s:658    .text.__io_putchar:0000000000000190 $d
     /tmp/ccTRYnLd.s:674    .text.LCD_LOG_UpdateDisplay:0000000000000000 $t
     /tmp/ccTRYnLd.s:851    .text.LCD_LOG_UpdateDisplay:0000000000000100 $d
     /tmp/ccTRYnLd.s:859    .text.LCD_LOG_ScrollBack:0000000000000000 $t
     /tmp/ccTRYnLd.s:864    .text.LCD_LOG_ScrollBack:0000000000000000 LCD_LOG_ScrollBack
     /tmp/ccTRYnLd.s:1053   .text.LCD_LOG_ScrollBack:0000000000000114 $d
     /tmp/ccTRYnLd.s:1065   .text.LCD_LOG_ScrollForward:0000000000000000 $t
     /tmp/ccTRYnLd.s:1070   .text.LCD_LOG_ScrollForward:0000000000000000 LCD_LOG_ScrollForward
     /tmp/ccTRYnLd.s:1213   .text.LCD_LOG_ScrollForward:00000000000000c4 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
BSP_LCD_Clear
BSP_LCD_SetFont
BSP_LCD_SetTextColor
BSP_LCD_GetXSize
BSP_LCD_FillRect
BSP_LCD_SetBackColor
BSP_LCD_DisplayStringAt
Font16
Font12
BSP_LCD_GetYSize
BSP_LCD_ClearStringLine
BSP_LCD_GetFont
BSP_LCD_DisplayStringAtLine
