ARM GAS  /tmp/ccPgm9iD.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"FreeRTOS_ARP.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.bss.xARPCache,"aw",%nobits
  21              		.align	2
  24              	xARPCache:
  25 0000 00000000 		.space	72
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.section	.bss.xLastGratuitousARPTime,"aw",%nobits
  27              		.align	2
  30              	xLastGratuitousARPTime:
  31 0000 00000000 		.space	4
  32              		.section	.rodata.xDefaultPartARPPacketHeader,"a",%progbits
  33              		.align	2
  36              	xDefaultPartARPPacketHeader:
  37 0000 FF       		.byte	-1
  38 0001 FF       		.byte	-1
  39 0002 FF       		.byte	-1
  40 0003 FF       		.byte	-1
  41 0004 FF       		.byte	-1
  42 0005 FF       		.byte	-1
  43 0006 00       		.byte	0
  44 0007 00       		.byte	0
  45 0008 00       		.byte	0
  46 0009 00       		.byte	0
  47 000a 00       		.byte	0
  48 000b 00       		.byte	0
  49 000c 08       		.byte	8
  50 000d 06       		.byte	6
  51 000e 00       		.byte	0
  52 000f 01       		.byte	1
  53 0010 08       		.byte	8
  54 0011 00       		.byte	0
  55 0012 06       		.byte	6
  56 0013 04       		.byte	4
  57 0014 00       		.byte	0
  58 0015 01       		.byte	1
  59 0016 00       		.byte	0
ARM GAS  /tmp/ccPgm9iD.s 			page 2


  60 0017 00       		.byte	0
  61 0018 00       		.byte	0
  62 0019 00       		.byte	0
  63 001a 00       		.byte	0
  64 001b 00       		.byte	0
  65 001c 00       		.byte	0
  66 001d 00       		.byte	0
  67 001e 00       		.byte	0
  68 001f 00       		.byte	0
  69 0020 00       		.byte	0
  70 0021 00       		.byte	0
  71 0022 00       		.byte	0
  72 0023 00       		.byte	0
  73 0024 00       		.byte	0
  74 0025 00       		.byte	0
  75              		.section	.text.eARPProcessPacket,"ax",%progbits
  76              		.align	2
  77              		.global	eARPProcessPacket
  78              		.thumb
  79              		.thumb_func
  81              	eARPProcessPacket:
  82              	.LFB29:
  83              		.file 1 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c"
   1:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*
   2:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * FreeRTOS+TCP Labs Build 160919 (C) 2016 Real Time Engineers ltd.
   3:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * Authors include Hein Tibosch and Richard Barry
   4:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
   5:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *******************************************************************************
   6:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
   7:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***                                                                         ***
   8:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***                                                                         ***
   9:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   FREERTOS+TCP IS STILL IN THE LAB (mainly because the FTP and HTTP     ***
  10:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   demos have a dependency on FreeRTOS+FAT, which is only in the Labs    ***
  11:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   download):                                                            ***
  12:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***                                                                         ***
  13:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   FreeRTOS+TCP is functional and has been used in commercial products   ***
  14:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   for some time.  Be aware however that we are still refining its       ***
  15:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   design, the source code does not yet quite conform to the strict      ***
  16:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   coding and style standards mandated by Real Time Engineers ltd., and  ***
  17:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   the documentation and testing is not necessarily complete.            ***
  18:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***                                                                         ***
  19:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   PLEASE REPORT EXPERIENCES USING THE SUPPORT RESOURCES FOUND ON THE    ***
  20:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   URL: http://www.FreeRTOS.org/contact  Active early adopters may, at   ***
  21:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   the sole discretion of Real Time Engineers Ltd., be offered versions  ***
  22:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***   under a license other than that described below.                      ***
  23:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***                                                                         ***
  24:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***                                                                         ***
  25:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
  26:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *******************************************************************************
  27:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  28:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * FreeRTOS+TCP can be used under two different free open source licenses.  The
  29:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * license that applies is dependent on the processor on which FreeRTOS+TCP is
  30:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * executed, as follows:
  31:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  32:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * If FreeRTOS+TCP is executed on one of the processors listed under the Special
  33:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * License Arrangements heading of the FreeRTOS+TCP license information web
  34:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * page, then it can be used under the terms of the FreeRTOS Open Source
ARM GAS  /tmp/ccPgm9iD.s 			page 3


  35:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * License.  If FreeRTOS+TCP is used on any other processor, then it can be used
  36:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * under the terms of the GNU General Public License V2.  Links to the relevant
  37:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * licenses follow:
  38:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  39:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * The FreeRTOS+TCP License Information Page: http://www.FreeRTOS.org/tcp_license
  40:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * The FreeRTOS Open Source License: http://www.FreeRTOS.org/license
  41:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * The GNU General Public License Version 2: http://www.FreeRTOS.org/gpl-2.0.txt
  42:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  43:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * FreeRTOS+TCP is distributed in the hope that it will be useful.  You cannot
  44:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * use FreeRTOS+TCP unless you agree that you use the software 'as is'.
  45:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * FreeRTOS+TCP is provided WITHOUT ANY WARRANTY; without even the implied
  46:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR
  47:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * PURPOSE. Real Time Engineers Ltd. disclaims all conditions and terms, be they
  48:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * implied, expressed, or statutory.
  49:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  50:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * 1 tab == 4 spaces!
  51:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  52:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * http://www.FreeRTOS.org
  53:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * http://www.FreeRTOS.org/plus
  54:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * http://www.FreeRTOS.org/labs
  55:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  *
  56:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  */
  57:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  58:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* Standard includes. */
  59:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include <stdint.h>
  60:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include <stdio.h>
  61:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  62:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* FreeRTOS includes. */
  63:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS.h"
  64:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "task.h"
  65:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "queue.h"
  66:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "semphr.h"
  67:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  68:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* FreeRTOS+TCP includes. */
  69:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS_IP.h"
  70:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS_Sockets.h"
  71:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS_IP_Private.h"
  72:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS_ARP.h"
  73:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS_UDP_IP.h"
  74:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "FreeRTOS_DHCP.h"
  75:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigUSE_LLMNR == 1 )
  76:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#include "FreeRTOS_DNS.h"
  77:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif /* ipconfigUSE_LLMNR */
  78:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "NetworkInterface.h"
  79:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #include "NetworkBufferManagement.h"
  80:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  81:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  82:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* When the age of an entry in the ARP table reaches this value (it counts down
  83:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** to zero, so this is an old entry) an ARP request will be sent to see if the
  84:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** entry is still valid and can therefore be refreshed. */
  85:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #define arpMAX_ARP_AGE_BEFORE_NEW_ARP_REQUEST		( 3 )
  86:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  87:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* The time between gratuitous ARPs. */
  88:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #ifndef arpGRATUITOUS_ARP_PERIOD
  89:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#define arpGRATUITOUS_ARP_PERIOD					( pdMS_TO_TICKS( 20000 ) )
  90:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif
  91:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
ARM GAS  /tmp/ccPgm9iD.s 			page 4


  92:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
  93:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  94:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*
  95:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * Lookup an MAC address in the ARP cache from the IP address.
  96:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  */
  97:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** static eARPLookupResult_t prvCacheLookup( uint32_t ulAddressToLookup, MACAddress_t * const pxMACAdd
  98:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
  99:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* The ARP cache. */
 102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** static ARPCacheRow_t xARPCache[ ipconfigARP_CACHE_ENTRIES ];
 103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* The time at which the last gratuitous ARP was sent.  Gratuitous ARPs are used
 105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** to ensure ARP tables are up to date and to detect IP address conflicts. */
 106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** static TickType_t xLastGratuitousARPTime = ( TickType_t ) 0;
 107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*
 109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * IP-clash detection is currently only used internally. When DHCP doesn't respond, the
 110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * driver can try out a random LinkLayer IP address (169.254.x.x).  It will send out a
 111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  * gratuitos ARP message and, after a period of time, check the variables here below:
 112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c ****  */
 113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigARP_USE_CLASH_DETECTION != 0 )
 114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* Becomes non-zero if another device responded to a gratuitos ARP message. */
 115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	BaseType_t xARPHadIPClash;
 116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* MAC-address of the other device containing the same IP-address. */
 117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	MACAddress_t xARPClashMacAddress;
 118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif /* ipconfigARP_USE_CLASH_DETECTION */
 119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /* Part of the Ethernet and ARP headers are always constant when sending an IPv4
 121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** ARP packet.  This array defines the constant parts, allowing this part of the
 122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** packet to be filled in using a simple memcpy() instead of individual writes. */
 123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** static const uint8_t xDefaultPartARPPacketHeader[] =
 124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 	/* Ethernet destination address. */
 126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 	/* Ethernet source address. */
 127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x08, 0x06, 							/* Ethernet frame type (ipARP_FRAME_TYPE). */
 128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x00, 0x01, 							/* usHardwareType (ipARP_HARDWARE_TYPE_ETHERNET). */
 129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x08, 0x00,								/* usProtocolType. */
 130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	ipMAC_ADDRESS_LENGTH_BYTES, 			/* ucHardwareAddressLength. */
 131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	ipIP_ADDRESS_LENGTH_BYTES, 				/* ucProtocolAddressLength. */
 132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x00, 0x01, 							/* usOperation (ipARP_REQUEST). */
 133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 	/* xSenderHardwareAddress. */
 134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x00, 0x00, 0x00, 0x00, 				/* ulSenderProtocolAddress. */
 135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	0x00, 0x00, 0x00, 0x00, 0x00, 0x00 		/* xTargetHardwareAddress. */
 136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** };
 137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** eFrameProcessingResult_t eARPProcessPacket( ARPPacket_t * const pxARPFrame )
 141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
  84              		.loc 1 141 0
  85              		.cfi_startproc
  86              		@ args = 0, pretend = 0, frame = 16
  87              		@ frame_needed = 1, uses_anonymous_args = 0
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI0:
  90              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccPgm9iD.s 			page 5


  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 84B0     		sub	sp, sp, #16
  94              	.LCFI1:
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              	.LCFI2:
  98              		.cfi_def_cfa_register 7
  99 0006 7860     		str	r0, [r7, #4]
 142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** eFrameProcessingResult_t eReturn = eReleaseBuffer;
 100              		.loc 1 142 0
 101 0008 0023     		movs	r3, #0
 102 000a FB73     		strb	r3, [r7, #15]
 143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** ARPHeader_t *pxARPHeader;
 144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	pxARPHeader = &( pxARPFrame->xARPHeader );
 103              		.loc 1 145 0
 104 000c 7B68     		ldr	r3, [r7, #4]
 105 000e 0E33     		adds	r3, r3, #14
 106 0010 BB60     		str	r3, [r7, #8]
 146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	traceARP_PACKET_RECEIVED();
 148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* Don't do anything if the local IP address is zero because
 150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	that means a DHCP request has not completed. */
 151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	if( *ipLOCAL_IP_ADDRESS_POINTER != 0UL )
 107              		.loc 1 151 0
 108 0012 394B     		ldr	r3, .L10
 109 0014 5B69     		ldr	r3, [r3, #20]
 110 0016 002B     		cmp	r3, #0
 111 0018 69D0     		beq	.L2
 152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		switch( pxARPHeader->usOperation )
 112              		.loc 1 153 0
 113 001a BB68     		ldr	r3, [r7, #8]
 114 001c DB88     		ldrh	r3, [r3, #6]	@ unaligned
 115 001e 9BB2     		uxth	r3, r3
 116 0020 B3F5807F 		cmp	r3, #256
 117 0024 03D0     		beq	.L4
 118 0026 B3F5007F 		cmp	r3, #512
 119 002a 55D0     		beq	.L5
 154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			case ipARP_REQUEST	:
 156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* The packet contained an ARP request.  Was it for the IP
 157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				address of the node running this code? */
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				if( pxARPHeader->ulTargetProtocolAddress == *ipLOCAL_IP_ADDRESS_POINTER )
 159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					iptraceSENDING_ARP_REPLY( pxARPHeader->ulSenderProtocolAddress );
 161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					/* The request is for the address of this node.  Add the
 163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					entry into the ARP cache, or refresh the entry if it
 164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					already exists. */
 165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					vARPRefreshCacheEntry( &( pxARPHeader->xSenderHardwareAddress ), pxARPHeader->ulSenderProtocol
 166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					/* Generate a reply payload in the same buffer. */
 168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					pxARPHeader->usOperation = ( uint16_t ) ipARP_REPLY;
 169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					if( pxARPHeader->ulTargetProtocolAddress == pxARPHeader->ulSenderProtocolAddress )
ARM GAS  /tmp/ccPgm9iD.s 			page 6


 170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					{
 171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						/* A double IP address is detected! */
 172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						/* Give the sources MAC address the value of the broadcast address, will be swapped later */
 173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						memcpy( pxARPFrame->xEthernetHeader.xSourceAddress.ucBytes, xBroadcastMACAddress.ucBytes, siz
 174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						memset( pxARPHeader->xTargetHardwareAddress.ucBytes, '\0', sizeof( MACAddress_t ) );
 175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						pxARPHeader->ulTargetProtocolAddress = 0UL;
 176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					}
 177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					else
 178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					{
 179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						memcpy( pxARPHeader->xTargetHardwareAddress.ucBytes, pxARPHeader->xSenderHardwareAddress.ucBy
 180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						pxARPHeader->ulTargetProtocolAddress = pxARPHeader->ulSenderProtocolAddress;
 181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					}
 182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					memcpy( pxARPHeader->xSenderHardwareAddress.ucBytes, ( void * ) ipLOCAL_MAC_ADDRESS, sizeof( M
 183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					pxARPHeader->ulSenderProtocolAddress = *ipLOCAL_IP_ADDRESS_POINTER;
 184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					eReturn = eReturnEthernetFrame;
 186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				break;
 188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			case ipARP_REPLY :
 190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				iptracePROCESSING_RECEIVED_ARP_REPLY( pxARPHeader->ulTargetProtocolAddress );
 191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				vARPRefreshCacheEntry( &( pxARPHeader->xSenderHardwareAddress ), pxARPHeader->ulSenderProtocolA
 192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* Process received ARP frame to see if there is a clash. */
 193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				#if( ipconfigARP_USE_CLASH_DETECTION != 0 )
 194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					if( pxARPHeader->ulSenderProtocolAddress == *ipLOCAL_IP_ADDRESS_POINTER )
 196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					{
 197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						xARPHadIPClash = pdTRUE;
 198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						memcpy( xARPClashMacAddress.ucBytes, pxARPHeader->xSenderHardwareAddress.ucBytes, sizeof( xAR
 199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					}
 200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				#endif /* ipconfigARP_USE_CLASH_DETECTION */
 202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				break;
 203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			default :
 205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* Invalid. */
 206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				break;
 120              		.loc 1 206 0
 121 002c 5FE0     		b	.L2
 122              	.L4:
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 123              		.loc 1 158 0
 124 002e BB68     		ldr	r3, [r7, #8]
 125 0030 9A69     		ldr	r2, [r3, #24]	@ unaligned
 126 0032 314B     		ldr	r3, .L10
 127 0034 5B69     		ldr	r3, [r3, #20]
 128 0036 9A42     		cmp	r2, r3
 129 0038 4DD1     		bne	.L6
 165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 130              		.loc 1 165 0
 131 003a BB68     		ldr	r3, [r7, #8]
 132 003c 03F10802 		add	r2, r3, #8
 133 0040 BB68     		ldr	r3, [r7, #8]
 134 0042 D3F80E30 		ldr	r3, [r3, #14]	@ unaligned
 135 0046 1046     		mov	r0, r2
 136 0048 1946     		mov	r1, r3
 137 004a FFF7FEFF 		bl	vARPRefreshCacheEntry
ARM GAS  /tmp/ccPgm9iD.s 			page 7


 168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					if( pxARPHeader->ulTargetProtocolAddress == pxARPHeader->ulSenderProtocolAddress )
 138              		.loc 1 168 0
 139 004e BB68     		ldr	r3, [r7, #8]
 140 0050 0022     		movs	r2, #0
 141 0052 9A71     		strb	r2, [r3, #6]
 142 0054 0022     		movs	r2, #0
 143 0056 42F00202 		orr	r2, r2, #2
 144 005a DA71     		strb	r2, [r3, #7]
 169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					{
 145              		.loc 1 169 0
 146 005c BB68     		ldr	r3, [r7, #8]
 147 005e 9A69     		ldr	r2, [r3, #24]	@ unaligned
 148 0060 BB68     		ldr	r3, [r7, #8]
 149 0062 D3F80E30 		ldr	r3, [r3, #14]	@ unaligned
 150 0066 9A42     		cmp	r2, r3
 151 0068 17D1     		bne	.L7
 173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						memset( pxARPHeader->xTargetHardwareAddress.ucBytes, '\0', sizeof( MACAddress_t ) );
 152              		.loc 1 173 0
 153 006a 7B68     		ldr	r3, [r7, #4]
 154 006c 0633     		adds	r3, r3, #6
 155 006e 1846     		mov	r0, r3
 156 0070 2249     		ldr	r1, .L10+4
 157 0072 0622     		movs	r2, #6
 158 0074 FFF7FEFF 		bl	memcpy
 174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						pxARPHeader->ulTargetProtocolAddress = 0UL;
 159              		.loc 1 174 0
 160 0078 BB68     		ldr	r3, [r7, #8]
 161 007a 1233     		adds	r3, r3, #18
 162 007c 1846     		mov	r0, r3
 163 007e 0021     		movs	r1, #0
 164 0080 0622     		movs	r2, #6
 165 0082 FFF7FEFF 		bl	memset
 175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					}
 166              		.loc 1 175 0
 167 0086 BB68     		ldr	r3, [r7, #8]
 168 0088 0022     		movs	r2, #0
 169 008a 1A76     		strb	r2, [r3, #24]
 170 008c 0022     		movs	r2, #0
 171 008e 5A76     		strb	r2, [r3, #25]
 172 0090 0022     		movs	r2, #0
 173 0092 9A76     		strb	r2, [r3, #26]
 174 0094 0022     		movs	r2, #0
 175 0096 DA76     		strb	r2, [r3, #27]
 176 0098 0EE0     		b	.L8
 177              	.L7:
 179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 						pxARPHeader->ulTargetProtocolAddress = pxARPHeader->ulSenderProtocolAddress;
 178              		.loc 1 179 0
 179 009a BB68     		ldr	r3, [r7, #8]
 180 009c 03F11202 		add	r2, r3, #18
 181 00a0 BB68     		ldr	r3, [r7, #8]
 182 00a2 0833     		adds	r3, r3, #8
 183 00a4 1046     		mov	r0, r2
 184 00a6 1946     		mov	r1, r3
 185 00a8 0622     		movs	r2, #6
 186 00aa FFF7FEFF 		bl	memcpy
 180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					}
 187              		.loc 1 180 0
ARM GAS  /tmp/ccPgm9iD.s 			page 8


 188 00ae BB68     		ldr	r3, [r7, #8]
 189 00b0 D3F80E20 		ldr	r2, [r3, #14]	@ unaligned
 190 00b4 BB68     		ldr	r3, [r7, #8]
 191 00b6 9A61     		str	r2, [r3, #24]	@ unaligned
 192              	.L8:
 182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					pxARPHeader->ulSenderProtocolAddress = *ipLOCAL_IP_ADDRESS_POINTER;
 193              		.loc 1 182 0
 194 00b8 BB68     		ldr	r3, [r7, #8]
 195 00ba 0833     		adds	r3, r3, #8
 196 00bc 1846     		mov	r0, r3
 197 00be 0E49     		ldr	r1, .L10
 198 00c0 0622     		movs	r2, #6
 199 00c2 FFF7FEFF 		bl	memcpy
 183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 200              		.loc 1 183 0
 201 00c6 0C4B     		ldr	r3, .L10
 202 00c8 5A69     		ldr	r2, [r3, #20]
 203 00ca BB68     		ldr	r3, [r7, #8]
 204 00cc C3F80E20 		str	r2, [r3, #14]	@ unaligned
 185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 205              		.loc 1 185 0
 206 00d0 0223     		movs	r3, #2
 207 00d2 FB73     		strb	r3, [r7, #15]
 187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 208              		.loc 1 187 0
 209 00d4 0BE0     		b	.L2
 210              	.L6:
 211 00d6 0AE0     		b	.L2
 212              	.L5:
 191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* Process received ARP frame to see if there is a clash. */
 213              		.loc 1 191 0
 214 00d8 BB68     		ldr	r3, [r7, #8]
 215 00da 03F10802 		add	r2, r3, #8
 216 00de BB68     		ldr	r3, [r7, #8]
 217 00e0 D3F80E30 		ldr	r3, [r3, #14]	@ unaligned
 218 00e4 1046     		mov	r0, r2
 219 00e6 1946     		mov	r1, r3
 220 00e8 FFF7FEFF 		bl	vARPRefreshCacheEntry
 202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 221              		.loc 1 202 0
 222 00ec 00BF     		nop
 223              	.L2:
 207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	return eReturn;
 224              		.loc 1 210 0
 225 00ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 226              		.loc 1 211 0
 227 00f0 1846     		mov	r0, r3
 228 00f2 1037     		adds	r7, r7, #16
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 8
 231 00f4 BD46     		mov	sp, r7
 232              	.LCFI4:
 233              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccPgm9iD.s 			page 9


 234              		@ sp needed
 235 00f6 80BD     		pop	{r7, pc}
 236              	.L11:
 237              		.align	2
 238              	.L10:
 239 00f8 00000000 		.word	xDefaultPartUDPPacketHeader
 240 00fc 00000000 		.word	xBroadcastMACAddress
 241              		.cfi_endproc
 242              	.LFE29:
 244              		.section	.text.vARPRefreshCacheEntry,"ax",%progbits
 245              		.align	2
 246              		.global	vARPRefreshCacheEntry
 247              		.thumb
 248              		.thumb_func
 250              	vARPRefreshCacheEntry:
 251              	.LFB30:
 212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigUSE_ARP_REMOVE_ENTRY != 0 )
 215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	uint32_t ulARPRemoveCacheEntryByMac( const MACAddress_t * pxMACAddress )
 217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	BaseType_t x;
 219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	uint32_t lResult = 0;
 220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* For each entry in the ARP cache table. */
 222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		for( x = 0; x < ipconfigARP_CACHE_ENTRIES; x++ )
 223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( ( memcmp( xARPCache[ x ].xMACAddress.ucBytes, pxMACAddress->ucBytes, sizeof( pxMACAddress->u
 225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				lResult = xARPCache[ x ].ulIPAddress;
 227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				memset( &xARPCache[ x ], '\0', sizeof( xARPCache[ x ] ) );
 228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				break;
 229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		return lResult;
 233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif	/* ipconfigUSE_ARP_REMOVE_ENTRY != 0 */
 236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** void vARPRefreshCacheEntry( const MACAddress_t * pxMACAddress, const uint32_t ulIPAddress )
 239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 252              		.loc 1 239 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 32
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 80B5     		push	{r7, lr}
 257              	.LCFI5:
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 88B0     		sub	sp, sp, #32
 262              	.LCFI6:
 263              		.cfi_def_cfa_offset 40
 264 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccPgm9iD.s 			page 10


 265              	.LCFI7:
 266              		.cfi_def_cfa_register 7
 267 0006 7860     		str	r0, [r7, #4]
 268 0008 3960     		str	r1, [r7]
 240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** BaseType_t x, xIpEntry = -1, xMacEntry = -1, xUseEntry = 0;
 269              		.loc 1 240 0
 270 000a 4FF0FF33 		mov	r3, #-1
 271 000e BB61     		str	r3, [r7, #24]
 272 0010 4FF0FF33 		mov	r3, #-1
 273 0014 7B61     		str	r3, [r7, #20]
 274 0016 0023     		movs	r3, #0
 275 0018 3B61     		str	r3, [r7, #16]
 241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** uint8_t ucMinAgeFound = 0U;
 276              		.loc 1 241 0
 277 001a 0023     		movs	r3, #0
 278 001c FB73     		strb	r3, [r7, #15]
 242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#if( ipconfigARP_STORES_REMOTE_ADDRESSES == 0 )
 244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* Only process the IP address if it is on the local network.
 245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		Unless: when '*ipLOCAL_IP_ADDRESS_POINTER' equals zero, the IP-address
 246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		and netmask are still unknown. */
 247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( ( ( ulIPAddress & xNetworkAddressing.ulNetMask ) == ( ( *ipLOCAL_IP_ADDRESS_POINTER ) & xNetw
 279              		.loc 1 247 0
 280 001e 734B     		ldr	r3, .L27
 281 0020 5A69     		ldr	r2, [r3, #20]
 282 0022 3B68     		ldr	r3, [r7]
 283 0024 5A40     		eors	r2, r2, r3
 284 0026 724B     		ldr	r3, .L27+4
 285 0028 5B68     		ldr	r3, [r3, #4]
 286 002a 1340     		ands	r3, r3, r2
 287 002c 002B     		cmp	r3, #0
 288 002e 04D0     		beq	.L13
 248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			( *ipLOCAL_IP_ADDRESS_POINTER == 0ul ) )
 289              		.loc 1 248 0 discriminator 1
 290 0030 6E4B     		ldr	r3, .L27
 291 0032 5B69     		ldr	r3, [r3, #20]
 247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			( *ipLOCAL_IP_ADDRESS_POINTER == 0ul ) )
 292              		.loc 1 247 0 discriminator 1
 293 0034 002B     		cmp	r3, #0
 294 0036 40F0D580 		bne	.L12
 295              	.L13:
 249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#else
 250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* If ipconfigARP_STORES_REMOTE_ADDRESSES is non-zero, IP addresses with
 251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		a different netmask will also be stored.  After when replying to a UDP
 252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		message from a different netmask, the IP address can be looped up and a
 253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		reply sent.  This option is useful for systems with multiple gateways,
 254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		the reply will surely arrive.  If ipconfigARP_STORES_REMOTE_ADDRESSES is
 255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		zero the the gateway address is the only option. */
 256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( pdTRUE )
 257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#endif
 258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* Start with the maximum possible number. */
 260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		ucMinAgeFound--;
 296              		.loc 1 260 0
 297 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 298 003c 013B     		subs	r3, r3, #1
 299 003e FB73     		strb	r3, [r7, #15]
ARM GAS  /tmp/ccPgm9iD.s 			page 11


 261:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 262:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* For each entry in the ARP cache table. */
 263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		for( x = 0; x < ipconfigARP_CACHE_ENTRIES; x++ )
 300              		.loc 1 263 0
 301 0040 0023     		movs	r3, #0
 302 0042 FB61     		str	r3, [r7, #28]
 303 0044 6BE0     		b	.L15
 304              	.L22:
 264:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 265:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* Does this line in the cache table hold an entry for the IP
 266:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			address	being queried? */
 267:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( xARPCache[ x ].ulIPAddress == ulIPAddress )
 305              		.loc 1 267 0
 306 0046 6B49     		ldr	r1, .L27+8
 307 0048 FA69     		ldr	r2, [r7, #28]
 308 004a 1346     		mov	r3, r2
 309 004c 5B00     		lsls	r3, r3, #1
 310 004e 1344     		add	r3, r3, r2
 311 0050 9B00     		lsls	r3, r3, #2
 312 0052 0B44     		add	r3, r3, r1
 313 0054 1A68     		ldr	r2, [r3]
 314 0056 3B68     		ldr	r3, [r7]
 315 0058 9A42     		cmp	r2, r3
 316 005a 2ED1     		bne	.L16
 268:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 269:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				if( pxMACAddress == NULL )
 317              		.loc 1 269 0
 318 005c 7B68     		ldr	r3, [r7, #4]
 319 005e 002B     		cmp	r3, #0
 320 0060 02D1     		bne	.L17
 270:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 271:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					/* In case the parameter pxMACAddress is NULL, an entry will be reserved to
 272:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					indicate that there is an outstanding ARP request, This entry will have
 273:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					"ucValid == pdFALSE". */
 274:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xIpEntry = x;
 321              		.loc 1 274 0
 322 0062 FB69     		ldr	r3, [r7, #28]
 323 0064 BB61     		str	r3, [r7, #24]
 275:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					break;
 324              		.loc 1 275 0
 325 0066 5DE0     		b	.L18
 326              	.L17:
 276:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 277:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 278:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* See if the MAC-address also matches. */
 279:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				if( memcmp( xARPCache[ x ].xMACAddress.ucBytes, pxMACAddress->ucBytes, sizeof( pxMACAddress->uc
 327              		.loc 1 279 0
 328 0068 FA69     		ldr	r2, [r7, #28]
 329 006a 1346     		mov	r3, r2
 330 006c 5B00     		lsls	r3, r3, #1
 331 006e 1344     		add	r3, r3, r2
 332 0070 9B00     		lsls	r3, r3, #2
 333 0072 604A     		ldr	r2, .L27+8
 334 0074 1344     		add	r3, r3, r2
 335 0076 1A1D     		adds	r2, r3, #4
 336 0078 7B68     		ldr	r3, [r7, #4]
 337 007a 1046     		mov	r0, r2
ARM GAS  /tmp/ccPgm9iD.s 			page 12


 338 007c 1946     		mov	r1, r3
 339 007e 0622     		movs	r2, #6
 340 0080 FFF7FEFF 		bl	memcmp
 341 0084 0346     		mov	r3, r0
 342 0086 002B     		cmp	r3, #0
 343 0088 14D1     		bne	.L19
 280:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 281:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					/* This function will be called for each received packet
 282:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					As this is by far the most common path the coding standard
 283:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					is relaxed in this case and a return is permitted as an
 284:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					optimisation. */
 285:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].ucAge = ( uint8_t ) ipconfigMAX_ARP_AGE;
 344              		.loc 1 285 0
 345 008a 5A49     		ldr	r1, .L27+8
 346 008c FA69     		ldr	r2, [r7, #28]
 347 008e 1346     		mov	r3, r2
 348 0090 5B00     		lsls	r3, r3, #1
 349 0092 1344     		add	r3, r3, r2
 350 0094 9B00     		lsls	r3, r3, #2
 351 0096 0B44     		add	r3, r3, r1
 352 0098 0833     		adds	r3, r3, #8
 353 009a 9622     		movs	r2, #150
 354 009c 9A70     		strb	r2, [r3, #2]
 286:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].ucValid = ( uint8_t ) pdTRUE;
 355              		.loc 1 286 0
 356 009e 5549     		ldr	r1, .L27+8
 357 00a0 FA69     		ldr	r2, [r7, #28]
 358 00a2 1346     		mov	r3, r2
 359 00a4 5B00     		lsls	r3, r3, #1
 360 00a6 1344     		add	r3, r3, r2
 361 00a8 9B00     		lsls	r3, r3, #2
 362 00aa 0B44     		add	r3, r3, r1
 363 00ac 0833     		adds	r3, r3, #8
 364 00ae 0122     		movs	r2, #1
 365 00b0 DA70     		strb	r2, [r3, #3]
 287:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					return;
 366              		.loc 1 287 0
 367 00b2 97E0     		b	.L12
 368              	.L19:
 288:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 289:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 290:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* Found an entry containing ulIPAddress, but the MAC address
 291:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				doesn't match.  Might be an entry with ucValid=pdFALSE, waiting
 292:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				for an ARP reply.  Still want to see if there is match with the
 293:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				given MAC address.ucBytes.  If found, either of the two entries
 294:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				must be cleared. */
 295:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				xIpEntry = x;
 369              		.loc 1 295 0
 370 00b4 FB69     		ldr	r3, [r7, #28]
 371 00b6 BB61     		str	r3, [r7, #24]
 372 00b8 2EE0     		b	.L20
 373              	.L16:
 296:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 297:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else if( ( pxMACAddress != NULL ) && ( memcmp( xARPCache[ x ].xMACAddress.ucBytes, pxMACAddress-
 374              		.loc 1 297 0
 375 00ba 7B68     		ldr	r3, [r7, #4]
 376 00bc 002B     		cmp	r3, #0
ARM GAS  /tmp/ccPgm9iD.s 			page 13


 377 00be 13D0     		beq	.L21
 378              		.loc 1 297 0 is_stmt 0 discriminator 1
 379 00c0 FA69     		ldr	r2, [r7, #28]
 380 00c2 1346     		mov	r3, r2
 381 00c4 5B00     		lsls	r3, r3, #1
 382 00c6 1344     		add	r3, r3, r2
 383 00c8 9B00     		lsls	r3, r3, #2
 384 00ca 4A4A     		ldr	r2, .L27+8
 385 00cc 1344     		add	r3, r3, r2
 386 00ce 1A1D     		adds	r2, r3, #4
 387 00d0 7B68     		ldr	r3, [r7, #4]
 388 00d2 1046     		mov	r0, r2
 389 00d4 1946     		mov	r1, r3
 390 00d6 0622     		movs	r2, #6
 391 00d8 FFF7FEFF 		bl	memcmp
 392 00dc 0346     		mov	r3, r0
 393 00de 002B     		cmp	r3, #0
 394 00e0 02D1     		bne	.L21
 298:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 299:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* Found an entry with the given MAC-address, but the IP-address
 300:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				is different.  Continue looping to find a possible match with
 301:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				ulIPAddress. */
 302:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#if( ipconfigARP_STORES_REMOTE_ADDRESSES != 0 )
 303:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* If ARP stores the MAC address of IP addresses outside the
 304:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				network, than the MAC address of the gateway should not be
 305:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				overwritten. */
 306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				BaseType_t bIsLocal[ 2 ];
 307:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				bIsLocal[ 0 ] = ( ( xARPCache[ x ].ulIPAddress & xNetworkAddressing.ulNetMask ) == ( ( *ipLOCAL
 308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				bIsLocal[ 1 ] = ( ( ulIPAddress & xNetworkAddressing.ulNetMask ) == ( ( *ipLOCAL_IP_ADDRESS_POI
 309:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				if( bIsLocal[ 0 ] == bIsLocal[ 1 ] )
 310:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xMacEntry = x;
 312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 313:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#else
 314:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				xMacEntry = x;
 395              		.loc 1 314 0 is_stmt 1
 396 00e2 FB69     		ldr	r3, [r7, #28]
 397 00e4 7B61     		str	r3, [r7, #20]
 398 00e6 17E0     		b	.L20
 399              	.L21:
 315:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	#endif
 316:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 317:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* _HT_
 318:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			Shouldn't we test for xARPCache[ x ].ucValid == pdFALSE here ? */
 319:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else if( xARPCache[ x ].ucAge < ucMinAgeFound )
 400              		.loc 1 319 0
 401 00e8 4249     		ldr	r1, .L27+8
 402 00ea FA69     		ldr	r2, [r7, #28]
 403 00ec 1346     		mov	r3, r2
 404 00ee 5B00     		lsls	r3, r3, #1
 405 00f0 1344     		add	r3, r3, r2
 406 00f2 9B00     		lsls	r3, r3, #2
 407 00f4 0B44     		add	r3, r3, r1
 408 00f6 0833     		adds	r3, r3, #8
 409 00f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 410 00fa FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 411 00fc 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccPgm9iD.s 			page 14


 412 00fe 0BD9     		bls	.L20
 320:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 321:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* As the table is traversed, remember the table row that
 322:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				contains the oldest entry (the lowest age count, as ages are
 323:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				decremented to zero) so the row can be re-used if this function
 324:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				needs to add an entry that does not already exist. */
 325:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				ucMinAgeFound = xARPCache[ x ].ucAge;
 413              		.loc 1 325 0
 414 0100 3C49     		ldr	r1, .L27+8
 415 0102 FA69     		ldr	r2, [r7, #28]
 416 0104 1346     		mov	r3, r2
 417 0106 5B00     		lsls	r3, r3, #1
 418 0108 1344     		add	r3, r3, r2
 419 010a 9B00     		lsls	r3, r3, #2
 420 010c 0B44     		add	r3, r3, r1
 421 010e 0833     		adds	r3, r3, #8
 422 0110 9B78     		ldrb	r3, [r3, #2]
 423 0112 FB73     		strb	r3, [r7, #15]
 326:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				xUseEntry = x;
 424              		.loc 1 326 0
 425 0114 FB69     		ldr	r3, [r7, #28]
 426 0116 3B61     		str	r3, [r7, #16]
 427              	.L20:
 263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 428              		.loc 1 263 0 discriminator 2
 429 0118 FB69     		ldr	r3, [r7, #28]
 430 011a 0133     		adds	r3, r3, #1
 431 011c FB61     		str	r3, [r7, #28]
 432              	.L15:
 263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 433              		.loc 1 263 0 is_stmt 0 discriminator 1
 434 011e FB69     		ldr	r3, [r7, #28]
 435 0120 052B     		cmp	r3, #5
 436 0122 90DD     		ble	.L22
 437              	.L18:
 327:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 328:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 329:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 330:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( xMacEntry >= 0 )
 438              		.loc 1 330 0 is_stmt 1
 439 0124 7B69     		ldr	r3, [r7, #20]
 440 0126 002B     		cmp	r3, #0
 441 0128 11DB     		blt	.L23
 331:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 332:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			xUseEntry = xMacEntry;
 442              		.loc 1 332 0
 443 012a 7B69     		ldr	r3, [r7, #20]
 444 012c 3B61     		str	r3, [r7, #16]
 333:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 334:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( xIpEntry >= 0 )
 445              		.loc 1 334 0
 446 012e BB69     		ldr	r3, [r7, #24]
 447 0130 002B     		cmp	r3, #0
 448 0132 11DB     		blt	.L25
 335:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 336:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* Both the MAC address as well as the IP address were found in
 337:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				different locations: clear the entry which matches the
ARM GAS  /tmp/ccPgm9iD.s 			page 15


 338:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				IP-address */
 339:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				memset( &xARPCache[ xIpEntry ], '\0', sizeof( xARPCache[ xIpEntry ] ) );
 449              		.loc 1 339 0
 450 0134 BA69     		ldr	r2, [r7, #24]
 451 0136 1346     		mov	r3, r2
 452 0138 5B00     		lsls	r3, r3, #1
 453 013a 1344     		add	r3, r3, r2
 454 013c 9B00     		lsls	r3, r3, #2
 455 013e 2D4A     		ldr	r2, .L27+8
 456 0140 1344     		add	r3, r3, r2
 457 0142 1846     		mov	r0, r3
 458 0144 0021     		movs	r1, #0
 459 0146 0C22     		movs	r2, #12
 460 0148 FFF7FEFF 		bl	memset
 461 014c 04E0     		b	.L25
 462              	.L23:
 340:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 341:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 342:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		else if( xIpEntry >= 0 )
 463              		.loc 1 342 0
 464 014e BB69     		ldr	r3, [r7, #24]
 465 0150 002B     		cmp	r3, #0
 466 0152 01DB     		blt	.L25
 343:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 344:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* An entry containing the IP-address was found, but it had a different MAC address */
 345:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			xUseEntry = xIpEntry;
 467              		.loc 1 345 0
 468 0154 BB69     		ldr	r3, [r7, #24]
 469 0156 3B61     		str	r3, [r7, #16]
 470              	.L25:
 346:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 347:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 348:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* If the entry was not found, we use the oldest entry and set the IPaddress */
 349:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPCache[ xUseEntry ].ulIPAddress = ulIPAddress;
 471              		.loc 1 349 0
 472 0158 2649     		ldr	r1, .L27+8
 473 015a 3A69     		ldr	r2, [r7, #16]
 474 015c 1346     		mov	r3, r2
 475 015e 5B00     		lsls	r3, r3, #1
 476 0160 1344     		add	r3, r3, r2
 477 0162 9B00     		lsls	r3, r3, #2
 478 0164 0B44     		add	r3, r3, r1
 479 0166 3A68     		ldr	r2, [r7]
 480 0168 1A60     		str	r2, [r3]
 350:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 351:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( pxMACAddress != NULL )
 481              		.loc 1 351 0
 482 016a 7B68     		ldr	r3, [r7, #4]
 483 016c 002B     		cmp	r3, #0
 484 016e 22D0     		beq	.L26
 352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 353:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			memcpy( xARPCache[ xUseEntry ].xMACAddress.ucBytes, pxMACAddress->ucBytes, sizeof( pxMACAddress-
 485              		.loc 1 353 0
 486 0170 3A69     		ldr	r2, [r7, #16]
 487 0172 1346     		mov	r3, r2
 488 0174 5B00     		lsls	r3, r3, #1
 489 0176 1344     		add	r3, r3, r2
ARM GAS  /tmp/ccPgm9iD.s 			page 16


 490 0178 9B00     		lsls	r3, r3, #2
 491 017a 1E4A     		ldr	r2, .L27+8
 492 017c 1344     		add	r3, r3, r2
 493 017e 1A1D     		adds	r2, r3, #4
 494 0180 7B68     		ldr	r3, [r7, #4]
 495 0182 1046     		mov	r0, r2
 496 0184 1946     		mov	r1, r3
 497 0186 0622     		movs	r2, #6
 498 0188 FFF7FEFF 		bl	memcpy
 354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 355:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			iptraceARP_TABLE_ENTRY_CREATED( ulIPAddress, (*pxMACAddress) );
 356:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* And this entry does not need immediate attention */
 357:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			xARPCache[ xUseEntry ].ucAge = ( uint8_t ) ipconfigMAX_ARP_AGE;
 499              		.loc 1 357 0
 500 018c 1949     		ldr	r1, .L27+8
 501 018e 3A69     		ldr	r2, [r7, #16]
 502 0190 1346     		mov	r3, r2
 503 0192 5B00     		lsls	r3, r3, #1
 504 0194 1344     		add	r3, r3, r2
 505 0196 9B00     		lsls	r3, r3, #2
 506 0198 0B44     		add	r3, r3, r1
 507 019a 0833     		adds	r3, r3, #8
 508 019c 9622     		movs	r2, #150
 509 019e 9A70     		strb	r2, [r3, #2]
 358:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			xARPCache[ xUseEntry ].ucValid = ( uint8_t ) pdTRUE;
 510              		.loc 1 358 0
 511 01a0 1449     		ldr	r1, .L27+8
 512 01a2 3A69     		ldr	r2, [r7, #16]
 513 01a4 1346     		mov	r3, r2
 514 01a6 5B00     		lsls	r3, r3, #1
 515 01a8 1344     		add	r3, r3, r2
 516 01aa 9B00     		lsls	r3, r3, #2
 517 01ac 0B44     		add	r3, r3, r1
 518 01ae 0833     		adds	r3, r3, #8
 519 01b0 0122     		movs	r2, #1
 520 01b2 DA70     		strb	r2, [r3, #3]
 521 01b4 16E0     		b	.L12
 522              	.L26:
 359:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 360:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		else if( xIpEntry < 0 )
 523              		.loc 1 360 0
 524 01b6 BB69     		ldr	r3, [r7, #24]
 525 01b8 002B     		cmp	r3, #0
 526 01ba 13DA     		bge	.L12
 361:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 362:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			xARPCache[ xUseEntry ].ucAge = ( uint8_t ) ipconfigMAX_ARP_RETRANSMISSIONS;
 527              		.loc 1 362 0
 528 01bc 0D49     		ldr	r1, .L27+8
 529 01be 3A69     		ldr	r2, [r7, #16]
 530 01c0 1346     		mov	r3, r2
 531 01c2 5B00     		lsls	r3, r3, #1
 532 01c4 1344     		add	r3, r3, r2
 533 01c6 9B00     		lsls	r3, r3, #2
 534 01c8 0B44     		add	r3, r3, r1
 535 01ca 0833     		adds	r3, r3, #8
 536 01cc 0522     		movs	r2, #5
 537 01ce 9A70     		strb	r2, [r3, #2]
ARM GAS  /tmp/ccPgm9iD.s 			page 17


 363:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			xARPCache[ xUseEntry ].ucValid = ( uint8_t ) pdFALSE;
 538              		.loc 1 363 0
 539 01d0 0849     		ldr	r1, .L27+8
 540 01d2 3A69     		ldr	r2, [r7, #16]
 541 01d4 1346     		mov	r3, r2
 542 01d6 5B00     		lsls	r3, r3, #1
 543 01d8 1344     		add	r3, r3, r2
 544 01da 9B00     		lsls	r3, r3, #2
 545 01dc 0B44     		add	r3, r3, r1
 546 01de 0833     		adds	r3, r3, #8
 547 01e0 0022     		movs	r2, #0
 548 01e2 DA70     		strb	r2, [r3, #3]
 549              	.L12:
 364:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 365:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 366:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 550              		.loc 1 366 0
 551 01e4 2037     		adds	r7, r7, #32
 552              	.LCFI8:
 553              		.cfi_def_cfa_offset 8
 554 01e6 BD46     		mov	sp, r7
 555              	.LCFI9:
 556              		.cfi_def_cfa_register 13
 557              		@ sp needed
 558 01e8 80BD     		pop	{r7, pc}
 559              	.L28:
 560 01ea 00BF     		.align	2
 561              	.L27:
 562 01ec 00000000 		.word	xDefaultPartUDPPacketHeader
 563 01f0 00000000 		.word	xNetworkAddressing
 564 01f4 00000000 		.word	xARPCache
 565              		.cfi_endproc
 566              	.LFE30:
 568              		.section	.text.eARPGetCacheEntry,"ax",%progbits
 569              		.align	2
 570              		.global	eARPGetCacheEntry
 571              		.thumb
 572              		.thumb_func
 574              	eARPGetCacheEntry:
 575              	.LFB31:
 367:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 368:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 369:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigUSE_ARP_REVERSED_LOOKUP == 1 )
 370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	eARPLookupResult_t eARPGetCacheEntryByMac( MACAddress_t * const pxMACAddress, uint32_t *pulIPAddre
 371:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 372:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	BaseType_t x;
 373:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	eARPLookupResult_t eReturn = eARPCacheMiss;
 374:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 375:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* Loop through each entry in the ARP cache. */
 376:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		for( x = 0; x < ipconfigARP_CACHE_ENTRIES; x++ )
 377:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 378:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* Does this row in the ARP cache table hold an entry for the MAC
 379:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			address being searched? */
 380:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( memcmp( pxMACAddress->ucBytes, xARPCache[ x ].xMACAddress.ucBytes, sizeof( MACAddress_t ) ) 
 381:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 382:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				*pulIPAddress = xARPCache[ x ].ulIPAddress;
 383:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				eReturn = eARPCacheHit;
ARM GAS  /tmp/ccPgm9iD.s 			page 18


 384:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				break;
 385:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 386:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 387:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 388:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		return eReturn;
 389:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 390:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif /* ipconfigUSE_ARP_REVERSED_LOOKUP */
 391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 392:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 394:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** eARPLookupResult_t eARPGetCacheEntry( uint32_t *pulIPAddress, MACAddress_t * const pxMACAddress )
 395:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 576              		.loc 1 395 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 16
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI10:
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 84B0     		sub	sp, sp, #16
 586              	.LCFI11:
 587              		.cfi_def_cfa_offset 24
 588 0004 00AF     		add	r7, sp, #0
 589              	.LCFI12:
 590              		.cfi_def_cfa_register 7
 591 0006 7860     		str	r0, [r7, #4]
 592 0008 3960     		str	r1, [r7]
 396:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** eARPLookupResult_t eReturn;
 397:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** uint32_t ulAddressToLookup;
 398:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 399:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigUSE_LLMNR == 1 )
 400:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	if( *pulIPAddress == ipLLMNR_IP_ADDR )	/* Is in network byte order */
 593              		.loc 1 400 0
 594 000a 7B68     		ldr	r3, [r7, #4]
 595 000c 1B68     		ldr	r3, [r3]
 596 000e 2A4A     		ldr	r2, .L39
 597 0010 9342     		cmp	r3, r2
 598 0012 08D1     		bne	.L30
 401:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 402:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* The LLMNR IP-address has a fixed virtual MAC address */
 403:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		memcpy( pxMACAddress->ucBytes, xLLMNR_MacAdress.ucBytes, sizeof( MACAddress_t ) );
 599              		.loc 1 403 0
 600 0014 3B68     		ldr	r3, [r7]
 601 0016 1846     		mov	r0, r3
 602 0018 2849     		ldr	r1, .L39+4
 603 001a 0622     		movs	r2, #6
 604 001c FFF7FEFF 		bl	memcpy
 404:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		eReturn = eARPCacheHit;
 605              		.loc 1 404 0
 606 0020 0123     		movs	r3, #1
 607 0022 FB73     		strb	r3, [r7, #15]
 608 0024 42E0     		b	.L31
 609              	.L30:
 405:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 406:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	else
ARM GAS  /tmp/ccPgm9iD.s 			page 19


 407:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif
 408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	if( ( *pulIPAddress == ipBROADCAST_IP_ADDRESS ) ||	/* Is it the general broadcast address 255.255.
 610              		.loc 1 408 0
 611 0026 7B68     		ldr	r3, [r7, #4]
 612 0028 1B68     		ldr	r3, [r3]
 613 002a B3F1FF3F 		cmp	r3, #-1
 614 002e 05D0     		beq	.L32
 409:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		( *pulIPAddress == xNetworkAddressing.ulBroadcastAddress ) )/* Or a local broadcast address, eg 1
 615              		.loc 1 409 0 discriminator 1
 616 0030 7B68     		ldr	r3, [r7, #4]
 617 0032 1A68     		ldr	r2, [r3]
 618 0034 224B     		ldr	r3, .L39+8
 619 0036 1B69     		ldr	r3, [r3, #16]
 408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		( *pulIPAddress == xNetworkAddressing.ulBroadcastAddress ) )/* Or a local broadcast address, eg 1
 620              		.loc 1 408 0 discriminator 1
 621 0038 9A42     		cmp	r2, r3
 622 003a 08D1     		bne	.L33
 623              	.L32:
 410:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 411:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* This is a broadcast so uses the broadcast MAC address. */
 412:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		memcpy( pxMACAddress->ucBytes, xBroadcastMACAddress.ucBytes, sizeof( MACAddress_t ) );
 624              		.loc 1 412 0
 625 003c 3B68     		ldr	r3, [r7]
 626 003e 1846     		mov	r0, r3
 627 0040 2049     		ldr	r1, .L39+12
 628 0042 0622     		movs	r2, #6
 629 0044 FFF7FEFF 		bl	memcpy
 413:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		eReturn = eARPCacheHit;
 630              		.loc 1 413 0
 631 0048 0123     		movs	r3, #1
 632 004a FB73     		strb	r3, [r7, #15]
 633 004c 2EE0     		b	.L31
 634              	.L33:
 414:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 415:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	else if( *ipLOCAL_IP_ADDRESS_POINTER == 0UL )
 635              		.loc 1 415 0
 636 004e 1E4B     		ldr	r3, .L39+16
 637 0050 5B69     		ldr	r3, [r3, #20]
 638 0052 002B     		cmp	r3, #0
 639 0054 02D1     		bne	.L34
 416:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 417:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* The IP address has not yet been assigned, so there is nothing that
 418:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		can be done. */
 419:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		eReturn = eCantSendPacket;
 640              		.loc 1 419 0
 641 0056 0223     		movs	r3, #2
 642 0058 FB73     		strb	r3, [r7, #15]
 643 005a 27E0     		b	.L31
 644              	.L34:
 420:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 421:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	else
 422:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 423:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		eReturn = eARPCacheMiss;
 645              		.loc 1 423 0
 646 005c 0023     		movs	r3, #0
 647 005e FB73     		strb	r3, [r7, #15]
 424:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
ARM GAS  /tmp/ccPgm9iD.s 			page 20


 425:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( ( *pulIPAddress & xNetworkAddressing.ulNetMask ) != ( ( *ipLOCAL_IP_ADDRESS_POINTER ) & xNetw
 648              		.loc 1 425 0
 649 0060 7B68     		ldr	r3, [r7, #4]
 650 0062 1A68     		ldr	r2, [r3]
 651 0064 184B     		ldr	r3, .L39+16
 652 0066 5B69     		ldr	r3, [r3, #20]
 653 0068 5A40     		eors	r2, r2, r3
 654 006a 154B     		ldr	r3, .L39+8
 655 006c 5B68     		ldr	r3, [r3, #4]
 656 006e 1340     		ands	r3, r3, r2
 657 0070 002B     		cmp	r3, #0
 658 0072 03D0     		beq	.L35
 426:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 427:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigARP_STORES_REMOTE_ADDRESSES == 1 )
 428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			eReturn = prvCacheLookup( *pulIPAddress, pxMACAddress );
 429:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 430:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( eReturn == eARPCacheHit )
 431:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 432:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* The stack is configured to store 'remote IP addresses', i.e. addresses
 433:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				belonging to a different the netmask.  prvCacheLookup() returned a hit, so
 434:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				the MAC address is known */
 435:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 436:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else
 437:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #endif
 438:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 439:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* The IP address is off the local network, so look up the
 440:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				hardware address of the router, if any. */
 441:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				ulAddressToLookup = xNetworkAddressing.ulGatewayAddress;
 659              		.loc 1 441 0
 660 0074 124B     		ldr	r3, .L39+8
 661 0076 9B68     		ldr	r3, [r3, #8]
 662 0078 BB60     		str	r3, [r7, #8]
 663 007a 02E0     		b	.L36
 664              	.L35:
 442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 443:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		else
 445:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 446:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* The IP address is on the local network, so lookup the requested
 447:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			IP address directly. */
 448:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			ulAddressToLookup = *pulIPAddress;
 665              		.loc 1 448 0
 666 007c 7B68     		ldr	r3, [r7, #4]
 667 007e 1B68     		ldr	r3, [r3]
 668 0080 BB60     		str	r3, [r7, #8]
 669              	.L36:
 449:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 450:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 451:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( eReturn == eARPCacheMiss )
 670              		.loc 1 451 0
 671 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 672 0084 002B     		cmp	r3, #0
 673 0086 11D1     		bne	.L31
 452:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 453:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( ulAddressToLookup == 0UL )
 674              		.loc 1 453 0
 675 0088 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccPgm9iD.s 			page 21


 676 008a 002B     		cmp	r3, #0
 677 008c 02D1     		bne	.L37
 454:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 455:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* The address is not on the local network, and there is not a
 456:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				router. */
 457:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				eReturn = eCantSendPacket;
 678              		.loc 1 457 0
 679 008e 0223     		movs	r3, #2
 680 0090 FB73     		strb	r3, [r7, #15]
 681 0092 0BE0     		b	.L31
 682              	.L37:
 458:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 459:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else
 460:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 461:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				eReturn = prvCacheLookup( ulAddressToLookup, pxMACAddress );
 683              		.loc 1 461 0
 684 0094 B868     		ldr	r0, [r7, #8]
 685 0096 3968     		ldr	r1, [r7]
 686 0098 FFF7FEFF 		bl	prvCacheLookup
 687 009c 0346     		mov	r3, r0
 688 009e FB73     		strb	r3, [r7, #15]
 462:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 463:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				if( eReturn == eARPCacheMiss )
 689              		.loc 1 463 0
 690 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 691 00a2 002B     		cmp	r3, #0
 692 00a4 02D1     		bne	.L31
 464:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 465:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					/* It might be that the ARP has to go to the gateway. */
 466:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					*pulIPAddress = ulAddressToLookup;
 693              		.loc 1 466 0
 694 00a6 7B68     		ldr	r3, [r7, #4]
 695 00a8 BA68     		ldr	r2, [r7, #8]
 696 00aa 1A60     		str	r2, [r3]
 697              	.L31:
 467:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 468:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 469:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 470:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 471:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 472:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	return eReturn;
 698              		.loc 1 472 0
 699 00ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 473:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 700              		.loc 1 473 0
 701 00ae 1846     		mov	r0, r3
 702 00b0 1037     		adds	r7, r7, #16
 703              	.LCFI13:
 704              		.cfi_def_cfa_offset 8
 705 00b2 BD46     		mov	sp, r7
 706              	.LCFI14:
 707              		.cfi_def_cfa_register 13
 708              		@ sp needed
 709 00b4 80BD     		pop	{r7, pc}
 710              	.L40:
 711 00b6 00BF     		.align	2
 712              	.L39:
ARM GAS  /tmp/ccPgm9iD.s 			page 22


 713 00b8 E00000FC 		.word	-67108640
 714 00bc 00000000 		.word	xLLMNR_MacAdress
 715 00c0 00000000 		.word	xNetworkAddressing
 716 00c4 00000000 		.word	xBroadcastMACAddress
 717 00c8 00000000 		.word	xDefaultPartUDPPacketHeader
 718              		.cfi_endproc
 719              	.LFE31:
 721              		.section	.text.prvCacheLookup,"ax",%progbits
 722              		.align	2
 723              		.thumb
 724              		.thumb_func
 726              	prvCacheLookup:
 727              	.LFB32:
 474:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 475:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 476:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 477:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** static eARPLookupResult_t prvCacheLookup( uint32_t ulAddressToLookup, MACAddress_t * const pxMACAdd
 478:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 728              		.loc 1 478 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 16
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI15:
 734              		.cfi_def_cfa_offset 8
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 84B0     		sub	sp, sp, #16
 738              	.LCFI16:
 739              		.cfi_def_cfa_offset 24
 740 0004 00AF     		add	r7, sp, #0
 741              	.LCFI17:
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
 744 0008 3960     		str	r1, [r7]
 479:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** BaseType_t x;
 480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** eARPLookupResult_t eReturn = eARPCacheMiss;
 745              		.loc 1 480 0
 746 000a 0023     		movs	r3, #0
 747 000c FB72     		strb	r3, [r7, #11]
 481:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 482:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* Loop through each entry in the ARP cache. */
 483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	for( x = 0; x < ipconfigARP_CACHE_ENTRIES; x++ )
 748              		.loc 1 483 0
 749 000e 0023     		movs	r3, #0
 750 0010 FB60     		str	r3, [r7, #12]
 751 0012 2CE0     		b	.L42
 752              	.L47:
 484:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 485:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* Does this row in the ARP cache table hold an entry for the IP address
 486:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		being queried? */
 487:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( xARPCache[ x ].ulIPAddress == ulAddressToLookup )
 753              		.loc 1 487 0
 754 0014 1A49     		ldr	r1, .L49
 755 0016 FA68     		ldr	r2, [r7, #12]
 756 0018 1346     		mov	r3, r2
 757 001a 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/ccPgm9iD.s 			page 23


 758 001c 1344     		add	r3, r3, r2
 759 001e 9B00     		lsls	r3, r3, #2
 760 0020 0B44     		add	r3, r3, r1
 761 0022 1A68     		ldr	r2, [r3]
 762 0024 7B68     		ldr	r3, [r7, #4]
 763 0026 9A42     		cmp	r2, r3
 764 0028 1ED1     		bne	.L43
 488:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 489:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* A matching valid entry was found. */
 490:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( xARPCache[ x ].ucValid == ( uint8_t ) pdFALSE )
 765              		.loc 1 490 0
 766 002a 1549     		ldr	r1, .L49
 767 002c FA68     		ldr	r2, [r7, #12]
 768 002e 1346     		mov	r3, r2
 769 0030 5B00     		lsls	r3, r3, #1
 770 0032 1344     		add	r3, r3, r2
 771 0034 9B00     		lsls	r3, r3, #2
 772 0036 0B44     		add	r3, r3, r1
 773 0038 0833     		adds	r3, r3, #8
 774 003a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 775 003c 002B     		cmp	r3, #0
 776 003e 02D1     		bne	.L44
 491:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 492:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* This entry is waiting an ARP reply, so is not valid. */
 493:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				eReturn = eCantSendPacket;
 777              		.loc 1 493 0
 778 0040 0223     		movs	r3, #2
 779 0042 FB72     		strb	r3, [r7, #11]
 494:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 495:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else
 496:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 497:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* A valid entry was found. */
 498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				memcpy( pxMACAddress->ucBytes, xARPCache[ x ].xMACAddress.ucBytes, sizeof( MACAddress_t ) );
 499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				eReturn = eARPCacheHit;
 500:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 501:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			break;
 780              		.loc 1 501 0
 781 0044 16E0     		b	.L46
 782              	.L44:
 498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				eReturn = eARPCacheHit;
 783              		.loc 1 498 0
 784 0046 3968     		ldr	r1, [r7]
 785 0048 FA68     		ldr	r2, [r7, #12]
 786 004a 1346     		mov	r3, r2
 787 004c 5B00     		lsls	r3, r3, #1
 788 004e 1344     		add	r3, r3, r2
 789 0050 9B00     		lsls	r3, r3, #2
 790 0052 0B4A     		ldr	r2, .L49
 791 0054 1344     		add	r3, r3, r2
 792 0056 0433     		adds	r3, r3, #4
 793 0058 0846     		mov	r0, r1
 794 005a 1946     		mov	r1, r3
 795 005c 0622     		movs	r2, #6
 796 005e FFF7FEFF 		bl	memcpy
 499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 797              		.loc 1 499 0
 798 0062 0123     		movs	r3, #1
ARM GAS  /tmp/ccPgm9iD.s 			page 24


 799 0064 FB72     		strb	r3, [r7, #11]
 800              		.loc 1 501 0
 801 0066 05E0     		b	.L46
 802              	.L43:
 483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 803              		.loc 1 483 0 discriminator 2
 804 0068 FB68     		ldr	r3, [r7, #12]
 805 006a 0133     		adds	r3, r3, #1
 806 006c FB60     		str	r3, [r7, #12]
 807              	.L42:
 483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 808              		.loc 1 483 0 is_stmt 0 discriminator 1
 809 006e FB68     		ldr	r3, [r7, #12]
 810 0070 052B     		cmp	r3, #5
 811 0072 CFDD     		ble	.L47
 812              	.L46:
 502:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 503:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 504:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 505:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	return eReturn;
 813              		.loc 1 505 0 is_stmt 1
 814 0074 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 506:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 815              		.loc 1 506 0
 816 0076 1846     		mov	r0, r3
 817 0078 1037     		adds	r7, r7, #16
 818              	.LCFI18:
 819              		.cfi_def_cfa_offset 8
 820 007a BD46     		mov	sp, r7
 821              	.LCFI19:
 822              		.cfi_def_cfa_register 13
 823              		@ sp needed
 824 007c 80BD     		pop	{r7, pc}
 825              	.L50:
 826 007e 00BF     		.align	2
 827              	.L49:
 828 0080 00000000 		.word	xARPCache
 829              		.cfi_endproc
 830              	.LFE32:
 832              		.section	.text.vARPAgeCache,"ax",%progbits
 833              		.align	2
 834              		.global	vARPAgeCache
 835              		.thumb
 836              		.thumb_func
 838              	vARPAgeCache:
 839              	.LFB33:
 507:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 508:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** void vARPAgeCache( void )
 510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 840              		.loc 1 510 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844 0000 80B5     		push	{r7, lr}
 845              	.LCFI20:
 846              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccPgm9iD.s 			page 25


 847              		.cfi_offset 7, -8
 848              		.cfi_offset 14, -4
 849 0002 82B0     		sub	sp, sp, #8
 850              	.LCFI21:
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              	.LCFI22:
 854              		.cfi_def_cfa_register 7
 511:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** BaseType_t x;
 512:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** TickType_t xTimeNow;
 513:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 514:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* Loop through each entry in the ARP cache. */
 515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	for( x = 0; x < ipconfigARP_CACHE_ENTRIES; x++ )
 855              		.loc 1 515 0
 856 0006 0023     		movs	r3, #0
 857 0008 7B60     		str	r3, [r7, #4]
 858 000a 63E0     		b	.L52
 859              	.L56:
 516:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 517:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* If the entry is valid (its age is greater than zero). */
 518:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		if( xARPCache[ x ].ucAge > 0U )
 860              		.loc 1 518 0
 861 000c 4049     		ldr	r1, .L59
 862 000e 7A68     		ldr	r2, [r7, #4]
 863 0010 1346     		mov	r3, r2
 864 0012 5B00     		lsls	r3, r3, #1
 865 0014 1344     		add	r3, r3, r2
 866 0016 9B00     		lsls	r3, r3, #2
 867 0018 0B44     		add	r3, r3, r1
 868 001a 0833     		adds	r3, r3, #8
 869 001c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 870 001e 002B     		cmp	r3, #0
 871 0020 55D0     		beq	.L53
 519:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 520:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* Decrement the age value of the entry in this ARP cache table row.
 521:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			When the age reaches zero it is no longer considered valid. */
 522:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			( xARPCache[ x ].ucAge )--;
 872              		.loc 1 522 0
 873 0022 3B49     		ldr	r1, .L59
 874 0024 7A68     		ldr	r2, [r7, #4]
 875 0026 1346     		mov	r3, r2
 876 0028 5B00     		lsls	r3, r3, #1
 877 002a 1344     		add	r3, r3, r2
 878 002c 9B00     		lsls	r3, r3, #2
 879 002e 0B44     		add	r3, r3, r1
 880 0030 0833     		adds	r3, r3, #8
 881 0032 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 882 0034 013B     		subs	r3, r3, #1
 883 0036 D8B2     		uxtb	r0, r3
 884 0038 3549     		ldr	r1, .L59
 885 003a 7A68     		ldr	r2, [r7, #4]
 886 003c 1346     		mov	r3, r2
 887 003e 5B00     		lsls	r3, r3, #1
 888 0040 1344     		add	r3, r3, r2
 889 0042 9B00     		lsls	r3, r3, #2
 890 0044 0B44     		add	r3, r3, r1
 891 0046 0833     		adds	r3, r3, #8
ARM GAS  /tmp/ccPgm9iD.s 			page 26


 892 0048 0246     		mov	r2, r0
 893 004a 9A70     		strb	r2, [r3, #2]
 523:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 524:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			/* If the entry is not yet valid, then it is waiting an ARP
 525:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			reply, and the ARP request should be retransmitted. */
 526:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( xARPCache[ x ].ucValid == ( uint8_t ) pdFALSE )
 894              		.loc 1 526 0
 895 004c 3049     		ldr	r1, .L59
 896 004e 7A68     		ldr	r2, [r7, #4]
 897 0050 1346     		mov	r3, r2
 898 0052 5B00     		lsls	r3, r3, #1
 899 0054 1344     		add	r3, r3, r2
 900 0056 9B00     		lsls	r3, r3, #2
 901 0058 0B44     		add	r3, r3, r1
 902 005a 0833     		adds	r3, r3, #8
 903 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 904 005e 002B     		cmp	r3, #0
 905 0060 0BD1     		bne	.L54
 527:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				FreeRTOS_OutputARPRequest( xARPCache[ x ].ulIPAddress );
 906              		.loc 1 528 0
 907 0062 2B49     		ldr	r1, .L59
 908 0064 7A68     		ldr	r2, [r7, #4]
 909 0066 1346     		mov	r3, r2
 910 0068 5B00     		lsls	r3, r3, #1
 911 006a 1344     		add	r3, r3, r2
 912 006c 9B00     		lsls	r3, r3, #2
 913 006e 0B44     		add	r3, r3, r1
 914 0070 1B68     		ldr	r3, [r3]
 915 0072 1846     		mov	r0, r3
 916 0074 FFF7FEFF 		bl	FreeRTOS_OutputARPRequest
 917 0078 15E0     		b	.L55
 918              	.L54:
 529:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 530:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else if( xARPCache[ x ].ucAge <= ( uint8_t ) arpMAX_ARP_AGE_BEFORE_NEW_ARP_REQUEST )
 919              		.loc 1 530 0
 920 007a 2549     		ldr	r1, .L59
 921 007c 7A68     		ldr	r2, [r7, #4]
 922 007e 1346     		mov	r3, r2
 923 0080 5B00     		lsls	r3, r3, #1
 924 0082 1344     		add	r3, r3, r2
 925 0084 9B00     		lsls	r3, r3, #2
 926 0086 0B44     		add	r3, r3, r1
 927 0088 0833     		adds	r3, r3, #8
 928 008a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 929 008c 032B     		cmp	r3, #3
 930 008e 0AD8     		bhi	.L55
 531:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 532:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* This entry will get removed soon.  See if the MAC address is
 533:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				still valid to prevent this happening. */
 534:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				iptraceARP_TABLE_ENTRY_WILL_EXPIRE( xARPCache[ x ].ulIPAddress );
 535:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				FreeRTOS_OutputARPRequest( xARPCache[ x ].ulIPAddress );
 931              		.loc 1 535 0
 932 0090 1F49     		ldr	r1, .L59
 933 0092 7A68     		ldr	r2, [r7, #4]
 934 0094 1346     		mov	r3, r2
 935 0096 5B00     		lsls	r3, r3, #1
ARM GAS  /tmp/ccPgm9iD.s 			page 27


 936 0098 1344     		add	r3, r3, r2
 937 009a 9B00     		lsls	r3, r3, #2
 938 009c 0B44     		add	r3, r3, r1
 939 009e 1B68     		ldr	r3, [r3]
 940 00a0 1846     		mov	r0, r3
 941 00a2 FFF7FEFF 		bl	FreeRTOS_OutputARPRequest
 942              	.L55:
 536:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 537:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			else
 538:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 539:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* The age has just ticked down, with nothing to do. */
 540:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 541:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 542:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( xARPCache[ x ].ucAge == 0u )
 943              		.loc 1 542 0
 944 00a6 1A49     		ldr	r1, .L59
 945 00a8 7A68     		ldr	r2, [r7, #4]
 946 00aa 1346     		mov	r3, r2
 947 00ac 5B00     		lsls	r3, r3, #1
 948 00ae 1344     		add	r3, r3, r2
 949 00b0 9B00     		lsls	r3, r3, #2
 950 00b2 0B44     		add	r3, r3, r1
 951 00b4 0833     		adds	r3, r3, #8
 952 00b6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 953 00b8 002B     		cmp	r3, #0
 954 00ba 08D1     		bne	.L53
 543:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 544:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* The entry is no longer valid.  Wipe it out. */
 545:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				iptraceARP_TABLE_ENTRY_EXPIRED( xARPCache[ x ].ulIPAddress );
 546:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				xARPCache[ x ].ulIPAddress = 0UL;
 955              		.loc 1 546 0
 956 00bc 1449     		ldr	r1, .L59
 957 00be 7A68     		ldr	r2, [r7, #4]
 958 00c0 1346     		mov	r3, r2
 959 00c2 5B00     		lsls	r3, r3, #1
 960 00c4 1344     		add	r3, r3, r2
 961 00c6 9B00     		lsls	r3, r3, #2
 962 00c8 0B44     		add	r3, r3, r1
 963 00ca 0022     		movs	r2, #0
 964 00cc 1A60     		str	r2, [r3]
 965              	.L53:
 515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 966              		.loc 1 515 0 discriminator 2
 967 00ce 7B68     		ldr	r3, [r7, #4]
 968 00d0 0133     		adds	r3, r3, #1
 969 00d2 7B60     		str	r3, [r7, #4]
 970              	.L52:
 515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 971              		.loc 1 515 0 is_stmt 0 discriminator 1
 972 00d4 7B68     		ldr	r3, [r7, #4]
 973 00d6 052B     		cmp	r3, #5
 974 00d8 98DD     		ble	.L56
 547:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 548:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 549:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 550:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 551:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	xTimeNow = xTaskGetTickCount ();
ARM GAS  /tmp/ccPgm9iD.s 			page 28


 975              		.loc 1 551 0 is_stmt 1
 976 00da FFF7FEFF 		bl	xTaskGetTickCount
 977 00de 3860     		str	r0, [r7]
 552:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 553:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	if( ( xLastGratuitousARPTime == ( TickType_t ) 0 ) || ( ( xTimeNow - xLastGratuitousARPTime ) > ( 
 978              		.loc 1 553 0
 979 00e0 0C4B     		ldr	r3, .L59+4
 980 00e2 1B68     		ldr	r3, [r3]
 981 00e4 002B     		cmp	r3, #0
 982 00e6 07D0     		beq	.L57
 983              		.loc 1 553 0 is_stmt 0 discriminator 1
 984 00e8 0A4B     		ldr	r3, .L59+4
 985 00ea 1B68     		ldr	r3, [r3]
 986 00ec 3A68     		ldr	r2, [r7]
 987 00ee D31A     		subs	r3, r2, r3
 988 00f0 44F62062 		movw	r2, #20000
 989 00f4 9342     		cmp	r3, r2
 990 00f6 07D9     		bls	.L51
 991              	.L57:
 554:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 555:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		FreeRTOS_OutputARPRequest( *ipLOCAL_IP_ADDRESS_POINTER );
 992              		.loc 1 555 0 is_stmt 1
 993 00f8 074B     		ldr	r3, .L59+8
 994 00fa 5B69     		ldr	r3, [r3, #20]
 995 00fc 1846     		mov	r0, r3
 996 00fe FFF7FEFF 		bl	FreeRTOS_OutputARPRequest
 556:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xLastGratuitousARPTime = xTimeNow;
 997              		.loc 1 556 0
 998 0102 044A     		ldr	r2, .L59+4
 999 0104 3B68     		ldr	r3, [r7]
 1000 0106 1360     		str	r3, [r2]
 1001              	.L51:
 557:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 558:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 1002              		.loc 1 558 0
 1003 0108 0837     		adds	r7, r7, #8
 1004              	.LCFI23:
 1005              		.cfi_def_cfa_offset 8
 1006 010a BD46     		mov	sp, r7
 1007              	.LCFI24:
 1008              		.cfi_def_cfa_register 13
 1009              		@ sp needed
 1010 010c 80BD     		pop	{r7, pc}
 1011              	.L60:
 1012 010e 00BF     		.align	2
 1013              	.L59:
 1014 0110 00000000 		.word	xARPCache
 1015 0114 00000000 		.word	xLastGratuitousARPTime
 1016 0118 00000000 		.word	xDefaultPartUDPPacketHeader
 1017              		.cfi_endproc
 1018              	.LFE33:
 1020              		.section	.text.vARPSendGratuitous,"ax",%progbits
 1021              		.align	2
 1022              		.global	vARPSendGratuitous
 1023              		.thumb
 1024              		.thumb_func
 1026              	vARPSendGratuitous:
ARM GAS  /tmp/ccPgm9iD.s 			page 29


 1027              	.LFB34:
 559:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 560:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 561:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** void vARPSendGratuitous( void )
 562:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 1028              		.loc 1 562 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 1, uses_anonymous_args = 0
 1032 0000 80B5     		push	{r7, lr}
 1033              	.LCFI25:
 1034              		.cfi_def_cfa_offset 8
 1035              		.cfi_offset 7, -8
 1036              		.cfi_offset 14, -4
 1037 0002 00AF     		add	r7, sp, #0
 1038              	.LCFI26:
 1039              		.cfi_def_cfa_register 7
 563:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* Setting xLastGratuitousARPTime to 0 will force a gratuitous ARP the next
 564:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	time vARPAgeCache() is called. */
 565:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	xLastGratuitousARPTime = ( TickType_t ) 0;
 1040              		.loc 1 565 0
 1041 0004 034B     		ldr	r3, .L62
 1042 0006 0022     		movs	r2, #0
 1043 0008 1A60     		str	r2, [r3]
 566:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 567:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* Let the IP-task call vARPAgeCache(). */
 568:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	xSendEventToIPTask( eARPTimerEvent );
 1044              		.loc 1 568 0
 1045 000a 0220     		movs	r0, #2
 1046 000c FFF7FEFF 		bl	xSendEventToIPTask
 569:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 1047              		.loc 1 569 0
 1048 0010 80BD     		pop	{r7, pc}
 1049              	.L63:
 1050 0012 00BF     		.align	2
 1051              	.L62:
 1052 0014 00000000 		.word	xLastGratuitousARPTime
 1053              		.cfi_endproc
 1054              	.LFE34:
 1056              		.section	.text.FreeRTOS_OutputARPRequest,"ax",%progbits
 1057              		.align	2
 1058              		.global	FreeRTOS_OutputARPRequest
 1059              		.thumb
 1060              		.thumb_func
 1062              	FreeRTOS_OutputARPRequest:
 1063              	.LFB35:
 570:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 571:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 572:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** void FreeRTOS_OutputARPRequest( uint32_t ulIPAddress )
 573:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 1064              		.loc 1 573 0
 1065              		.cfi_startproc
 1066              		@ args = 0, pretend = 0, frame = 16
 1067              		@ frame_needed = 1, uses_anonymous_args = 0
 1068 0000 80B5     		push	{r7, lr}
 1069              	.LCFI27:
 1070              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccPgm9iD.s 			page 30


 1071              		.cfi_offset 7, -8
 1072              		.cfi_offset 14, -4
 1073 0002 84B0     		sub	sp, sp, #16
 1074              	.LCFI28:
 1075              		.cfi_def_cfa_offset 24
 1076 0004 00AF     		add	r7, sp, #0
 1077              	.LCFI29:
 1078              		.cfi_def_cfa_register 7
 1079 0006 7860     		str	r0, [r7, #4]
 574:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** NetworkBufferDescriptor_t *pxNetworkBuffer;
 575:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 576:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* This is called from the context of the IP event task, so a block time
 577:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	must not be used. */
 578:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	pxNetworkBuffer = pxGetNetworkBufferWithDescriptor( sizeof( ARPPacket_t ), ( TickType_t ) 0 );
 1080              		.loc 1 578 0
 1081 0008 2A20     		movs	r0, #42
 1082 000a 0021     		movs	r1, #0
 1083 000c FFF7FEFF 		bl	pxGetNetworkBufferWithDescriptor
 1084 0010 F860     		str	r0, [r7, #12]
 579:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 580:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	if( pxNetworkBuffer != NULL )
 1085              		.loc 1 580 0
 1086 0012 FB68     		ldr	r3, [r7, #12]
 1087 0014 002B     		cmp	r3, #0
 1088 0016 09D0     		beq	.L64
 581:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 582:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		pxNetworkBuffer->ulIPAddress = ulIPAddress;
 1089              		.loc 1 582 0
 1090 0018 FB68     		ldr	r3, [r7, #12]
 1091 001a 7A68     		ldr	r2, [r7, #4]
 1092 001c 5A61     		str	r2, [r3, #20]
 583:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		vARPGenerateRequestPacket( pxNetworkBuffer );
 1093              		.loc 1 583 0
 1094 001e F868     		ldr	r0, [r7, #12]
 1095 0020 FFF7FEFF 		bl	vARPGenerateRequestPacket
 584:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 585:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		#if defined( ipconfigETHERNET_MINIMUM_PACKET_BYTES )
 586:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 587:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( pxNetworkBuffer->xDataLength < ( size_t ) ipconfigETHERNET_MINIMUM_PACKET_BYTES )
 588:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 589:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			BaseType_t xIndex;
 590:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 591:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				FreeRTOS_printf( ( "OutputARPRequest: length %lu\n", pxNetworkBuffer->xDataLength ) );
 592:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				for( xIndex = ( BaseType_t ) pxNetworkBuffer->xDataLength; xIndex < ( BaseType_t ) ipconfigETHE
 593:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				{
 594:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					pxNetworkBuffer->pucEthernetBuffer[ xIndex ] = 0u;
 595:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				}
 596:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				pxNetworkBuffer->xDataLength = ( size_t ) ipconfigETHERNET_MINIMUM_PACKET_BYTES;
 597:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 598:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 599:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		#endif
 600:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 601:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xNetworkInterfaceOutput( pxNetworkBuffer, pdTRUE );
 1096              		.loc 1 601 0
 1097 0024 F868     		ldr	r0, [r7, #12]
 1098 0026 0121     		movs	r1, #1
 1099 0028 FFF7FEFF 		bl	xNetworkInterfaceOutput
ARM GAS  /tmp/ccPgm9iD.s 			page 31


 1100              	.L64:
 602:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 603:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 1101              		.loc 1 603 0
 1102 002c 1037     		adds	r7, r7, #16
 1103              	.LCFI30:
 1104              		.cfi_def_cfa_offset 8
 1105 002e BD46     		mov	sp, r7
 1106              	.LCFI31:
 1107              		.cfi_def_cfa_register 13
 1108              		@ sp needed
 1109 0030 80BD     		pop	{r7, pc}
 1110              		.cfi_endproc
 1111              	.LFE35:
 1113 0032 00BF     		.section	.text.vARPGenerateRequestPacket,"ax",%progbits
 1114              		.align	2
 1115              		.global	vARPGenerateRequestPacket
 1116              		.thumb
 1117              		.thumb_func
 1119              	vARPGenerateRequestPacket:
 1120              	.LFB36:
 604:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 605:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** void vARPGenerateRequestPacket( NetworkBufferDescriptor_t * const pxNetworkBuffer )
 606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 1121              		.loc 1 606 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 16
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125 0000 80B5     		push	{r7, lr}
 1126              	.LCFI32:
 1127              		.cfi_def_cfa_offset 8
 1128              		.cfi_offset 7, -8
 1129              		.cfi_offset 14, -4
 1130 0002 84B0     		sub	sp, sp, #16
 1131              	.LCFI33:
 1132              		.cfi_def_cfa_offset 24
 1133 0004 00AF     		add	r7, sp, #0
 1134              	.LCFI34:
 1135              		.cfi_def_cfa_register 7
 1136 0006 7860     		str	r0, [r7, #4]
 607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** ARPPacket_t *pxARPPacket;
 608:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 609:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	pxARPPacket = ( ARPPacket_t * ) pxNetworkBuffer->pucEthernetBuffer;
 1137              		.loc 1 609 0
 1138 0008 7B68     		ldr	r3, [r7, #4]
 1139 000a 9B69     		ldr	r3, [r3, #24]
 1140 000c FB60     		str	r3, [r7, #12]
 610:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 611:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* memcpy the const part of the header information into the correct
 612:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	location in the packet.  This copies:
 613:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xEthernetHeader.ulDestinationAddress
 614:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xEthernetHeader.usFrameType;
 615:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPHeader.usHardwareType;
 616:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPHeader.usProtocolType;
 617:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPHeader.ucHardwareAddressLength;
 618:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPHeader.ucProtocolAddressLength;
 619:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPHeader.usOperation;
ARM GAS  /tmp/ccPgm9iD.s 			page 32


 620:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		xARPHeader.xTargetHardwareAddress;
 621:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	*/
 622:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	memcpy( ( void * ) &( pxARPPacket->xEthernetHeader ), ( void * ) xDefaultPartARPPacketHeader, size
 1141              		.loc 1 622 0
 1142 000e FB68     		ldr	r3, [r7, #12]
 1143 0010 1846     		mov	r0, r3
 1144 0012 1049     		ldr	r1, .L67
 1145 0014 2622     		movs	r2, #38
 1146 0016 FFF7FEFF 		bl	memcpy
 623:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	memcpy( ( void * ) pxARPPacket->xEthernetHeader.xSourceAddress.ucBytes , ( void * ) ipLOCAL_MAC_AD
 1147              		.loc 1 623 0
 1148 001a FB68     		ldr	r3, [r7, #12]
 1149 001c 0633     		adds	r3, r3, #6
 1150 001e 1846     		mov	r0, r3
 1151 0020 0D49     		ldr	r1, .L67+4
 1152 0022 0622     		movs	r2, #6
 1153 0024 FFF7FEFF 		bl	memcpy
 624:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	memcpy( ( void * ) pxARPPacket->xARPHeader.xSenderHardwareAddress.ucBytes, ( void * ) ipLOCAL_MAC_
 1154              		.loc 1 624 0
 1155 0028 FB68     		ldr	r3, [r7, #12]
 1156 002a 1633     		adds	r3, r3, #22
 1157 002c 1846     		mov	r0, r3
 1158 002e 0A49     		ldr	r1, .L67+4
 1159 0030 0622     		movs	r2, #6
 1160 0032 FFF7FEFF 		bl	memcpy
 625:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	/* HT:endian: network to network */
 626:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	pxARPPacket->xARPHeader.ulSenderProtocolAddress = *ipLOCAL_IP_ADDRESS_POINTER;
 1161              		.loc 1 626 0
 1162 0036 084B     		ldr	r3, .L67+4
 1163 0038 5A69     		ldr	r2, [r3, #20]
 1164 003a FB68     		ldr	r3, [r7, #12]
 1165 003c DA61     		str	r2, [r3, #28]	@ unaligned
 627:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	pxARPPacket->xARPHeader.ulTargetProtocolAddress = pxNetworkBuffer->ulIPAddress;
 1166              		.loc 1 627 0
 1167 003e 7B68     		ldr	r3, [r7, #4]
 1168 0040 5A69     		ldr	r2, [r3, #20]
 1169 0042 FB68     		ldr	r3, [r7, #12]
 1170 0044 C3F82620 		str	r2, [r3, #38]	@ unaligned
 628:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 629:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	pxNetworkBuffer->xDataLength = sizeof( ARPPacket_t );
 1171              		.loc 1 629 0
 1172 0048 7B68     		ldr	r3, [r7, #4]
 1173 004a 2A22     		movs	r2, #42
 1174 004c DA61     		str	r2, [r3, #28]
 630:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 631:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	iptraceCREATING_ARP_REQUEST( pxNetworkBuffer->ulIPAddress );
 632:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 1175              		.loc 1 632 0
 1176 004e 1037     		adds	r7, r7, #16
 1177              	.LCFI35:
 1178              		.cfi_def_cfa_offset 8
 1179 0050 BD46     		mov	sp, r7
 1180              	.LCFI36:
 1181              		.cfi_def_cfa_register 13
 1182              		@ sp needed
 1183 0052 80BD     		pop	{r7, pc}
 1184              	.L68:
ARM GAS  /tmp/ccPgm9iD.s 			page 33


 1185              		.align	2
 1186              	.L67:
 1187 0054 00000000 		.word	xDefaultPartARPPacketHeader
 1188 0058 00000000 		.word	xDefaultPartUDPPacketHeader
 1189              		.cfi_endproc
 1190              	.LFE36:
 1192              		.section	.text.FreeRTOS_ClearARP,"ax",%progbits
 1193              		.align	2
 1194              		.global	FreeRTOS_ClearARP
 1195              		.thumb
 1196              		.thumb_func
 1198              	FreeRTOS_ClearARP:
 1199              	.LFB37:
 633:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 634:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 635:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** void FreeRTOS_ClearARP( void )
 636:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** {
 1200              		.loc 1 636 0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 0
 1203              		@ frame_needed = 1, uses_anonymous_args = 0
 1204 0000 80B5     		push	{r7, lr}
 1205              	.LCFI37:
 1206              		.cfi_def_cfa_offset 8
 1207              		.cfi_offset 7, -8
 1208              		.cfi_offset 14, -4
 1209 0002 00AF     		add	r7, sp, #0
 1210              	.LCFI38:
 1211              		.cfi_def_cfa_register 7
 637:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	memset( xARPCache, '\0', sizeof( xARPCache ) );
 1212              		.loc 1 637 0
 1213 0004 0248     		ldr	r0, .L70
 1214 0006 0021     		movs	r1, #0
 1215 0008 4822     		movs	r2, #72
 1216 000a FFF7FEFF 		bl	memset
 638:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** }
 1217              		.loc 1 638 0
 1218 000e 80BD     		pop	{r7, pc}
 1219              	.L71:
 1220              		.align	2
 1221              	.L70:
 1222 0010 00000000 		.word	xARPCache
 1223              		.cfi_endproc
 1224              	.LFE37:
 1226              		.section	.rodata
 1227              		.align	2
 1228              	.LC0:
 1229 0000 41727020 		.ascii	"Arp %2ld: %3u - %16lxip : %02x:%02x:%02x : %02x:%02"
 1229      25326C64 
 1229      3A202533 
 1229      75202D20 
 1229      2531366C 
 1230 0033 783A2530 		.ascii	"x:%02x\012\000"
 1230      32780A00 
 1231 003b 00       		.align	2
 1232              	.LC1:
 1233 003c 41727020 		.ascii	"Arp has %ld entries\012\000"
ARM GAS  /tmp/ccPgm9iD.s 			page 34


 1233      68617320 
 1233      256C6420 
 1233      656E7472 
 1233      6965730A 
 1234              		.section	.text.FreeRTOS_PrintARPCache,"ax",%progbits
 1235              		.align	2
 1236              		.global	FreeRTOS_PrintARPCache
 1237              		.thumb
 1238              		.thumb_func
 1240              	FreeRTOS_PrintARPCache:
 1241              	.LFB38:
 639:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** /*-----------------------------------------------------------*/
 640:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 641:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** #if( ipconfigHAS_PRINTF != 0 ) || ( ipconfigHAS_DEBUG_PRINTF != 0 )
 642:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 643:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	void FreeRTOS_PrintARPCache( void )
 644:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	{
 1242              		.loc 1 644 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 8
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1247              	.LCFI39:
 1248              		.cfi_def_cfa_offset 24
 1249              		.cfi_offset 4, -24
 1250              		.cfi_offset 5, -20
 1251              		.cfi_offset 6, -16
 1252              		.cfi_offset 7, -12
 1253              		.cfi_offset 8, -8
 1254              		.cfi_offset 14, -4
 1255 0004 88B0     		sub	sp, sp, #32
 1256              	.LCFI40:
 1257              		.cfi_def_cfa_offset 56
 1258 0006 06AF     		add	r7, sp, #24
 1259              	.LCFI41:
 1260              		.cfi_def_cfa 7, 32
 645:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	BaseType_t x, xCount = 0;
 1261              		.loc 1 645 0
 1262 0008 0023     		movs	r3, #0
 1263 000a 3B60     		str	r3, [r7]
 646:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 647:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		/* Loop through each entry in the ARP cache. */
 648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		for( x = 0; x < ipconfigARP_CACHE_ENTRIES; x++ )
 1264              		.loc 1 648 0
 1265 000c 0023     		movs	r3, #0
 1266 000e 7B60     		str	r3, [r7, #4]
 1267 0010 74E0     		b	.L73
 1268              	.L75:
 649:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 650:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			if( ( xARPCache[ x ].ulIPAddress != 0ul ) && ( xARPCache[ x ].ucAge > 0U ) )
 1269              		.loc 1 650 0
 1270 0012 4049     		ldr	r1, .L76
 1271 0014 7A68     		ldr	r2, [r7, #4]
 1272 0016 1346     		mov	r3, r2
 1273 0018 5B00     		lsls	r3, r3, #1
 1274 001a 1344     		add	r3, r3, r2
 1275 001c 9B00     		lsls	r3, r3, #2
ARM GAS  /tmp/ccPgm9iD.s 			page 35


 1276 001e 0B44     		add	r3, r3, r1
 1277 0020 1B68     		ldr	r3, [r3]
 1278 0022 002B     		cmp	r3, #0
 1279 0024 67D0     		beq	.L74
 1280              		.loc 1 650 0 is_stmt 0 discriminator 1
 1281 0026 3B49     		ldr	r1, .L76
 1282 0028 7A68     		ldr	r2, [r7, #4]
 1283 002a 1346     		mov	r3, r2
 1284 002c 5B00     		lsls	r3, r3, #1
 1285 002e 1344     		add	r3, r3, r2
 1286 0030 9B00     		lsls	r3, r3, #2
 1287 0032 0B44     		add	r3, r3, r1
 1288 0034 0833     		adds	r3, r3, #8
 1289 0036 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1290 0038 002B     		cmp	r3, #0
 1291 003a 5CD0     		beq	.L74
 651:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			{
 652:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				/* See if the MAC-address also matches, and we're all happy */
 653:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				FreeRTOS_printf( ( "Arp %2ld: %3u - %16lxip : %02x:%02x:%02x : %02x:%02x:%02x\n",
 1292              		.loc 1 653 0 is_stmt 1
 1293 003c 3549     		ldr	r1, .L76
 1294 003e 7A68     		ldr	r2, [r7, #4]
 1295 0040 1346     		mov	r3, r2
 1296 0042 5B00     		lsls	r3, r3, #1
 1297 0044 1344     		add	r3, r3, r2
 1298 0046 9B00     		lsls	r3, r3, #2
 1299 0048 0B44     		add	r3, r3, r1
 1300 004a 0833     		adds	r3, r3, #8
 1301 004c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1302 004e 9846     		mov	r8, r3
 1303 0050 3049     		ldr	r1, .L76
 1304 0052 7A68     		ldr	r2, [r7, #4]
 1305 0054 1346     		mov	r3, r2
 1306 0056 5B00     		lsls	r3, r3, #1
 1307 0058 1344     		add	r3, r3, r2
 1308 005a 9B00     		lsls	r3, r3, #2
 1309 005c 0B44     		add	r3, r3, r1
 1310 005e 1C68     		ldr	r4, [r3]
 1311 0060 2C49     		ldr	r1, .L76
 1312 0062 7A68     		ldr	r2, [r7, #4]
 1313 0064 1346     		mov	r3, r2
 1314 0066 5B00     		lsls	r3, r3, #1
 1315 0068 1344     		add	r3, r3, r2
 1316 006a 9B00     		lsls	r3, r3, #2
 1317 006c 0B44     		add	r3, r3, r1
 1318 006e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1319 0070 9C46     		mov	ip, r3
 1320 0072 2849     		ldr	r1, .L76
 1321 0074 7A68     		ldr	r2, [r7, #4]
 1322 0076 1346     		mov	r3, r2
 1323 0078 5B00     		lsls	r3, r3, #1
 1324 007a 1344     		add	r3, r3, r2
 1325 007c 9B00     		lsls	r3, r3, #2
 1326 007e 0B44     		add	r3, r3, r1
 1327 0080 0133     		adds	r3, r3, #1
 1328 0082 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1329 0084 9E46     		mov	lr, r3
ARM GAS  /tmp/ccPgm9iD.s 			page 36


 1330 0086 2349     		ldr	r1, .L76
 1331 0088 7A68     		ldr	r2, [r7, #4]
 1332 008a 1346     		mov	r3, r2
 1333 008c 5B00     		lsls	r3, r3, #1
 1334 008e 1344     		add	r3, r3, r2
 1335 0090 9B00     		lsls	r3, r3, #2
 1336 0092 0B44     		add	r3, r3, r1
 1337 0094 0233     		adds	r3, r3, #2
 1338 0096 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1339 0098 1E46     		mov	r6, r3
 1340 009a 1E49     		ldr	r1, .L76
 1341 009c 7A68     		ldr	r2, [r7, #4]
 1342 009e 1346     		mov	r3, r2
 1343 00a0 5B00     		lsls	r3, r3, #1
 1344 00a2 1344     		add	r3, r3, r2
 1345 00a4 9B00     		lsls	r3, r3, #2
 1346 00a6 0B44     		add	r3, r3, r1
 1347 00a8 0333     		adds	r3, r3, #3
 1348 00aa 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1349 00ac 1D46     		mov	r5, r3
 1350 00ae 1949     		ldr	r1, .L76
 1351 00b0 7A68     		ldr	r2, [r7, #4]
 1352 00b2 1346     		mov	r3, r2
 1353 00b4 5B00     		lsls	r3, r3, #1
 1354 00b6 1344     		add	r3, r3, r2
 1355 00b8 9B00     		lsls	r3, r3, #2
 1356 00ba 0B44     		add	r3, r3, r1
 1357 00bc 0433     		adds	r3, r3, #4
 1358 00be 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1359 00c0 1846     		mov	r0, r3
 1360 00c2 1449     		ldr	r1, .L76
 1361 00c4 7A68     		ldr	r2, [r7, #4]
 1362 00c6 1346     		mov	r3, r2
 1363 00c8 5B00     		lsls	r3, r3, #1
 1364 00ca 1344     		add	r3, r3, r2
 1365 00cc 9B00     		lsls	r3, r3, #2
 1366 00ce 0B44     		add	r3, r3, r1
 1367 00d0 0533     		adds	r3, r3, #5
 1368 00d2 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1369 00d4 CDF800C0 		str	ip, [sp]
 1370 00d8 CDF804E0 		str	lr, [sp, #4]
 1371 00dc 0296     		str	r6, [sp, #8]
 1372 00de 0395     		str	r5, [sp, #12]
 1373 00e0 0490     		str	r0, [sp, #16]
 1374 00e2 0593     		str	r3, [sp, #20]
 1375 00e4 0C48     		ldr	r0, .L76+4
 1376 00e6 7968     		ldr	r1, [r7, #4]
 1377 00e8 4246     		mov	r2, r8
 1378 00ea 2346     		mov	r3, r4
 1379 00ec FFF7FEFF 		bl	lUDPLoggingPrintf
 654:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					x,
 655:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].ucAge,
 656:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].ulIPAddress,
 657:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].xMACAddress.ucBytes[0],
 658:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].xMACAddress.ucBytes[1],
 659:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].xMACAddress.ucBytes[2],
 660:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].xMACAddress.ucBytes[3],
ARM GAS  /tmp/ccPgm9iD.s 			page 37


 661:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].xMACAddress.ucBytes[4],
 662:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 					xARPCache[ x ].xMACAddress.ucBytes[5] ) );
 663:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 				xCount++;
 1380              		.loc 1 663 0
 1381 00f0 3B68     		ldr	r3, [r7]
 1382 00f2 0133     		adds	r3, r3, #1
 1383 00f4 3B60     		str	r3, [r7]
 1384              	.L74:
 648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 1385              		.loc 1 648 0 discriminator 2
 1386 00f6 7B68     		ldr	r3, [r7, #4]
 1387 00f8 0133     		adds	r3, r3, #1
 1388 00fa 7B60     		str	r3, [r7, #4]
 1389              	.L73:
 648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		{
 1390              		.loc 1 648 0 is_stmt 0 discriminator 1
 1391 00fc 7B68     		ldr	r3, [r7, #4]
 1392 00fe 052B     		cmp	r3, #5
 1393 0100 87DD     		ble	.L75
 664:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 			}
 665:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		}
 666:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 
 667:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 		FreeRTOS_printf( ( "Arp has %ld entries\n", xCount ) );
 1394              		.loc 1 667 0 is_stmt 1
 1395 0102 0648     		ldr	r0, .L76+8
 1396 0104 3968     		ldr	r1, [r7]
 1397 0106 FFF7FEFF 		bl	lUDPLoggingPrintf
 668:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_ARP.c **** 	}
 1398              		.loc 1 668 0
 1399 010a 0837     		adds	r7, r7, #8
 1400              	.LCFI42:
 1401              		.cfi_def_cfa_offset 24
 1402 010c BD46     		mov	sp, r7
 1403              	.LCFI43:
 1404              		.cfi_def_cfa_register 13
 1405              		@ sp needed
 1406 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1407              	.L77:
 1408 0112 00BF     		.align	2
 1409              	.L76:
 1410 0114 00000000 		.word	xARPCache
 1411 0118 00000000 		.word	.LC0
 1412 011c 3C000000 		.word	.LC1
 1413              		.cfi_endproc
 1414              	.LFE38:
 1416              		.text
 1417              	.Letext0:
 1418              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1419              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1420              		.file 4 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 1421              		.file 5 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1422              		.file 6 "../../../FreeRTOS_9_0/Source/include/list.h"
 1423              		.file 7 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h"
 1424              		.file 8 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP_Private.h"
 1425              		.file 9 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_ARP.h"
 1426              		.file 10 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_DNS.h"
ARM GAS  /tmp/ccPgm9iD.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FreeRTOS_ARP.c
     /tmp/ccPgm9iD.s:21     .bss.xARPCache:0000000000000000 $d
     /tmp/ccPgm9iD.s:24     .bss.xARPCache:0000000000000000 xARPCache
     /tmp/ccPgm9iD.s:27     .bss.xLastGratuitousARPTime:0000000000000000 $d
     /tmp/ccPgm9iD.s:30     .bss.xLastGratuitousARPTime:0000000000000000 xLastGratuitousARPTime
     /tmp/ccPgm9iD.s:33     .rodata.xDefaultPartARPPacketHeader:0000000000000000 $d
     /tmp/ccPgm9iD.s:36     .rodata.xDefaultPartARPPacketHeader:0000000000000000 xDefaultPartARPPacketHeader
     /tmp/ccPgm9iD.s:76     .text.eARPProcessPacket:0000000000000000 $t
     /tmp/ccPgm9iD.s:81     .text.eARPProcessPacket:0000000000000000 eARPProcessPacket
     /tmp/ccPgm9iD.s:250    .text.vARPRefreshCacheEntry:0000000000000000 vARPRefreshCacheEntry
     /tmp/ccPgm9iD.s:239    .text.eARPProcessPacket:00000000000000f8 $d
     /tmp/ccPgm9iD.s:245    .text.vARPRefreshCacheEntry:0000000000000000 $t
     /tmp/ccPgm9iD.s:562    .text.vARPRefreshCacheEntry:00000000000001ec $d
     /tmp/ccPgm9iD.s:569    .text.eARPGetCacheEntry:0000000000000000 $t
     /tmp/ccPgm9iD.s:574    .text.eARPGetCacheEntry:0000000000000000 eARPGetCacheEntry
     /tmp/ccPgm9iD.s:726    .text.prvCacheLookup:0000000000000000 prvCacheLookup
     /tmp/ccPgm9iD.s:713    .text.eARPGetCacheEntry:00000000000000b8 $d
     /tmp/ccPgm9iD.s:722    .text.prvCacheLookup:0000000000000000 $t
     /tmp/ccPgm9iD.s:828    .text.prvCacheLookup:0000000000000080 $d
     /tmp/ccPgm9iD.s:833    .text.vARPAgeCache:0000000000000000 $t
     /tmp/ccPgm9iD.s:838    .text.vARPAgeCache:0000000000000000 vARPAgeCache
     /tmp/ccPgm9iD.s:1062   .text.FreeRTOS_OutputARPRequest:0000000000000000 FreeRTOS_OutputARPRequest
     /tmp/ccPgm9iD.s:1014   .text.vARPAgeCache:0000000000000110 $d
     /tmp/ccPgm9iD.s:1021   .text.vARPSendGratuitous:0000000000000000 $t
     /tmp/ccPgm9iD.s:1026   .text.vARPSendGratuitous:0000000000000000 vARPSendGratuitous
     /tmp/ccPgm9iD.s:1052   .text.vARPSendGratuitous:0000000000000014 $d
     /tmp/ccPgm9iD.s:1057   .text.FreeRTOS_OutputARPRequest:0000000000000000 $t
     /tmp/ccPgm9iD.s:1119   .text.vARPGenerateRequestPacket:0000000000000000 vARPGenerateRequestPacket
     /tmp/ccPgm9iD.s:1114   .text.vARPGenerateRequestPacket:0000000000000000 $t
     /tmp/ccPgm9iD.s:1187   .text.vARPGenerateRequestPacket:0000000000000054 $d
     /tmp/ccPgm9iD.s:1193   .text.FreeRTOS_ClearARP:0000000000000000 $t
     /tmp/ccPgm9iD.s:1198   .text.FreeRTOS_ClearARP:0000000000000000 FreeRTOS_ClearARP
     /tmp/ccPgm9iD.s:1222   .text.FreeRTOS_ClearARP:0000000000000010 $d
     /tmp/ccPgm9iD.s:1227   .rodata:0000000000000000 $d
     /tmp/ccPgm9iD.s:1235   .text.FreeRTOS_PrintARPCache:0000000000000000 $t
     /tmp/ccPgm9iD.s:1240   .text.FreeRTOS_PrintARPCache:0000000000000000 FreeRTOS_PrintARPCache
     /tmp/ccPgm9iD.s:1410   .text.FreeRTOS_PrintARPCache:0000000000000114 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
memcpy
memset
xDefaultPartUDPPacketHeader
xBroadcastMACAddress
memcmp
xNetworkAddressing
xLLMNR_MacAdress
xTaskGetTickCount
xSendEventToIPTask
pxGetNetworkBufferWithDescriptor
xNetworkInterfaceOutput
lUDPLoggingPrintf
