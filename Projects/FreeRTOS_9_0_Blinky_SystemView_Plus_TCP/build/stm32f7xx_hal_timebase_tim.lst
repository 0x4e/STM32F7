ARM GAS  /tmp/cc0GYsNT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f7xx_hal_timebase_tim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	htim13,60,4
  21              		.global	uwIncrementState
  22              		.section	.bss.uwIncrementState,"aw",%nobits
  23              		.align	2
  26              	uwIncrementState:
  27 0000 00000000 		.space	4
  28              		.section	.text.HAL_InitTick,"ax",%progbits
  29              		.align	2
  30              		.global	HAL_InitTick
  31              		.thumb
  32              		.thumb_func
  34              	HAL_InitTick:
  35              	.LFB135:
  36              		.file 1 "Src/stm32f7xx_hal_timebase_tim.c"
   1:Src/stm32f7xx_hal_timebase_tim.c **** /**
   2:Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
   3:Src/stm32f7xx_hal_timebase_tim.c ****   * @file    stm32f7xx_hal_timebase_tim.c 
   4:Src/stm32f7xx_hal_timebase_tim.c ****   * @author  Nick
   5:Src/stm32f7xx_hal_timebase_tim.c ****   * @version V1
   6:Src/stm32f7xx_hal_timebase_tim.c ****   * @date    1 June 2016
   7:Src/stm32f7xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM Template.
   8:Src/stm32f7xx_hal_timebase_tim.c ****   *    
   9:Src/stm32f7xx_hal_timebase_tim.c ****   *          This file overrides the native HAL time base functions (defined as weak)
  10:Src/stm32f7xx_hal_timebase_tim.c ****   *          the TIM time base:
  11:Src/stm32f7xx_hal_timebase_tim.c ****   *           + Intializes the TIM peripheral generate a Period elapsed Event each 1ms
  12:Src/stm32f7xx_hal_timebase_tim.c ****   *           + HAL_IncTick is called inside HAL_TIM_PeriodElapsedCallback ie each 1ms
  13:Src/stm32f7xx_hal_timebase_tim.c ****   * 
  14:Src/stm32f7xx_hal_timebase_tim.c ****   ******************************************************************************
  15:Src/stm32f7xx_hal_timebase_tim.c ****   */
  16:Src/stm32f7xx_hal_timebase_tim.c **** 
  17:Src/stm32f7xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  18:Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal.h"
  19:Src/stm32f7xx_hal_timebase_tim.c **** #include "stm32f7xx_hal_tim.h"
  20:Src/stm32f7xx_hal_timebase_tim.c **** /** @addtogroup STM32F7xx_HAL_Driver
  21:Src/stm32f7xx_hal_timebase_tim.c ****   * @{
  22:Src/stm32f7xx_hal_timebase_tim.c ****   */
  23:Src/stm32f7xx_hal_timebase_tim.c **** 
  24:Src/stm32f7xx_hal_timebase_tim.c **** /** @addtogroup HAL_TimeBase_TIM
ARM GAS  /tmp/cc0GYsNT.s 			page 2


  25:Src/stm32f7xx_hal_timebase_tim.c ****   * @{
  26:Src/stm32f7xx_hal_timebase_tim.c ****   */ 
  27:Src/stm32f7xx_hal_timebase_tim.c **** 
  28:Src/stm32f7xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f7xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  30:Src/stm32f7xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  31:Src/stm32f7xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  32:Src/stm32f7xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim13; 
  33:Src/stm32f7xx_hal_timebase_tim.c **** uint32_t                 uwIncrementState = 0;
  34:Src/stm32f7xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
  35:Src/stm32f7xx_hal_timebase_tim.c **** 
  36:Src/stm32f7xx_hal_timebase_tim.c **** 
  37:Src/stm32f7xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  38:Src/stm32f7xx_hal_timebase_tim.c **** 
  39:Src/stm32f7xx_hal_timebase_tim.c **** /**
  40:Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM13 as a time base source. 
  41:Src/stm32f7xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated 
  42:Src/stm32f7xx_hal_timebase_tim.c ****   *         Tick interrupt priority. 
  43:Src/stm32f7xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  44:Src/stm32f7xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig(). 
  45:Src/stm32f7xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priorty.
  46:Src/stm32f7xx_hal_timebase_tim.c ****   * @retval HAL status
  47:Src/stm32f7xx_hal_timebase_tim.c ****   */
  48:Src/stm32f7xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  49:Src/stm32f7xx_hal_timebase_tim.c **** {
  37              		.loc 1 49 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 48
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 8CB0     		sub	sp, sp, #48
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 56
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
  51              		.cfi_def_cfa_register 7
  52 0006 7860     		str	r0, [r7, #4]
  50:Src/stm32f7xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  51:Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  53              		.loc 1 51 0
  54 0008 0023     		movs	r3, #0
  55 000a FB62     		str	r3, [r7, #44]
  52:Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  56              		.loc 1 52 0
  57 000c 0023     		movs	r3, #0
  58 000e BB62     		str	r3, [r7, #40]
  53:Src/stm32f7xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  54:Src/stm32f7xx_hal_timebase_tim.c ****   
  55:Src/stm32f7xx_hal_timebase_tim.c ****   /*Configure the TIM13 IRQ priority */
  56:Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0); 
  59              		.loc 1 56 0
  60 0010 2C20     		movs	r0, #44
  61 0012 7968     		ldr	r1, [r7, #4]
ARM GAS  /tmp/cc0GYsNT.s 			page 3


  62 0014 0022     		movs	r2, #0
  63 0016 FFF7FEFF 		bl	HAL_NVIC_SetPriority
  57:Src/stm32f7xx_hal_timebase_tim.c ****   
  58:Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable the TIM13 global Interrupt */
  59:Src/stm32f7xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn); 
  64              		.loc 1 59 0
  65 001a 2C20     		movs	r0, #44
  66 001c FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  67              	.LBB2:
  60:Src/stm32f7xx_hal_timebase_tim.c ****   
  61:Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM13 clock */
  62:Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_RCC_TIM13_CLK_ENABLE();
  68              		.loc 1 62 0
  69 0020 1F4A     		ldr	r2, .L5
  70 0022 1F4B     		ldr	r3, .L5
  71 0024 1B6C     		ldr	r3, [r3, #64]
  72 0026 43F08003 		orr	r3, r3, #128
  73 002a 1364     		str	r3, [r2, #64]
  74 002c 1C4B     		ldr	r3, .L5
  75 002e 1B6C     		ldr	r3, [r3, #64]
  76 0030 03F08003 		and	r3, r3, #128
  77 0034 FB60     		str	r3, [r7, #12]
  78 0036 FB68     		ldr	r3, [r7, #12]
  79              	.LBE2:
  63:Src/stm32f7xx_hal_timebase_tim.c ****   
  64:Src/stm32f7xx_hal_timebase_tim.c ****   /* Get clock configuration */
  65:Src/stm32f7xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  80              		.loc 1 65 0
  81 0038 07F11402 		add	r2, r7, #20
  82 003c 07F11003 		add	r3, r7, #16
  83 0040 1046     		mov	r0, r2
  84 0042 1946     		mov	r1, r3
  85 0044 FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  66:Src/stm32f7xx_hal_timebase_tim.c ****   
  67:Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute TIM13 clock */
  68:Src/stm32f7xx_hal_timebase_tim.c ****   uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  86              		.loc 1 68 0
  87 0048 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  88 004c 0346     		mov	r3, r0
  89 004e 5B00     		lsls	r3, r3, #1
  90 0050 FB62     		str	r3, [r7, #44]
  69:Src/stm32f7xx_hal_timebase_tim.c ****    
  70:Src/stm32f7xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM13 counter clock equal to 1MHz */
  71:Src/stm32f7xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
  91              		.loc 1 71 0
  92 0052 FB6A     		ldr	r3, [r7, #44]
  93 0054 134A     		ldr	r2, .L5+4
  94 0056 A2FB0323 		umull	r2, r3, r2, r3
  95 005a 9B0C     		lsrs	r3, r3, #18
  96 005c 013B     		subs	r3, r3, #1
  97 005e BB62     		str	r3, [r7, #40]
  72:Src/stm32f7xx_hal_timebase_tim.c ****   
  73:Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIM13 */
  74:Src/stm32f7xx_hal_timebase_tim.c ****   htim13.Instance = TIM13;
  98              		.loc 1 74 0
  99 0060 114B     		ldr	r3, .L5+8
 100 0062 124A     		ldr	r2, .L5+12
ARM GAS  /tmp/cc0GYsNT.s 			page 4


 101 0064 1A60     		str	r2, [r3]
  75:Src/stm32f7xx_hal_timebase_tim.c ****   
  76:Src/stm32f7xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  77:Src/stm32f7xx_hal_timebase_tim.c ****   + Period = [(TIM13CLK/1000) - 1]. to have a (1/1000) s time base.
  78:Src/stm32f7xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  79:Src/stm32f7xx_hal_timebase_tim.c ****   + ClockDivision = 0
  80:Src/stm32f7xx_hal_timebase_tim.c ****   + Counter direction = Up
  81:Src/stm32f7xx_hal_timebase_tim.c ****   */
  82:Src/stm32f7xx_hal_timebase_tim.c ****   htim13.Init.Period = (1000000 / 1000) - 1;
 102              		.loc 1 82 0
 103 0066 104B     		ldr	r3, .L5+8
 104 0068 40F2E732 		movw	r2, #999
 105 006c DA60     		str	r2, [r3, #12]
  83:Src/stm32f7xx_hal_timebase_tim.c ****   htim13.Init.Prescaler = uwPrescalerValue;
 106              		.loc 1 83 0
 107 006e 0E4A     		ldr	r2, .L5+8
 108 0070 BB6A     		ldr	r3, [r7, #40]
 109 0072 5360     		str	r3, [r2, #4]
  84:Src/stm32f7xx_hal_timebase_tim.c ****   htim13.Init.ClockDivision = 0;
 110              		.loc 1 84 0
 111 0074 0C4B     		ldr	r3, .L5+8
 112 0076 0022     		movs	r2, #0
 113 0078 1A61     		str	r2, [r3, #16]
  85:Src/stm32f7xx_hal_timebase_tim.c ****   htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 114              		.loc 1 85 0
 115 007a 0B4B     		ldr	r3, .L5+8
 116 007c 0022     		movs	r2, #0
 117 007e 9A60     		str	r2, [r3, #8]
  86:Src/stm32f7xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim13) == HAL_OK)
 118              		.loc 1 86 0
 119 0080 0948     		ldr	r0, .L5+8
 120 0082 FFF7FEFF 		bl	HAL_TIM_Base_Init
 121 0086 0346     		mov	r3, r0
 122 0088 002B     		cmp	r3, #0
 123 008a 04D1     		bne	.L2
  87:Src/stm32f7xx_hal_timebase_tim.c ****   {
  88:Src/stm32f7xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  89:Src/stm32f7xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim13);
 124              		.loc 1 89 0
 125 008c 0648     		ldr	r0, .L5+8
 126 008e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 127 0092 0346     		mov	r3, r0
 128 0094 00E0     		b	.L4
 129              	.L2:
  90:Src/stm32f7xx_hal_timebase_tim.c ****   }
  91:Src/stm32f7xx_hal_timebase_tim.c ****   
  92:Src/stm32f7xx_hal_timebase_tim.c ****   /* Return function status */
  93:Src/stm32f7xx_hal_timebase_tim.c ****   return HAL_ERROR;
 130              		.loc 1 93 0
 131 0096 0123     		movs	r3, #1
 132              	.L4:
  94:Src/stm32f7xx_hal_timebase_tim.c **** }
 133              		.loc 1 94 0 discriminator 1
 134 0098 1846     		mov	r0, r3
 135 009a 3037     		adds	r7, r7, #48
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc0GYsNT.s 			page 5


 138 009c BD46     		mov	sp, r7
 139              	.LCFI4:
 140              		.cfi_def_cfa_register 13
 141              		@ sp needed
 142 009e 80BD     		pop	{r7, pc}
 143              	.L6:
 144              		.align	2
 145              	.L5:
 146 00a0 00380240 		.word	1073887232
 147 00a4 83DE1B43 		.word	1125899907
 148 00a8 00000000 		.word	htim13
 149 00ac 001C0040 		.word	1073748992
 150              		.cfi_endproc
 151              	.LFE135:
 153              		.section	.text.HAL_SuspendTick,"ax",%progbits
 154              		.align	2
 155              		.global	HAL_SuspendTick
 156              		.thumb
 157              		.thumb_func
 159              	HAL_SuspendTick:
 160              	.LFB136:
  95:Src/stm32f7xx_hal_timebase_tim.c **** 
  96:Src/stm32f7xx_hal_timebase_tim.c **** /**
  97:Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  98:Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM13 update interrupt.
  99:Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 100:Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 101:Src/stm32f7xx_hal_timebase_tim.c ****   */
 102:Src/stm32f7xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
 103:Src/stm32f7xx_hal_timebase_tim.c **** {
 161              		.loc 1 103 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166 0000 80B4     		push	{r7}
 167              	.LCFI5:
 168              		.cfi_def_cfa_offset 4
 169              		.cfi_offset 7, -4
 170 0002 00AF     		add	r7, sp, #0
 171              	.LCFI6:
 172              		.cfi_def_cfa_register 7
 104:Src/stm32f7xx_hal_timebase_tim.c ****   /* Disable TIM13 update Interrupt */
 105:Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim13, TIM_IT_UPDATE);                                                  
 173              		.loc 1 105 0
 174 0004 054B     		ldr	r3, .L8
 175 0006 1B68     		ldr	r3, [r3]
 176 0008 044A     		ldr	r2, .L8
 177 000a 1268     		ldr	r2, [r2]
 178 000c D268     		ldr	r2, [r2, #12]
 179 000e 22F00102 		bic	r2, r2, #1
 180 0012 DA60     		str	r2, [r3, #12]
 106:Src/stm32f7xx_hal_timebase_tim.c **** }
 181              		.loc 1 106 0
 182 0014 BD46     		mov	sp, r7
 183              	.LCFI7:
 184              		.cfi_def_cfa_register 13
ARM GAS  /tmp/cc0GYsNT.s 			page 6


 185              		@ sp needed
 186 0016 5DF8047B 		ldr	r7, [sp], #4
 187              	.LCFI8:
 188              		.cfi_restore 7
 189              		.cfi_def_cfa_offset 0
 190 001a 7047     		bx	lr
 191              	.L9:
 192              		.align	2
 193              	.L8:
 194 001c 00000000 		.word	htim13
 195              		.cfi_endproc
 196              	.LFE136:
 198              		.section	.text.HAL_ResumeTick,"ax",%progbits
 199              		.align	2
 200              		.global	HAL_ResumeTick
 201              		.thumb
 202              		.thumb_func
 204              	HAL_ResumeTick:
 205              	.LFB137:
 107:Src/stm32f7xx_hal_timebase_tim.c **** 
 108:Src/stm32f7xx_hal_timebase_tim.c **** /**
 109:Src/stm32f7xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 110:Src/stm32f7xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM13 update interrupt.
 111:Src/stm32f7xx_hal_timebase_tim.c ****   * @param  None
 112:Src/stm32f7xx_hal_timebase_tim.c ****   * @retval None
 113:Src/stm32f7xx_hal_timebase_tim.c ****   */
 114:Src/stm32f7xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 115:Src/stm32f7xx_hal_timebase_tim.c **** {
 206              		.loc 1 115 0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
 209              		@ frame_needed = 1, uses_anonymous_args = 0
 210              		@ link register save eliminated.
 211 0000 80B4     		push	{r7}
 212              	.LCFI9:
 213              		.cfi_def_cfa_offset 4
 214              		.cfi_offset 7, -4
 215 0002 00AF     		add	r7, sp, #0
 216              	.LCFI10:
 217              		.cfi_def_cfa_register 7
 116:Src/stm32f7xx_hal_timebase_tim.c ****   /* Enable TIM13 Update interrupt */
 117:Src/stm32f7xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim13, TIM_IT_UPDATE);
 218              		.loc 1 117 0
 219 0004 054B     		ldr	r3, .L11
 220 0006 1B68     		ldr	r3, [r3]
 221 0008 044A     		ldr	r2, .L11
 222 000a 1268     		ldr	r2, [r2]
 223 000c D268     		ldr	r2, [r2, #12]
 224 000e 42F00102 		orr	r2, r2, #1
 225 0012 DA60     		str	r2, [r3, #12]
 118:Src/stm32f7xx_hal_timebase_tim.c **** }
 226              		.loc 1 118 0
 227 0014 BD46     		mov	sp, r7
 228              	.LCFI11:
 229              		.cfi_def_cfa_register 13
 230              		@ sp needed
 231 0016 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/cc0GYsNT.s 			page 7


 232              	.LCFI12:
 233              		.cfi_restore 7
 234              		.cfi_def_cfa_offset 0
 235 001a 7047     		bx	lr
 236              	.L12:
 237              		.align	2
 238              	.L11:
 239 001c 00000000 		.word	htim13
 240              		.cfi_endproc
 241              	.LFE137:
 243              		.text
 244              	.Letext0:
 245              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 246              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 247              		.file 4 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 248              		.file 5 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 249              		.file 6 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_rcc.h"
 250              		.file 7 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma.h"
 251              		.file 8 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_tim.h"
 252              		.file 9 "../../Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cc0GYsNT.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_timebase_tim.c
                            *COM*:000000000000003c htim13
     /tmp/cc0GYsNT.s:26     .bss.uwIncrementState:0000000000000000 uwIncrementState
     /tmp/cc0GYsNT.s:23     .bss.uwIncrementState:0000000000000000 $d
     /tmp/cc0GYsNT.s:29     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc0GYsNT.s:34     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc0GYsNT.s:146    .text.HAL_InitTick:00000000000000a0 $d
     /tmp/cc0GYsNT.s:154    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc0GYsNT.s:159    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc0GYsNT.s:194    .text.HAL_SuspendTick:000000000000001c $d
     /tmp/cc0GYsNT.s:199    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc0GYsNT.s:204    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc0GYsNT.s:239    .text.HAL_ResumeTick:000000000000001c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
