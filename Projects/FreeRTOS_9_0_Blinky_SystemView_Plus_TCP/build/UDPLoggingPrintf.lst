ARM GAS  /tmp/cc3zEYQo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"UDPLoggingPrintf.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.uxStreamBufferSpace,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	uxStreamBufferSpace:
  26              	.LFB16:
  27              		.file 1 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h"
   1:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*
   2:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP Labs Build 160919 (C) 2016 Real Time Engineers ltd.
   3:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * Authors include Hein Tibosch and Richard Barry
   4:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
   5:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *******************************************************************************
   6:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
   7:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
   8:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
   9:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   FREERTOS+TCP IS STILL IN THE LAB (mainly because the FTP and HTTP     ***
  10:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   demos have a dependency on FreeRTOS+FAT, which is only in the Labs    ***
  11:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   download):                                                            ***
  12:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  13:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   FreeRTOS+TCP is functional and has been used in commercial products   ***
  14:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   for some time.  Be aware however that we are still refining its       ***
  15:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   design, the source code does not yet quite conform to the strict      ***
  16:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   coding and style standards mandated by Real Time Engineers ltd., and  ***
  17:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   the documentation and testing is not necessarily complete.            ***
  18:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  19:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   PLEASE REPORT EXPERIENCES USING THE SUPPORT RESOURCES FOUND ON THE    ***
  20:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   URL: http://www.FreeRTOS.org/contact  Active early adopters may, at   ***
  21:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   the sole discretion of Real Time Engineers Ltd., be offered versions  ***
  22:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   under a license other than that described below.                      ***
  23:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  24:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  25:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
  26:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *******************************************************************************
  27:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  28:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP can be used under two different free open source licenses.  The
  29:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * license that applies is dependent on the processor on which FreeRTOS+TCP is
  30:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * executed, as follows:
  31:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
ARM GAS  /tmp/cc3zEYQo.s 			page 2


  32:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * If FreeRTOS+TCP is executed on one of the processors listed under the Special
  33:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * License Arrangements heading of the FreeRTOS+TCP license information web
  34:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * page, then it can be used under the terms of the FreeRTOS Open Source
  35:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * License.  If FreeRTOS+TCP is used on any other processor, then it can be used
  36:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * under the terms of the GNU General Public License V2.  Links to the relevant
  37:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * licenses follow:
  38:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  39:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * The FreeRTOS+TCP License Information Page: http://www.FreeRTOS.org/tcp_license
  40:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * The FreeRTOS Open Source License: http://www.FreeRTOS.org/license
  41:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * The GNU General Public License Version 2: http://www.FreeRTOS.org/gpl-2.0.txt
  42:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  43:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP is distributed in the hope that it will be useful.  You cannot
  44:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * use FreeRTOS+TCP unless you agree that you use the software 'as is'.
  45:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP is provided WITHOUT ANY WARRANTY; without even the implied
  46:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR
  47:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * PURPOSE. Real Time Engineers Ltd. disclaims all conditions and terms, be they
  48:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * implied, expressed, or statutory.
  49:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  50:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * 1 tab == 4 spaces!
  51:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  52:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * http://www.FreeRTOS.org
  53:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * http://www.FreeRTOS.org/plus
  54:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * http://www.FreeRTOS.org/labs
  55:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  56:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  */
  57:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  58:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*
  59:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	FreeRTOS_Stream_Buffer.h
  60:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  61:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	A cicular character buffer
  62:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	An implementation of a circular buffer without a length field
  63:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	If LENGTH defines the size of the buffer, a maximum of (LENGT-1) bytes can be stored
  64:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	In order to add or read data from the buffer, memcpy() will be called at most 2 times
  65:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  */
  66:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  67:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #ifndef FREERTOS_STREAM_BUFFER_H
  68:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #define	FREERTOS_STREAM_BUFFER_H
  69:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  70:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #ifdef __cplusplus
  71:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** extern "C" {
  72:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #endif
  73:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  74:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** typedef struct xSTREAM_BUFFER {
  75:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxTail;		/* next item to read */
  76:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxMid;		/* iterator within the valid items */
  77:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxHead;		/* next position store a new item */
  78:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxFront;	/* iterator within the free space */
  79:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	size_t LENGTH;				/* const value: number of reserved elements */
  80:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	uint8_t ucArray[ sizeof( size_t ) ];
  81:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** } StreamBuffer_t;
  82:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  83:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE void vStreamBufferClear( StreamBuffer_t *pxBuffer );
  84:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE void vStreamBufferClear( StreamBuffer_t *pxBuffer )
  85:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
  86:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	/* Make the circular buffer empty */
  87:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxHead = 0u;
  88:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxTail = 0u;
ARM GAS  /tmp/cc3zEYQo.s 			page 3


  89:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxFront = 0u;
  90:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxMid = 0u;
  91:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
  92:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
  93:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  94:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferSpace( const StreamBuffer_t *pxBuffer, const size_t uxLower,
  95:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferSpace( const StreamBuffer_t *pxBuffer, const size_t uxLower,
  96:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
  28              		.loc 1 96 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 F860     		str	r0, [r7, #12]
  44 0008 B960     		str	r1, [r7, #8]
  45 000a 7A60     		str	r2, [r7, #4]
  97:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the space between uxLower and uxUpper, which equals to the distance minus 1 */
  98:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxCount;
  99:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	uxCount = pxBuffer->LENGTH + uxUpper - uxLower - 1u;
  46              		.loc 1 100 0
  47 000c FB68     		ldr	r3, [r7, #12]
  48 000e 1A69     		ldr	r2, [r3, #16]
  49 0010 7B68     		ldr	r3, [r7, #4]
  50 0012 1A44     		add	r2, r2, r3
  51 0014 BB68     		ldr	r3, [r7, #8]
  52 0016 D31A     		subs	r3, r2, r3
  53 0018 013B     		subs	r3, r3, #1
  54 001a 7B61     		str	r3, [r7, #20]
 101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if( uxCount >= pxBuffer->LENGTH )
  55              		.loc 1 101 0
  56 001c FB68     		ldr	r3, [r7, #12]
  57 001e 1A69     		ldr	r2, [r3, #16]
  58 0020 7B69     		ldr	r3, [r7, #20]
  59 0022 9A42     		cmp	r2, r3
  60 0024 04D8     		bhi	.L2
 102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		uxCount -= pxBuffer->LENGTH;
  61              		.loc 1 103 0
  62 0026 FB68     		ldr	r3, [r7, #12]
  63 0028 1B69     		ldr	r3, [r3, #16]
  64 002a 7A69     		ldr	r2, [r7, #20]
  65 002c D31A     		subs	r3, r2, r3
  66 002e 7B61     		str	r3, [r7, #20]
  67              	.L2:
 104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
ARM GAS  /tmp/cc3zEYQo.s 			page 4


 106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxCount;
  68              		.loc 1 106 0
  69 0030 7B69     		ldr	r3, [r7, #20]
 107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
  70              		.loc 1 107 0
  71 0032 1846     		mov	r0, r3
  72 0034 1C37     		adds	r7, r7, #28
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75 0036 BD46     		mov	sp, r7
  76              	.LCFI4:
  77              		.cfi_def_cfa_register 13
  78              		@ sp needed
  79 0038 5DF8047B 		ldr	r7, [sp], #4
  80              	.LCFI5:
  81              		.cfi_restore 7
  82              		.cfi_def_cfa_offset 0
  83 003c 7047     		bx	lr
  84              		.cfi_endproc
  85              	.LFE16:
  87 003e 00BF     		.section	.text.uxStreamBufferDistance,"ax",%progbits
  88              		.align	2
  89              		.thumb
  90              		.thumb_func
  92              	uxStreamBufferDistance:
  93              	.LFB17:
 108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferDistance( const StreamBuffer_t *pxBuffer, const size_t uxLow
 111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferDistance( const StreamBuffer_t *pxBuffer, const size_t uxLow
 112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
  94              		.loc 1 112 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 24
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              	.LCFI6:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 87B0     		sub	sp, sp, #28
 104              	.LCFI7:
 105              		.cfi_def_cfa_offset 32
 106 0004 00AF     		add	r7, sp, #0
 107              	.LCFI8:
 108              		.cfi_def_cfa_register 7
 109 0006 F860     		str	r0, [r7, #12]
 110 0008 B960     		str	r1, [r7, #8]
 111 000a 7A60     		str	r2, [r7, #4]
 113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the distance between uxLower and uxUpper */
 114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxCount;
 115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	uxCount = pxBuffer->LENGTH + uxUpper - uxLower;
 112              		.loc 1 116 0
 113 000c FB68     		ldr	r3, [r7, #12]
 114 000e 1A69     		ldr	r2, [r3, #16]
 115 0010 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/cc3zEYQo.s 			page 5


 116 0012 1A44     		add	r2, r2, r3
 117 0014 BB68     		ldr	r3, [r7, #8]
 118 0016 D31A     		subs	r3, r2, r3
 119 0018 7B61     		str	r3, [r7, #20]
 117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if ( uxCount >= pxBuffer->LENGTH )
 120              		.loc 1 117 0
 121 001a FB68     		ldr	r3, [r7, #12]
 122 001c 1A69     		ldr	r2, [r3, #16]
 123 001e 7B69     		ldr	r3, [r7, #20]
 124 0020 9A42     		cmp	r2, r3
 125 0022 04D8     		bhi	.L5
 118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		uxCount -= pxBuffer->LENGTH;
 126              		.loc 1 119 0
 127 0024 FB68     		ldr	r3, [r7, #12]
 128 0026 1B69     		ldr	r3, [r3, #16]
 129 0028 7A69     		ldr	r2, [r7, #20]
 130 002a D31A     		subs	r3, r2, r3
 131 002c 7B61     		str	r3, [r7, #20]
 132              	.L5:
 120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxCount;
 133              		.loc 1 122 0
 134 002e 7B69     		ldr	r3, [r7, #20]
 123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 135              		.loc 1 123 0
 136 0030 1846     		mov	r0, r3
 137 0032 1C37     		adds	r7, r7, #28
 138              	.LCFI9:
 139              		.cfi_def_cfa_offset 4
 140 0034 BD46     		mov	sp, r7
 141              	.LCFI10:
 142              		.cfi_def_cfa_register 13
 143              		@ sp needed
 144 0036 5DF8047B 		ldr	r7, [sp], #4
 145              	.LCFI11:
 146              		.cfi_restore 7
 147              		.cfi_def_cfa_offset 0
 148 003a 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE17:
 152              		.section	.text.uxStreamBufferGetSpace,"ax",%progbits
 153              		.align	2
 154              		.thumb
 155              		.thumb_func
 157              	uxStreamBufferGetSpace:
 158              	.LFB18:
 124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSpace( const StreamBuffer_t *pxBuffer );
 127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSpace( const StreamBuffer_t *pxBuffer )
 128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 159              		.loc 1 128 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 16
 162              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc3zEYQo.s 			page 6


 163 0000 80B5     		push	{r7, lr}
 164              	.LCFI12:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 84B0     		sub	sp, sp, #16
 169              	.LCFI13:
 170              		.cfi_def_cfa_offset 24
 171 0004 00AF     		add	r7, sp, #0
 172              	.LCFI14:
 173              		.cfi_def_cfa_register 7
 174 0006 7860     		str	r0, [r7, #4]
 129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the number of items which can still be added to uxHead
 130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** before hitting on uxTail */
 131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxHead = pxBuffer->uxHead;
 175              		.loc 1 131 0
 176 0008 7B68     		ldr	r3, [r7, #4]
 177 000a 9B68     		ldr	r3, [r3, #8]
 178 000c FB60     		str	r3, [r7, #12]
 132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
 179              		.loc 1 132 0
 180 000e 7B68     		ldr	r3, [r7, #4]
 181 0010 1B68     		ldr	r3, [r3]
 182 0012 BB60     		str	r3, [r7, #8]
 133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferSpace( pxBuffer, uxHead, uxTail );
 183              		.loc 1 134 0
 184 0014 7868     		ldr	r0, [r7, #4]
 185 0016 F968     		ldr	r1, [r7, #12]
 186 0018 BA68     		ldr	r2, [r7, #8]
 187 001a FFF7FEFF 		bl	uxStreamBufferSpace
 188 001e 0346     		mov	r3, r0
 135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 189              		.loc 1 135 0
 190 0020 1846     		mov	r0, r3
 191 0022 1037     		adds	r7, r7, #16
 192              	.LCFI15:
 193              		.cfi_def_cfa_offset 8
 194 0024 BD46     		mov	sp, r7
 195              	.LCFI16:
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 0026 80BD     		pop	{r7, pc}
 199              		.cfi_endproc
 200              	.LFE18:
 202              		.section	.text.uxStreamBufferGetSize,"ax",%progbits
 203              		.align	2
 204              		.thumb
 205              		.thumb_func
 207              	uxStreamBufferGetSize:
 208              	.LFB20:
 136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferFrontSpace( const StreamBuffer_t *pxBuffer );
 139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferFrontSpace( const StreamBuffer_t *pxBuffer )
 140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Distance between uxFront and uxTail
ARM GAS  /tmp/cc3zEYQo.s 			page 7


 142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** or the number of items which can still be added to uxFront,
 143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** before hitting on uxTail */
 144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxFront = pxBuffer->uxFront;
 146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
 147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferSpace( pxBuffer, uxFront, uxTail );
 149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSize( const StreamBuffer_t *pxBuffer );
 153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSize( const StreamBuffer_t *pxBuffer )
 154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 209              		.loc 1 154 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 16
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              	.LCFI17:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 84B0     		sub	sp, sp, #16
 219              	.LCFI18:
 220              		.cfi_def_cfa_offset 24
 221 0004 00AF     		add	r7, sp, #0
 222              	.LCFI19:
 223              		.cfi_def_cfa_register 7
 224 0006 7860     		str	r0, [r7, #4]
 155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the number of items which can be read from uxTail
 156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** before reaching uxHead */
 157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxHead = pxBuffer->uxHead;
 225              		.loc 1 157 0
 226 0008 7B68     		ldr	r3, [r7, #4]
 227 000a 9B68     		ldr	r3, [r3, #8]
 228 000c FB60     		str	r3, [r7, #12]
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
 229              		.loc 1 158 0
 230 000e 7B68     		ldr	r3, [r7, #4]
 231 0010 1B68     		ldr	r3, [r3]
 232 0012 BB60     		str	r3, [r7, #8]
 159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferDistance( pxBuffer, uxTail, uxHead );
 233              		.loc 1 160 0
 234 0014 7868     		ldr	r0, [r7, #4]
 235 0016 B968     		ldr	r1, [r7, #8]
 236 0018 FA68     		ldr	r2, [r7, #12]
 237 001a FFF7FEFF 		bl	uxStreamBufferDistance
 238 001e 0346     		mov	r3, r0
 161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 239              		.loc 1 161 0
 240 0020 1846     		mov	r0, r3
 241 0022 1037     		adds	r7, r7, #16
 242              	.LCFI20:
 243              		.cfi_def_cfa_offset 8
 244 0024 BD46     		mov	sp, r7
 245              	.LCFI21:
ARM GAS  /tmp/cc3zEYQo.s 			page 8


 246              		.cfi_def_cfa_register 13
 247              		@ sp needed
 248 0026 80BD     		pop	{r7, pc}
 249              		.cfi_endproc
 250              	.LFE20:
 252              		.section	.bss.xLogEntry,"aw",%nobits
 253              		.align	2
 256              	xLogEntry:
 257 0000 00000000 		.space	212
 257      00000000 
 257      00000000 
 257      00000000 
 257      00000000 
 258              		.section	.bss.pxStreamBuffer,"aw",%nobits
 259              		.align	2
 262              	pxStreamBuffer:
 263 0000 00000000 		.space	4
 264              		.section	.bss.xLoggingTask,"aw",%nobits
 265              		.align	2
 268              	xLoggingTask:
 269 0000 00000000 		.space	4
 270              		.section	.data.xUDPLoggingSocket,"aw",%progbits
 271              		.align	2
 274              	xUDPLoggingSocket:
 275 0000 FFFFFFFF 		.word	-1
 276              		.section	.text.prvInitialiseLogging,"ax",%progbits
 277              		.align	2
 278              		.thumb
 279              		.thumb_func
 281              	prvInitialiseLogging:
 282              	.LFB27:
 283              		.file 2 "../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c"
   1:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*
   2:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     All rights reserved
   4:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
   5:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
   7:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     This file is part of the FreeRTOS distribution.
   8:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
   9:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
  12:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  13:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     ***************************************************************************
  14:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     ***************************************************************************
  19:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  20:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     link: http://www.freertos.org/a00114.html
  24:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  25:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     ***************************************************************************
ARM GAS  /tmp/cc3zEYQo.s 			page 9


  26:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *                                                                       *
  27:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    platform software that is more than just the market leader, it     *
  30:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    is the industry's de facto standard.                               *
  31:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *                                                                       *
  32:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    tutorial book, reference manual, or both:                          *
  35:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****      *                                                                       *
  37:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     ***************************************************************************
  38:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  39:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     defined configASSERT()?
  42:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  43:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     embedded software for free we request you assist our global community by
  45:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     participating in the support forum.
  46:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  47:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     be as productive as possible as early as possible.  Now you can receive
  49:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  52:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  56:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  59:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  63:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     engineered and independently SIL3 certified version for use in safety and
  65:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     mission critical applications that require provable dependability.
  66:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  67:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****     1 tab == 4 spaces!
  68:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** */
  69:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  70:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*
  71:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * Logging utility that allows FreeRTOS tasks to log to a UDP port.
  72:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  *
  73:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * Logging print calls generate messages that are buffered in a stream buffer.
  74:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * A background task then retrieves messages from the stream buffer and sends
  75:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * them to a UDP port.
  76:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  */
  77:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  78:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Standard includes. */
  79:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include <stdio.h>
  80:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include <string.h>
  81:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include <stdlib.h>
  82:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include <limits.h>
ARM GAS  /tmp/cc3zEYQo.s 			page 10


  83:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  84:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Scheduler include files. */
  85:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "FreeRTOS.h"
  86:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "task.h"
  87:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "semphr.h"
  88:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  89:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* FreeRTOS+TCP includes. */
  90:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "FreeRTOS_IP.h"
  91:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "FreeRTOS_Sockets.h"
  92:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** //#include "FreeRTOS_tcp_server.h"
  93:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "FreeRTOS_TCP_server.h"
  94:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "FreeRTOS_Stream_Buffer.h"
  95:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "FreeRTOS_DHCP.h"
  96:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "NetworkInterface.h"
  97:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
  98:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Demo includes. */
  99:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "hr_gettime.h"
 100:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #include "UDPLoggingPrintf.h"
 101:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 102:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Set to 1 to end each line with \r\n, or 0 for just \n. */
 103:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_NEEDS_CR_LF
 104:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define configUDP_LOGGING_NEEDS_CR_LF  ( 0 )
 105:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 106:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 107:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* The maximum string length for each logged message. */
 108:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_STRING_LENGTH
 109:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define configUDP_LOGGING_STRING_LENGTH	( 200 )
 110:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 111:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 112:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* The maximum number of messages that can be buffered at any one time. */
 113:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_MAX_MESSAGES_IN_BUFFER
 114:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define	configUDP_LOGGING_MAX_MESSAGES_IN_BUFFER	( 30 )
 115:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 116:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 117:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_TASK_STACK_SIZE
 118:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define	configUDP_LOGGING_TASK_STACK_SIZE  	( 512 )
 119:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 120:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 121:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_TASK_PRIORITY
 122:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define configUDP_LOGGING_TASK_PRIORITY   	( tskIDLE_PRIORITY + 2 )
 123:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 124:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 125:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* configUDP_LOGGING_PORT_REMOTE is the port number to which the logging
 126:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** will be sent. */
 127:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_PORT_REMOTE
 128:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#error configUDP_LOGGING_PORT_REMOTE must be defined in FreeRTOSconfig.h to use UDP logging
 129:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 130:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 131:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* configUDP_LOGGING_PORT_LOCAL is the port number to which the
 132:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** socket will be bound. It is possible to send messages to
 133:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** this socket. */
 134:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef configUDP_LOGGING_PORT_LOCAL
 135:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* If not defined, the UDP socket will be bound to a random port number.
 136:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	If you want to use a specific port number, please define so in FreeRTOSconfig.h */
 137:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define configUDP_LOGGING_PORT_LOCAL 0
 138:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 139:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
ARM GAS  /tmp/cc3zEYQo.s 			page 11


 140:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* The logging task's block time.  This is used as the UDP socket's send block
 141:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** time, and the maximum time the logging task will spend in the Blocked state
 142:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** waiting to be notified of a new message to send before manually looking for a
 143:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** message. */
 144:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef	logUDP_LOGGING_BLOCK_TIME_MS
 145:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define logUDP_LOGGING_BLOCK_TIME_MS	( 1000ul )
 146:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 147:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 148:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Log messages are cached in a stream buffer.  The stream buffer's storage
 149:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** area is dimensioned to contain the maximum number of strings of the maximum
 150:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** string length. */
 151:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #define logMESSAGE_BUFFER_SIZE_BYTES  ( ( configUDP_LOGGING_STRING_LENGTH ) * ( configUDP_LOGGING_M
 152:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 153:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Ascii characters used in this file. */
 154:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #define logASCII_CR 			( 13 )
 155:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #define logASCII_NL				( 10 )
 156:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 157:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #ifndef iptraceUDP_LOGGING_TASK_STARTING
 158:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* This macro will be called once when the UDP logging task is starting up. */
 159:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#define	iptraceUDP_LOGGING_TASK_STARTING()	do { } while( 0 )
 160:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** #endif
 161:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 162:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 163:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*
 164:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * Called automatically to create the stream buffer.
 165:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  */
 166:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static BaseType_t prvInitialiseLogging( void );
 167:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 168:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*
 169:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * The task that reads messages from the stream buffer and sends them to the
 170:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * UDP port.
 171:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  */
 172:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static void prvLoggingTask( void *pvParameters );
 173:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 174:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*
 175:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * Obtain a message from the stream buffer.
 176:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  */
 177:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static size_t prvGetMessageFromStreamBuffer( char *pcBuffer, size_t xBufferLength );
 178:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 179:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*
 180:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * Generate a formatted string and add it to the stream buffer ready for the
 181:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  * logging task to transmit.
 182:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c ****  */
 183:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static size_t prvBufferFormattedString( const char *pcFormatString, va_list xArgs );
 184:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 185:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 186:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 187:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /* Is this structure used anywhere? */
 188:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** typedef struct LogStruct
 189:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 190:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	size_t xLength;
 191:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 192:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#if LOGBUF_SHOW_US
 193:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		uint64_t ullLogTime;
 194:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#else
 195:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		uint32_t ulLogTime;
 196:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#endif
ARM GAS  /tmp/cc3zEYQo.s 			page 12


 197:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	uint32_t ulPriority;
 198:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 199:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** } LogStruct_t;
 200:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 201:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** typedef struct LogUnit_t
 202:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 203:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	LogStruct_t xHeader;
 204:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	char cMessage[ configUDP_LOGGING_STRING_LENGTH ];
 205:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 206:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** } LogUnit_t;
 207:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 208:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static LogUnit_t xLogEntry;
 209:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static StreamBuffer_t *pxStreamBuffer = NULL;
 210:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static TaskHandle_t xLoggingTask = NULL;
 211:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static xSocket_t xUDPLoggingSocket = FREERTOS_INVALID_SOCKET;
 212:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 213:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 214:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 215:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static BaseType_t prvInitialiseLogging( void )
 216:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 284              		.loc 2 216 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 8
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288 0000 80B5     		push	{r7, lr}
 289              	.LCFI22:
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 82B0     		sub	sp, sp, #8
 294              	.LCFI23:
 295              		.cfi_def_cfa_offset 16
 296 0004 00AF     		add	r7, sp, #0
 297              	.LCFI24:
 298              		.cfi_def_cfa_register 7
 217:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** size_t xSize;
 218:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static BaseType_t xLoggingInitialised = pdFALSE;
 219:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 220:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	if( xLoggingInitialised == pdFALSE )
 299              		.loc 2 220 0
 300 0006 154B     		ldr	r3, .L14
 301 0008 1B68     		ldr	r3, [r3]
 302 000a 002B     		cmp	r3, #0
 303 000c 20D1     		bne	.L12
 221:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 222:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* Don't attempt to log unless the scheduler is running. */
 223:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 304              		.loc 2 223 0
 305 000e FFF7FEFF 		bl	xTaskGetSchedulerState
 306 0012 0346     		mov	r3, r0
 307 0014 022B     		cmp	r3, #2
 308 0016 1BD1     		bne	.L12
 224:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		{
 225:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			/* Create a stream buffer large enough for the maximum number of
 226:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			bytes + 1. */ /*_RB_ Why is the size of pxStreamBuffer->ucArray
 227:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			subtracted here? */
 228:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			xSize = sizeof( StreamBuffer_t ) - sizeof( pxStreamBuffer->ucArray ) + logMESSAGE_BUFFER_SIZE_BY
ARM GAS  /tmp/cc3zEYQo.s 			page 13


 309              		.loc 2 228 0
 310 0018 40F6B573 		movw	r3, #4021
 311 001c 7B60     		str	r3, [r7, #4]
 229:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			pxStreamBuffer = pvPortMalloc( xSize );
 312              		.loc 2 229 0
 313 001e 7868     		ldr	r0, [r7, #4]
 314 0020 FFF7FEFF 		bl	pvPortMalloc
 315 0024 0246     		mov	r2, r0
 316 0026 0E4B     		ldr	r3, .L14+4
 317 0028 1A60     		str	r2, [r3]
 230:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 231:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			if( pxStreamBuffer != NULL )
 318              		.loc 2 231 0
 319 002a 0D4B     		ldr	r3, .L14+4
 320 002c 1B68     		ldr	r3, [r3]
 321 002e 002B     		cmp	r3, #0
 322 0030 0ED0     		beq	.L12
 232:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			{
 233:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				memset( pxStreamBuffer, '\0', xSize );
 323              		.loc 2 233 0
 324 0032 0B4B     		ldr	r3, .L14+4
 325 0034 1B68     		ldr	r3, [r3]
 326 0036 1846     		mov	r0, r3
 327 0038 0021     		movs	r1, #0
 328 003a 7A68     		ldr	r2, [r7, #4]
 329 003c FFF7FEFF 		bl	memset
 234:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				pxStreamBuffer->LENGTH = logMESSAGE_BUFFER_SIZE_BYTES + 1;
 330              		.loc 2 234 0
 331 0040 074B     		ldr	r3, .L14+4
 332 0042 1B68     		ldr	r3, [r3]
 333 0044 40F6A172 		movw	r2, #4001
 334 0048 1A61     		str	r2, [r3, #16]
 235:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 236:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				xLoggingInitialised = pdTRUE;
 335              		.loc 2 236 0
 336 004a 044B     		ldr	r3, .L14
 337 004c 0122     		movs	r2, #1
 338 004e 1A60     		str	r2, [r3]
 339              	.L12:
 237:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			}
 238:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		}
 239:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 240:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 241:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	return xLoggingInitialised;
 340              		.loc 2 241 0
 341 0050 024B     		ldr	r3, .L14
 342 0052 1B68     		ldr	r3, [r3]
 242:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 343              		.loc 2 242 0
 344 0054 1846     		mov	r0, r3
 345 0056 0837     		adds	r7, r7, #8
 346              	.LCFI25:
 347              		.cfi_def_cfa_offset 8
 348 0058 BD46     		mov	sp, r7
 349              	.LCFI26:
 350              		.cfi_def_cfa_register 13
 351              		@ sp needed
ARM GAS  /tmp/cc3zEYQo.s 			page 14


 352 005a 80BD     		pop	{r7, pc}
 353              	.L15:
 354              		.align	2
 355              	.L14:
 356 005c 00000000 		.word	xLoggingInitialised.7066
 357 0060 00000000 		.word	pxStreamBuffer
 358              		.cfi_endproc
 359              	.LFE27:
 361              		.section	.text.prvGetMessageFromStreamBuffer,"ax",%progbits
 362              		.align	2
 363              		.thumb
 364              		.thumb_func
 366              	prvGetMessageFromStreamBuffer:
 367              	.LFB28:
 243:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 244:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 245:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static size_t prvGetMessageFromStreamBuffer( char* pcBuffer, size_t xBufferLength )
 246:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 368              		.loc 2 246 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 16
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 90B5     		push	{r4, r7, lr}
 373              	.LCFI27:
 374              		.cfi_def_cfa_offset 12
 375              		.cfi_offset 4, -12
 376              		.cfi_offset 7, -8
 377              		.cfi_offset 14, -4
 378 0002 87B0     		sub	sp, sp, #28
 379              	.LCFI28:
 380              		.cfi_def_cfa_offset 40
 381 0004 02AF     		add	r7, sp, #8
 382              	.LCFI29:
 383              		.cfi_def_cfa 7, 32
 384 0006 7860     		str	r0, [r7, #4]
 385 0008 3960     		str	r1, [r7]
 247:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** size_t uxLength;
 248:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** size_t xMessageLength = 0;
 386              		.loc 2 248 0
 387 000a 0023     		movs	r3, #0
 388 000c BB60     		str	r3, [r7, #8]
 249:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 250:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	if( pxStreamBuffer != NULL )
 389              		.loc 2 250 0
 390 000e 274B     		ldr	r3, .L21
 391 0010 1B68     		ldr	r3, [r3]
 392 0012 002B     		cmp	r3, #0
 393 0014 44D0     		beq	.L17
 251:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 252:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* Is there data in the stream buffer? */
 253:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		uxLength = uxStreamBufferGetSize( pxStreamBuffer );
 394              		.loc 2 253 0
 395 0016 254B     		ldr	r3, .L21
 396 0018 1B68     		ldr	r3, [r3]
 397 001a 1846     		mov	r0, r3
 398 001c FFF7FEFF 		bl	uxStreamBufferGetSize
 399 0020 F860     		str	r0, [r7, #12]
ARM GAS  /tmp/cc3zEYQo.s 			page 15


 254:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		if( uxLength > sizeof( size_t ) )
 400              		.loc 2 254 0
 401 0022 FB68     		ldr	r3, [r7, #12]
 402 0024 042B     		cmp	r3, #4
 403 0026 3BD9     		bls	.L17
 255:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		{
 256:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			/* Avoid concurrent access to the buffer. */
 257:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			vTaskSuspendAll();
 404              		.loc 2 257 0
 405 0028 FFF7FEFF 		bl	vTaskSuspendAll
 258:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			{
 259:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				/* Every message is stored as a length followed by the string.
 260:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				Obtain the length of the data first. */
 261:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				uxStreamBufferGet( pxStreamBuffer, 0, ( uint8_t * ) &xMessageLength, sizeof( xMessageLength ), 
 406              		.loc 2 261 0
 407 002c 1F4B     		ldr	r3, .L21
 408 002e 1968     		ldr	r1, [r3]
 409 0030 07F10802 		add	r2, r7, #8
 410 0034 0023     		movs	r3, #0
 411 0036 0093     		str	r3, [sp]
 412 0038 0846     		mov	r0, r1
 413 003a 0021     		movs	r1, #0
 414 003c 0423     		movs	r3, #4
 415 003e FFF7FEFF 		bl	uxStreamBufferGet
 262:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 263:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				if( xBufferLength < xMessageLength )
 416              		.loc 2 263 0
 417 0042 BB68     		ldr	r3, [r7, #8]
 418 0044 3A68     		ldr	r2, [r7]
 419 0046 9A42     		cmp	r2, r3
 420 0048 18D2     		bcs	.L18
 264:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				{
 265:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					/* The 'pcBuffer' provided by the caller is too small.  Load
 266:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					the message first into 'xLogEntry.message', and then copy
 267:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					as much as possible to 'pcBuffer'. */
 268:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					uxStreamBufferGet( pxStreamBuffer, 0, ( uint8_t * ) xLogEntry.cMessage, xMessageLength, pdFALS
 421              		.loc 2 268 0
 422 004a 184B     		ldr	r3, .L21
 423 004c 1A68     		ldr	r2, [r3]
 424 004e BC68     		ldr	r4, [r7, #8]
 425 0050 0023     		movs	r3, #0
 426 0052 0093     		str	r3, [sp]
 427 0054 1046     		mov	r0, r2
 428 0056 0021     		movs	r1, #0
 429 0058 154A     		ldr	r2, .L21+4
 430 005a 2346     		mov	r3, r4
 431 005c FFF7FEFF 		bl	uxStreamBufferGet
 269:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					memcpy( pcBuffer, xLogEntry.cMessage, xBufferLength );
 432              		.loc 2 269 0
 433 0060 7868     		ldr	r0, [r7, #4]
 434 0062 1349     		ldr	r1, .L21+4
 435 0064 3A68     		ldr	r2, [r7]
 436 0066 FFF7FEFF 		bl	memcpy
 270:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					xMessageLength = xBufferLength;
 437              		.loc 2 270 0
 438 006a 3B68     		ldr	r3, [r7]
 439 006c BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/cc3zEYQo.s 			page 16


 271:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 272:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					/* Terminate the string at the very end of the buffer. */
 273:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					pcBuffer[ xBufferLength - 1 ] = 0x00;
 440              		.loc 2 273 0
 441 006e 3B68     		ldr	r3, [r7]
 442 0070 013B     		subs	r3, r3, #1
 443 0072 7A68     		ldr	r2, [r7, #4]
 444 0074 1344     		add	r3, r3, r2
 445 0076 0022     		movs	r2, #0
 446 0078 1A70     		strb	r2, [r3]
 447 007a 0FE0     		b	.L19
 448              	.L18:
 274:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				}
 275:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				else
 276:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				{
 277:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					/* The 'pcBuffer' provided by the caller is big enough. */
 278:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					uxStreamBufferGet( pxStreamBuffer, 0, ( uint8_t * ) pcBuffer, xMessageLength, pdFALSE );
 449              		.loc 2 278 0
 450 007c 0B4B     		ldr	r3, .L21
 451 007e 1A68     		ldr	r2, [r3]
 452 0080 BC68     		ldr	r4, [r7, #8]
 453 0082 0023     		movs	r3, #0
 454 0084 0093     		str	r3, [sp]
 455 0086 1046     		mov	r0, r2
 456 0088 0021     		movs	r1, #0
 457 008a 7A68     		ldr	r2, [r7, #4]
 458 008c 2346     		mov	r3, r4
 459 008e FFF7FEFF 		bl	uxStreamBufferGet
 279:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 280:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					/* Terminate the string after the string's last character. */
 281:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					pcBuffer[ xMessageLength ] = 0x00;
 460              		.loc 2 281 0
 461 0092 BB68     		ldr	r3, [r7, #8]
 462 0094 7A68     		ldr	r2, [r7, #4]
 463 0096 1344     		add	r3, r3, r2
 464 0098 0022     		movs	r2, #0
 465 009a 1A70     		strb	r2, [r3]
 466              	.L19:
 282:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				}
 283:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			}
 284:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			xTaskResumeAll();
 467              		.loc 2 284 0
 468 009c FFF7FEFF 		bl	xTaskResumeAll
 469              	.L17:
 285:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		}
 286:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 287:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 288:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	return xMessageLength;
 470              		.loc 2 288 0
 471 00a0 BB68     		ldr	r3, [r7, #8]
 289:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 472              		.loc 2 289 0
 473 00a2 1846     		mov	r0, r3
 474 00a4 1437     		adds	r7, r7, #20
 475              	.LCFI30:
 476              		.cfi_def_cfa_offset 12
 477 00a6 BD46     		mov	sp, r7
ARM GAS  /tmp/cc3zEYQo.s 			page 17


 478              	.LCFI31:
 479              		.cfi_def_cfa_register 13
 480              		@ sp needed
 481 00a8 90BD     		pop	{r4, r7, pc}
 482              	.L22:
 483 00aa 00BF     		.align	2
 484              	.L21:
 485 00ac 00000000 		.word	pxStreamBuffer
 486 00b0 0C000000 		.word	xLogEntry+12
 487              		.cfi_endproc
 488              	.LFE28:
 490              		.global	__aeabi_uldivmod
 491              		.section	.rodata
 492              		.align	2
 493              	.LC0:
 494 0000 2534752E 		.ascii	"%4u.%03u.%03u [%-10s] \000"
 494      25303375 
 494      2E253033 
 494      75205B25 
 494      2D313073 
 495              		.section	.text.prvBufferFormattedString,"ax",%progbits
 496              		.align	2
 497              		.thumb
 498              		.thumb_func
 500              	prvBufferFormattedString:
 501              	.LFB29:
 290:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 291:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 292:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static size_t prvBufferFormattedString( const char *pcFormatString, va_list xArgs )
 293:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 502              		.loc 2 293 0
 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 40
 505              		@ frame_needed = 1, uses_anonymous_args = 0
 506 0000 80B5     		push	{r7, lr}
 507              	.LCFI32:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 7, -8
 510              		.cfi_offset 14, -4
 511 0002 8EB0     		sub	sp, sp, #56
 512              	.LCFI33:
 513              		.cfi_def_cfa_offset 64
 514 0004 04AF     		add	r7, sp, #16
 515              	.LCFI34:
 516              		.cfi_def_cfa 7, 48
 517 0006 7860     		str	r0, [r7, #4]
 518 0008 3960     		str	r1, [r7]
 294:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** size_t xLength, xSpace;
 295:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** uint64_t ullCurrentTime;
 296:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** uint32_t ulSeconds, ulMilliSeconds, ulMicroSeconds;
 297:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 298:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* Sanity check. */
 299:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	configASSERT( pxStreamBuffer );
 519              		.loc 2 299 0
 520 000a 4D4B     		ldr	r3, .L29
 521 000c 1B68     		ldr	r3, [r3]
 522 000e 002B     		cmp	r3, #0
ARM GAS  /tmp/cc3zEYQo.s 			page 18


 523 0010 09D1     		bne	.L24
 524              	.LBB4:
 525              	.LBB5:
 526              		.file 3 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     All rights reserved
   4:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   5:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   7:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   9:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  13:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  14:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  19:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  20:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  25:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  26:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  27:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  32:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  37:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  38:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     defined configASSERT()?
  42:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  43:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     participating in the support forum.
  46:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  52:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
ARM GAS  /tmp/cc3zEYQo.s 			page 19


  54:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  63:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** */
  69:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  70:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  71:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  73:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  74:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  75:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  76:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  77:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  80:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  81:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  83:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  84:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  85:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  87:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  88:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  89:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  90:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  91:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  92:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  93:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  94:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  96:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  99:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 101:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
 103:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
 105:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
 106:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
 110:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
ARM GAS  /tmp/cc3zEYQo.s 			page 20


 111:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 112:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 114:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
 115:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 120:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
 121:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
 122:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
 123:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
 126:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
 130:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 131:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 132:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) { if( xSwitchRequired != pdFALSE ) { traceISR_EXIT
 135:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 137:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 139:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 140:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
 141:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 149:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 153:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 158:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 159:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 162:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 163:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 164:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 165:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
ARM GAS  /tmp/cc3zEYQo.s 			page 21


 168:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 172:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 174:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 175:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 178:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 179:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 181:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 184:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 196:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 198:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 201:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 202:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 203:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 204:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 206:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 208:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 210:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 215:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 216:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 219:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 221:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 222:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 223:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 224:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  /tmp/cc3zEYQo.s 			page 22


 225:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 226:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 227:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 228:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 229:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 230:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 232:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 233:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 235:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 236:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 237:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 527              		.loc 3 237 0 discriminator 1
 528              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 529 0012 4FF05003 			mov r3, #80												
 530 0016 83F31188 		msr basepri, r3											
 531 001a BFF36F8F 		isb														
 532 001e BFF34F8F 		dsb														
 533              	
 534              	@ 0 "" 2
 535              		.thumb
 536 0022 FB60     		str	r3, [r7, #12]
 537              	.L25:
 538              	.LBE5:
 539              	.LBE4:
 540              		.loc 2 299 0 discriminator 1
 541 0024 FEE7     		b	.L25
 542              	.L24:
 300:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 301:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	vTaskSuspendAll();
 543              		.loc 2 301 0
 544 0026 FFF7FEFF 		bl	vTaskSuspendAll
 302:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 303:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		ullCurrentTime = ullGetHighResolutionTime();
 545              		.loc 2 303 0
 546 002a FFF7FEFF 		bl	ullGetHighResolutionTime
 547 002e C7E90801 		strd	r0, [r7, #32]
 304:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		ulSeconds = ( uint32_t ) ( ullCurrentTime / 1000000ull );
 548              		.loc 2 304 0
 549 0032 D7E90823 		ldrd	r2, [r7, #32]
 550 0036 1046     		mov	r0, r2
 551 0038 1946     		mov	r1, r3
 552 003a 424A     		ldr	r2, .L29+4
 553 003c 4FF00003 		mov	r3, #0
 554 0040 FFF7FEFF 		bl	__aeabi_uldivmod
 555 0044 0246     		mov	r2, r0
 556 0046 0B46     		mov	r3, r1
 557 0048 1346     		mov	r3, r2
 558 004a FB61     		str	r3, [r7, #28]
 305:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		ullCurrentTime = ullCurrentTime % 1000000ull;
 559              		.loc 2 305 0
 560 004c D7E90823 		ldrd	r2, [r7, #32]
 561 0050 1046     		mov	r0, r2
 562 0052 1946     		mov	r1, r3
 563 0054 3B4A     		ldr	r2, .L29+4
 564 0056 4FF00003 		mov	r3, #0
ARM GAS  /tmp/cc3zEYQo.s 			page 23


 565 005a FFF7FEFF 		bl	__aeabi_uldivmod
 566 005e C7E90823 		strd	r2, [r7, #32]
 306:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		ulMilliSeconds = ( uint32_t ) ( ullCurrentTime / 1000ull );
 567              		.loc 2 306 0
 568 0062 D7E90823 		ldrd	r2, [r7, #32]
 569 0066 1046     		mov	r0, r2
 570 0068 1946     		mov	r1, r3
 571 006a 4FF47A72 		mov	r2, #1000
 572 006e 4FF00003 		mov	r3, #0
 573 0072 FFF7FEFF 		bl	__aeabi_uldivmod
 574 0076 0246     		mov	r2, r0
 575 0078 0B46     		mov	r3, r1
 576 007a 1346     		mov	r3, r2
 577 007c BB61     		str	r3, [r7, #24]
 307:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		ulMicroSeconds = ( uint32_t ) ( ullCurrentTime % 1000ull );
 578              		.loc 2 307 0
 579 007e D7E90823 		ldrd	r2, [r7, #32]
 580 0082 1046     		mov	r0, r2
 581 0084 1946     		mov	r1, r3
 582 0086 4FF47A72 		mov	r2, #1000
 583 008a 4FF00003 		mov	r3, #0
 584 008e FFF7FEFF 		bl	__aeabi_uldivmod
 585 0092 1346     		mov	r3, r2
 586 0094 7B61     		str	r3, [r7, #20]
 308:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 309:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xLength = ( size_t ) snprintf( xLogEntry.cMessage, sizeof( xLogEntry.cMessage ), "%4u.%03u.%03u [
 587              		.loc 2 309 0
 588 0096 0020     		movs	r0, #0
 589 0098 FFF7FEFF 		bl	pcTaskGetName
 590 009c 0246     		mov	r2, r0
 591 009e BB69     		ldr	r3, [r7, #24]
 592 00a0 0093     		str	r3, [sp]
 593 00a2 7B69     		ldr	r3, [r7, #20]
 594 00a4 0193     		str	r3, [sp, #4]
 595 00a6 0292     		str	r2, [sp, #8]
 596 00a8 2748     		ldr	r0, .L29+8
 597 00aa C821     		movs	r1, #200
 598 00ac 274A     		ldr	r2, .L29+12
 599 00ae FB69     		ldr	r3, [r7, #28]
 600 00b0 FFF7FEFF 		bl	snprintf
 601 00b4 0346     		mov	r3, r0
 602 00b6 BB60     		str	r3, [r7, #8]
 310:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			( unsigned int ) ulSeconds, ( unsigned int ) ulMilliSeconds, ( unsigned int ) ulMicroSeconds, pc
 311:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xLength += ( size_t ) vsnprintf( xLogEntry.cMessage + xLength, sizeof( xLogEntry.cMessage ) - xLe
 603              		.loc 2 311 0
 604 00b8 BB68     		ldr	r3, [r7, #8]
 605 00ba 0833     		adds	r3, r3, #8
 606 00bc 244A     		ldr	r2, .L29+16
 607 00be 1344     		add	r3, r3, r2
 608 00c0 1A1D     		adds	r2, r3, #4
 609 00c2 BB68     		ldr	r3, [r7, #8]
 610 00c4 C3F1C803 		rsb	r3, r3, #200
 611 00c8 1046     		mov	r0, r2
 612 00ca 1946     		mov	r1, r3
 613 00cc 7A68     		ldr	r2, [r7, #4]
 614 00ce 3B68     		ldr	r3, [r7]
 615 00d0 FFF7FEFF 		bl	vsnprintf
ARM GAS  /tmp/cc3zEYQo.s 			page 24


 616 00d4 0346     		mov	r3, r0
 617 00d6 1A46     		mov	r2, r3
 618 00d8 BB68     		ldr	r3, [r7, #8]
 619 00da 1344     		add	r3, r3, r2
 620 00dc BB60     		str	r3, [r7, #8]
 312:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 313:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xSpace = uxStreamBufferGetSpace( pxStreamBuffer );
 621              		.loc 2 313 0
 622 00de 184B     		ldr	r3, .L29
 623 00e0 1B68     		ldr	r3, [r3]
 624 00e2 1846     		mov	r0, r3
 625 00e4 FFF7FEFF 		bl	uxStreamBufferGetSpace
 626 00e8 3861     		str	r0, [r7, #16]
 314:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 315:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		if( xSpace > ( xLength + sizeof( BaseType_t ) ) )
 627              		.loc 2 315 0
 628 00ea BB68     		ldr	r3, [r7, #8]
 629 00ec 1A1D     		adds	r2, r3, #4
 630 00ee 3B69     		ldr	r3, [r7, #16]
 631 00f0 9A42     		cmp	r2, r3
 632 00f2 11D2     		bcs	.L26
 316:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		{
 317:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			uxStreamBufferAdd( pxStreamBuffer, 0, ( const uint8_t * ) &xLength, sizeof( xLength ) );
 633              		.loc 2 317 0
 634 00f4 124B     		ldr	r3, .L29
 635 00f6 1A68     		ldr	r2, [r3]
 636 00f8 07F10803 		add	r3, r7, #8
 637 00fc 1046     		mov	r0, r2
 638 00fe 0021     		movs	r1, #0
 639 0100 1A46     		mov	r2, r3
 640 0102 0423     		movs	r3, #4
 641 0104 FFF7FEFF 		bl	uxStreamBufferAdd
 318:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			uxStreamBufferAdd( pxStreamBuffer, 0, ( const uint8_t * ) ( xLogEntry.cMessage ), xLength );
 642              		.loc 2 318 0
 643 0108 0D4B     		ldr	r3, .L29
 644 010a 1A68     		ldr	r2, [r3]
 645 010c BB68     		ldr	r3, [r7, #8]
 646 010e 1046     		mov	r0, r2
 647 0110 0021     		movs	r1, #0
 648 0112 0D4A     		ldr	r2, .L29+8
 649 0114 FFF7FEFF 		bl	uxStreamBufferAdd
 650              	.L26:
 319:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		}
 320:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 321:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	xTaskResumeAll();
 651              		.loc 2 321 0
 652 0118 FFF7FEFF 		bl	xTaskResumeAll
 322:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 323:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	if( xLoggingTask != NULL )
 653              		.loc 2 323 0
 654 011c 0D4B     		ldr	r3, .L29+20
 655 011e 1B68     		ldr	r3, [r3]
 656 0120 002B     		cmp	r3, #0
 657 0122 07D0     		beq	.L27
 324:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 325:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* Unblock the logging task so it can output the message. */
 326:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xTaskNotifyGive( xLoggingTask );
ARM GAS  /tmp/cc3zEYQo.s 			page 25


 658              		.loc 2 326 0
 659 0124 0B4B     		ldr	r3, .L29+20
 660 0126 1B68     		ldr	r3, [r3]
 661 0128 1846     		mov	r0, r3
 662 012a 0021     		movs	r1, #0
 663 012c 0222     		movs	r2, #2
 664 012e 0023     		movs	r3, #0
 665 0130 FFF7FEFF 		bl	xTaskGenericNotify
 666              	.L27:
 327:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 328:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 329:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	return xLength;
 667              		.loc 2 329 0
 668 0134 BB68     		ldr	r3, [r7, #8]
 330:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 669              		.loc 2 330 0
 670 0136 1846     		mov	r0, r3
 671 0138 2837     		adds	r7, r7, #40
 672              	.LCFI35:
 673              		.cfi_def_cfa_offset 8
 674 013a BD46     		mov	sp, r7
 675              	.LCFI36:
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 013c 80BD     		pop	{r7, pc}
 679              	.L30:
 680 013e 00BF     		.align	2
 681              	.L29:
 682 0140 00000000 		.word	pxStreamBuffer
 683 0144 40420F00 		.word	1000000
 684 0148 0C000000 		.word	xLogEntry+12
 685 014c 00000000 		.word	.LC0
 686 0150 00000000 		.word	xLogEntry
 687 0154 00000000 		.word	xLoggingTask
 688              		.cfi_endproc
 689              	.LFE29:
 691              		.section	.text.lUDPLoggingPrintf,"ax",%progbits
 692              		.align	2
 693              		.global	lUDPLoggingPrintf
 694              		.thumb
 695              		.thumb_func
 697              	lUDPLoggingPrintf:
 698              	.LFB30:
 331:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 332:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 333:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** int lUDPLoggingPrintf( const char *pcFormatString, ... )
 334:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 699              		.loc 2 334 0
 700              		.cfi_startproc
 701              		@ args = 4, pretend = 16, frame = 8
 702              		@ frame_needed = 1, uses_anonymous_args = 1
 703 0000 0FB4     		push	{r0, r1, r2, r3}
 704              	.LCFI37:
 705              		.cfi_def_cfa_offset 16
 706              		.cfi_offset 0, -16
 707              		.cfi_offset 1, -12
 708              		.cfi_offset 2, -8
ARM GAS  /tmp/cc3zEYQo.s 			page 26


 709              		.cfi_offset 3, -4
 710 0002 80B5     		push	{r7, lr}
 711              	.LCFI38:
 712              		.cfi_def_cfa_offset 24
 713              		.cfi_offset 7, -24
 714              		.cfi_offset 14, -20
 715 0004 82B0     		sub	sp, sp, #8
 716              	.LCFI39:
 717              		.cfi_def_cfa_offset 32
 718 0006 00AF     		add	r7, sp, #0
 719              	.LCFI40:
 720              		.cfi_def_cfa_register 7
 335:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** size_t xLength;
 336:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 337:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	if( prvInitialiseLogging() != pdFALSE )
 721              		.loc 2 337 0
 722 0008 FFF7FEFF 		bl	prvInitialiseLogging
 723 000c 0346     		mov	r3, r0
 724 000e 002B     		cmp	r3, #0
 725 0010 08D0     		beq	.L32
 726              	.LBB6:
 338:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 339:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		va_list args;
 340:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		va_start (args, pcFormatString);
 727              		.loc 2 340 0
 728 0012 07F11403 		add	r3, r7, #20
 729 0016 3B60     		str	r3, [r7]
 341:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xLength = prvBufferFormattedString (pcFormatString, args);
 730              		.loc 2 341 0
 731 0018 3869     		ldr	r0, [r7, #16]
 732 001a 3968     		ldr	r1, [r7]
 733 001c FFF7FEFF 		bl	prvBufferFormattedString
 734 0020 7860     		str	r0, [r7, #4]
 735              	.LBE6:
 736 0022 01E0     		b	.L33
 737              	.L32:
 342:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		va_end (args);
 343:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 344:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	else
 345:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 346:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xLength = 0;
 738              		.loc 2 346 0
 739 0024 0023     		movs	r3, #0
 740 0026 7B60     		str	r3, [r7, #4]
 741              	.L33:
 347:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 348:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 349:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	return ( int ) xLength;
 742              		.loc 2 349 0
 743 0028 7B68     		ldr	r3, [r7, #4]
 350:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 744              		.loc 2 350 0
 745 002a 1846     		mov	r0, r3
 746 002c 0837     		adds	r7, r7, #8
 747              	.LCFI41:
 748              		.cfi_def_cfa_offset 24
 749 002e BD46     		mov	sp, r7
ARM GAS  /tmp/cc3zEYQo.s 			page 27


 750              	.LCFI42:
 751              		.cfi_def_cfa_register 13
 752              		@ sp needed
 753 0030 BDE88040 		pop	{r7, lr}
 754              	.LCFI43:
 755              		.cfi_restore 14
 756              		.cfi_restore 7
 757              		.cfi_def_cfa_offset 16
 758 0034 04B0     		add	sp, sp, #16
 759              	.LCFI44:
 760              		.cfi_restore 3
 761              		.cfi_restore 2
 762              		.cfi_restore 1
 763              		.cfi_restore 0
 764              		.cfi_def_cfa_offset 0
 765 0036 7047     		bx	lr
 766              		.cfi_endproc
 767              	.LFE30:
 769              		.section	.rodata
 770 0017 00       		.align	2
 771              	.LC1:
 772 0018 4C6F6754 		.ascii	"LogTask\000"
 772      61736B00 
 773              		.section	.text.vUDPLoggingTaskCreate,"ax",%progbits
 774              		.align	2
 775              		.global	vUDPLoggingTaskCreate
 776              		.thumb
 777              		.thumb_func
 779              	vUDPLoggingTaskCreate:
 780              	.LFB31:
 351:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 352:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 353:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** void vUDPLoggingTaskCreate( void )
 354:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 781              		.loc 2 354 0
 782              		.cfi_startproc
 783              		@ args = 0, pretend = 0, frame = 0
 784              		@ frame_needed = 1, uses_anonymous_args = 0
 785 0000 80B5     		push	{r7, lr}
 786              	.LCFI45:
 787              		.cfi_def_cfa_offset 8
 788              		.cfi_offset 7, -8
 789              		.cfi_offset 14, -4
 790 0002 82B0     		sub	sp, sp, #8
 791              	.LCFI46:
 792              		.cfi_def_cfa_offset 16
 793 0004 02AF     		add	r7, sp, #8
 794              	.LCFI47:
 795              		.cfi_def_cfa 7, 8
 355:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* Start a task which will send out the logging lines to a UDP address. */
 356:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	xTaskCreate( prvLoggingTask, "LogTask", configUDP_LOGGING_TASK_STACK_SIZE, NULL, configUDP_LOGGING
 796              		.loc 2 356 0
 797 0006 0123     		movs	r3, #1
 798 0008 0093     		str	r3, [sp]
 799 000a 054B     		ldr	r3, .L36
 800 000c 0193     		str	r3, [sp, #4]
 801 000e 0548     		ldr	r0, .L36+4
ARM GAS  /tmp/cc3zEYQo.s 			page 28


 802 0010 0549     		ldr	r1, .L36+8
 803 0012 4FF40072 		mov	r2, #512
 804 0016 0023     		movs	r3, #0
 805 0018 FFF7FEFF 		bl	xTaskCreate
 357:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 806              		.loc 2 357 0
 807 001c BD46     		mov	sp, r7
 808              	.LCFI48:
 809              		.cfi_def_cfa_register 13
 810              		@ sp needed
 811 001e 80BD     		pop	{r7, pc}
 812              	.L37:
 813              		.align	2
 814              	.L36:
 815 0020 00000000 		.word	xLoggingTask
 816 0024 00000000 		.word	prvLoggingTask
 817 0028 18000000 		.word	.LC1
 818              		.cfi_endproc
 819              	.LFE31:
 821              		.section	.text.xLoggingGetSocket,"ax",%progbits
 822              		.align	2
 823              		.global	xLoggingGetSocket
 824              		.thumb
 825              		.thumb_func
 827              	xLoggingGetSocket:
 828              	.LFB32:
 358:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 359:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 360:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** xSocket_t xLoggingGetSocket( void )
 361:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 829              		.loc 2 361 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 8
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833              		@ link register save eliminated.
 834 0000 80B4     		push	{r7}
 835              	.LCFI49:
 836              		.cfi_def_cfa_offset 4
 837              		.cfi_offset 7, -4
 838 0002 83B0     		sub	sp, sp, #12
 839              	.LCFI50:
 840              		.cfi_def_cfa_offset 16
 841 0004 00AF     		add	r7, sp, #0
 842              	.LCFI51:
 843              		.cfi_def_cfa_register 7
 362:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** xSocket_t xReturn;
 363:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 364:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	if( ( xUDPLoggingSocket != NULL ) && ( xUDPLoggingSocket != FREERTOS_INVALID_SOCKET ) )
 844              		.loc 2 364 0
 845 0006 0B4B     		ldr	r3, .L42
 846 0008 1B68     		ldr	r3, [r3]
 847 000a 002B     		cmp	r3, #0
 848 000c 08D0     		beq	.L39
 849              		.loc 2 364 0 is_stmt 0 discriminator 1
 850 000e 094B     		ldr	r3, .L42
 851 0010 1B68     		ldr	r3, [r3]
 852 0012 B3F1FF3F 		cmp	r3, #-1
ARM GAS  /tmp/cc3zEYQo.s 			page 29


 853 0016 03D0     		beq	.L39
 365:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 366:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xReturn = xUDPLoggingSocket;
 854              		.loc 2 366 0 is_stmt 1
 855 0018 064B     		ldr	r3, .L42
 856 001a 1B68     		ldr	r3, [r3]
 857 001c 7B60     		str	r3, [r7, #4]
 858 001e 01E0     		b	.L40
 859              	.L39:
 367:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 368:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	else
 369:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 370:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xReturn = NULL;
 860              		.loc 2 370 0
 861 0020 0023     		movs	r3, #0
 862 0022 7B60     		str	r3, [r7, #4]
 863              	.L40:
 371:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 372:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 373:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	return xReturn;
 864              		.loc 2 373 0
 865 0024 7B68     		ldr	r3, [r7, #4]
 374:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 866              		.loc 2 374 0
 867 0026 1846     		mov	r0, r3
 868 0028 0C37     		adds	r7, r7, #12
 869              	.LCFI52:
 870              		.cfi_def_cfa_offset 4
 871 002a BD46     		mov	sp, r7
 872              	.LCFI53:
 873              		.cfi_def_cfa_register 13
 874              		@ sp needed
 875 002c 5DF8047B 		ldr	r7, [sp], #4
 876              	.LCFI54:
 877              		.cfi_restore 7
 878              		.cfi_def_cfa_offset 0
 879 0030 7047     		bx	lr
 880              	.L43:
 881 0032 00BF     		.align	2
 882              	.L42:
 883 0034 00000000 		.word	xUDPLoggingSocket
 884              		.cfi_endproc
 885              	.LFE32:
 887              		.section	.rodata
 888              		.align	2
 889              	.LC2:
 890 0020 4C6F6767 		.ascii	"Logging Probe\012\000"
 890      696E6720 
 890      50726F62 
 890      650A00
 891              		.section	.text.prvLoggingTask,"ax",%progbits
 892              		.align	2
 893              		.thumb
 894              		.thumb_func
 896              	prvLoggingTask:
 897              	.LFB33:
 375:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc3zEYQo.s 			page 30


 376:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 377:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** void prvLoggingTask( void *pvParameters )
 378:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 898              		.loc 2 378 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 56
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902 0000 90B5     		push	{r4, r7, lr}
 903              	.LCFI55:
 904              		.cfi_def_cfa_offset 12
 905              		.cfi_offset 4, -12
 906              		.cfi_offset 7, -8
 907              		.cfi_offset 14, -4
 908 0002 91B0     		sub	sp, sp, #68
 909              	.LCFI56:
 910              		.cfi_def_cfa_offset 80
 911 0004 02AF     		add	r7, sp, #8
 912              	.LCFI57:
 913              		.cfi_def_cfa 7, 72
 914 0006 7860     		str	r0, [r7, #4]
 379:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** TickType_t xBlockingTime = pdMS_TO_TICKS( logUDP_LOGGING_BLOCK_TIME_MS );
 915              		.loc 2 379 0
 916 0008 4FF47A73 		mov	r3, #1000
 917 000c 7B62     		str	r3, [r7, #36]
 380:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** struct freertos_sockaddr xLocalAddress, xRemoteAddress;
 381:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** BaseType_t xSendTimeOut;
 382:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** int32_t lLines;
 383:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** size_t xCount;
 384:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** static char cLoggingLine[ configUDP_LOGGING_STRING_LENGTH ];
 385:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** const TickType_t xResolveDelay = pdMS_TO_TICKS( ( TickType_t ) 250 );
 918              		.loc 2 385 0
 919 000e FA23     		movs	r3, #250
 920 0010 3B62     		str	r3, [r7, #32]
 386:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 387:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* Prevent compiler warnings about unused parameters. */
 388:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	( void ) pvParameters;
 389:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 390:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* A possibility to set some additional task properties. */
 391:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	iptraceUDP_LOGGING_TASK_STARTING();
 392:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 393:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	xRemoteAddress.sin_port = FreeRTOS_htons( configUDP_LOGGING_PORT_REMOTE );
 921              		.loc 2 393 0
 922 0012 4DF60543 		movw	r3, #56325
 923 0016 7B82     		strh	r3, [r7, #18]	@ movhi
 394:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#if defined( configUDP_LOGGING_ADDR0 )
 395:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 396:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* Use a fixed address to where the logging will be sent. */
 397:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xRemoteAddress.sin_addr = FreeRTOS_inet_addr_quick( configUDP_LOGGING_ADDR0,
 924              		.loc 2 397 0
 925 0018 554B     		ldr	r3, .L56
 926 001a 7B61     		str	r3, [r7, #20]
 927              	.L45:
 398:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 															configUDP_LOGGING_ADDR1,
 399:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 															configUDP_LOGGING_ADDR2,
 400:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 															configUDP_LOGGING_ADDR3 );
 401:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 402:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#else
ARM GAS  /tmp/cc3zEYQo.s 			page 31


 403:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 404:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* The logging will be broadcasted on the local broadcasting
 405:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		address, such as 192.168.0.255 */
 406:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xRemoteAddress.sin_addr = FreeRTOS_GetIPAddress() | ~( FreeRTOS_GetNetmask() );
 407:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 408:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	#endif
 409:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 410:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* Loop until a socket is created. */
 411:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	do
 412:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 413:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		vTaskDelay( xBlockingTime );
 928              		.loc 2 413 0 discriminator 1
 929 001c 786A     		ldr	r0, [r7, #36]
 930 001e FFF7FEFF 		bl	vTaskDelay
 414:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xUDPLoggingSocket = FreeRTOS_socket( FREERTOS_AF_INET, FREERTOS_SOCK_DGRAM, FREERTOS_IPPROTO_UDP 
 931              		.loc 2 414 0 discriminator 1
 932 0022 0220     		movs	r0, #2
 933 0024 0221     		movs	r1, #2
 934 0026 1122     		movs	r2, #17
 935 0028 FFF7FEFF 		bl	FreeRTOS_socket
 936 002c 0246     		mov	r2, r0
 937 002e 514B     		ldr	r3, .L56+4
 938 0030 1A60     		str	r2, [r3]
 415:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	} while( xUDPLoggingSocket == FREERTOS_INVALID_SOCKET );
 939              		.loc 2 415 0 discriminator 1
 940 0032 504B     		ldr	r3, .L56+4
 941 0034 1B68     		ldr	r3, [r3]
 942 0036 B3F1FF3F 		cmp	r3, #-1
 943 003a EFD0     		beq	.L45
 416:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 417:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	xLocalAddress.sin_port = FreeRTOS_htons( configUDP_LOGGING_PORT_LOCAL );
 944              		.loc 2 417 0
 945 003c 4DF60533 		movw	r3, #56069
 946 0040 7B83     		strh	r3, [r7, #26]	@ movhi
 418:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	xLocalAddress.sin_addr = FreeRTOS_GetIPAddress();
 947              		.loc 2 418 0
 948 0042 FFF7FEFF 		bl	FreeRTOS_GetIPAddress
 949 0046 0346     		mov	r3, r0
 950 0048 FB61     		str	r3, [r7, #28]
 419:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 420:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	FreeRTOS_bind( xUDPLoggingSocket, &xLocalAddress, sizeof( xLocalAddress ) );
 951              		.loc 2 420 0
 952 004a 4A4B     		ldr	r3, .L56+4
 953 004c 1A68     		ldr	r2, [r3]
 954 004e 07F11803 		add	r3, r7, #24
 955 0052 1046     		mov	r0, r2
 956 0054 1946     		mov	r1, r3
 957 0056 0822     		movs	r2, #8
 958 0058 FFF7FEFF 		bl	FreeRTOS_bind
 421:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 422:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	xSendTimeOut = xBlockingTime;
 959              		.loc 2 422 0
 960 005c 7B6A     		ldr	r3, [r7, #36]
 961 005e FB60     		str	r3, [r7, #12]
 423:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	FreeRTOS_setsockopt( xUDPLoggingSocket, 0, FREERTOS_SO_SNDTIMEO, &xSendTimeOut, sizeof( xSendTimeO
 962              		.loc 2 423 0
 963 0060 444B     		ldr	r3, .L56+4
ARM GAS  /tmp/cc3zEYQo.s 			page 32


 964 0062 1A68     		ldr	r2, [r3]
 965 0064 07F10C04 		add	r4, r7, #12
 966 0068 0423     		movs	r3, #4
 967 006a 0093     		str	r3, [sp]
 968 006c 1046     		mov	r0, r2
 969 006e 0021     		movs	r1, #0
 970 0070 0122     		movs	r2, #1
 971 0072 2346     		mov	r3, r4
 972 0074 FFF7FEFF 		bl	FreeRTOS_setsockopt
 424:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 425:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* Send a dummy message to resolve the IP address before sending the logging 
 426:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	messages. */
 427:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	snprintf( cLoggingLine, configUDP_LOGGING_STRING_LENGTH, "Logging Probe\n" );
 973              		.loc 2 427 0
 974 0078 3F4A     		ldr	r2, .L56+8
 975 007a 404B     		ldr	r3, .L56+12
 976 007c 1446     		mov	r4, r2
 977 007e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 978 0080 07C4     		stmia	r4!, {r0, r1, r2}
 979 0082 2380     		strh	r3, [r4]	@ movhi
 980 0084 0234     		adds	r4, r4, #2
 981 0086 1B0C     		lsrs	r3, r3, #16
 982 0088 2370     		strb	r3, [r4]
 428:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	FreeRTOS_sendto( xUDPLoggingSocket, ( void * ) cLoggingLine, strlen( cLoggingLine ), 0, &xRemoteAd
 983              		.loc 2 428 0
 984 008a 3A4B     		ldr	r3, .L56+4
 985 008c 1C68     		ldr	r4, [r3]
 986 008e 3A48     		ldr	r0, .L56+8
 987 0090 FFF7FEFF 		bl	strlen
 988 0094 0246     		mov	r2, r0
 989 0096 07F11003 		add	r3, r7, #16
 990 009a 0093     		str	r3, [sp]
 991 009c 0823     		movs	r3, #8
 992 009e 0193     		str	r3, [sp, #4]
 993 00a0 2046     		mov	r0, r4
 994 00a2 3549     		ldr	r1, .L56+8
 995 00a4 0023     		movs	r3, #0
 996 00a6 FFF7FEFF 		bl	FreeRTOS_sendto
 429:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	vTaskDelay( xResolveDelay );
 997              		.loc 2 429 0
 998 00aa 386A     		ldr	r0, [r7, #32]
 999 00ac FFF7FEFF 		bl	vTaskDelay
 1000              	.L55:
 430:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 431:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	for( ;; )
 432:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 433:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* Wait for another message to be placed into the stream buffer. */
 434:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		ulTaskNotifyTake( pdTRUE, xBlockingTime );
 1001              		.loc 2 434 0
 1002 00b0 0120     		movs	r0, #1
 1003 00b2 796A     		ldr	r1, [r7, #36]
 1004 00b4 FFF7FEFF 		bl	ulTaskNotifyTake
 435:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 436:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		if( xGetPhyLinkStatus() != pdFALSE )
 1005              		.loc 2 436 0
 1006 00b8 FFF7FEFF 		bl	xGetPhyLinkStatus
 1007 00bc 0346     		mov	r3, r0
ARM GAS  /tmp/cc3zEYQo.s 			page 33


 1008 00be 002B     		cmp	r3, #0
 1009 00c0 54D0     		beq	.L46
 437:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		{
 438:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			/* Check for messages in the buffer. */
 439:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			for( lLines = 0; lLines < configUDP_LOGGING_MAX_MESSAGES_IN_BUFFER; lLines++ )
 1010              		.loc 2 439 0
 1011 00c2 0023     		movs	r3, #0
 1012 00c4 7B63     		str	r3, [r7, #52]
 1013 00c6 4EE0     		b	.L47
 1014              	.L54:
 440:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			{
 441:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				xCount = prvGetMessageFromStreamBuffer ( cLoggingLine, sizeof( cLoggingLine ) );
 1015              		.loc 2 441 0
 1016 00c8 2B48     		ldr	r0, .L56+8
 1017 00ca C821     		movs	r1, #200
 1018 00cc FFF7FEFF 		bl	prvGetMessageFromStreamBuffer
 1019 00d0 3863     		str	r0, [r7, #48]
 442:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 443:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				if( xCount <= 0 )
 1020              		.loc 2 443 0
 1021 00d2 3B6B     		ldr	r3, [r7, #48]
 1022 00d4 002B     		cmp	r3, #0
 1023 00d6 00D1     		bne	.L48
 444:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				{
 445:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					break;
 1024              		.loc 2 445 0
 1025 00d8 48E0     		b	.L46
 1026              	.L48:
 1027              	.LBB7:
 446:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				}
 447:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 448:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				#if( configUDP_LOGGING_NEEDS_CR_LF != 0 )
 449:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				{
 450:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				char *pcTarget;
 451:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				const char *pcSource;
 452:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 453:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					/* Within the code, a single "\n" is used to denote	a
 454:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					newline.  If 'configUDP_LOGGING_NEEDS_CR_LF' is defined as non-zero,
 455:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					every "\n" will be translated into a "\r\n". */
 456:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					pcTarget = cLoggingLine;
 1028              		.loc 2 456 0
 1029 00da 274B     		ldr	r3, .L56+8
 1030 00dc FB62     		str	r3, [r7, #44]
 457:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					pcSource = cLoggingLine;
 1031              		.loc 2 457 0
 1032 00de 264B     		ldr	r3, .L56+8
 1033 00e0 BB62     		str	r3, [r7, #40]
 458:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 459:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					while( ( *pcSource != 0x00 ) && ( pcSource < ( cLoggingLine + xCount ) ) )
 1034              		.loc 2 459 0
 1035 00e2 26E0     		b	.L49
 1036              	.L53:
 460:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					{
 461:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 						*pcTarget = *pcSource;
 1037              		.loc 2 461 0
 1038 00e4 BB6A     		ldr	r3, [r7, #40]
 1039 00e6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cc3zEYQo.s 			page 34


 1040 00e8 FB6A     		ldr	r3, [r7, #44]
 1041 00ea 1A70     		strb	r2, [r3]
 462:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 463:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 						if( ( ( pcSource == cLoggingLine ) || ( pcSource[ -1 ] != logASCII_CR ) ) && ( pcSource[ 0 ] 
 1042              		.loc 2 463 0
 1043 00ec BB6A     		ldr	r3, [r7, #40]
 1044 00ee 224A     		ldr	r2, .L56+8
 1045 00f0 9342     		cmp	r3, r2
 1046 00f2 04D0     		beq	.L50
 1047              		.loc 2 463 0 is_stmt 0 discriminator 2
 1048 00f4 BB6A     		ldr	r3, [r7, #40]
 1049 00f6 013B     		subs	r3, r3, #1
 1050 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 00fa 0D2B     		cmp	r3, #13
 1052 00fc 13D0     		beq	.L51
 1053              	.L50:
 1054              		.loc 2 463 0 discriminator 3
 1055 00fe BB6A     		ldr	r3, [r7, #40]
 1056 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1057 0102 0A2B     		cmp	r3, #10
 1058 0104 0FD1     		bne	.L51
 464:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 						{
 465:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 							pcTarget[ 0 ] = logASCII_CR;
 1059              		.loc 2 465 0 is_stmt 1
 1060 0106 FB6A     		ldr	r3, [r7, #44]
 1061 0108 0D22     		movs	r2, #13
 1062 010a 1A70     		strb	r2, [r3]
 466:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 							pcTarget[ 1 ] = logASCII_NL;
 1063              		.loc 2 466 0
 1064 010c FB6A     		ldr	r3, [r7, #44]
 1065 010e 0133     		adds	r3, r3, #1
 1066 0110 0A22     		movs	r2, #10
 1067 0112 1A70     		strb	r2, [r3]
 467:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 468:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 							if( xCount < ( sizeof( cLoggingLine ) - 1 ) )
 1068              		.loc 2 468 0
 1069 0114 3B6B     		ldr	r3, [r7, #48]
 1070 0116 C62B     		cmp	r3, #198
 1071 0118 05D8     		bhi	.L51
 469:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 							{
 470:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 								xCount++;
 1072              		.loc 2 470 0
 1073 011a 3B6B     		ldr	r3, [r7, #48]
 1074 011c 0133     		adds	r3, r3, #1
 1075 011e 3B63     		str	r3, [r7, #48]
 471:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 								pcTarget++;
 1076              		.loc 2 471 0
 1077 0120 FB6A     		ldr	r3, [r7, #44]
 1078 0122 0133     		adds	r3, r3, #1
 1079 0124 FB62     		str	r3, [r7, #44]
 1080              	.L51:
 472:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 							}
 473:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 						}
 474:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 475:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 						pcTarget++;
 1081              		.loc 2 475 0
 1082 0126 FB6A     		ldr	r3, [r7, #44]
ARM GAS  /tmp/cc3zEYQo.s 			page 35


 1083 0128 0133     		adds	r3, r3, #1
 1084 012a FB62     		str	r3, [r7, #44]
 476:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 						pcSource++;
 1085              		.loc 2 476 0
 1086 012c BB6A     		ldr	r3, [r7, #40]
 1087 012e 0133     		adds	r3, r3, #1
 1088 0130 BB62     		str	r3, [r7, #40]
 1089              	.L49:
 459:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					{
 1090              		.loc 2 459 0
 1091 0132 BB6A     		ldr	r3, [r7, #40]
 1092 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1093 0136 002B     		cmp	r3, #0
 1094 0138 05D0     		beq	.L52
 459:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					{
 1095              		.loc 2 459 0 is_stmt 0 discriminator 1
 1096 013a 3B6B     		ldr	r3, [r7, #48]
 1097 013c 0E4A     		ldr	r2, .L56+8
 1098 013e 1A44     		add	r2, r2, r3
 1099 0140 BB6A     		ldr	r3, [r7, #40]
 1100 0142 9A42     		cmp	r2, r3
 1101 0144 CED8     		bhi	.L53
 1102              	.L52:
 1103              	.LBE7:
 477:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 					}
 478:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				}
 479:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				#endif
 480:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 481:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 				FreeRTOS_sendto( xUDPLoggingSocket, ( void * ) cLoggingLine, xCount, 0, &xRemoteAddress, sizeof
 1104              		.loc 2 481 0 is_stmt 1 discriminator 2
 1105 0146 0B4B     		ldr	r3, .L56+4
 1106 0148 1A68     		ldr	r2, [r3]
 1107 014a 07F11003 		add	r3, r7, #16
 1108 014e 0093     		str	r3, [sp]
 1109 0150 0823     		movs	r3, #8
 1110 0152 0193     		str	r3, [sp, #4]
 1111 0154 1046     		mov	r0, r2
 1112 0156 0849     		ldr	r1, .L56+8
 1113 0158 3A6B     		ldr	r2, [r7, #48]
 1114 015a 0023     		movs	r3, #0
 1115 015c FFF7FEFF 		bl	FreeRTOS_sendto
 439:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			{
 1116              		.loc 2 439 0 discriminator 2
 1117 0160 7B6B     		ldr	r3, [r7, #52]
 1118 0162 0133     		adds	r3, r3, #1
 1119 0164 7B63     		str	r3, [r7, #52]
 1120              	.L47:
 439:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			{
 1121              		.loc 2 439 0 is_stmt 0 discriminator 1
 1122 0166 7B6B     		ldr	r3, [r7, #52]
 1123 0168 132B     		cmp	r3, #19
 1124 016a ADDD     		ble	.L54
 1125              	.L46:
 482:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 			}
 483:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		}
 484:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 1126              		.loc 2 484 0 is_stmt 1 discriminator 1
ARM GAS  /tmp/cc3zEYQo.s 			page 36


 1127 016c A0E7     		b	.L55
 1128              	.L57:
 1129 016e 00BF     		.align	2
 1130              	.L56:
 1131 0170 C0A80064 		.word	1677764800
 1132 0174 00000000 		.word	xUDPLoggingSocket
 1133 0178 00000000 		.word	cLoggingLine.7105
 1134 017c 20000000 		.word	.LC2
 1135              		.cfi_endproc
 1136              	.LFE33:
 1138              		.section	.text.vUDPLoggingFlush,"ax",%progbits
 1139              		.align	2
 1140              		.global	vUDPLoggingFlush
 1141              		.thumb
 1142              		.thumb_func
 1144              	vUDPLoggingFlush:
 1145              	.LFB34:
 485:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 486:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** /*-----------------------------------------------------------*/
 487:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 488:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** void vUDPLoggingFlush( void )
 489:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** {
 1146              		.loc 2 489 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 8
 1149              		@ frame_needed = 1, uses_anonymous_args = 0
 1150 0000 80B5     		push	{r7, lr}
 1151              	.LCFI58:
 1152              		.cfi_def_cfa_offset 8
 1153              		.cfi_offset 7, -8
 1154              		.cfi_offset 14, -4
 1155 0002 82B0     		sub	sp, sp, #8
 1156              	.LCFI59:
 1157              		.cfi_def_cfa_offset 16
 1158 0004 00AF     		add	r7, sp, #0
 1159              	.LCFI60:
 1160              		.cfi_def_cfa_register 7
 490:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** const TickType_t xDelay = pdMS_TO_TICKS( 20UL );
 1161              		.loc 2 490 0
 1162 0006 1423     		movs	r3, #20
 1163 0008 7B60     		str	r3, [r7, #4]
 491:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 492:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* In some situations a lot of logging is produced deliberately in which
 493:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	case vUDPLoggingFlush() can be called to prevent the buffer overflowing. */
 494:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	if( xLoggingTask != NULL )
 1164              		.loc 2 494 0
 1165 000a 0D4B     		ldr	r3, .L60
 1166 000c 1B68     		ldr	r3, [r3]
 1167 000e 002B     		cmp	r3, #0
 1168 0010 07D0     		beq	.L59
 495:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	{
 496:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		/* Unblock the logging task so it can output the message. */
 497:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 		xTaskNotifyGive( xLoggingTask );
 1169              		.loc 2 497 0
 1170 0012 0B4B     		ldr	r3, .L60
 1171 0014 1B68     		ldr	r3, [r3]
 1172 0016 1846     		mov	r0, r3
ARM GAS  /tmp/cc3zEYQo.s 			page 37


 1173 0018 0021     		movs	r1, #0
 1174 001a 0222     		movs	r2, #2
 1175 001c 0023     		movs	r3, #0
 1176 001e FFF7FEFF 		bl	xTaskGenericNotify
 1177              	.L59:
 498:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	}
 499:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 
 500:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	/* Allow the low priority logging task a chance to clear the buffer. */
 501:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** 	vTaskDelay( pdMS_TO_TICKS( xDelay ) );
 1178              		.loc 2 501 0
 1179 0022 7B68     		ldr	r3, [r7, #4]
 1180 0024 4FF47A72 		mov	r2, #1000
 1181 0028 02FB03F3 		mul	r3, r2, r3
 1182 002c 054A     		ldr	r2, .L60+4
 1183 002e A2FB0323 		umull	r2, r3, r2, r3
 1184 0032 9B09     		lsrs	r3, r3, #6
 1185 0034 1846     		mov	r0, r3
 1186 0036 FFF7FEFF 		bl	vTaskDelay
 502:../../../FreeRTOS-Plus/Demo/Common/Utilities/UDPLoggingPrintf.c **** }
 1187              		.loc 2 502 0
 1188 003a 0837     		adds	r7, r7, #8
 1189              	.LCFI61:
 1190              		.cfi_def_cfa_offset 8
 1191 003c BD46     		mov	sp, r7
 1192              	.LCFI62:
 1193              		.cfi_def_cfa_register 13
 1194              		@ sp needed
 1195 003e 80BD     		pop	{r7, pc}
 1196              	.L61:
 1197              		.align	2
 1198              	.L60:
 1199 0040 00000000 		.word	xLoggingTask
 1200 0044 D34D6210 		.word	274877907
 1201              		.cfi_endproc
 1202              	.LFE34:
 1204              		.section	.bss.xLoggingInitialised.7066,"aw",%nobits
 1205              		.align	2
 1208              	xLoggingInitialised.7066:
 1209 0000 00000000 		.space	4
 1210              		.section	.bss.cLoggingLine.7105,"aw",%nobits
 1211              		.align	2
 1214              	cLoggingLine.7105:
 1215 0000 00000000 		.space	200
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1216              		.text
 1217              	.Letext0:
 1218              		.file 4 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1219              		.file 5 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 1220              		.file 6 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stdarg.h"
 1221              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1222              		.file 8 "../../../FreeRTOS_9_0/Source/include/task.h"
 1223              		.file 9 "<built-in>"
 1224              		.file 10 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Sockets.h"
ARM GAS  /tmp/cc3zEYQo.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 UDPLoggingPrintf.c
     /tmp/cc3zEYQo.s:21     .text.uxStreamBufferSpace:0000000000000000 $t
     /tmp/cc3zEYQo.s:25     .text.uxStreamBufferSpace:0000000000000000 uxStreamBufferSpace
     /tmp/cc3zEYQo.s:88     .text.uxStreamBufferDistance:0000000000000000 $t
     /tmp/cc3zEYQo.s:92     .text.uxStreamBufferDistance:0000000000000000 uxStreamBufferDistance
     /tmp/cc3zEYQo.s:153    .text.uxStreamBufferGetSpace:0000000000000000 $t
     /tmp/cc3zEYQo.s:157    .text.uxStreamBufferGetSpace:0000000000000000 uxStreamBufferGetSpace
     /tmp/cc3zEYQo.s:203    .text.uxStreamBufferGetSize:0000000000000000 $t
     /tmp/cc3zEYQo.s:207    .text.uxStreamBufferGetSize:0000000000000000 uxStreamBufferGetSize
     /tmp/cc3zEYQo.s:253    .bss.xLogEntry:0000000000000000 $d
     /tmp/cc3zEYQo.s:256    .bss.xLogEntry:0000000000000000 xLogEntry
     /tmp/cc3zEYQo.s:259    .bss.pxStreamBuffer:0000000000000000 $d
     /tmp/cc3zEYQo.s:262    .bss.pxStreamBuffer:0000000000000000 pxStreamBuffer
     /tmp/cc3zEYQo.s:265    .bss.xLoggingTask:0000000000000000 $d
     /tmp/cc3zEYQo.s:268    .bss.xLoggingTask:0000000000000000 xLoggingTask
     /tmp/cc3zEYQo.s:271    .data.xUDPLoggingSocket:0000000000000000 $d
     /tmp/cc3zEYQo.s:274    .data.xUDPLoggingSocket:0000000000000000 xUDPLoggingSocket
     /tmp/cc3zEYQo.s:277    .text.prvInitialiseLogging:0000000000000000 $t
     /tmp/cc3zEYQo.s:281    .text.prvInitialiseLogging:0000000000000000 prvInitialiseLogging
     /tmp/cc3zEYQo.s:356    .text.prvInitialiseLogging:000000000000005c $d
     /tmp/cc3zEYQo.s:1208   .bss.xLoggingInitialised.7066:0000000000000000 xLoggingInitialised.7066
     /tmp/cc3zEYQo.s:362    .text.prvGetMessageFromStreamBuffer:0000000000000000 $t
     /tmp/cc3zEYQo.s:366    .text.prvGetMessageFromStreamBuffer:0000000000000000 prvGetMessageFromStreamBuffer
     /tmp/cc3zEYQo.s:485    .text.prvGetMessageFromStreamBuffer:00000000000000ac $d
     /tmp/cc3zEYQo.s:492    .rodata:0000000000000000 $d
     /tmp/cc3zEYQo.s:496    .text.prvBufferFormattedString:0000000000000000 $t
     /tmp/cc3zEYQo.s:500    .text.prvBufferFormattedString:0000000000000000 prvBufferFormattedString
     /tmp/cc3zEYQo.s:682    .text.prvBufferFormattedString:0000000000000140 $d
     /tmp/cc3zEYQo.s:692    .text.lUDPLoggingPrintf:0000000000000000 $t
     /tmp/cc3zEYQo.s:697    .text.lUDPLoggingPrintf:0000000000000000 lUDPLoggingPrintf
     /tmp/cc3zEYQo.s:774    .text.vUDPLoggingTaskCreate:0000000000000000 $t
     /tmp/cc3zEYQo.s:779    .text.vUDPLoggingTaskCreate:0000000000000000 vUDPLoggingTaskCreate
     /tmp/cc3zEYQo.s:815    .text.vUDPLoggingTaskCreate:0000000000000020 $d
     /tmp/cc3zEYQo.s:896    .text.prvLoggingTask:0000000000000000 prvLoggingTask
     /tmp/cc3zEYQo.s:822    .text.xLoggingGetSocket:0000000000000000 $t
     /tmp/cc3zEYQo.s:827    .text.xLoggingGetSocket:0000000000000000 xLoggingGetSocket
     /tmp/cc3zEYQo.s:883    .text.xLoggingGetSocket:0000000000000034 $d
     /tmp/cc3zEYQo.s:892    .text.prvLoggingTask:0000000000000000 $t
     /tmp/cc3zEYQo.s:1131   .text.prvLoggingTask:0000000000000170 $d
     /tmp/cc3zEYQo.s:1214   .bss.cLoggingLine.7105:0000000000000000 cLoggingLine.7105
     /tmp/cc3zEYQo.s:1139   .text.vUDPLoggingFlush:0000000000000000 $t
     /tmp/cc3zEYQo.s:1144   .text.vUDPLoggingFlush:0000000000000000 vUDPLoggingFlush
     /tmp/cc3zEYQo.s:1199   .text.vUDPLoggingFlush:0000000000000040 $d
     /tmp/cc3zEYQo.s:1205   .bss.xLoggingInitialised.7066:0000000000000000 $d
     /tmp/cc3zEYQo.s:1211   .bss.cLoggingLine.7105:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
xTaskGetSchedulerState
pvPortMalloc
memset
vTaskSuspendAll
uxStreamBufferGet
memcpy
xTaskResumeAll
__aeabi_uldivmod
ARM GAS  /tmp/cc3zEYQo.s 			page 39


ullGetHighResolutionTime
pcTaskGetName
snprintf
vsnprintf
uxStreamBufferAdd
xTaskGenericNotify
xTaskCreate
vTaskDelay
FreeRTOS_socket
FreeRTOS_GetIPAddress
FreeRTOS_bind
FreeRTOS_setsockopt
strlen
FreeRTOS_sendto
ulTaskNotifyTake
xGetPhyLinkStatus
