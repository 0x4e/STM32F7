ARM GAS  /tmp/ccjIcGgN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f7xx_hal_dma2d.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_DMA2D_Init,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_DMA2D_Init
  23              		.thumb
  24              		.thumb_func
  26              	HAL_DMA2D_Init:
  27              	.LFB135:
  28              		.file 1 "../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c"
   1:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
   2:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ******************************************************************************
   3:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @file    stm32f7xx_hal_dma2d.c
   4:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @version V1.1.2
   6:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @date    23-September-2016 
   7:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief   DMA2D HAL module driver.
   8:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          This file provides firmware functions to manage the following 
   9:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *          functionalities of the DMA2D peripheral:
  10:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + Initialization and de-initialization functions
  11:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + IO operation functions
  12:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + Peripheral Control functions 
  13:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *           + Peripheral State and Errors functions
  14:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
  15:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   @verbatim
  16:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ==============================================================================
  17:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                         ##### How to use this driver #####
  18:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ==============================================================================
  19:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]
  20:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:   
  21:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           the transfer mode, the output color mode and the output offset using 
  22:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_Init() function.
  23:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  24:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Program the required configuration through the following parameters:   
  25:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           the input color mode, the input color, the input alpha value, the alpha mode,
  26:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           the red/blue swap mode, the inverted alpha mode and the input offset using 
  27:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_ConfigLayer() function for foreground or/and background layer.
  28:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           
  29:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** Polling mode IO operation ***
  30:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      =================================   
ARM GAS  /tmp/ccjIcGgN.s 			page 2


  31:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]        
  32:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Configure pdata parameter (explained hereafter), destination and data length 
  33:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            and enable the transfer using HAL_DMA2D_Start(). 
  34:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Wait for end of transfer using HAL_DMA2D_PollForTransfer(), at this stage
  35:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            user can specify the value of timeout according to his end application.
  36:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                
  37:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** Interrupt mode IO operation ***    
  38:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      ===================================
  39:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..] 
  40:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Configure pdata parameter, destination and data length and enable 
  41:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            the transfer using HAL_DMA2D_Start_IT(). 
  42:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) Use HAL_DMA2D_IRQHandler() called under DMA2D_IRQHandler() interrupt subroutine.
  43:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) At the end of data transfer HAL_DMA2D_IRQHandler() function is executed and user can 
  44:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            add his own function by customization of function pointer XferCpltCallback (member 
  45:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            of DMA2D handle structure). 
  46:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        (#) In case of error, the HAL_DMA2D_IRQHandler() function will call the callback 
  47:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            XferErrorCallback.            
  48:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  49:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          -@-   In Register-to-Memory transfer mode, pdata parameter is the register
  50:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                color, in Memory-to-memory or Memory-to-Memory with pixel format
  51:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                conversion pdata is the source address.
  52:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  53:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          -@-   Configure the foreground source address, the background source address, 
  54:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                the destination and data length then Enable the transfer using 
  55:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                HAL_DMA2D_BlendingStart() in polling mode and HAL_DMA2D_BlendingStart_IT()
  56:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                in interrupt mode.
  57:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                
  58:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          -@-   HAL_DMA2D_BlendingStart() and HAL_DMA2D_BlendingStart_IT() functions
  59:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                are used if the memory to memory with blending transfer mode is selected.
  60:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                    
  61:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Optionally, configure and enable the CLUT using HAL_DMA2D_CLUTLoad() in polling
  62:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           mode or HAL_DMA2D_CLUTLoad_IT() in interrupt mode.
  63:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  64:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Optionally, configure the line watermark in using the API HAL_DMA2D_ProgramLineEvent()
  65:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           
  66:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) Optionally, configure the dead time value in the AHB clock cycle inserted between two 
  67:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           consecutive accesses on the AHB master port in using the API HAL_DMA2D_ConfigDeadTime()
  68:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and enable/disable the functionality  with the APIs HAL_DMA2D_EnableDeadTime() or
  69:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_DisableDeadTime().          
  70:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    
  71:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) The transfer can be suspended, resumed and aborted using the following
  72:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           functions: HAL_DMA2D_Suspend(), HAL_DMA2D_Resume(), HAL_DMA2D_Abort().
  73:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           
  74:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) The CLUT loading can be suspended, resumed and aborted using the following
  75:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           functions: HAL_DMA2D_CLUTLoading_Suspend(), HAL_DMA2D_CLUTLoading_Resume(), 
  76:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           HAL_DMA2D_CLUTLoading_Abort().                
  77:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                      
  78:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) To control the DMA2D state, use the following function: HAL_DMA2D_GetState().   
  79:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
  80:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (#) To read the DMA2D error code, use the following function: HAL_DMA2D_GetError().          
  81:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
  82:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      *** DMA2D HAL driver macros list ***
  83:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      ============================================= 
  84:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..]
  85:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        Below the list of most used macros in DMA2D HAL driver :
  86:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        
  87:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE: Enable the DMA2D peripheral.
ARM GAS  /tmp/ccjIcGgN.s 			page 3


  88:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_FLAG: Get the DMA2D pending flags.
  89:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_CLEAR_FLAG: Clear the DMA2D pending flags.
  90:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_ENABLE_IT: Enable the specified DMA2D interrupts.
  91:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_DISABLE_IT: Disable the specified DMA2D interrupts.
  92:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) __HAL_DMA2D_GET_IT_SOURCE: Check whether the specified DMA2D interrupt is enabled or not.
  93:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      
  94:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      [..] 
  95:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (@) You can refer to the DMA2D HAL driver header file for more useful macros
  96:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                                   
  97:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   @endverbatim
  98:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ******************************************************************************
  99:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @attention
 100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * Redistribution and use in source and binary forms, with or without modification,
 104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * are permitted provided that the following conditions are met:
 105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *      this list of conditions and the following disclaimer.
 107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *      this list of conditions and the following disclaimer in the documentation
 109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *      and/or other materials provided with the distribution.
 110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *      may be used to endorse or promote products derived from this software
 112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *      without specific prior written permission.
 113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *
 125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   ******************************************************************************
 126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */ 
 127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Includes ------------------------------------------------------------------*/
 129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #include "stm32f7xx_hal.h"
 130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @addtogroup STM32F7xx_HAL_Driver
 132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D  DMA2D
 136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief DMA2D HAL module driver
 137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #ifdef HAL_DMA2D_MODULE_ENABLED
 141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D)
 142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private types -------------------------------------------------------------*/
 144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  /tmp/ccjIcGgN.s 			page 4


 145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Constants DMA2D Private Constants
 146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_TimeOut DMA2D Time Out 
 150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */  
 152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_ABORT           ((uint32_t)1000)  /*!<  1s  */
 153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_TIMEOUT_SUSPEND         ((uint32_t)1000)  /*!<  1s  */
 154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Shifts DMA2D Shifts 
 159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */                                     
 161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_FGPFCCR_CS     (uint32_t)POSITION_VAL(DMA2D_FGPFCCR_CS)    /*!< Required lef
 162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_BGPFCCR_CS     (uint32_t)POSITION_VAL(DMA2D_BGPFCCR_CS)    /*!< Required lef
 163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                                                                                  
 164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_FGPFCCR_CCM    (uint32_t)POSITION_VAL(DMA2D_FGPFCCR_CCM)   /*!< Required lef
 165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_BGPFCCR_CCM    (uint32_t)POSITION_VAL(DMA2D_BGPFCCR_CCM)   /*!< Required lef
 166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                                                                                  
 167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_OPFCCR_AI      (uint32_t)POSITION_VAL(DMA2D_OPFCCR_AI)     /*!< Required lef
 168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_FGPFCCR_AI     (uint32_t)POSITION_VAL(DMA2D_FGPFCCR_AI)    /*!< Required lef
 169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_BGPFCCR_AI     (uint32_t)POSITION_VAL(DMA2D_BGPFCCR_AI)    /*!< Required lef
 170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_OPFCCR_RBS     (uint32_t)POSITION_VAL(DMA2D_OPFCCR_RBS)    /*!< Required lef
 172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_FGPFCCR_RBS    (uint32_t)POSITION_VAL(DMA2D_FGPFCCR_RBS)   /*!< Required lef
 173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_BGPFCCR_RBS    (uint32_t)POSITION_VAL(DMA2D_BGPFCCR_RBS)   /*!< Required lef
 174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                                                                                  
 175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_AMTCR_DT       (uint32_t)POSITION_VAL(DMA2D_AMTCR_DT)      /*!< Required lef
 176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                                                                                  
 177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_FGPFCCR_AM     (uint32_t)POSITION_VAL(DMA2D_FGPFCCR_AM)    /*!< Required lef
 178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_BGPFCCR_AM     (uint32_t)POSITION_VAL(DMA2D_BGPFCCR_AM)    /*!< Required lef
 179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_FGPFCCR_ALPHA  (uint32_t)POSITION_VAL(DMA2D_FGPFCCR_ALPHA) /*!< Required lef
 181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_BGPFCCR_ALPHA  (uint32_t)POSITION_VAL(DMA2D_BGPFCCR_ALPHA) /*!< Required lef
 182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #define DMA2D_POSITION_NLR_PL         (uint32_t)POSITION_VAL(DMA2D_NLR_PL)        /*!< Required lef
 184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private variables ---------------------------------------------------------*/
 193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private constants ---------------------------------------------------------*/
 194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private macro -------------------------------------------------------------*/
 195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private function prototypes -----------------------------------------------*/
 196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @addtogroup DMA2D_Private_Functions_Prototypes
 197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
 200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
ARM GAS  /tmp/ccjIcGgN.s 			page 5


 202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Private functions ---------------------------------------------------------*/
 205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /* Exported functions --------------------------------------------------------*/
 206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions DMA2D Exported Functions
 207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group1 Initialization and de-initialization functions
 211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief   Initialization and Configuration functions
 212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
 213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim   
 214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
 215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                 ##### Initialization and Configuration functions #####
 216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================  
 217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Initialize and configure the DMA2D
 219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) De-initialize the DMA2D 
 220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
 222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Initialize the DMA2D according to the specified
 227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         parameters in the DMA2D_InitTypeDef and create the associated handle.
 228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
 233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** { 
  29              		.loc 1 233 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d == NULL)
  45              		.loc 1 235 0
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      return HAL_ERROR;
  49              		.loc 1 237 0
ARM GAS  /tmp/ccjIcGgN.s 			page 6


  50 000e 0123     		movs	r3, #1
  51 0010 67E0     		b	.L3
  52              	.L2:
 238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));
 242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_MODE(hdma2d->Init.Mode));
 243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CMODE(hdma2d->Init.ColorMode));
 244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(hdma2d->Init.OutputOffset));
 245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d->State == HAL_DMA2D_STATE_RESET)
  53              		.loc 1 246 0
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 93F85130 		ldrb	r3, [r3, #81]
  56 0018 DBB2     		uxtb	r3, r3
  57 001a 002B     		cmp	r3, #0
  58 001c 06D1     		bne	.L4
 247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Allocate lock resource and initialize it */
 249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->Lock = HAL_UNLOCKED;
  59              		.loc 1 249 0
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 0022     		movs	r2, #0
  62 0022 83F85020 		strb	r2, [r3, #80]
 250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Init the low level hardware */
 251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     HAL_DMA2D_MspInit(hdma2d);
  63              		.loc 1 251 0
  64 0026 7868     		ldr	r0, [r7, #4]
  65 0028 FFF7FEFF 		bl	HAL_DMA2D_MspInit
  66              	.L4:
 252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;  
  67              		.loc 1 255 0
  68 002c 7B68     		ldr	r3, [r7, #4]
  69 002e 0222     		movs	r2, #2
  70 0030 83F85120 		strb	r2, [r3, #81]
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D CR register configuration -------------------------------------------*/
 258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
  71              		.loc 1 258 0
  72 0034 7B68     		ldr	r3, [r7, #4]
  73 0036 1B68     		ldr	r3, [r3]
  74 0038 7A68     		ldr	r2, [r7, #4]
  75 003a 1268     		ldr	r2, [r2]
  76 003c 1268     		ldr	r2, [r2]
  77 003e 22F44031 		bic	r1, r2, #196608
  78 0042 7A68     		ldr	r2, [r7, #4]
  79 0044 5268     		ldr	r2, [r2, #4]
  80 0046 0A43     		orrs	r2, r2, r1
  81 0048 1A60     		str	r2, [r3]
 259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D OPFCCR register configuration ---------------------------------------*/
 261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
  82              		.loc 1 261 0
ARM GAS  /tmp/ccjIcGgN.s 			page 7


  83 004a 7B68     		ldr	r3, [r7, #4]
  84 004c 1B68     		ldr	r3, [r3]
  85 004e 7A68     		ldr	r2, [r7, #4]
  86 0050 1268     		ldr	r2, [r2]
  87 0052 526B     		ldr	r2, [r2, #52]
  88 0054 22F00701 		bic	r1, r2, #7
  89 0058 7A68     		ldr	r2, [r7, #4]
  90 005a 9268     		ldr	r2, [r2, #8]
  91 005c 0A43     		orrs	r2, r2, r1
  92 005e 5A63     		str	r2, [r3, #52]
 262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D OOR register configuration ------------------------------------------*/  
 264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);  
  93              		.loc 1 264 0
  94 0060 7B68     		ldr	r3, [r7, #4]
  95 0062 1A68     		ldr	r2, [r3]
  96 0064 7B68     		ldr	r3, [r7, #4]
  97 0066 1B68     		ldr	r3, [r3]
  98 0068 196C     		ldr	r1, [r3, #64]
  99 006a 204B     		ldr	r3, .L7
 100 006c 0B40     		ands	r3, r3, r1
 101 006e 7968     		ldr	r1, [r7, #4]
 102 0070 C968     		ldr	r1, [r1, #12]
 103 0072 0B43     		orrs	r3, r3, r1
 104 0074 1364     		str	r3, [r2, #64]
 265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_OPFCCR_AI)
 267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D OPFCCR AI fields setting (Output Alpha Inversion)*/
 268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_AI, (hdma2d->Init.AlphaInverted << DMA2D_POSITI
 105              		.loc 1 268 0
 106 0076 7B68     		ldr	r3, [r7, #4]
 107 0078 1B68     		ldr	r3, [r3]
 108 007a 7A68     		ldr	r2, [r7, #4]
 109 007c 1268     		ldr	r2, [r2]
 110 007e 526B     		ldr	r2, [r2, #52]
 111 0080 22F48011 		bic	r1, r2, #1048576
 112 0084 7A68     		ldr	r2, [r7, #4]
 113 0086 1069     		ldr	r0, [r2, #16]
 114 0088 4FF48012 		mov	r2, #1048576
 115 008c 7A61     		str	r2, [r7, #20]
 116              	.LBB42:
 117              	.LBB43:
 118              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
ARM GAS  /tmp/ccjIcGgN.s 			page 8


  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  /tmp/ccjIcGgN.s 			page 9


  72:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccjIcGgN.s 			page 10


 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjIcGgN.s 			page 11


 186:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccjIcGgN.s 			page 12


 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
ARM GAS  /tmp/ccjIcGgN.s 			page 13


 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
ARM GAS  /tmp/ccjIcGgN.s 			page 14


 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
ARM GAS  /tmp/ccjIcGgN.s 			page 15


 414:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjIcGgN.s 			page 16


 471:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:../../Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccjIcGgN.s 			page 17


 528:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 119              		.loc 2 531 0
 120 008e 7A69     		ldr	r2, [r7, #20]
 121              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 122 0090 92FAA2F2 		rbit r2, r2
 123              	@ 0 "" 2
 124              		.thumb
 125 0094 3A61     		str	r2, [r7, #16]
 532:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 533:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t s = 4 /*sizeof(v)*/ * 8 - 1; /* extra shift needed at end */
 534:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 536:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value; value >>= 1U)
 537:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 538:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 539:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 540:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 541:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 542:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 543:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 544:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 126              		.loc 2 544 0
 127 0096 3A69     		ldr	r2, [r7, #16]
 128              	.LBE43:
 129              	.LBE42:
 130              		.loc 1 268 0
 131 0098 B2FA82F2 		clz	r2, r2
 132 009c 00FA02F2 		lsl	r2, r0, r2
 133 00a0 0A43     		orrs	r2, r2, r1
 134 00a2 5A63     		str	r2, [r3, #52]
 269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* DMA2D_OPFCCR_AI */ 
 270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_OPFCCR_RBS) 
 272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_RBS,(hdma2d->Init.RedBlueSwap << DMA2D_POSITION
 135              		.loc 1 272 0
 136 00a4 7B68     		ldr	r3, [r7, #4]
 137 00a6 1B68     		ldr	r3, [r3]
 138 00a8 7A68     		ldr	r2, [r7, #4]
 139 00aa 1268     		ldr	r2, [r2]
 140 00ac 526B     		ldr	r2, [r2, #52]
 141 00ae 22F40011 		bic	r1, r2, #2097152
 142 00b2 7A68     		ldr	r2, [r7, #4]
 143 00b4 5069     		ldr	r0, [r2, #20]
 144 00b6 4FF40012 		mov	r2, #2097152
 145 00ba FA60     		str	r2, [r7, #12]
 146              	.LBB44:
 147              	.LBB45:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 148              		.loc 2 531 0
 149 00bc FA68     		ldr	r2, [r7, #12]
 150              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 151 00be 92FAA2F2 		rbit r2, r2
 152              	@ 0 "" 2
 153              		.thumb
ARM GAS  /tmp/ccjIcGgN.s 			page 18


 154 00c2 BA60     		str	r2, [r7, #8]
 155              		.loc 2 544 0
 156 00c4 BA68     		ldr	r2, [r7, #8]
 157              	.LBE45:
 158              	.LBE44:
 159              		.loc 1 272 0
 160 00c6 B2FA82F2 		clz	r2, r2
 161 00ca 00FA02F2 		lsl	r2, r0, r2
 162 00ce 0A43     		orrs	r2, r2, r1
 163 00d0 5A63     		str	r2, [r3, #52]
 273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* DMA2D_OPFCCR_RBS */
 274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Update error code */
 277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 164              		.loc 1 277 0
 165 00d2 7B68     		ldr	r3, [r7, #4]
 166 00d4 0022     		movs	r2, #0
 167 00d6 5A65     		str	r2, [r3, #84]
 278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_READY;
 168              		.loc 1 280 0
 169 00d8 7B68     		ldr	r3, [r7, #4]
 170 00da 0122     		movs	r2, #1
 171 00dc 83F85120 		strb	r2, [r3, #81]
 281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 172              		.loc 1 282 0
 173 00e0 0023     		movs	r3, #0
 174              	.L3:
 283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 175              		.loc 1 283 0
 176 00e2 1846     		mov	r0, r3
 177 00e4 1837     		adds	r7, r7, #24
 178              	.LCFI3:
 179              		.cfi_def_cfa_offset 8
 180 00e6 BD46     		mov	sp, r7
 181              	.LCFI4:
 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 00e8 80BD     		pop	{r7, pc}
 185              	.L8:
 186 00ea 00BF     		.align	2
 187              	.L7:
 188 00ec 00C0FFFF 		.word	-16384
 189              		.cfi_endproc
 190              	.LFE135:
 192              		.section	.text.HAL_DMA2D_DeInit,"ax",%progbits
 193              		.align	2
 194              		.global	HAL_DMA2D_DeInit
 195              		.thumb
 196              		.thumb_func
 198              	HAL_DMA2D_DeInit:
 199              	.LFB136:
 284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccjIcGgN.s 			page 19


 286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Deinitializes the DMA2D peripheral registers to their default reset
 287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         values.
 288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
 291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
 294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 200              		.loc 1 294 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 8
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204 0000 80B5     		push	{r7, lr}
 205              	.LCFI5:
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              	.LCFI6:
 211              		.cfi_def_cfa_offset 16
 212 0004 00AF     		add	r7, sp, #0
 213              	.LCFI7:
 214              		.cfi_def_cfa_register 7
 215 0006 7860     		str	r0, [r7, #4]
 295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the DMA2D peripheral state */
 297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d == NULL)
 216              		.loc 1 297 0
 217 0008 7B68     		ldr	r3, [r7, #4]
 218 000a 002B     		cmp	r3, #0
 219 000c 01D1     		bne	.L10
 298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      return HAL_ERROR;
 220              		.loc 1 299 0
 221 000e 0123     		movs	r3, #1
 222 0010 5BE0     		b	.L11
 223              	.L10:
 300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Before aborting any DMA2D transfer or CLUT loading, check
 303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      first whether or not DMA2D clock is enabled */
 304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 224              		.loc 1 304 0
 225 0012 304B     		ldr	r3, .L15
 226 0014 1B6B     		ldr	r3, [r3, #48]
 227 0016 03F40003 		and	r3, r3, #8388608
 228 001a 002B     		cmp	r3, #0
 229 001c 2ED0     		beq	.L12
 305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Abort DMA2D transfer if any */
 307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 230              		.loc 1 307 0
 231 001e 7B68     		ldr	r3, [r7, #4]
 232 0020 1B68     		ldr	r3, [r3]
 233 0022 1B68     		ldr	r3, [r3]
 234 0024 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccjIcGgN.s 			page 20


 235 0028 002B     		cmp	r3, #0
 236 002a 07D0     		beq	.L13
 308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 237              		.loc 1 309 0
 238 002c 7868     		ldr	r0, [r7, #4]
 239 002e FFF7FEFF 		bl	HAL_DMA2D_Abort
 240 0032 0346     		mov	r3, r0
 241 0034 002B     		cmp	r3, #0
 242 0036 21D0     		beq	.L12
 310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Issue when aborting DMA2D transfer */       
 312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         return HAL_ERROR;
 243              		.loc 1 312 0
 244 0038 0123     		movs	r3, #1
 245 003a 46E0     		b	.L11
 246              	.L13:
 313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else
 316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Abort background CLUT loading if any */
 318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 247              		.loc 1 318 0
 248 003c 7B68     		ldr	r3, [r7, #4]
 249 003e 1B68     		ldr	r3, [r3]
 250 0040 5B6A     		ldr	r3, [r3, #36]
 251 0042 03F02003 		and	r3, r3, #32
 252 0046 002B     		cmp	r3, #0
 253 0048 08D0     		beq	.L14
 319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {  
 320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0) != HAL_OK)        
 254              		.loc 1 320 0
 255 004a 7868     		ldr	r0, [r7, #4]
 256 004c 0021     		movs	r1, #0
 257 004e FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 258 0052 0346     		mov	r3, r0
 259 0054 002B     		cmp	r3, #0
 260 0056 11D0     		beq	.L12
 321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Issue when aborting background CLUT loading */     
 323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           return HAL_ERROR;
 261              		.loc 1 323 0
 262 0058 0123     		movs	r3, #1
 263 005a 36E0     		b	.L11
 264              	.L14:
 324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       else
 327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Abort foreground CLUT loading if any */
 329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 265              		.loc 1 329 0
 266 005c 7B68     		ldr	r3, [r7, #4]
 267 005e 1B68     		ldr	r3, [r3]
 268 0060 DB69     		ldr	r3, [r3, #28]
 269 0062 03F02003 		and	r3, r3, #32
ARM GAS  /tmp/ccjIcGgN.s 			page 21


 270 0066 002B     		cmp	r3, #0
 271 0068 08D0     		beq	.L12
 330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
 331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1) != HAL_OK)  
 272              		.loc 1 331 0
 273 006a 7868     		ldr	r0, [r7, #4]
 274 006c 0121     		movs	r1, #1
 275 006e FFF7FEFF 		bl	HAL_DMA2D_CLUTLoading_Abort
 276 0072 0346     		mov	r3, r0
 277 0074 002B     		cmp	r3, #0
 278 0076 01D0     		beq	.L12
 332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           {
 333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             /* Issue when aborting foreground CLUT loading */     
 334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             return HAL_ERROR;
 279              		.loc 1 334 0
 280 0078 0123     		movs	r3, #1
 281 007a 26E0     		b	.L11
 282              	.L12:
 335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           }        
 336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
 337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
 338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             
 342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Carry on with de-initialization of low level hardware */
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   HAL_DMA2D_MspDeInit(hdma2d);
 283              		.loc 1 343 0
 284 007c 7868     		ldr	r0, [r7, #4]
 285 007e FFF7FEFF 		bl	HAL_DMA2D_MspDeInit
 344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Reset DMA2D control registers*/
 346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->CR = 0;
 286              		.loc 1 346 0
 287 0082 7B68     		ldr	r3, [r7, #4]
 288 0084 1B68     		ldr	r3, [r3]
 289 0086 0022     		movs	r2, #0
 290 0088 1A60     		str	r2, [r3]
 347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->FGOR = 0;
 291              		.loc 1 347 0
 292 008a 7B68     		ldr	r3, [r7, #4]
 293 008c 1B68     		ldr	r3, [r3]
 294 008e 0022     		movs	r2, #0
 295 0090 1A61     		str	r2, [r3, #16]
 348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->BGOR = 0;  
 296              		.loc 1 348 0
 297 0092 7B68     		ldr	r3, [r7, #4]
 298 0094 1B68     		ldr	r3, [r3]
 299 0096 0022     		movs	r2, #0
 300 0098 9A61     		str	r2, [r3, #24]
 349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->FGPFCCR = 0;
 301              		.loc 1 349 0
 302 009a 7B68     		ldr	r3, [r7, #4]
 303 009c 1B68     		ldr	r3, [r3]
 304 009e 0022     		movs	r2, #0
 305 00a0 DA61     		str	r2, [r3, #28]
 350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->BGPFCCR = 0;  
ARM GAS  /tmp/ccjIcGgN.s 			page 22


 306              		.loc 1 350 0
 307 00a2 7B68     		ldr	r3, [r7, #4]
 308 00a4 1B68     		ldr	r3, [r3]
 309 00a6 0022     		movs	r2, #0
 310 00a8 5A62     		str	r2, [r3, #36]
 351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->Instance->OPFCCR = 0;
 311              		.loc 1 351 0
 312 00aa 7B68     		ldr	r3, [r7, #4]
 313 00ac 1B68     		ldr	r3, [r3]
 314 00ae 0022     		movs	r2, #0
 315 00b0 5A63     		str	r2, [r3, #52]
 352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Update error code */
 354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 316              		.loc 1 354 0
 317 00b2 7B68     		ldr	r3, [r7, #4]
 318 00b4 0022     		movs	r2, #0
 319 00b6 5A65     		str	r2, [r3, #84]
 355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
 357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State  = HAL_DMA2D_STATE_RESET;
 320              		.loc 1 357 0
 321 00b8 7B68     		ldr	r3, [r7, #4]
 322 00ba 0022     		movs	r2, #0
 323 00bc 83F85120 		strb	r2, [r3, #81]
 358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Release Lock */
 360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 324              		.loc 1 360 0
 325 00c0 7B68     		ldr	r3, [r7, #4]
 326 00c2 0022     		movs	r2, #0
 327 00c4 83F85020 		strb	r2, [r3, #80]
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 328              		.loc 1 362 0
 329 00c8 0023     		movs	r3, #0
 330              	.L11:
 363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 331              		.loc 1 363 0
 332 00ca 1846     		mov	r0, r3
 333 00cc 0837     		adds	r7, r7, #8
 334              	.LCFI8:
 335              		.cfi_def_cfa_offset 8
 336 00ce BD46     		mov	sp, r7
 337              	.LCFI9:
 338              		.cfi_def_cfa_register 13
 339              		@ sp needed
 340 00d0 80BD     		pop	{r7, pc}
 341              	.L16:
 342 00d2 00BF     		.align	2
 343              	.L15:
 344 00d4 00380240 		.word	1073887232
 345              		.cfi_endproc
 346              	.LFE136:
 348              		.section	.text.HAL_DMA2D_MspInit,"ax",%progbits
 349              		.align	2
 350              		.weak	HAL_DMA2D_MspInit
ARM GAS  /tmp/ccjIcGgN.s 			page 23


 351              		.thumb
 352              		.thumb_func
 354              	HAL_DMA2D_MspInit:
 355              	.LFB137:
 364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Initializes the DMA2D MSP.
 367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
 370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
 372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 356              		.loc 1 372 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              	.LCFI10:
 363              		.cfi_def_cfa_offset 4
 364              		.cfi_offset 7, -4
 365 0002 83B0     		sub	sp, sp, #12
 366              	.LCFI11:
 367              		.cfi_def_cfa_offset 16
 368 0004 00AF     		add	r7, sp, #0
 369              	.LCFI12:
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
 373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_MspInit can be implemented in the user file.
 378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
 379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 372              		.loc 1 379 0
 373 0008 0C37     		adds	r7, r7, #12
 374              	.LCFI13:
 375              		.cfi_def_cfa_offset 4
 376 000a BD46     		mov	sp, r7
 377              	.LCFI14:
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 000c 5DF8047B 		ldr	r7, [sp], #4
 381              	.LCFI15:
 382              		.cfi_restore 7
 383              		.cfi_def_cfa_offset 0
 384 0010 7047     		bx	lr
 385              		.cfi_endproc
 386              	.LFE137:
 388 0012 00BF     		.section	.text.HAL_DMA2D_MspDeInit,"ax",%progbits
 389              		.align	2
 390              		.weak	HAL_DMA2D_MspDeInit
 391              		.thumb
 392              		.thumb_func
 394              	HAL_DMA2D_MspDeInit:
ARM GAS  /tmp/ccjIcGgN.s 			page 24


 395              	.LFB138:
 380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  DeInitializes the DMA2D MSP.
 383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
 385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
 386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* hdma2d)
 388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 396              		.loc 1 388 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 8
 399              		@ frame_needed = 1, uses_anonymous_args = 0
 400              		@ link register save eliminated.
 401 0000 80B4     		push	{r7}
 402              	.LCFI16:
 403              		.cfi_def_cfa_offset 4
 404              		.cfi_offset 7, -4
 405 0002 83B0     		sub	sp, sp, #12
 406              	.LCFI17:
 407              		.cfi_def_cfa_offset 16
 408 0004 00AF     		add	r7, sp, #0
 409              	.LCFI18:
 410              		.cfi_def_cfa_register 7
 411 0006 7860     		str	r0, [r7, #4]
 389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
 390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
 391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_MspDeInit can be implemented in the user file.
 394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
 395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 412              		.loc 1 395 0
 413 0008 0C37     		adds	r7, r7, #12
 414              	.LCFI19:
 415              		.cfi_def_cfa_offset 4
 416 000a BD46     		mov	sp, r7
 417              	.LCFI20:
 418              		.cfi_def_cfa_register 13
 419              		@ sp needed
 420 000c 5DF8047B 		ldr	r7, [sp], #4
 421              	.LCFI21:
 422              		.cfi_restore 7
 423              		.cfi_def_cfa_offset 0
 424 0010 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE138:
 428 0012 00BF     		.section	.text.HAL_DMA2D_Start,"ax",%progbits
 429              		.align	2
 430              		.global	HAL_DMA2D_Start
 431              		.thumb
 432              		.thumb_func
 434              	HAL_DMA2D_Start:
 435              	.LFB139:
 396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccjIcGgN.s 			page 25


 398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
 399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group2 IO operation functions
 403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief   IO operation functions  
 404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim   
 406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
 407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                       #####  IO operation functions  #####
 408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================  
 409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
 410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then 
 411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           start the DMA2D transfer.
 412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address 
 413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer.
 414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the pdata, destination address and data size then 
 415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           start the DMA2D transfer with interrupt.
 416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the source for foreground and background, destination address 
 417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           and data size then start a MultiBuffer DMA2D transfer with interrupt.
 418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Abort DMA2D transfer.
 419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Suspend DMA2D transfer.
 420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Resume DMA2D transfer. 
 421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Enable CLUT transfer.      
 422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in polling mode.
 423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure CLUT loading then start transfer in interrupt mode.
 424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Abort DMA2D CLUT loading.
 425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Suspend DMA2D CLUT loading.
 426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Resume DMA2D CLUT loading. 
 427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Poll for transfer complete.
 428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) handle DMA2D interrupt request.
 429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Transfer watermark callback.
 430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) CLUT Transfer Complete callback.
 431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
 432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
 433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
 434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
 435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer.
 439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:     Pointer to a DMA2D_HandleTypeDef structure that contains
 440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.  
 441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  pdata:      Configure the source memory Buffer address if 
 442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     Memory-to-Memory or Memory-to-Memory with pixel format 
 443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure 
 444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress: The destination memory Buffer address.
 446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width:      The width of data to be transferred from source to destination (expressed i
 447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height:     The height of data to be transferred from source to destination (expressed 
 448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress,
 451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 436              		.loc 1 451 0
 437              		.cfi_startproc
 438              		@ args = 4, pretend = 0, frame = 16
ARM GAS  /tmp/ccjIcGgN.s 			page 26


 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440 0000 80B5     		push	{r7, lr}
 441              	.LCFI22:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 86B0     		sub	sp, sp, #24
 446              	.LCFI23:
 447              		.cfi_def_cfa_offset 32
 448 0004 02AF     		add	r7, sp, #8
 449              	.LCFI24:
 450              		.cfi_def_cfa 7, 24
 451 0006 F860     		str	r0, [r7, #12]
 452 0008 B960     		str	r1, [r7, #8]
 453 000a 7A60     		str	r2, [r7, #4]
 454 000c 3B60     		str	r3, [r7]
 452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 455              		.loc 1 457 0
 456 000e FB68     		ldr	r3, [r7, #12]
 457 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 458 0014 012B     		cmp	r3, #1
 459 0016 01D1     		bne	.L20
 460              		.loc 1 457 0 is_stmt 0 discriminator 1
 461 0018 0223     		movs	r3, #2
 462 001a 18E0     		b	.L21
 463              	.L20:
 464              		.loc 1 457 0 discriminator 2
 465 001c FB68     		ldr	r3, [r7, #12]
 466 001e 0122     		movs	r2, #1
 467 0020 83F85020 		strb	r2, [r3, #80]
 458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 468              		.loc 1 460 0 is_stmt 1 discriminator 2
 469 0024 FB68     		ldr	r3, [r7, #12]
 470 0026 0222     		movs	r2, #2
 471 0028 83F85120 		strb	r2, [r3, #81]
 461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 472              		.loc 1 463 0 discriminator 2
 473 002c BB69     		ldr	r3, [r7, #24]
 474 002e 0093     		str	r3, [sp]
 475 0030 F868     		ldr	r0, [r7, #12]
 476 0032 B968     		ldr	r1, [r7, #8]
 477 0034 7A68     		ldr	r2, [r7, #4]
 478 0036 3B68     		ldr	r3, [r7]
 479 0038 FFF7FEFF 		bl	DMA2D_SetConfig
 464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 480              		.loc 1 466 0 discriminator 2
ARM GAS  /tmp/ccjIcGgN.s 			page 27


 481 003c FB68     		ldr	r3, [r7, #12]
 482 003e 1B68     		ldr	r3, [r3]
 483 0040 FA68     		ldr	r2, [r7, #12]
 484 0042 1268     		ldr	r2, [r2]
 485 0044 1268     		ldr	r2, [r2]
 486 0046 42F00102 		orr	r2, r2, #1
 487 004a 1A60     		str	r2, [r3]
 467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 488              		.loc 1 468 0 discriminator 2
 489 004c 0023     		movs	r3, #0
 490              	.L21:
 469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 491              		.loc 1 469 0
 492 004e 1846     		mov	r0, r3
 493 0050 1037     		adds	r7, r7, #16
 494              	.LCFI25:
 495              		.cfi_def_cfa_offset 8
 496 0052 BD46     		mov	sp, r7
 497              	.LCFI26:
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 0054 80BD     		pop	{r7, pc}
 501              		.cfi_endproc
 502              	.LFE139:
 504 0056 00BF     		.section	.text.HAL_DMA2D_Start_IT,"ax",%progbits
 505              		.align	2
 506              		.global	HAL_DMA2D_Start_IT
 507              		.thumb
 508              		.thumb_func
 510              	HAL_DMA2D_Start_IT:
 511              	.LFB140:
 470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the DMA2D Transfer with interrupt enabled.
 473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:     Pointer to a DMA2D_HandleTypeDef structure that contains
 474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.  
 475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  pdata:      Configure the source memory Buffer address if 
 476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the Memory-to-Memory or Memory-to-Memory with pixel format 
 477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     conversion mode is selected, or configure 
 478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the color value if Register-to-Memory mode is selected.
 479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress: The destination memory Buffer address.
 480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width:      The width of data to be transferred from source to destination (expressed i
 481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height:     The height of data to be transferred from source to destination (expressed 
 482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddre
 485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 512              		.loc 1 485 0
 513              		.cfi_startproc
 514              		@ args = 4, pretend = 0, frame = 16
 515              		@ frame_needed = 1, uses_anonymous_args = 0
 516 0000 80B5     		push	{r7, lr}
 517              	.LCFI27:
 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
ARM GAS  /tmp/ccjIcGgN.s 			page 28


 521 0002 86B0     		sub	sp, sp, #24
 522              	.LCFI28:
 523              		.cfi_def_cfa_offset 32
 524 0004 02AF     		add	r7, sp, #8
 525              	.LCFI29:
 526              		.cfi_def_cfa 7, 24
 527 0006 F860     		str	r0, [r7, #12]
 528 0008 B960     		str	r1, [r7, #8]
 529 000a 7A60     		str	r2, [r7, #4]
 530 000c 3B60     		str	r3, [r7]
 486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 531              		.loc 1 491 0
 532 000e FB68     		ldr	r3, [r7, #12]
 533 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 534 0014 012B     		cmp	r3, #1
 535 0016 01D1     		bne	.L23
 536              		.loc 1 491 0 is_stmt 0 discriminator 1
 537 0018 0223     		movs	r3, #2
 538 001a 20E0     		b	.L24
 539              	.L23:
 540              		.loc 1 491 0 discriminator 2
 541 001c FB68     		ldr	r3, [r7, #12]
 542 001e 0122     		movs	r2, #1
 543 0020 83F85020 		strb	r2, [r3, #80]
 492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 544              		.loc 1 494 0 is_stmt 1 discriminator 2
 545 0024 FB68     		ldr	r3, [r7, #12]
 546 0026 0222     		movs	r2, #2
 547 0028 83F85120 		strb	r2, [r3, #81]
 495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 548              		.loc 1 497 0 discriminator 2
 549 002c BB69     		ldr	r3, [r7, #24]
 550 002e 0093     		str	r3, [sp]
 551 0030 F868     		ldr	r0, [r7, #12]
 552 0032 B968     		ldr	r1, [r7, #8]
 553 0034 7A68     		ldr	r2, [r7, #4]
 554 0036 3B68     		ldr	r3, [r7]
 555 0038 FFF7FEFF 		bl	DMA2D_SetConfig
 498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 556              		.loc 1 500 0 discriminator 2
 557 003c FB68     		ldr	r3, [r7, #12]
 558 003e 1B68     		ldr	r3, [r3]
 559 0040 FA68     		ldr	r2, [r7, #12]
 560 0042 1268     		ldr	r2, [r2]
 561 0044 1268     		ldr	r2, [r2]
 562 0046 42F40C52 		orr	r2, r2, #8960
ARM GAS  /tmp/ccjIcGgN.s 			page 29


 563 004a 1A60     		str	r2, [r3]
 501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 564              		.loc 1 503 0 discriminator 2
 565 004c FB68     		ldr	r3, [r7, #12]
 566 004e 1B68     		ldr	r3, [r3]
 567 0050 FA68     		ldr	r2, [r7, #12]
 568 0052 1268     		ldr	r2, [r2]
 569 0054 1268     		ldr	r2, [r2]
 570 0056 42F00102 		orr	r2, r2, #1
 571 005a 1A60     		str	r2, [r3]
 504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 505:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 572              		.loc 1 505 0 discriminator 2
 573 005c 0023     		movs	r3, #0
 574              	.L24:
 506:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 575              		.loc 1 506 0
 576 005e 1846     		mov	r0, r3
 577 0060 1037     		adds	r7, r7, #16
 578              	.LCFI30:
 579              		.cfi_def_cfa_offset 8
 580 0062 BD46     		mov	sp, r7
 581              	.LCFI31:
 582              		.cfi_def_cfa_register 13
 583              		@ sp needed
 584 0064 80BD     		pop	{r7, pc}
 585              		.cfi_endproc
 586              	.LFE140:
 588 0066 00BF     		.section	.text.HAL_DMA2D_BlendingStart,"ax",%progbits
 589              		.align	2
 590              		.global	HAL_DMA2D_BlendingStart
 591              		.thumb
 592              		.thumb_func
 594              	HAL_DMA2D_BlendingStart:
 595              	.LFB141:
 507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer.
 510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:      Pointer to a DMA2D_HandleTypeDef structure that contains
 511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                      the configuration information for the DMA2D.  
 512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress1: The source memory Buffer address for the foreground layer.
 513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress2: The source memory Buffer address for the background layer.
 514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress:  The destination memory Buffer address.
 515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width:       The width of data to be transferred from source to destination (expressed 
 516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height:      The height of data to be transferred from source to destination (expressed
 517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 518:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 519:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32
 520:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 596              		.loc 1 520 0
 597              		.cfi_startproc
 598              		@ args = 8, pretend = 0, frame = 16
 599              		@ frame_needed = 1, uses_anonymous_args = 0
 600 0000 80B5     		push	{r7, lr}
 601              	.LCFI32:
ARM GAS  /tmp/ccjIcGgN.s 			page 30


 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 7, -8
 604              		.cfi_offset 14, -4
 605 0002 86B0     		sub	sp, sp, #24
 606              	.LCFI33:
 607              		.cfi_def_cfa_offset 32
 608 0004 02AF     		add	r7, sp, #8
 609              	.LCFI34:
 610              		.cfi_def_cfa 7, 24
 611 0006 F860     		str	r0, [r7, #12]
 612 0008 B960     		str	r1, [r7, #8]
 613 000a 7A60     		str	r2, [r7, #4]
 614 000c 3B60     		str	r3, [r7]
 521:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 522:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 523:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));  
 524:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 525:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 526:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 615              		.loc 1 526 0
 616 000e FB68     		ldr	r3, [r7, #12]
 617 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 618 0014 012B     		cmp	r3, #1
 619 0016 01D1     		bne	.L26
 620              		.loc 1 526 0 is_stmt 0 discriminator 1
 621 0018 0223     		movs	r3, #2
 622 001a 1CE0     		b	.L27
 623              	.L26:
 624              		.loc 1 526 0 discriminator 2
 625 001c FB68     		ldr	r3, [r7, #12]
 626 001e 0122     		movs	r2, #1
 627 0020 83F85020 		strb	r2, [r3, #80]
 527:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 528:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 529:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY; 
 628              		.loc 1 529 0 is_stmt 1 discriminator 2
 629 0024 FB68     		ldr	r3, [r7, #12]
 630 0026 0222     		movs	r2, #2
 631 0028 83F85120 		strb	r2, [r3, #81]
 530:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 531:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D Stream source2 address */
 532:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 632              		.loc 1 532 0 discriminator 2
 633 002c FB68     		ldr	r3, [r7, #12]
 634 002e 1B68     		ldr	r3, [r3]
 635 0030 7A68     		ldr	r2, [r7, #4]
 636 0032 5A61     		str	r2, [r3, #20]
 533:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 637              		.loc 1 535 0 discriminator 2
 638 0034 FB69     		ldr	r3, [r7, #28]
 639 0036 0093     		str	r3, [sp]
 640 0038 F868     		ldr	r0, [r7, #12]
 641 003a B968     		ldr	r1, [r7, #8]
 642 003c 3A68     		ldr	r2, [r7]
 643 003e BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccjIcGgN.s 			page 31


 644 0040 FFF7FEFF 		bl	DMA2D_SetConfig
 536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 645              		.loc 1 538 0 discriminator 2
 646 0044 FB68     		ldr	r3, [r7, #12]
 647 0046 1B68     		ldr	r3, [r3]
 648 0048 FA68     		ldr	r2, [r7, #12]
 649 004a 1268     		ldr	r2, [r2]
 650 004c 1268     		ldr	r2, [r2]
 651 004e 42F00102 		orr	r2, r2, #1
 652 0052 1A60     		str	r2, [r3]
 539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 653              		.loc 1 540 0 discriminator 2
 654 0054 0023     		movs	r3, #0
 655              	.L27:
 541:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 656              		.loc 1 541 0
 657 0056 1846     		mov	r0, r3
 658 0058 1037     		adds	r7, r7, #16
 659              	.LCFI35:
 660              		.cfi_def_cfa_offset 8
 661 005a BD46     		mov	sp, r7
 662              	.LCFI36:
 663              		.cfi_def_cfa_register 13
 664              		@ sp needed
 665 005c 80BD     		pop	{r7, pc}
 666              		.cfi_endproc
 667              	.LFE141:
 669 005e 00BF     		.section	.text.HAL_DMA2D_BlendingStart_IT,"ax",%progbits
 670              		.align	2
 671              		.global	HAL_DMA2D_BlendingStart_IT
 672              		.thumb
 673              		.thumb_func
 675              	HAL_DMA2D_BlendingStart_IT:
 676              	.LFB142:
 542:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 543:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 544:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start the multi-source DMA2D Transfer with interrupt enabled.
 545:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:     Pointer to a DMA2D_HandleTypeDef structure that contains
 546:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the DMA2D.  
 547:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress1: The source memory Buffer address for the foreground layer.
 548:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  SrcAddress2: The source memory Buffer address for the background layer.
 549:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress:  The destination memory Buffer address.
 550:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width:       The width of data to be transferred from source to destination (expressed 
 551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height:      The height of data to be transferred from source to destination (expressed
 552:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 553:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 554:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uin
 555:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 677              		.loc 1 555 0
 678              		.cfi_startproc
 679              		@ args = 8, pretend = 0, frame = 16
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681 0000 80B5     		push	{r7, lr}
 682              	.LCFI37:
ARM GAS  /tmp/ccjIcGgN.s 			page 32


 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 86B0     		sub	sp, sp, #24
 687              	.LCFI38:
 688              		.cfi_def_cfa_offset 32
 689 0004 02AF     		add	r7, sp, #8
 690              	.LCFI39:
 691              		.cfi_def_cfa 7, 24
 692 0006 F860     		str	r0, [r7, #12]
 693 0008 B960     		str	r1, [r7, #8]
 694 000a 7A60     		str	r2, [r7, #4]
 695 000c 3B60     		str	r3, [r7]
 556:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 557:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINE(Height));
 558:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_PIXEL(Width));
 559:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 560:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 561:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 696              		.loc 1 561 0
 697 000e FB68     		ldr	r3, [r7, #12]
 698 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 699 0014 012B     		cmp	r3, #1
 700 0016 01D1     		bne	.L29
 701              		.loc 1 561 0 is_stmt 0 discriminator 1
 702 0018 0223     		movs	r3, #2
 703 001a 24E0     		b	.L30
 704              	.L29:
 705              		.loc 1 561 0 discriminator 2
 706 001c FB68     		ldr	r3, [r7, #12]
 707 001e 0122     		movs	r2, #1
 708 0020 83F85020 		strb	r2, [r3, #80]
 562:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 563:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 564:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 709              		.loc 1 564 0 is_stmt 1 discriminator 2
 710 0024 FB68     		ldr	r3, [r7, #12]
 711 0026 0222     		movs	r2, #2
 712 0028 83F85120 		strb	r2, [r3, #81]
 565:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  
 566:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D Stream source2 address */
 567:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 713              		.loc 1 567 0 discriminator 2
 714 002c FB68     		ldr	r3, [r7, #12]
 715 002e 1B68     		ldr	r3, [r3]
 716 0030 7A68     		ldr	r2, [r7, #4]
 717 0032 5A61     		str	r2, [r3, #20]
 568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the source, destination address and the data size */
 570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 718              		.loc 1 570 0 discriminator 2
 719 0034 FB69     		ldr	r3, [r7, #28]
 720 0036 0093     		str	r3, [sp]
 721 0038 F868     		ldr	r0, [r7, #12]
 722 003a B968     		ldr	r1, [r7, #8]
 723 003c 3A68     		ldr	r2, [r7]
 724 003e BB69     		ldr	r3, [r7, #24]
ARM GAS  /tmp/ccjIcGgN.s 			page 33


 725 0040 FFF7FEFF 		bl	DMA2D_SetConfig
 571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 572:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the transfer complete, transfer error and configuration error interrupts */
 573:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 726              		.loc 1 573 0 discriminator 2
 727 0044 FB68     		ldr	r3, [r7, #12]
 728 0046 1B68     		ldr	r3, [r3]
 729 0048 FA68     		ldr	r2, [r7, #12]
 730 004a 1268     		ldr	r2, [r2]
 731 004c 1268     		ldr	r2, [r2]
 732 004e 42F40C52 		orr	r2, r2, #8960
 733 0052 1A60     		str	r2, [r3]
 574:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 575:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Enable the Peripheral */
 576:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_ENABLE(hdma2d);
 734              		.loc 1 576 0 discriminator 2
 735 0054 FB68     		ldr	r3, [r7, #12]
 736 0056 1B68     		ldr	r3, [r3]
 737 0058 FA68     		ldr	r2, [r7, #12]
 738 005a 1268     		ldr	r2, [r2]
 739 005c 1268     		ldr	r2, [r2]
 740 005e 42F00102 		orr	r2, r2, #1
 741 0062 1A60     		str	r2, [r3]
 577:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 578:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 742              		.loc 1 578 0 discriminator 2
 743 0064 0023     		movs	r3, #0
 744              	.L30:
 579:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 745              		.loc 1 579 0
 746 0066 1846     		mov	r0, r3
 747 0068 1037     		adds	r7, r7, #16
 748              	.LCFI40:
 749              		.cfi_def_cfa_offset 8
 750 006a BD46     		mov	sp, r7
 751              	.LCFI41:
 752              		.cfi_def_cfa_register 13
 753              		@ sp needed
 754 006c 80BD     		pop	{r7, pc}
 755              		.cfi_endproc
 756              	.LFE142:
 758 006e 00BF     		.section	.text.HAL_DMA2D_Abort,"ax",%progbits
 759              		.align	2
 760              		.global	HAL_DMA2D_Abort
 761              		.thumb
 762              		.thumb_func
 764              	HAL_DMA2D_Abort:
 765              	.LFB143:
 580:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 582:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D Transfer.
 583:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d : pointer to a DMA2D_HandleTypeDef structure that contains
 584:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
 585:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 586:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 587:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
 588:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
ARM GAS  /tmp/ccjIcGgN.s 			page 34


 766              		.loc 1 588 0
 767              		.cfi_startproc
 768              		@ args = 0, pretend = 0, frame = 16
 769              		@ frame_needed = 1, uses_anonymous_args = 0
 770 0000 80B5     		push	{r7, lr}
 771              	.LCFI42:
 772              		.cfi_def_cfa_offset 8
 773              		.cfi_offset 7, -8
 774              		.cfi_offset 14, -4
 775 0002 84B0     		sub	sp, sp, #16
 776              	.LCFI43:
 777              		.cfi_def_cfa_offset 24
 778 0004 00AF     		add	r7, sp, #0
 779              	.LCFI44:
 780              		.cfi_def_cfa_register 7
 781 0006 7860     		str	r0, [r7, #4]
 589:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart = 0;
 782              		.loc 1 589 0
 783 0008 0023     		movs	r3, #0
 784 000a FB60     		str	r3, [r7, #12]
 590:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 591:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Abort the DMA2D transfer */
 592:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 593:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no 
 594:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      effect on START bitvalue) */
 595:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 785              		.loc 1 595 0
 786 000c 7B68     		ldr	r3, [r7, #4]
 787 000e 1B68     		ldr	r3, [r3]
 788 0010 7A68     		ldr	r2, [r7, #4]
 789 0012 1268     		ldr	r2, [r2]
 790 0014 1268     		ldr	r2, [r2]
 791 0016 22F00502 		bic	r2, r2, #5
 792 001a 42F00402 		orr	r2, r2, #4
 793 001e 1A60     		str	r2, [r3]
 596:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 597:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
 598:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 794              		.loc 1 598 0
 795 0020 FFF7FEFF 		bl	HAL_GetTick
 796 0024 F860     		str	r0, [r7, #12]
 599:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 600:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively disabled */
 601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while((hdma2d->Instance->CR & DMA2D_CR_START) != RESET)
 797              		.loc 1 601 0
 798 0026 17E0     		b	.L32
 799              	.L34:
 602:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 603:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 800              		.loc 1 603 0
 801 0028 FFF7FEFF 		bl	HAL_GetTick
 802 002c 0246     		mov	r2, r0
 803 002e FB68     		ldr	r3, [r7, #12]
 804 0030 D31A     		subs	r3, r2, r3
 805 0032 B3F57A7F 		cmp	r3, #1000
 806 0036 0FD9     		bls	.L32
 604:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
ARM GAS  /tmp/ccjIcGgN.s 			page 35


 605:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
 606:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 807              		.loc 1 606 0
 808 0038 7B68     		ldr	r3, [r7, #4]
 809 003a 5B6D     		ldr	r3, [r3, #84]
 810 003c 43F02002 		orr	r2, r3, #32
 811 0040 7B68     		ldr	r3, [r7, #4]
 812 0042 5A65     		str	r2, [r3, #84]
 607:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 608:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 609:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 813              		.loc 1 609 0
 814 0044 7B68     		ldr	r3, [r7, #4]
 815 0046 0322     		movs	r2, #3
 816 0048 83F85120 		strb	r2, [r3, #81]
 610:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 611:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
 612:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 817              		.loc 1 612 0
 818 004c 7B68     		ldr	r3, [r7, #4]
 819 004e 0022     		movs	r2, #0
 820 0050 83F85020 		strb	r2, [r3, #80]
 613:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 614:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 821              		.loc 1 614 0
 822 0054 0323     		movs	r3, #3
 823 0056 17E0     		b	.L33
 824              	.L32:
 601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 825              		.loc 1 601 0
 826 0058 7B68     		ldr	r3, [r7, #4]
 827 005a 1B68     		ldr	r3, [r3]
 828 005c 1B68     		ldr	r3, [r3]
 829 005e 03F00103 		and	r3, r3, #1
 830 0062 002B     		cmp	r3, #0
 831 0064 E0D1     		bne	.L34
 615:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 616:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 617:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 618:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
 619:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);  
 832              		.loc 1 619 0
 833 0066 7B68     		ldr	r3, [r7, #4]
 834 0068 1B68     		ldr	r3, [r3]
 835 006a 7A68     		ldr	r2, [r7, #4]
 836 006c 1268     		ldr	r2, [r2]
 837 006e 1268     		ldr	r2, [r2]
 838 0070 22F40C52 		bic	r2, r2, #8960
 839 0074 1A60     		str	r2, [r3]
 620:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 621:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
 622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 840              		.loc 1 622 0
 841 0076 7B68     		ldr	r3, [r7, #4]
 842 0078 0122     		movs	r2, #1
 843 007a 83F85120 		strb	r2, [r3, #81]
 623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
ARM GAS  /tmp/ccjIcGgN.s 			page 36


 624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
 625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);  
 844              		.loc 1 625 0
 845 007e 7B68     		ldr	r3, [r7, #4]
 846 0080 0022     		movs	r2, #0
 847 0082 83F85020 		strb	r2, [r3, #80]
 626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 848              		.loc 1 627 0
 849 0086 0023     		movs	r3, #0
 850              	.L33:
 628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 851              		.loc 1 628 0
 852 0088 1846     		mov	r0, r3
 853 008a 1037     		adds	r7, r7, #16
 854              	.LCFI45:
 855              		.cfi_def_cfa_offset 8
 856 008c BD46     		mov	sp, r7
 857              	.LCFI46:
 858              		.cfi_def_cfa_register 13
 859              		@ sp needed
 860 008e 80BD     		pop	{r7, pc}
 861              		.cfi_endproc
 862              	.LFE143:
 864              		.section	.text.HAL_DMA2D_Suspend,"ax",%progbits
 865              		.align	2
 866              		.global	HAL_DMA2D_Suspend
 867              		.thumb
 868              		.thumb_func
 870              	HAL_DMA2D_Suspend:
 871              	.LFB144:
 629:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 630:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 631:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D Transfer.
 632:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 633:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D. 
 634:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 635:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 636:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Suspend(DMA2D_HandleTypeDef *hdma2d)
 637:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 872              		.loc 1 637 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 16
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876 0000 80B5     		push	{r7, lr}
 877              	.LCFI47:
 878              		.cfi_def_cfa_offset 8
 879              		.cfi_offset 7, -8
 880              		.cfi_offset 14, -4
 881 0002 84B0     		sub	sp, sp, #16
 882              	.LCFI48:
 883              		.cfi_def_cfa_offset 24
 884 0004 00AF     		add	r7, sp, #0
 885              	.LCFI49:
 886              		.cfi_def_cfa_register 7
 887 0006 7860     		str	r0, [r7, #4]
 638:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart = 0;
ARM GAS  /tmp/ccjIcGgN.s 			page 37


 888              		.loc 1 638 0
 889 0008 0023     		movs	r3, #0
 890 000a FB60     		str	r3, [r7, #12]
 639:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 640:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Suspend the DMA2D transfer */
 641:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 642:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no 
 643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      effect on START bitvalue). */
 644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_SUSP|DMA2D_CR_START, DMA2D_CR_SUSP);
 891              		.loc 1 644 0
 892 000c 7B68     		ldr	r3, [r7, #4]
 893 000e 1B68     		ldr	r3, [r3]
 894 0010 7A68     		ldr	r2, [r7, #4]
 895 0012 1268     		ldr	r2, [r2]
 896 0014 1268     		ldr	r2, [r2]
 897 0016 22F00302 		bic	r2, r2, #3
 898 001a 42F00202 		orr	r2, r2, #2
 899 001e 1A60     		str	r2, [r3]
 645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
 647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 900              		.loc 1 647 0
 901 0020 FFF7FEFF 		bl	HAL_GetTick
 902 0024 F860     		str	r0, [r7, #12]
 648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 649:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the DMA2D is effectively suspended */
 650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (((hdma2d->Instance->CR & DMA2D_CR_SUSP) != DMA2D_CR_SUSP) \
 903              		.loc 1 650 0
 904 0026 13E0     		b	.L36
 905              	.L39:
 651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     && ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START))
 652:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 653:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
 906              		.loc 1 653 0
 907 0028 FFF7FEFF 		bl	HAL_GetTick
 908 002c 0246     		mov	r2, r0
 909 002e FB68     		ldr	r3, [r7, #12]
 910 0030 D31A     		subs	r3, r2, r3
 911 0032 B3F57A7F 		cmp	r3, #1000
 912 0036 0BD9     		bls	.L36
 654:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 655:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
 656:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 913              		.loc 1 656 0
 914 0038 7B68     		ldr	r3, [r7, #4]
 915 003a 5B6D     		ldr	r3, [r3, #84]
 916 003c 43F02002 		orr	r2, r3, #32
 917 0040 7B68     		ldr	r3, [r7, #4]
 918 0042 5A65     		str	r2, [r3, #84]
 657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 658:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 659:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 919              		.loc 1 659 0
 920 0044 7B68     		ldr	r3, [r7, #4]
 921 0046 0322     		movs	r2, #3
 922 0048 83F85120 		strb	r2, [r3, #81]
 660:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
ARM GAS  /tmp/ccjIcGgN.s 			page 38


 661:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 923              		.loc 1 661 0
 924 004c 0323     		movs	r3, #3
 925 004e 22E0     		b	.L37
 926              	.L36:
 650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     && ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START))
 927              		.loc 1 650 0
 928 0050 7B68     		ldr	r3, [r7, #4]
 929 0052 1B68     		ldr	r3, [r3]
 930 0054 1B68     		ldr	r3, [r3]
 931 0056 03F00203 		and	r3, r3, #2
 932 005a 002B     		cmp	r3, #0
 933 005c 06D1     		bne	.L38
 651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 934              		.loc 1 651 0
 935 005e 7B68     		ldr	r3, [r7, #4]
 936 0060 1B68     		ldr	r3, [r3]
 937 0062 1B68     		ldr	r3, [r3]
 938 0064 03F00103 		and	r3, r3, #1
 939 0068 002B     		cmp	r3, #0
 940 006a DDD1     		bne	.L39
 941              	.L38:
 662:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 663:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 664:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 665:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
 666:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((hdma2d->Instance->CR & DMA2D_CR_START) != RESET)
 942              		.loc 1 666 0
 943 006c 7B68     		ldr	r3, [r7, #4]
 944 006e 1B68     		ldr	r3, [r3]
 945 0070 1B68     		ldr	r3, [r3]
 946 0072 03F00103 		and	r3, r3, #1
 947 0076 002B     		cmp	r3, #0
 948 0078 04D0     		beq	.L40
 667:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {    
 668:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 949              		.loc 1 668 0
 950 007a 7B68     		ldr	r3, [r7, #4]
 951 007c 0522     		movs	r2, #5
 952 007e 83F85120 		strb	r2, [r3, #81]
 953 0082 07E0     		b	.L41
 954              	.L40:
 669:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 670:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 671:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 672:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless 
 673:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        when no tranfer is on-going */
 674:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 955              		.loc 1 674 0
 956 0084 7B68     		ldr	r3, [r7, #4]
 957 0086 1B68     		ldr	r3, [r3]
 958 0088 7A68     		ldr	r2, [r7, #4]
 959 008a 1268     		ldr	r2, [r2]
 960 008c 1268     		ldr	r2, [r2]
 961 008e 22F00202 		bic	r2, r2, #2
 962 0092 1A60     		str	r2, [r3]
 963              	.L41:
ARM GAS  /tmp/ccjIcGgN.s 			page 39


 675:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 676:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 677:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 964              		.loc 1 677 0
 965 0094 0023     		movs	r3, #0
 966              	.L37:
 678:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 967              		.loc 1 678 0
 968 0096 1846     		mov	r0, r3
 969 0098 1037     		adds	r7, r7, #16
 970              	.LCFI50:
 971              		.cfi_def_cfa_offset 8
 972 009a BD46     		mov	sp, r7
 973              	.LCFI51:
 974              		.cfi_def_cfa_register 13
 975              		@ sp needed
 976 009c 80BD     		pop	{r7, pc}
 977              		.cfi_endproc
 978              	.LFE144:
 980 009e 00BF     		.section	.text.HAL_DMA2D_Resume,"ax",%progbits
 981              		.align	2
 982              		.global	HAL_DMA2D_Resume
 983              		.thumb
 984              		.thumb_func
 986              	HAL_DMA2D_Resume:
 987              	.LFB145:
 679:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 680:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 681:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D Transfer.
 682:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 683:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.  
 684:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 685:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 686:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_Resume(DMA2D_HandleTypeDef *hdma2d)
 687:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 988              		.loc 1 687 0
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 8
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993 0000 80B4     		push	{r7}
 994              	.LCFI52:
 995              		.cfi_def_cfa_offset 4
 996              		.cfi_offset 7, -4
 997 0002 83B0     		sub	sp, sp, #12
 998              	.LCFI53:
 999              		.cfi_def_cfa_offset 16
 1000 0004 00AF     		add	r7, sp, #0
 1001              	.LCFI54:
 1002              		.cfi_def_cfa_register 7
 1003 0006 7860     		str	r0, [r7, #4]
 688:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the SUSP and START bits */
 689:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & (DMA2D_CR_SUSP | DMA2D_CR_START)) == (DMA2D_CR_SUSP | DMA2D_CR_START))
 1004              		.loc 1 689 0
 1005 0008 7B68     		ldr	r3, [r7, #4]
 1006 000a 1B68     		ldr	r3, [r3]
 1007 000c 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjIcGgN.s 			page 40


 1008 000e 03F00303 		and	r3, r3, #3
 1009 0012 032B     		cmp	r3, #3
 1010 0014 03D1     		bne	.L43
 690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 691:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Ongoing transfer is suspended: change the DMA2D state before resuming */
 692:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1011              		.loc 1 692 0
 1012 0016 7B68     		ldr	r3, [r7, #4]
 1013 0018 0222     		movs	r2, #2
 1014 001a 83F85120 		strb	r2, [r3, #81]
 1015              	.L43:
 693:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 694:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 695:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Resume the DMA2D transfer */
 696:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* START bit is reset to make sure not to set it again, in the event the HW clears it
 697:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      between the register read and the register write by the CPU (writing 0 has no 
 698:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      effect on START bitvalue). */
 699:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, (DMA2D_CR_SUSP|DMA2D_CR_START));  
 1016              		.loc 1 699 0
 1017 001e 7B68     		ldr	r3, [r7, #4]
 1018 0020 1B68     		ldr	r3, [r3]
 1019 0022 7A68     		ldr	r2, [r7, #4]
 1020 0024 1268     		ldr	r2, [r2]
 1021 0026 1268     		ldr	r2, [r2]
 1022 0028 22F00302 		bic	r2, r2, #3
 1023 002c 1A60     		str	r2, [r3]
 700:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 701:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1024              		.loc 1 701 0
 1025 002e 0023     		movs	r3, #0
 702:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1026              		.loc 1 702 0
 1027 0030 1846     		mov	r0, r3
 1028 0032 0C37     		adds	r7, r7, #12
 1029              	.LCFI55:
 1030              		.cfi_def_cfa_offset 4
 1031 0034 BD46     		mov	sp, r7
 1032              	.LCFI56:
 1033              		.cfi_def_cfa_register 13
 1034              		@ sp needed
 1035 0036 5DF8047B 		ldr	r7, [sp], #4
 1036              	.LCFI57:
 1037              		.cfi_restore 7
 1038              		.cfi_def_cfa_offset 0
 1039 003a 7047     		bx	lr
 1040              		.cfi_endproc
 1041              	.LFE145:
 1043              		.section	.text.HAL_DMA2D_EnableCLUT,"ax",%progbits
 1044              		.align	2
 1045              		.global	HAL_DMA2D_EnableCLUT
 1046              		.thumb
 1047              		.thumb_func
 1049              	HAL_DMA2D_EnableCLUT:
 1050              	.LFB146:
 703:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 704:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 705:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccjIcGgN.s 			page 41


 706:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Enable the DMA2D CLUT Transfer.
 707:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:   Pointer to a DMA2D_HandleTypeDef structure that contains
 708:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 709:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
 710:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 711:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)
 712:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 713:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 714:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableCLUT(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 715:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {  
 1051              		.loc 1 715 0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 8
 1054              		@ frame_needed = 1, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056 0000 80B4     		push	{r7}
 1057              	.LCFI58:
 1058              		.cfi_def_cfa_offset 4
 1059              		.cfi_offset 7, -4
 1060 0002 83B0     		sub	sp, sp, #12
 1061              	.LCFI59:
 1062              		.cfi_def_cfa_offset 16
 1063 0004 00AF     		add	r7, sp, #0
 1064              	.LCFI60:
 1065              		.cfi_def_cfa_register 7
 1066 0006 7860     		str	r0, [r7, #4]
 1067 0008 3960     		str	r1, [r7]
 716:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 717:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));
 718:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 719:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 720:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1068              		.loc 1 720 0
 1069 000a 7B68     		ldr	r3, [r7, #4]
 1070 000c 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1071 0010 012B     		cmp	r3, #1
 1072 0012 01D1     		bne	.L46
 1073              		.loc 1 720 0 is_stmt 0 discriminator 1
 1074 0014 0223     		movs	r3, #2
 1075 0016 1CE0     		b	.L47
 1076              	.L46:
 1077              		.loc 1 720 0 discriminator 2
 1078 0018 7B68     		ldr	r3, [r7, #4]
 1079 001a 0122     		movs	r2, #1
 1080 001c 83F85020 		strb	r2, [r3, #80]
 721:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 722:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 723:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;  
 1081              		.loc 1 723 0 is_stmt 1 discriminator 2
 1082 0020 7B68     		ldr	r3, [r7, #4]
 1083 0022 0222     		movs	r2, #2
 1084 0024 83F85120 		strb	r2, [r3, #81]
 724:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 725:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 0)
 1085              		.loc 1 725 0 discriminator 2
 1086 0028 3B68     		ldr	r3, [r7]
 1087 002a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccjIcGgN.s 			page 42


 1088 002c 08D1     		bne	.L48
 726:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 727:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the background CLUT loading */
 728:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1089              		.loc 1 728 0
 1090 002e 7B68     		ldr	r3, [r7, #4]
 1091 0030 1B68     		ldr	r3, [r3]
 1092 0032 7A68     		ldr	r2, [r7, #4]
 1093 0034 1268     		ldr	r2, [r2]
 1094 0036 526A     		ldr	r2, [r2, #36]
 1095 0038 42F02002 		orr	r2, r2, #32
 1096 003c 5A62     		str	r2, [r3, #36]
 1097 003e 07E0     		b	.L49
 1098              	.L48:
 729:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 730:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 731:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 732:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the foreground CLUT loading */
 733:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);    
 1099              		.loc 1 733 0
 1100 0040 7B68     		ldr	r3, [r7, #4]
 1101 0042 1B68     		ldr	r3, [r3]
 1102 0044 7A68     		ldr	r2, [r7, #4]
 1103 0046 1268     		ldr	r2, [r2]
 1104 0048 D269     		ldr	r2, [r2, #28]
 1105 004a 42F02002 		orr	r2, r2, #32
 1106 004e DA61     		str	r2, [r3, #28]
 1107              	.L49:
 734:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 735:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 736:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1108              		.loc 1 736 0
 1109 0050 0023     		movs	r3, #0
 1110              	.L47:
 737:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1111              		.loc 1 737 0
 1112 0052 1846     		mov	r0, r3
 1113 0054 0C37     		adds	r7, r7, #12
 1114              	.LCFI61:
 1115              		.cfi_def_cfa_offset 4
 1116 0056 BD46     		mov	sp, r7
 1117              	.LCFI62:
 1118              		.cfi_def_cfa_register 13
 1119              		@ sp needed
 1120 0058 5DF8047B 		ldr	r7, [sp], #4
 1121              	.LCFI63:
 1122              		.cfi_restore 7
 1123              		.cfi_def_cfa_offset 0
 1124 005c 7047     		bx	lr
 1125              		.cfi_endproc
 1126              	.LFE146:
 1128 005e 00BF     		.section	.text.HAL_DMA2D_CLUTLoad,"ax",%progbits
 1129              		.align	2
 1130              		.global	HAL_DMA2D_CLUTLoad
 1131              		.thumb
 1132              		.thumb_func
 1134              	HAL_DMA2D_CLUTLoad:
ARM GAS  /tmp/ccjIcGgN.s 			page 43


 1135              	.LFB147:
 738:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 739:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 740:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 741:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading.
 742:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:   Pointer to a DMA2D_HandleTypeDef structure that contains
 743:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 744:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  CLUTCfg:  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
 745:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
 746:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
 747:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 748:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)
 749:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note Invoking this API is similar to calling HAL_DMA2D_ConfigCLUT() then HAL_DMA2D_EnableCLUT(
 750:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 751:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 752:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, uin
 753:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 1136              		.loc 1 753 0
 1137              		.cfi_startproc
 1138              		@ args = 4, pretend = 0, frame = 48
 1139              		@ frame_needed = 1, uses_anonymous_args = 0
 1140              		@ link register save eliminated.
 1141 0000 90B4     		push	{r4, r7}
 1142              	.LCFI64:
 1143              		.cfi_def_cfa_offset 8
 1144              		.cfi_offset 4, -8
 1145              		.cfi_offset 7, -4
 1146 0002 8CB0     		sub	sp, sp, #48
 1147              	.LCFI65:
 1148              		.cfi_def_cfa_offset 56
 1149 0004 00AF     		add	r7, sp, #0
 1150              	.LCFI66:
 1151              		.cfi_def_cfa_register 7
 1152 0006 F860     		str	r0, [r7, #12]
 1153 0008 3846     		mov	r0, r7
 1154 000a 80E80E00 		stmia	r0, {r1, r2, r3}
 754:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 755:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));   
 756:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
 757:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
 758:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 759:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 760:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1155              		.loc 1 760 0
 1156 000e FB68     		ldr	r3, [r7, #12]
 1157 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1158 0014 012B     		cmp	r3, #1
 1159 0016 01D1     		bne	.L51
 1160              		.loc 1 760 0 is_stmt 0 discriminator 1
 1161 0018 0223     		movs	r3, #2
 1162 001a 68E0     		b	.L52
 1163              	.L51:
 1164              		.loc 1 760 0 discriminator 2
 1165 001c FB68     		ldr	r3, [r7, #12]
 1166 001e 0122     		movs	r2, #1
 1167 0020 83F85020 		strb	r2, [r3, #80]
 761:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
ARM GAS  /tmp/ccjIcGgN.s 			page 44


 762:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 763:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;   
 1168              		.loc 1 763 0 is_stmt 1 discriminator 2
 1169 0024 FB68     		ldr	r3, [r7, #12]
 1170 0026 0222     		movs	r2, #2
 1171 0028 83F85120 		strb	r2, [r3, #81]
 764:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 765:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
 766:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 0)
 1172              		.loc 1 766 0 discriminator 2
 1173 002c BB6B     		ldr	r3, [r7, #56]
 1174 002e 002B     		cmp	r3, #0
 1175 0030 2ED1     		bne	.L53
 767:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 768:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
 769:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1176              		.loc 1 769 0
 1177 0032 FB68     		ldr	r3, [r7, #12]
 1178 0034 1B68     		ldr	r3, [r3]
 1179 0036 3A68     		ldr	r2, [r7]
 1180 0038 1A63     		str	r2, [r3, #48]
 770:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 771:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
 772:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM), 
 1181              		.loc 1 772 0
 1182 003a FB68     		ldr	r3, [r7, #12]
 1183 003c 1A68     		ldr	r2, [r3]
 1184 003e FB68     		ldr	r3, [r7, #12]
 1185 0040 1B68     		ldr	r3, [r3]
 1186 0042 596A     		ldr	r1, [r3, #36]
 1187 0044 2C4B     		ldr	r3, .L59
 1188 0046 0B40     		ands	r3, r3, r1
 1189 0048 B868     		ldr	r0, [r7, #8]
 1190 004a 4FF47F41 		mov	r1, #65280
 1191 004e F962     		str	r1, [r7, #44]
 1192              	.LBB46:
 1193              	.LBB47:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1194              		.loc 2 531 0
 1195 0050 F96A     		ldr	r1, [r7, #44]
 1196              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1197 0052 91FAA1F1 		rbit r1, r1
 1198              	@ 0 "" 2
 1199              		.thumb
 1200 0056 B962     		str	r1, [r7, #40]
 1201              		.loc 2 544 0
 1202 0058 B96A     		ldr	r1, [r7, #40]
 1203              	.LBE47:
 1204              	.LBE46:
 1205              		.loc 1 772 0
 1206 005a B1FA81F1 		clz	r1, r1
 1207 005e 8840     		lsls	r0, r0, r1
 1208 0060 7C68     		ldr	r4, [r7, #4]
 1209 0062 1021     		movs	r1, #16
 1210 0064 7962     		str	r1, [r7, #36]
 1211              	.LBB48:
 1212              	.LBB49:
ARM GAS  /tmp/ccjIcGgN.s 			page 45


 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1213              		.loc 2 531 0
 1214 0066 796A     		ldr	r1, [r7, #36]
 1215              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1216 0068 91FAA1F1 		rbit r1, r1
 1217              	@ 0 "" 2
 1218              		.thumb
 1219 006c 3962     		str	r1, [r7, #32]
 1220              		.loc 2 544 0
 1221 006e 396A     		ldr	r1, [r7, #32]
 1222              	.LBE49:
 1223              	.LBE48:
 1224              		.loc 1 772 0
 1225 0070 B1FA81F1 		clz	r1, r1
 1226 0074 04FA01F1 		lsl	r1, r4, r1
 1227 0078 0143     		orrs	r1, r1, r0
 1228 007a 0B43     		orrs	r3, r3, r1
 1229 007c 5362     		str	r3, [r2, #36]
 773:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_POSITION_BGPFCCR_CS) | (CLUTCfg.CLUTColorMode << DMA2D_POSITION
 774:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 775:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
 776:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1230              		.loc 1 776 0
 1231 007e FB68     		ldr	r3, [r7, #12]
 1232 0080 1B68     		ldr	r3, [r3]
 1233 0082 FA68     		ldr	r2, [r7, #12]
 1234 0084 1268     		ldr	r2, [r2]
 1235 0086 526A     		ldr	r2, [r2, #36]
 1236 0088 42F02002 		orr	r2, r2, #32
 1237 008c 5A62     		str	r2, [r3, #36]
 1238 008e 2DE0     		b	.L56
 1239              	.L53:
 777:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 778:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
 779:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 780:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 781:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
 782:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1240              		.loc 1 782 0
 1241 0090 FB68     		ldr	r3, [r7, #12]
 1242 0092 1B68     		ldr	r3, [r3]
 1243 0094 3A68     		ldr	r2, [r7]
 1244 0096 DA62     		str	r2, [r3, #44]
 783:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 784:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
 785:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), 
 1245              		.loc 1 785 0
 1246 0098 FB68     		ldr	r3, [r7, #12]
 1247 009a 1A68     		ldr	r2, [r3]
 1248 009c FB68     		ldr	r3, [r7, #12]
 1249 009e 1B68     		ldr	r3, [r3]
 1250 00a0 D969     		ldr	r1, [r3, #28]
 1251 00a2 154B     		ldr	r3, .L59
 1252 00a4 0B40     		ands	r3, r3, r1
 1253 00a6 B868     		ldr	r0, [r7, #8]
 1254 00a8 4FF47F41 		mov	r1, #65280
 1255 00ac F961     		str	r1, [r7, #28]
ARM GAS  /tmp/ccjIcGgN.s 			page 46


 1256              	.LBB50:
 1257              	.LBB51:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1258              		.loc 2 531 0
 1259 00ae F969     		ldr	r1, [r7, #28]
 1260              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1261 00b0 91FAA1F1 		rbit r1, r1
 1262              	@ 0 "" 2
 1263              		.thumb
 1264 00b4 B961     		str	r1, [r7, #24]
 1265              		.loc 2 544 0
 1266 00b6 B969     		ldr	r1, [r7, #24]
 1267              	.LBE51:
 1268              	.LBE50:
 1269              		.loc 1 785 0
 1270 00b8 B1FA81F1 		clz	r1, r1
 1271 00bc 8840     		lsls	r0, r0, r1
 1272 00be 7C68     		ldr	r4, [r7, #4]
 1273 00c0 1021     		movs	r1, #16
 1274 00c2 7961     		str	r1, [r7, #20]
 1275              	.LBB52:
 1276              	.LBB53:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1277              		.loc 2 531 0
 1278 00c4 7969     		ldr	r1, [r7, #20]
 1279              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1280 00c6 91FAA1F1 		rbit r1, r1
 1281              	@ 0 "" 2
 1282              		.thumb
 1283 00ca 3961     		str	r1, [r7, #16]
 1284              		.loc 2 544 0
 1285 00cc 3969     		ldr	r1, [r7, #16]
 1286              	.LBE53:
 1287              	.LBE52:
 1288              		.loc 1 785 0
 1289 00ce B1FA81F1 		clz	r1, r1
 1290 00d2 04FA01F1 		lsl	r1, r4, r1
 1291 00d6 0143     		orrs	r1, r1, r0
 1292 00d8 0B43     		orrs	r3, r3, r1
 1293 00da D361     		str	r3, [r2, #28]
 786:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_POSITION_BGPFCCR_CS) | (CLUTCfg.CLUTColorMode << DMA2D_POSITION
 787:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 788:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  /* Enable the CLUT loading for the foreground */
 789:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);  
 1294              		.loc 1 789 0
 1295 00dc FB68     		ldr	r3, [r7, #12]
 1296 00de 1B68     		ldr	r3, [r3]
 1297 00e0 FA68     		ldr	r2, [r7, #12]
 1298 00e2 1268     		ldr	r2, [r2]
 1299 00e4 D269     		ldr	r2, [r2, #28]
 1300 00e6 42F02002 		orr	r2, r2, #32
 1301 00ea DA61     		str	r2, [r3, #28]
 1302              	.L56:
 790:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 791:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 792:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1303              		.loc 1 792 0
ARM GAS  /tmp/ccjIcGgN.s 			page 47


 1304 00ec 0023     		movs	r3, #0
 1305              	.L52:
 793:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1306              		.loc 1 793 0
 1307 00ee 1846     		mov	r0, r3
 1308 00f0 3037     		adds	r7, r7, #48
 1309              	.LCFI67:
 1310              		.cfi_def_cfa_offset 8
 1311 00f2 BD46     		mov	sp, r7
 1312              	.LCFI68:
 1313              		.cfi_def_cfa_register 13
 1314              		@ sp needed
 1315 00f4 90BC     		pop	{r4, r7}
 1316              	.LCFI69:
 1317              		.cfi_restore 7
 1318              		.cfi_restore 4
 1319              		.cfi_def_cfa_offset 0
 1320 00f6 7047     		bx	lr
 1321              	.L60:
 1322              		.align	2
 1323              	.L59:
 1324 00f8 EF00FFFF 		.word	-65297
 1325              		.cfi_endproc
 1326              	.LFE147:
 1328              		.section	.text.HAL_DMA2D_CLUTLoad_IT,"ax",%progbits
 1329              		.align	2
 1330              		.global	HAL_DMA2D_CLUTLoad_IT
 1331              		.thumb
 1332              		.thumb_func
 1334              	HAL_DMA2D_CLUTLoad_IT:
 1335              	.LFB148:
 794:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 795:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 796:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Start DMA2D CLUT Loading with interrupt enabled.
 797:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:   Pointer to a DMA2D_HandleTypeDef structure that contains
 798:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
 799:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  CLUTCfg:  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
 800:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
 801:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
 802:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 803:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)
 804:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 805:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 806:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoad_IT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, 
 807:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 1336              		.loc 1 807 0
 1337              		.cfi_startproc
 1338              		@ args = 4, pretend = 0, frame = 48
 1339              		@ frame_needed = 1, uses_anonymous_args = 0
 1340              		@ link register save eliminated.
 1341 0000 90B4     		push	{r4, r7}
 1342              	.LCFI70:
 1343              		.cfi_def_cfa_offset 8
 1344              		.cfi_offset 4, -8
 1345              		.cfi_offset 7, -4
 1346 0002 8CB0     		sub	sp, sp, #48
 1347              	.LCFI71:
ARM GAS  /tmp/ccjIcGgN.s 			page 48


 1348              		.cfi_def_cfa_offset 56
 1349 0004 00AF     		add	r7, sp, #0
 1350              	.LCFI72:
 1351              		.cfi_def_cfa_register 7
 1352 0006 F860     		str	r0, [r7, #12]
 1353 0008 3846     		mov	r0, r7
 1354 000a 80E80E00 		stmia	r0, {r1, r2, r3}
 808:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
 809:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));   
 810:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
 811:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
 812:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 813:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
 814:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 1355              		.loc 1 814 0
 1356 000e FB68     		ldr	r3, [r7, #12]
 1357 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 1358 0014 012B     		cmp	r3, #1
 1359 0016 01D1     		bne	.L62
 1360              		.loc 1 814 0 is_stmt 0 discriminator 1
 1361 0018 0223     		movs	r3, #2
 1362 001a 78E0     		b	.L63
 1363              	.L62:
 1364              		.loc 1 814 0 discriminator 2
 1365 001c FB68     		ldr	r3, [r7, #12]
 1366 001e 0122     		movs	r2, #1
 1367 0020 83F85020 		strb	r2, [r3, #80]
 815:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 816:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
 817:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;   
 1368              		.loc 1 817 0 is_stmt 1 discriminator 2
 1369 0024 FB68     		ldr	r3, [r7, #12]
 1370 0026 0222     		movs	r2, #2
 1371 0028 83F85120 		strb	r2, [r3, #81]
 818:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 819:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
 820:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 0)
 1372              		.loc 1 820 0 discriminator 2
 1373 002c BB6B     		ldr	r3, [r7, #56]
 1374 002e 002B     		cmp	r3, #0
 1375 0030 36D1     		bne	.L64
 821:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 822:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
 823:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1376              		.loc 1 823 0
 1377 0032 FB68     		ldr	r3, [r7, #12]
 1378 0034 1B68     		ldr	r3, [r3]
 1379 0036 3A68     		ldr	r2, [r7]
 1380 0038 1A63     		str	r2, [r3, #48]
 824:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 825:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
 826:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM), 
 1381              		.loc 1 826 0
 1382 003a FB68     		ldr	r3, [r7, #12]
 1383 003c 1A68     		ldr	r2, [r3]
 1384 003e FB68     		ldr	r3, [r7, #12]
 1385 0040 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjIcGgN.s 			page 49


 1386 0042 596A     		ldr	r1, [r3, #36]
 1387 0044 344B     		ldr	r3, .L70
 1388 0046 0B40     		ands	r3, r3, r1
 1389 0048 B868     		ldr	r0, [r7, #8]
 1390 004a 4FF47F41 		mov	r1, #65280
 1391 004e F962     		str	r1, [r7, #44]
 1392              	.LBB54:
 1393              	.LBB55:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1394              		.loc 2 531 0
 1395 0050 F96A     		ldr	r1, [r7, #44]
 1396              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1397 0052 91FAA1F1 		rbit r1, r1
 1398              	@ 0 "" 2
 1399              		.thumb
 1400 0056 B962     		str	r1, [r7, #40]
 1401              		.loc 2 544 0
 1402 0058 B96A     		ldr	r1, [r7, #40]
 1403              	.LBE55:
 1404              	.LBE54:
 1405              		.loc 1 826 0
 1406 005a B1FA81F1 		clz	r1, r1
 1407 005e 8840     		lsls	r0, r0, r1
 1408 0060 7C68     		ldr	r4, [r7, #4]
 1409 0062 1021     		movs	r1, #16
 1410 0064 7962     		str	r1, [r7, #36]
 1411              	.LBB56:
 1412              	.LBB57:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1413              		.loc 2 531 0
 1414 0066 796A     		ldr	r1, [r7, #36]
 1415              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1416 0068 91FAA1F1 		rbit r1, r1
 1417              	@ 0 "" 2
 1418              		.thumb
 1419 006c 3962     		str	r1, [r7, #32]
 1420              		.loc 2 544 0
 1421 006e 396A     		ldr	r1, [r7, #32]
 1422              	.LBE57:
 1423              	.LBE56:
 1424              		.loc 1 826 0
 1425 0070 B1FA81F1 		clz	r1, r1
 1426 0074 04FA01F1 		lsl	r1, r4, r1
 1427 0078 0143     		orrs	r1, r1, r0
 1428 007a 0B43     		orrs	r3, r3, r1
 1429 007c 5362     		str	r3, [r2, #36]
 827:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_POSITION_BGPFCCR_CS) | (CLUTCfg.CLUTColorMode << DMA2D_POSITION
 828:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             
 829:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
 830:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);         
 1430              		.loc 1 830 0
 1431 007e FB68     		ldr	r3, [r7, #12]
 1432 0080 1B68     		ldr	r3, [r3]
 1433 0082 FA68     		ldr	r2, [r7, #12]
 1434 0084 1268     		ldr	r2, [r2]
 1435 0086 1268     		ldr	r2, [r2]
 1436 0088 42F46452 		orr	r2, r2, #14592
ARM GAS  /tmp/ccjIcGgN.s 			page 50


 1437 008c 1A60     		str	r2, [r3]
 831:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 832:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the background */
 833:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->BGPFCCR, DMA2D_BGPFCCR_START);
 1438              		.loc 1 833 0
 1439 008e FB68     		ldr	r3, [r7, #12]
 1440 0090 1B68     		ldr	r3, [r3]
 1441 0092 FA68     		ldr	r2, [r7, #12]
 1442 0094 1268     		ldr	r2, [r2]
 1443 0096 526A     		ldr	r2, [r2, #36]
 1444 0098 42F02002 		orr	r2, r2, #32
 1445 009c 5A62     		str	r2, [r3, #36]
 1446 009e 35E0     		b	.L67
 1447              	.L64:
 834:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 835:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the foreground DMA2D layer */
 836:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 837:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 838:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT memory address */
 839:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
 1448              		.loc 1 839 0
 1449 00a0 FB68     		ldr	r3, [r7, #12]
 1450 00a2 1B68     		ldr	r3, [r3]
 1451 00a4 3A68     		ldr	r2, [r7]
 1452 00a6 DA62     		str	r2, [r3, #44]
 840:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 841:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
 842:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), 
 1453              		.loc 1 842 0
 1454 00a8 FB68     		ldr	r3, [r7, #12]
 1455 00aa 1A68     		ldr	r2, [r3]
 1456 00ac FB68     		ldr	r3, [r7, #12]
 1457 00ae 1B68     		ldr	r3, [r3]
 1458 00b0 D969     		ldr	r1, [r3, #28]
 1459 00b2 194B     		ldr	r3, .L70
 1460 00b4 0B40     		ands	r3, r3, r1
 1461 00b6 B868     		ldr	r0, [r7, #8]
 1462 00b8 4FF47F41 		mov	r1, #65280
 1463 00bc F961     		str	r1, [r7, #28]
 1464              	.LBB58:
 1465              	.LBB59:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1466              		.loc 2 531 0
 1467 00be F969     		ldr	r1, [r7, #28]
 1468              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1469 00c0 91FAA1F1 		rbit r1, r1
 1470              	@ 0 "" 2
 1471              		.thumb
 1472 00c4 B961     		str	r1, [r7, #24]
 1473              		.loc 2 544 0
 1474 00c6 B969     		ldr	r1, [r7, #24]
 1475              	.LBE59:
 1476              	.LBE58:
 1477              		.loc 1 842 0
 1478 00c8 B1FA81F1 		clz	r1, r1
 1479 00cc 8840     		lsls	r0, r0, r1
 1480 00ce 7C68     		ldr	r4, [r7, #4]
ARM GAS  /tmp/ccjIcGgN.s 			page 51


 1481 00d0 1021     		movs	r1, #16
 1482 00d2 7961     		str	r1, [r7, #20]
 1483              	.LBB60:
 1484              	.LBB61:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 1485              		.loc 2 531 0
 1486 00d4 7969     		ldr	r1, [r7, #20]
 1487              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1488 00d6 91FAA1F1 		rbit r1, r1
 1489              	@ 0 "" 2
 1490              		.thumb
 1491 00da 3961     		str	r1, [r7, #16]
 1492              		.loc 2 544 0
 1493 00dc 3969     		ldr	r1, [r7, #16]
 1494              	.LBE61:
 1495              	.LBE60:
 1496              		.loc 1 842 0
 1497 00de B1FA81F1 		clz	r1, r1
 1498 00e2 04FA01F1 		lsl	r1, r4, r1
 1499 00e6 0143     		orrs	r1, r1, r0
 1500 00e8 0B43     		orrs	r3, r3, r1
 1501 00ea D361     		str	r3, [r2, #28]
 843:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_POSITION_BGPFCCR_CS) | (CLUTCfg.CLUTColorMode << DMA2D_POSITION
 844:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             
 845:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT Transfer Complete, transfer Error, configuration Error and CLUT Access Error
 846:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);         
 1502              		.loc 1 846 0
 1503 00ec FB68     		ldr	r3, [r7, #12]
 1504 00ee 1B68     		ldr	r3, [r3]
 1505 00f0 FA68     		ldr	r2, [r7, #12]
 1506 00f2 1268     		ldr	r2, [r2]
 1507 00f4 1268     		ldr	r2, [r2]
 1508 00f6 42F46452 		orr	r2, r2, #14592
 1509 00fa 1A60     		str	r2, [r3]
 847:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 848:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the CLUT loading for the foreground */
 849:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     SET_BIT(hdma2d->Instance->FGPFCCR, DMA2D_FGPFCCR_START);  
 1510              		.loc 1 849 0
 1511 00fc FB68     		ldr	r3, [r7, #12]
 1512 00fe 1B68     		ldr	r3, [r3]
 1513 0100 FA68     		ldr	r2, [r7, #12]
 1514 0102 1268     		ldr	r2, [r2]
 1515 0104 D269     		ldr	r2, [r2, #28]
 1516 0106 42F02002 		orr	r2, r2, #32
 1517 010a DA61     		str	r2, [r3, #28]
 1518              	.L67:
 850:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 851:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
 852:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1519              		.loc 1 852 0
 1520 010c 0023     		movs	r3, #0
 1521              	.L63:
 853:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1522              		.loc 1 853 0
 1523 010e 1846     		mov	r0, r3
 1524 0110 3037     		adds	r7, r7, #48
 1525              	.LCFI73:
ARM GAS  /tmp/ccjIcGgN.s 			page 52


 1526              		.cfi_def_cfa_offset 8
 1527 0112 BD46     		mov	sp, r7
 1528              	.LCFI74:
 1529              		.cfi_def_cfa_register 13
 1530              		@ sp needed
 1531 0114 90BC     		pop	{r4, r7}
 1532              	.LCFI75:
 1533              		.cfi_restore 7
 1534              		.cfi_restore 4
 1535              		.cfi_def_cfa_offset 0
 1536 0116 7047     		bx	lr
 1537              	.L71:
 1538              		.align	2
 1539              	.L70:
 1540 0118 EF00FFFF 		.word	-65297
 1541              		.cfi_endproc
 1542              	.LFE148:
 1544              		.section	.text.HAL_DMA2D_CLUTLoading_Abort,"ax",%progbits
 1545              		.align	2
 1546              		.global	HAL_DMA2D_CLUTLoading_Abort
 1547              		.thumb
 1548              		.thumb_func
 1550              	HAL_DMA2D_CLUTLoading_Abort:
 1551              	.LFB149:
 854:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 855:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 856:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Abort the DMA2D CLUT loading.
 857:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d : Pointer to a DMA2D_HandleTypeDef structure that contains
 858:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                  the configuration information for the DMA2D.
 859:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
 860:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 861:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)  
 862:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 863:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 864:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 865:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 1552              		.loc 1 865 0
 1553              		.cfi_startproc
 1554              		@ args = 0, pretend = 0, frame = 16
 1555              		@ frame_needed = 1, uses_anonymous_args = 0
 1556 0000 80B5     		push	{r7, lr}
 1557              	.LCFI76:
 1558              		.cfi_def_cfa_offset 8
 1559              		.cfi_offset 7, -8
 1560              		.cfi_offset 14, -4
 1561 0002 84B0     		sub	sp, sp, #16
 1562              	.LCFI77:
 1563              		.cfi_def_cfa_offset 24
 1564 0004 00AF     		add	r7, sp, #0
 1565              	.LCFI78:
 1566              		.cfi_def_cfa_register 7
 1567 0006 7860     		str	r0, [r7, #4]
 1568 0008 3960     		str	r1, [r7]
 866:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart  = 0;
 1569              		.loc 1 866 0
 1570 000a 0023     		movs	r3, #0
 1571 000c BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccjIcGgN.s 			page 53


 867:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register 
 1572              		.loc 1 867 0
 1573 000e 7B68     		ldr	r3, [r7, #4]
 1574 0010 1B68     		ldr	r3, [r3]
 1575 0012 2433     		adds	r3, r3, #36
 1576 0014 FB60     		str	r3, [r7, #12]
 868:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 869:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Abort the CLUT loading */
 870:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 1577              		.loc 1 870 0
 1578 0016 7B68     		ldr	r3, [r7, #4]
 1579 0018 1B68     		ldr	r3, [r3]
 1580 001a 7A68     		ldr	r2, [r7, #4]
 1581 001c 1268     		ldr	r2, [r2]
 1582 001e 1268     		ldr	r2, [r2]
 1583 0020 42F00402 		orr	r2, r2, #4
 1584 0024 1A60     		str	r2, [r3]
 871:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 872:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */ 
 873:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 1)
 1585              		.loc 1 873 0
 1586 0026 3B68     		ldr	r3, [r7]
 1587 0028 012B     		cmp	r3, #1
 1588 002a 03D1     		bne	.L73
 874:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 875:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
 1589              		.loc 1 875 0
 1590 002c 7B68     		ldr	r3, [r7, #4]
 1591 002e 1B68     		ldr	r3, [r3]
 1592 0030 1C33     		adds	r3, r3, #28
 1593 0032 FB60     		str	r3, [r7, #12]
 1594              	.L73:
 876:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 877:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 878:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 879:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
 880:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 1595              		.loc 1 880 0
 1596 0034 FFF7FEFF 		bl	HAL_GetTick
 1597 0038 B860     		str	r0, [r7, #8]
 881:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  
 882:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the CLUT loading is aborted */          
 883:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while((*reg & DMA2D_BGPFCCR_START) != RESET)
 1598              		.loc 1 883 0
 1599 003a 17E0     		b	.L74
 1600              	.L76:
 884:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 885:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 1601              		.loc 1 885 0
 1602 003c FFF7FEFF 		bl	HAL_GetTick
 1603 0040 0246     		mov	r2, r0
 1604 0042 BB68     		ldr	r3, [r7, #8]
 1605 0044 D31A     		subs	r3, r2, r3
 1606 0046 B3F57A7F 		cmp	r3, #1000
 1607 004a 0FD9     		bls	.L74
 886:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 887:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
ARM GAS  /tmp/ccjIcGgN.s 			page 54


 888:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 1608              		.loc 1 888 0
 1609 004c 7B68     		ldr	r3, [r7, #4]
 1610 004e 5B6D     		ldr	r3, [r3, #84]
 1611 0050 43F02002 		orr	r2, r3, #32
 1612 0054 7B68     		ldr	r3, [r7, #4]
 1613 0056 5A65     		str	r2, [r3, #84]
 889:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 890:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 891:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 1614              		.loc 1 891 0
 1615 0058 7B68     		ldr	r3, [r7, #4]
 1616 005a 0322     		movs	r2, #3
 1617 005c 83F85120 		strb	r2, [r3, #81]
 892:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 893:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
 894:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);
 1618              		.loc 1 894 0
 1619 0060 7B68     		ldr	r3, [r7, #4]
 1620 0062 0022     		movs	r2, #0
 1621 0064 83F85020 		strb	r2, [r3, #80]
 895:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 896:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 1622              		.loc 1 896 0
 1623 0068 0323     		movs	r3, #3
 1624 006a 16E0     		b	.L75
 1625              	.L74:
 883:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1626              		.loc 1 883 0
 1627 006c FB68     		ldr	r3, [r7, #12]
 1628 006e 1B68     		ldr	r3, [r3]
 1629 0070 03F02003 		and	r3, r3, #32
 1630 0074 002B     		cmp	r3, #0
 1631 0076 E1D1     		bne	.L76
 897:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 898:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 899:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 900:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error 
 901:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);      
 1632              		.loc 1 901 0
 1633 0078 7B68     		ldr	r3, [r7, #4]
 1634 007a 1B68     		ldr	r3, [r3]
 1635 007c 7A68     		ldr	r2, [r7, #4]
 1636 007e 1268     		ldr	r2, [r2]
 1637 0080 1268     		ldr	r2, [r2]
 1638 0082 22F46452 		bic	r2, r2, #14592
 1639 0086 1A60     		str	r2, [r3]
 902:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    
 903:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change the DMA2D state*/
 904:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 1640              		.loc 1 904 0
 1641 0088 7B68     		ldr	r3, [r7, #4]
 1642 008a 0122     		movs	r2, #1
 1643 008c 83F85120 		strb	r2, [r3, #81]
 905:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      
 906:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
 907:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
ARM GAS  /tmp/ccjIcGgN.s 			page 55


 1644              		.loc 1 907 0
 1645 0090 7B68     		ldr	r3, [r7, #4]
 1646 0092 0022     		movs	r2, #0
 1647 0094 83F85020 		strb	r2, [r3, #80]
 908:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 909:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1648              		.loc 1 909 0
 1649 0098 0023     		movs	r3, #0
 1650              	.L75:
 910:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1651              		.loc 1 910 0
 1652 009a 1846     		mov	r0, r3
 1653 009c 1037     		adds	r7, r7, #16
 1654              	.LCFI79:
 1655              		.cfi_def_cfa_offset 8
 1656 009e BD46     		mov	sp, r7
 1657              	.LCFI80:
 1658              		.cfi_def_cfa_register 13
 1659              		@ sp needed
 1660 00a0 80BD     		pop	{r7, pc}
 1661              		.cfi_endproc
 1662              	.LFE149:
 1664 00a2 00BF     		.section	.text.HAL_DMA2D_CLUTLoading_Suspend,"ax",%progbits
 1665              		.align	2
 1666              		.global	HAL_DMA2D_CLUTLoading_Suspend
 1667              		.thumb
 1668              		.thumb_func
 1670              	HAL_DMA2D_CLUTLoading_Suspend:
 1671              	.LFB150:
 911:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 912:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 913:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Suspend the DMA2D CLUT loading.
 914:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: Pointer to a DMA2D_HandleTypeDef structure that contains
 915:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D. 
 916:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
 917:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 918:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)    
 919:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 920:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 921:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Suspend(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 922:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 1672              		.loc 1 922 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 16
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676 0000 80B5     		push	{r7, lr}
 1677              	.LCFI81:
 1678              		.cfi_def_cfa_offset 8
 1679              		.cfi_offset 7, -8
 1680              		.cfi_offset 14, -4
 1681 0002 84B0     		sub	sp, sp, #16
 1682              	.LCFI82:
 1683              		.cfi_def_cfa_offset 24
 1684 0004 00AF     		add	r7, sp, #0
 1685              	.LCFI83:
 1686              		.cfi_def_cfa_register 7
 1687 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/ccjIcGgN.s 			page 56


 1688 0008 3960     		str	r1, [r7]
 923:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart = 0;
 1689              		.loc 1 923 0
 1690 000a 0023     		movs	r3, #0
 1691 000c BB60     		str	r3, [r7, #8]
 924:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register 
 1692              		.loc 1 924 0
 1693 000e 7B68     		ldr	r3, [r7, #4]
 1694 0010 1B68     		ldr	r3, [r3]
 1695 0012 2433     		adds	r3, r3, #36
 1696 0014 FB60     		str	r3, [r7, #12]
 925:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 926:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Suspend the CLUT loading */
 927:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP); 
 1697              		.loc 1 927 0
 1698 0016 7B68     		ldr	r3, [r7, #4]
 1699 0018 1B68     		ldr	r3, [r3]
 1700 001a 7A68     		ldr	r2, [r7, #4]
 1701 001c 1268     		ldr	r2, [r2]
 1702 001e 1268     		ldr	r2, [r2]
 1703 0020 42F00202 		orr	r2, r2, #2
 1704 0024 1A60     		str	r2, [r3]
 928:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 929:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* If foreground CLUT loading is considered, update local variables */ 
 930:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 1)
 1705              		.loc 1 930 0
 1706 0026 3B68     		ldr	r3, [r7]
 1707 0028 012B     		cmp	r3, #1
 1708 002a 03D1     		bne	.L78
 931:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 932:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     reg  = &(hdma2d->Instance->FGPFCCR);
 1709              		.loc 1 932 0
 1710 002c 7B68     		ldr	r3, [r7, #4]
 1711 002e 1B68     		ldr	r3, [r3]
 1712 0030 1C33     		adds	r3, r3, #28
 1713 0032 FB60     		str	r3, [r7, #12]
 1714              	.L78:
 933:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }   
 934:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 935:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Get tick */
 936:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   tickstart = HAL_GetTick();
 1715              		.loc 1 936 0
 1716 0034 FFF7FEFF 		bl	HAL_GetTick
 1717 0038 B860     		str	r0, [r7, #8]
 937:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 938:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check if the CLUT loading is suspended */
 939:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   while (((hdma2d->Instance->CR & DMA2D_CR_SUSP) != DMA2D_CR_SUSP) \
 1718              		.loc 1 939 0
 1719 003a 13E0     		b	.L79
 1720              	.L82:
 940:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     && ((*reg & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START))
 941:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 942:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_SUSPEND)
 1721              		.loc 1 942 0
 1722 003c FFF7FEFF 		bl	HAL_GetTick
 1723 0040 0246     		mov	r2, r0
 1724 0042 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccjIcGgN.s 			page 57


 1725 0044 D31A     		subs	r3, r2, r3
 1726 0046 B3F57A7F 		cmp	r3, #1000
 1727 004a 0BD9     		bls	.L79
 943:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 944:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
 945:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 1728              		.loc 1 945 0
 1729 004c 7B68     		ldr	r3, [r7, #4]
 1730 004e 5B6D     		ldr	r3, [r3, #84]
 1731 0050 43F02002 		orr	r2, r3, #32
 1732 0054 7B68     		ldr	r3, [r7, #4]
 1733 0056 5A65     		str	r2, [r3, #84]
 946:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 947:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change the DMA2D state */
 948:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 1734              		.loc 1 948 0
 1735 0058 7B68     		ldr	r3, [r7, #4]
 1736 005a 0322     		movs	r2, #3
 1737 005c 83F85120 		strb	r2, [r3, #81]
 949:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
 950:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       return HAL_TIMEOUT;
 1738              		.loc 1 950 0
 1739 0060 0323     		movs	r3, #3
 1740 0062 20E0     		b	.L80
 1741              	.L79:
 939:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     && ((*reg & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START))
 1742              		.loc 1 939 0
 1743 0064 7B68     		ldr	r3, [r7, #4]
 1744 0066 1B68     		ldr	r3, [r3]
 1745 0068 1B68     		ldr	r3, [r3]
 1746 006a 03F00203 		and	r3, r3, #2
 1747 006e 002B     		cmp	r3, #0
 1748 0070 05D1     		bne	.L81
 940:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 1749              		.loc 1 940 0
 1750 0072 FB68     		ldr	r3, [r7, #12]
 1751 0074 1B68     		ldr	r3, [r3]
 1752 0076 03F02003 		and	r3, r3, #32
 1753 007a 002B     		cmp	r3, #0
 1754 007c DED1     		bne	.L82
 1755              	.L81:
 951:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 952:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 953:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
 954:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Check whether or not a transfer is actually suspended and change the DMA2D state accordingly 
 955:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((*reg & DMA2D_BGPFCCR_START) != RESET)
 1756              		.loc 1 955 0
 1757 007e FB68     		ldr	r3, [r7, #12]
 1758 0080 1B68     		ldr	r3, [r3]
 1759 0082 03F02003 		and	r3, r3, #32
 1760 0086 002B     		cmp	r3, #0
 1761 0088 04D0     		beq	.L83
 956:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {    
 957:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_SUSPEND;
 1762              		.loc 1 957 0
 1763 008a 7B68     		ldr	r3, [r7, #4]
 1764 008c 0522     		movs	r2, #5
ARM GAS  /tmp/ccjIcGgN.s 			page 58


 1765 008e 83F85120 		strb	r2, [r3, #81]
 1766 0092 07E0     		b	.L84
 1767              	.L83:
 958:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 959:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 960:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 961:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Make sure SUSP bit is cleared since it is meaningless 
 962:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****        when no tranfer is on-going */
 963:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);
 1768              		.loc 1 963 0
 1769 0094 7B68     		ldr	r3, [r7, #4]
 1770 0096 1B68     		ldr	r3, [r3]
 1771 0098 7A68     		ldr	r2, [r7, #4]
 1772 009a 1268     		ldr	r2, [r2]
 1773 009c 1268     		ldr	r2, [r2]
 1774 009e 22F00202 		bic	r2, r2, #2
 1775 00a2 1A60     		str	r2, [r3]
 1776              	.L84:
 964:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }  
 965:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 966:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1777              		.loc 1 966 0
 1778 00a4 0023     		movs	r3, #0
 1779              	.L80:
 967:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1780              		.loc 1 967 0
 1781 00a6 1846     		mov	r0, r3
 1782 00a8 1037     		adds	r7, r7, #16
 1783              	.LCFI84:
 1784              		.cfi_def_cfa_offset 8
 1785 00aa BD46     		mov	sp, r7
 1786              	.LCFI85:
 1787              		.cfi_def_cfa_register 13
 1788              		@ sp needed
 1789 00ac 80BD     		pop	{r7, pc}
 1790              		.cfi_endproc
 1791              	.LFE150:
 1793 00ae 00BF     		.section	.text.HAL_DMA2D_CLUTLoading_Resume,"ax",%progbits
 1794              		.align	2
 1795              		.global	HAL_DMA2D_CLUTLoading_Resume
 1796              		.thumb
 1797              		.thumb_func
 1799              	HAL_DMA2D_CLUTLoading_Resume:
 1800              	.LFB151:
 968:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
 969:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
 970:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Resume the DMA2D CLUT loading.
 971:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
 972:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D. 
 973:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
 974:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
 975:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)      
 976:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
 977:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
 978:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Resume(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
 979:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 1801              		.loc 1 979 0
ARM GAS  /tmp/ccjIcGgN.s 			page 59


 1802              		.cfi_startproc
 1803              		@ args = 0, pretend = 0, frame = 8
 1804              		@ frame_needed = 1, uses_anonymous_args = 0
 1805              		@ link register save eliminated.
 1806 0000 80B4     		push	{r7}
 1807              	.LCFI86:
 1808              		.cfi_def_cfa_offset 4
 1809              		.cfi_offset 7, -4
 1810 0002 83B0     		sub	sp, sp, #12
 1811              	.LCFI87:
 1812              		.cfi_def_cfa_offset 16
 1813 0004 00AF     		add	r7, sp, #0
 1814              	.LCFI88:
 1815              		.cfi_def_cfa_register 7
 1816 0006 7860     		str	r0, [r7, #4]
 1817 0008 3960     		str	r1, [r7]
 980:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the SUSP and START bits for background or foreground CLUT loading */
 981:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 0)
 1818              		.loc 1 981 0
 1819 000a 3B68     		ldr	r3, [r7]
 1820 000c 002B     		cmp	r3, #0
 1821 000e 12D1     		bne	.L86
 982:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {  
 983:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Background CLUT loading suspension check */
 984:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if (((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
 1822              		.loc 1 984 0
 1823 0010 7B68     		ldr	r3, [r7, #4]
 1824 0012 1B68     		ldr	r3, [r3]
 1825 0014 1B68     		ldr	r3, [r3]
 1826 0016 03F00203 		and	r3, r3, #2
 1827 001a 002B     		cmp	r3, #0
 1828 001c 1DD0     		beq	.L88
 985:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       && ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START))
 1829              		.loc 1 985 0
 1830 001e 7B68     		ldr	r3, [r7, #4]
 1831 0020 1B68     		ldr	r3, [r3]
 1832 0022 5B6A     		ldr	r3, [r3, #36]
 1833 0024 03F02003 		and	r3, r3, #32
 1834 0028 002B     		cmp	r3, #0
 1835 002a 16D0     		beq	.L88
 986:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 987:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
 988:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1836              		.loc 1 988 0
 1837 002c 7B68     		ldr	r3, [r7, #4]
 1838 002e 0222     		movs	r2, #2
 1839 0030 83F85120 		strb	r2, [r3, #81]
 1840 0034 11E0     		b	.L88
 1841              	.L86:
 989:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
 990:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
 991:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
 992:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
 993:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Foreground CLUT loading suspension check */
 994:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if (((hdma2d->Instance->CR & DMA2D_CR_SUSP) == DMA2D_CR_SUSP)
 1842              		.loc 1 994 0
 1843 0036 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjIcGgN.s 			page 60


 1844 0038 1B68     		ldr	r3, [r3]
 1845 003a 1B68     		ldr	r3, [r3]
 1846 003c 03F00203 		and	r3, r3, #2
 1847 0040 002B     		cmp	r3, #0
 1848 0042 0AD0     		beq	.L88
 995:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       && ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START))
 1849              		.loc 1 995 0
 1850 0044 7B68     		ldr	r3, [r7, #4]
 1851 0046 1B68     		ldr	r3, [r3]
 1852 0048 DB69     		ldr	r3, [r3, #28]
 1853 004a 03F02003 		and	r3, r3, #32
 1854 004e 002B     		cmp	r3, #0
 1855 0050 03D0     		beq	.L88
 996:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 997:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Ongoing CLUT loading is suspended: change the DMA2D state before resuming */
 998:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_BUSY;
 1856              		.loc 1 998 0
 1857 0052 7B68     		ldr	r3, [r7, #4]
 1858 0054 0222     		movs	r2, #2
 1859 0056 83F85120 		strb	r2, [r3, #81]
 1860              	.L88:
 999:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }  
1000:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1001:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1002:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Resume the CLUT loading */
1003:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->CR, DMA2D_CR_SUSP);  
 1861              		.loc 1 1003 0
 1862 005a 7B68     		ldr	r3, [r7, #4]
 1863 005c 1B68     		ldr	r3, [r3]
 1864 005e 7A68     		ldr	r2, [r7, #4]
 1865 0060 1268     		ldr	r2, [r2]
 1866 0062 1268     		ldr	r2, [r2]
 1867 0064 22F00202 		bic	r2, r2, #2
 1868 0068 1A60     		str	r2, [r3]
1004:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1005:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 1869              		.loc 1 1005 0
 1870 006a 0023     		movs	r3, #0
1006:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 1871              		.loc 1 1006 0
 1872 006c 1846     		mov	r0, r3
 1873 006e 0C37     		adds	r7, r7, #12
 1874              	.LCFI89:
 1875              		.cfi_def_cfa_offset 4
 1876 0070 BD46     		mov	sp, r7
 1877              	.LCFI90:
 1878              		.cfi_def_cfa_register 13
 1879              		@ sp needed
 1880 0072 5DF8047B 		ldr	r7, [sp], #4
 1881              	.LCFI91:
 1882              		.cfi_restore 7
 1883              		.cfi_def_cfa_offset 0
 1884 0076 7047     		bx	lr
 1885              		.cfi_endproc
 1886              	.LFE151:
 1888              		.section	.text.HAL_DMA2D_PollForTransfer,"ax",%progbits
 1889              		.align	2
ARM GAS  /tmp/ccjIcGgN.s 			page 61


 1890              		.global	HAL_DMA2D_PollForTransfer
 1891              		.thumb
 1892              		.thumb_func
 1894              	HAL_DMA2D_PollForTransfer:
 1895              	.LFB152:
1007:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1008:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1009:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1010:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1011:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Polling for transfer complete or CLUT loading.
1012:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: Pointer to a DMA2D_HandleTypeDef structure that contains
1013:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D. 
1014:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Timeout: Timeout duration
1015:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1016:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1017:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_PollForTransfer(DMA2D_HandleTypeDef *hdma2d, uint32_t Timeout)
1018:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 1896              		.loc 1 1018 0
 1897              		.cfi_startproc
 1898              		@ args = 0, pretend = 0, frame = 16
 1899              		@ frame_needed = 1, uses_anonymous_args = 0
 1900 0000 80B5     		push	{r7, lr}
 1901              	.LCFI92:
 1902              		.cfi_def_cfa_offset 8
 1903              		.cfi_offset 7, -8
 1904              		.cfi_offset 14, -4
 1905 0002 84B0     		sub	sp, sp, #16
 1906              	.LCFI93:
 1907              		.cfi_def_cfa_offset 24
 1908 0004 00AF     		add	r7, sp, #0
 1909              	.LCFI94:
 1910              		.cfi_def_cfa_register 7
 1911 0006 7860     		str	r0, [r7, #4]
 1912 0008 3960     		str	r1, [r7]
1019:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tickstart = 0;
 1913              		.loc 1 1019 0
 1914 000a 0023     		movs	r3, #0
 1915 000c FB60     		str	r3, [r7, #12]
1020:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __IO uint32_t isrflags = 0x0;  
 1916              		.loc 1 1020 0
 1917 000e 0023     		movs	r3, #0
 1918 0010 BB60     		str	r3, [r7, #8]
1021:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1022:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Polling for DMA2D transfer */
1023:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if((hdma2d->Instance->CR & DMA2D_CR_START) != RESET)
 1919              		.loc 1 1023 0
 1920 0012 7B68     		ldr	r3, [r7, #4]
 1921 0014 1B68     		ldr	r3, [r3]
 1922 0016 1B68     		ldr	r3, [r3]
 1923 0018 03F00103 		and	r3, r3, #1
 1924 001c 002B     		cmp	r3, #0
 1925 001e 56D0     		beq	.L91
1024:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1025:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Get tick */
1026:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    tickstart = HAL_GetTick();
 1926              		.loc 1 1026 0
 1927 0020 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccjIcGgN.s 			page 62


 1928 0024 F860     		str	r0, [r7, #12]
1027:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1028:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_TC) == RESET)
 1929              		.loc 1 1028 0
 1930 0026 4BE0     		b	.L92
 1931              	.L98:
1029:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1030:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR); 
 1932              		.loc 1 1030 0
 1933 0028 7B68     		ldr	r3, [r7, #4]
 1934 002a 1B68     		ldr	r3, [r3]
 1935 002c 5B68     		ldr	r3, [r3, #4]
 1936 002e BB60     		str	r3, [r7, #8]
1031:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != RESET)
 1937              		.loc 1 1031 0
 1938 0030 BB68     		ldr	r3, [r7, #8]
 1939 0032 03F02103 		and	r3, r3, #33
 1940 0036 002B     		cmp	r3, #0
 1941 0038 23D0     		beq	.L93
1032:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1033:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != RESET)
 1942              		.loc 1 1033 0
 1943 003a BB68     		ldr	r3, [r7, #8]
 1944 003c 03F02003 		and	r3, r3, #32
 1945 0040 002B     		cmp	r3, #0
 1946 0042 05D0     		beq	.L94
1034:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1035:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;        
 1947              		.loc 1 1035 0
 1948 0044 7B68     		ldr	r3, [r7, #4]
 1949 0046 5B6D     		ldr	r3, [r3, #84]
 1950 0048 43F00202 		orr	r2, r3, #2
 1951 004c 7B68     		ldr	r3, [r7, #4]
 1952 004e 5A65     		str	r2, [r3, #84]
 1953              	.L94:
1036:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1037:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != RESET)        
 1954              		.loc 1 1037 0
 1955 0050 BB68     		ldr	r3, [r7, #8]
 1956 0052 03F00103 		and	r3, r3, #1
 1957 0056 002B     		cmp	r3, #0
 1958 0058 05D0     		beq	.L95
1038:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1039:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;        
 1959              		.loc 1 1039 0
 1960 005a 7B68     		ldr	r3, [r7, #4]
 1961 005c 5B6D     		ldr	r3, [r3, #84]
 1962 005e 43F00102 		orr	r2, r3, #1
 1963 0062 7B68     		ldr	r3, [r7, #4]
 1964 0064 5A65     		str	r2, [r3, #84]
 1965              	.L95:
1040:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1041:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Clear the transfer and configuration error flags */
1042:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 1966              		.loc 1 1042 0
 1967 0066 7B68     		ldr	r3, [r7, #4]
 1968 0068 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccjIcGgN.s 			page 63


 1969 006a 2122     		movs	r2, #33
 1970 006c 9A60     		str	r2, [r3, #8]
1043:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1044:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Change DMA2D state */
1045:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->State = HAL_DMA2D_STATE_ERROR;
 1971              		.loc 1 1045 0
 1972 006e 7B68     		ldr	r3, [r7, #4]
 1973 0070 0422     		movs	r2, #4
 1974 0072 83F85120 		strb	r2, [r3, #81]
1046:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1047:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Process unlocked */
1048:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
 1975              		.loc 1 1048 0
 1976 0076 7B68     		ldr	r3, [r7, #4]
 1977 0078 0022     		movs	r2, #0
 1978 007a 83F85020 		strb	r2, [r3, #80]
1049:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
1050:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         return HAL_ERROR;
 1979              		.loc 1 1050 0
 1980 007e 0123     		movs	r3, #1
 1981 0080 A2E0     		b	.L96
 1982              	.L93:
1051:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1052:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Check for the Timeout */
1053:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
 1983              		.loc 1 1053 0
 1984 0082 3B68     		ldr	r3, [r7]
 1985 0084 B3F1FF3F 		cmp	r3, #-1
 1986 0088 1AD0     		beq	.L92
1054:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1055:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 1987              		.loc 1 1055 0
 1988 008a 3B68     		ldr	r3, [r7]
 1989 008c 002B     		cmp	r3, #0
 1990 008e 07D0     		beq	.L97
 1991              		.loc 1 1055 0 is_stmt 0 discriminator 1
 1992 0090 FFF7FEFF 		bl	HAL_GetTick
 1993 0094 0246     		mov	r2, r0
 1994 0096 FB68     		ldr	r3, [r7, #12]
 1995 0098 D21A     		subs	r2, r2, r3
 1996 009a 3B68     		ldr	r3, [r7]
 1997 009c 9A42     		cmp	r2, r3
 1998 009e 0FD9     		bls	.L92
 1999              	.L97:
1056:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1057:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Update error code */
1058:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 2000              		.loc 1 1058 0 is_stmt 1
 2001 00a0 7B68     		ldr	r3, [r7, #4]
 2002 00a2 5B6D     		ldr	r3, [r3, #84]
 2003 00a4 43F02002 		orr	r2, r3, #32
 2004 00a8 7B68     		ldr	r3, [r7, #4]
 2005 00aa 5A65     		str	r2, [r3, #84]
1059:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1060:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1061:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 2006              		.loc 1 1061 0
ARM GAS  /tmp/ccjIcGgN.s 			page 64


 2007 00ac 7B68     		ldr	r3, [r7, #4]
 2008 00ae 0322     		movs	r2, #3
 2009 00b0 83F85120 		strb	r2, [r3, #81]
1062:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****          
1063:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Process unlocked */
1064:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
 2010              		.loc 1 1064 0
 2011 00b4 7B68     		ldr	r3, [r7, #4]
 2012 00b6 0022     		movs	r2, #0
 2013 00b8 83F85020 		strb	r2, [r3, #80]
1065:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****            
1066:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
 2014              		.loc 1 1066 0
 2015 00bc 0323     		movs	r3, #3
 2016 00be 83E0     		b	.L96
 2017              	.L92:
1028:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 2018              		.loc 1 1028 0
 2019 00c0 7B68     		ldr	r3, [r7, #4]
 2020 00c2 1B68     		ldr	r3, [r3]
 2021 00c4 5B68     		ldr	r3, [r3, #4]
 2022 00c6 03F00203 		and	r3, r3, #2
 2023 00ca 002B     		cmp	r3, #0
 2024 00cc ACD0     		beq	.L98
 2025              	.L91:
1067:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1068:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }        
1069:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1070:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1071:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Polling for CLUT loading (foreground or background) */
1072:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) != RESET)  || 
 2026              		.loc 1 1072 0
 2027 00ce 7B68     		ldr	r3, [r7, #4]
 2028 00d0 1B68     		ldr	r3, [r3]
 2029 00d2 DB69     		ldr	r3, [r3, #28]
 2030 00d4 03F02003 		and	r3, r3, #32
 2031 00d8 002B     		cmp	r3, #0
 2032 00da 06D1     		bne	.L99
1073:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) != RESET))
 2033              		.loc 1 1073 0 discriminator 1
 2034 00dc 7B68     		ldr	r3, [r7, #4]
 2035 00de 1B68     		ldr	r3, [r3]
 2036 00e0 5B6A     		ldr	r3, [r3, #36]
 2037 00e2 03F02003 		and	r3, r3, #32
1072:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) != RESET))
 2038              		.loc 1 1072 0 discriminator 1
 2039 00e6 002B     		cmp	r3, #0
 2040 00e8 61D0     		beq	.L100
 2041              	.L99:
1074:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1075:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Get tick */
1076:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tickstart = HAL_GetTick();
 2042              		.loc 1 1076 0
 2043 00ea FFF7FEFF 		bl	HAL_GetTick
 2044 00ee F860     		str	r0, [r7, #12]
1077:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    
1078:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     while(__HAL_DMA2D_GET_FLAG(hdma2d, DMA2D_FLAG_CTC) == RESET)
ARM GAS  /tmp/ccjIcGgN.s 			page 65


 2045              		.loc 1 1078 0
 2046 00f0 56E0     		b	.L101
 2047              	.L107:
1079:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1080:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       isrflags = READ_REG(hdma2d->Instance->ISR);   
 2048              		.loc 1 1080 0
 2049 00f2 7B68     		ldr	r3, [r7, #4]
 2050 00f4 1B68     		ldr	r3, [r3]
 2051 00f6 5B68     		ldr	r3, [r3, #4]
 2052 00f8 BB60     		str	r3, [r7, #8]
1081:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if ((isrflags & (DMA2D_FLAG_CAE|DMA2D_FLAG_CE|DMA2D_FLAG_TE)) != RESET)        
 2053              		.loc 1 1081 0
 2054 00fa BB68     		ldr	r3, [r7, #8]
 2055 00fc 03F02903 		and	r3, r3, #41
 2056 0100 002B     		cmp	r3, #0
 2057 0102 2ED0     		beq	.L102
1082:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {      
1083:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CAE) != RESET)
 2058              		.loc 1 1083 0
 2059 0104 BB68     		ldr	r3, [r7, #8]
 2060 0106 03F00803 		and	r3, r3, #8
 2061 010a 002B     		cmp	r3, #0
 2062 010c 05D0     		beq	.L103
1084:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1085:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;        
 2063              		.loc 1 1085 0
 2064 010e 7B68     		ldr	r3, [r7, #4]
 2065 0110 5B6D     		ldr	r3, [r3, #84]
 2066 0112 43F00402 		orr	r2, r3, #4
 2067 0116 7B68     		ldr	r3, [r7, #4]
 2068 0118 5A65     		str	r2, [r3, #84]
 2069              	.L103:
1086:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }   
1087:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_CE) != RESET)             
 2070              		.loc 1 1087 0
 2071 011a BB68     		ldr	r3, [r7, #8]
 2072 011c 03F02003 		and	r3, r3, #32
 2073 0120 002B     		cmp	r3, #0
 2074 0122 05D0     		beq	.L104
1088:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1089:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;        
 2075              		.loc 1 1089 0
 2076 0124 7B68     		ldr	r3, [r7, #4]
 2077 0126 5B6D     		ldr	r3, [r3, #84]
 2078 0128 43F00202 		orr	r2, r3, #2
 2079 012c 7B68     		ldr	r3, [r7, #4]
 2080 012e 5A65     		str	r2, [r3, #84]
 2081              	.L104:
1090:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1091:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if ((isrflags & DMA2D_FLAG_TE) != RESET)        
 2082              		.loc 1 1091 0
 2083 0130 BB68     		ldr	r3, [r7, #8]
 2084 0132 03F00103 		and	r3, r3, #1
 2085 0136 002B     		cmp	r3, #0
 2086 0138 05D0     		beq	.L105
1092:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1093:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;        
ARM GAS  /tmp/ccjIcGgN.s 			page 66


 2087              		.loc 1 1093 0
 2088 013a 7B68     		ldr	r3, [r7, #4]
 2089 013c 5B6D     		ldr	r3, [r3, #84]
 2090 013e 43F00102 		orr	r2, r3, #1
 2091 0142 7B68     		ldr	r3, [r7, #4]
 2092 0144 5A65     		str	r2, [r3, #84]
 2093              	.L105:
1094:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1095:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Clear the CLUT Access Error, Configuration Error and Transfer Error flags */
1096:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 2094              		.loc 1 1096 0
 2095 0146 7B68     		ldr	r3, [r7, #4]
 2096 0148 1B68     		ldr	r3, [r3]
 2097 014a 2922     		movs	r2, #41
 2098 014c 9A60     		str	r2, [r3, #8]
1097:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
1098:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Change DMA2D state */
1099:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->State= HAL_DMA2D_STATE_ERROR;
 2099              		.loc 1 1099 0
 2100 014e 7B68     		ldr	r3, [r7, #4]
 2101 0150 0422     		movs	r2, #4
 2102 0152 83F85120 		strb	r2, [r3, #81]
1100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
1101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Process unlocked */
1102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         __HAL_UNLOCK(hdma2d);
 2103              		.loc 1 1102 0
 2104 0156 7B68     		ldr	r3, [r7, #4]
 2105 0158 0022     		movs	r2, #0
 2106 015a 83F85020 		strb	r2, [r3, #80]
1103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           
1104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         return HAL_ERROR;      
 2107              		.loc 1 1104 0
 2108 015e 0123     		movs	r3, #1
 2109 0160 32E0     		b	.L96
 2110              	.L102:
1105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }      
1106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Check for the Timeout */
1107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(Timeout != HAL_MAX_DELAY)
 2111              		.loc 1 1107 0
 2112 0162 3B68     		ldr	r3, [r7]
 2113 0164 B3F1FF3F 		cmp	r3, #-1
 2114 0168 1AD0     		beq	.L101
1108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 2115              		.loc 1 1109 0
 2116 016a 3B68     		ldr	r3, [r7]
 2117 016c 002B     		cmp	r3, #0
 2118 016e 07D0     		beq	.L106
 2119              		.loc 1 1109 0 is_stmt 0 discriminator 1
 2120 0170 FFF7FEFF 		bl	HAL_GetTick
 2121 0174 0246     		mov	r2, r0
 2122 0176 FB68     		ldr	r3, [r7, #12]
 2123 0178 D21A     		subs	r2, r2, r3
 2124 017a 3B68     		ldr	r3, [r7]
 2125 017c 9A42     		cmp	r2, r3
 2126 017e 0FD9     		bls	.L101
 2127              	.L106:
ARM GAS  /tmp/ccjIcGgN.s 			page 67


1110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         {
1111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Update error code */
1112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 2128              		.loc 1 1112 0 is_stmt 1
 2129 0180 7B68     		ldr	r3, [r7, #4]
 2130 0182 5B6D     		ldr	r3, [r3, #84]
 2131 0184 43F02002 		orr	r2, r3, #32
 2132 0188 7B68     		ldr	r3, [r7, #4]
 2133 018a 5A65     		str	r2, [r3, #84]
1113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Change the DMA2D state */
1115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           hdma2d->State= HAL_DMA2D_STATE_TIMEOUT;
 2134              		.loc 1 1115 0
 2135 018c 7B68     		ldr	r3, [r7, #4]
 2136 018e 0322     		movs	r2, #3
 2137 0190 83F85120 		strb	r2, [r3, #81]
1116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
1117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           /* Process unlocked */
1118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           __HAL_UNLOCK(hdma2d);
 2138              		.loc 1 1118 0
 2139 0194 7B68     		ldr	r3, [r7, #4]
 2140 0196 0022     		movs	r2, #0
 2141 0198 83F85020 		strb	r2, [r3, #80]
1119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                     
1120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           return HAL_TIMEOUT;
 2142              		.loc 1 1120 0
 2143 019c 0323     		movs	r3, #3
 2144 019e 13E0     		b	.L96
 2145              	.L101:
1078:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
 2146              		.loc 1 1078 0
 2147 01a0 7B68     		ldr	r3, [r7, #4]
 2148 01a2 1B68     		ldr	r3, [r3]
 2149 01a4 5B68     		ldr	r3, [r3, #4]
 2150 01a6 03F01003 		and	r3, r3, #16
 2151 01aa 002B     		cmp	r3, #0
 2152 01ac A1D0     		beq	.L107
 2153              	.L100:
1121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         }
1122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }      
1123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Clear the transfer complete and CLUT loading flags */
1127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC|DMA2D_FLAG_CTC);
 2154              		.loc 1 1127 0
 2155 01ae 7B68     		ldr	r3, [r7, #4]
 2156 01b0 1B68     		ldr	r3, [r3]
 2157 01b2 1222     		movs	r2, #18
 2158 01b4 9A60     		str	r2, [r3, #8]
1128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D state */
1130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 2159              		.loc 1 1130 0
 2160 01b6 7B68     		ldr	r3, [r7, #4]
 2161 01b8 0122     		movs	r2, #1
 2162 01ba 83F85120 		strb	r2, [r3, #81]
ARM GAS  /tmp/ccjIcGgN.s 			page 68


1131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process unlocked */
1133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 2163              		.loc 1 1133 0
 2164 01be 7B68     		ldr	r3, [r7, #4]
 2165 01c0 0022     		movs	r2, #0
 2166 01c2 83F85020 		strb	r2, [r3, #80]
1134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 2167              		.loc 1 1135 0
 2168 01c6 0023     		movs	r3, #0
 2169              	.L96:
1136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2170              		.loc 1 1136 0
 2171 01c8 1846     		mov	r0, r3
 2172 01ca 1037     		adds	r7, r7, #16
 2173              	.LCFI95:
 2174              		.cfi_def_cfa_offset 8
 2175 01cc BD46     		mov	sp, r7
 2176              	.LCFI96:
 2177              		.cfi_def_cfa_register 13
 2178              		@ sp needed
 2179 01ce 80BD     		pop	{r7, pc}
 2180              		.cfi_endproc
 2181              	.LFE152:
 2183              		.section	.text.HAL_DMA2D_IRQHandler,"ax",%progbits
 2184              		.align	2
 2185              		.global	HAL_DMA2D_IRQHandler
 2186              		.thumb
 2187              		.thumb_func
 2189              	HAL_DMA2D_IRQHandler:
 2190              	.LFB153:
1137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Handle DMA2D interrupt request.
1139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: Pointer to a DMA2D_HandleTypeDef structure that contains
1140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.  
1141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
1144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 2191              		.loc 1 1144 0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 16
 2194              		@ frame_needed = 1, uses_anonymous_args = 0
 2195 0000 80B5     		push	{r7, lr}
 2196              	.LCFI97:
 2197              		.cfi_def_cfa_offset 8
 2198              		.cfi_offset 7, -8
 2199              		.cfi_offset 14, -4
 2200 0002 84B0     		sub	sp, sp, #16
 2201              	.LCFI98:
 2202              		.cfi_def_cfa_offset 24
 2203 0004 00AF     		add	r7, sp, #0
 2204              	.LCFI99:
 2205              		.cfi_def_cfa_register 7
 2206 0006 7860     		str	r0, [r7, #4]
1145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
ARM GAS  /tmp/ccjIcGgN.s 			page 69


 2207              		.loc 1 1145 0
 2208 0008 7B68     		ldr	r3, [r7, #4]
 2209 000a 1B68     		ldr	r3, [r3]
 2210 000c 5B68     		ldr	r3, [r3, #4]
 2211 000e FB60     		str	r3, [r7, #12]
1146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 2212              		.loc 1 1146 0
 2213 0010 7B68     		ldr	r3, [r7, #4]
 2214 0012 1B68     		ldr	r3, [r3]
 2215 0014 1B68     		ldr	r3, [r3]
 2216 0016 BB60     		str	r3, [r7, #8]
1147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
1148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Transfer Error Interrupt management ***************************************/
1149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TE) != RESET)
 2217              		.loc 1 1149 0
 2218 0018 FB68     		ldr	r3, [r7, #12]
 2219 001a 03F00103 		and	r3, r3, #1
 2220 001e 002B     		cmp	r3, #0
 2221 0020 26D0     		beq	.L109
1150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TE) != RESET)    
 2222              		.loc 1 1151 0
 2223 0022 BB68     		ldr	r3, [r7, #8]
 2224 0024 03F48073 		and	r3, r3, #256
 2225 0028 002B     		cmp	r3, #0
 2226 002a 21D0     		beq	.L109
1152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the transfer Error interrupt */
1154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);  
 2227              		.loc 1 1154 0
 2228 002c 7B68     		ldr	r3, [r7, #4]
 2229 002e 1B68     		ldr	r3, [r3]
 2230 0030 7A68     		ldr	r2, [r7, #4]
 2231 0032 1268     		ldr	r2, [r2]
 2232 0034 1268     		ldr	r2, [r2]
 2233 0036 22F48072 		bic	r2, r2, #256
 2234 003a 1A60     		str	r2, [r3]
1155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 2235              		.loc 1 1157 0
 2236 003c 7B68     		ldr	r3, [r7, #4]
 2237 003e 5B6D     		ldr	r3, [r3, #84]
 2238 0040 43F00102 		orr	r2, r3, #1
 2239 0044 7B68     		ldr	r3, [r7, #4]
 2240 0046 5A65     		str	r2, [r3, #84]
1158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the transfer error flag */
1160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 2241              		.loc 1 1160 0
 2242 0048 7B68     		ldr	r3, [r7, #4]
 2243 004a 1B68     		ldr	r3, [r3]
 2244 004c 0122     		movs	r2, #1
 2245 004e 9A60     		str	r2, [r3, #8]
1161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
ARM GAS  /tmp/ccjIcGgN.s 			page 70


 2246              		.loc 1 1163 0
 2247 0050 7B68     		ldr	r3, [r7, #4]
 2248 0052 0422     		movs	r2, #4
 2249 0054 83F85120 		strb	r2, [r3, #81]
1164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);       
 2250              		.loc 1 1166 0
 2251 0058 7B68     		ldr	r3, [r7, #4]
 2252 005a 0022     		movs	r2, #0
 2253 005c 83F85020 		strb	r2, [r3, #80]
1167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
1168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
 2254              		.loc 1 1168 0
 2255 0060 7B68     		ldr	r3, [r7, #4]
 2256 0062 DB69     		ldr	r3, [r3, #28]
 2257 0064 002B     		cmp	r3, #0
 2258 0066 03D0     		beq	.L109
1169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer error Callback */
1171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
 2259              		.loc 1 1171 0
 2260 0068 7B68     		ldr	r3, [r7, #4]
 2261 006a DB69     		ldr	r3, [r3, #28]
 2262 006c 7868     		ldr	r0, [r7, #4]
 2263 006e 9847     		blx	r3
 2264              	.L109:
1172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configuration Error Interrupt management **********************************/
1176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CE) != RESET)
 2265              		.loc 1 1176 0
 2266 0070 FB68     		ldr	r3, [r7, #12]
 2267 0072 03F02003 		and	r3, r3, #32
 2268 0076 002B     		cmp	r3, #0
 2269 0078 26D0     		beq	.L110
1177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CE) != RESET)    
 2270              		.loc 1 1178 0
 2271 007a BB68     		ldr	r3, [r7, #8]
 2272 007c 03F40053 		and	r3, r3, #8192
 2273 0080 002B     		cmp	r3, #0
 2274 0082 21D0     		beq	.L110
1179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {  
1180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the Configuration Error interrupt */
1181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 2275              		.loc 1 1181 0
 2276 0084 7B68     		ldr	r3, [r7, #4]
 2277 0086 1B68     		ldr	r3, [r3]
 2278 0088 7A68     		ldr	r2, [r7, #4]
 2279 008a 1268     		ldr	r2, [r2]
 2280 008c 1268     		ldr	r2, [r2]
 2281 008e 22F40052 		bic	r2, r2, #8192
 2282 0092 1A60     		str	r2, [r3]
1182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the Configuration error flag */
ARM GAS  /tmp/ccjIcGgN.s 			page 71


1184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 2283              		.loc 1 1184 0
 2284 0094 7B68     		ldr	r3, [r7, #4]
 2285 0096 1B68     		ldr	r3, [r3]
 2286 0098 2022     		movs	r2, #32
 2287 009a 9A60     		str	r2, [r3, #8]
1185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;    
 2288              		.loc 1 1187 0
 2289 009c 7B68     		ldr	r3, [r7, #4]
 2290 009e 5B6D     		ldr	r3, [r3, #84]
 2291 00a0 43F00202 		orr	r2, r3, #2
 2292 00a4 7B68     		ldr	r3, [r7, #4]
 2293 00a6 5A65     		str	r2, [r3, #84]
1188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2294              		.loc 1 1190 0
 2295 00a8 7B68     		ldr	r3, [r7, #4]
 2296 00aa 0422     		movs	r2, #4
 2297 00ac 83F85120 		strb	r2, [r3, #81]
1191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);       
 2298              		.loc 1 1193 0
 2299 00b0 7B68     		ldr	r3, [r7, #4]
 2300 00b2 0022     		movs	r2, #0
 2301 00b4 83F85020 		strb	r2, [r3, #80]
1194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
1195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
 2302              		.loc 1 1195 0
 2303 00b8 7B68     		ldr	r3, [r7, #4]
 2304 00ba DB69     		ldr	r3, [r3, #28]
 2305 00bc 002B     		cmp	r3, #0
 2306 00be 03D0     		beq	.L110
1196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer error Callback */
1198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
 2307              		.loc 1 1198 0
 2308 00c0 7B68     		ldr	r3, [r7, #4]
 2309 00c2 DB69     		ldr	r3, [r3, #28]
 2310 00c4 7868     		ldr	r0, [r7, #4]
 2311 00c6 9847     		blx	r3
 2312              	.L110:
1199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* CLUT access Error Interrupt management ***********************************/
1203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CAE) != RESET)
 2313              		.loc 1 1203 0
 2314 00c8 FB68     		ldr	r3, [r7, #12]
 2315 00ca 03F00803 		and	r3, r3, #8
 2316 00ce 002B     		cmp	r3, #0
 2317 00d0 26D0     		beq	.L111
1204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CAE) != RESET)    
ARM GAS  /tmp/ccjIcGgN.s 			page 72


 2318              		.loc 1 1205 0
 2319 00d2 BB68     		ldr	r3, [r7, #8]
 2320 00d4 03F40063 		and	r3, r3, #2048
 2321 00d8 002B     		cmp	r3, #0
 2322 00da 21D0     		beq	.L111
1206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {    
1207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the CLUT access error interrupt */
1208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 2323              		.loc 1 1208 0
 2324 00dc 7B68     		ldr	r3, [r7, #4]
 2325 00de 1B68     		ldr	r3, [r3]
 2326 00e0 7A68     		ldr	r2, [r7, #4]
 2327 00e2 1268     		ldr	r2, [r2]
 2328 00e4 1268     		ldr	r2, [r2]
 2329 00e6 22F40062 		bic	r2, r2, #2048
 2330 00ea 1A60     		str	r2, [r3]
1209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the CLUT access error flag */
1211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 2331              		.loc 1 1211 0
 2332 00ec 7B68     		ldr	r3, [r7, #4]
 2333 00ee 1B68     		ldr	r3, [r3]
 2334 00f0 0822     		movs	r2, #8
 2335 00f2 9A60     		str	r2, [r3, #8]
1212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;    
 2336              		.loc 1 1214 0
 2337 00f4 7B68     		ldr	r3, [r7, #4]
 2338 00f6 5B6D     		ldr	r3, [r3, #84]
 2339 00f8 43F00402 		orr	r2, r3, #4
 2340 00fc 7B68     		ldr	r3, [r7, #4]
 2341 00fe 5A65     		str	r2, [r3, #84]
1215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_ERROR;
 2342              		.loc 1 1217 0
 2343 0100 7B68     		ldr	r3, [r7, #4]
 2344 0102 0422     		movs	r2, #4
 2345 0104 83F85120 		strb	r2, [r3, #81]
1218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);       
 2346              		.loc 1 1220 0
 2347 0108 7B68     		ldr	r3, [r7, #4]
 2348 010a 0022     		movs	r2, #0
 2349 010c 83F85020 		strb	r2, [r3, #80]
1221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
1222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferErrorCallback != NULL)
 2350              		.loc 1 1222 0
 2351 0110 7B68     		ldr	r3, [r7, #4]
 2352 0112 DB69     		ldr	r3, [r3, #28]
 2353 0114 002B     		cmp	r3, #0
 2354 0116 03D0     		beq	.L111
1223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
1224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer error Callback */
1225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferErrorCallback(hdma2d);
ARM GAS  /tmp/ccjIcGgN.s 			page 73


 2355              		.loc 1 1225 0
 2356 0118 7B68     		ldr	r3, [r7, #4]
 2357 011a DB69     		ldr	r3, [r3, #28]
 2358 011c 7868     		ldr	r0, [r7, #4]
 2359 011e 9847     		blx	r3
 2360              	.L111:
1226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }
1227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }  
1229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Transfer watermark Interrupt management **********************************/
1230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TW) != RESET)
 2361              		.loc 1 1230 0
 2362 0120 FB68     		ldr	r3, [r7, #12]
 2363 0122 03F00403 		and	r3, r3, #4
 2364 0126 002B     		cmp	r3, #0
 2365 0128 13D0     		beq	.L112
1231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TW) != RESET)    
 2366              		.loc 1 1232 0
 2367 012a BB68     		ldr	r3, [r7, #8]
 2368 012c 03F48063 		and	r3, r3, #1024
 2369 0130 002B     		cmp	r3, #0
 2370 0132 0ED0     		beq	.L112
1233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {    
1234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the transfer watermark interrupt */
1235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 2371              		.loc 1 1235 0
 2372 0134 7B68     		ldr	r3, [r7, #4]
 2373 0136 1B68     		ldr	r3, [r3]
 2374 0138 7A68     		ldr	r2, [r7, #4]
 2375 013a 1268     		ldr	r2, [r2]
 2376 013c 1268     		ldr	r2, [r2]
 2377 013e 22F48062 		bic	r2, r2, #1024
 2378 0142 1A60     		str	r2, [r3]
1236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the transfer watermark flag */  
1238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 2379              		.loc 1 1238 0
 2380 0144 7B68     		ldr	r3, [r7, #4]
 2381 0146 1B68     		ldr	r3, [r3]
 2382 0148 0422     		movs	r2, #4
 2383 014a 9A60     		str	r2, [r3, #8]
1239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Transfer watermark Callback */
1241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       HAL_DMA2D_LineEventCallback(hdma2d);
 2384              		.loc 1 1241 0
 2385 014c 7868     		ldr	r0, [r7, #4]
 2386 014e FFF7FEFF 		bl	HAL_DMA2D_LineEventCallback
 2387              	.L112:
1242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }  
1244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Transfer Complete Interrupt management ************************************/
1245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_TC) != RESET)
 2388              		.loc 1 1245 0
 2389 0152 FB68     		ldr	r3, [r7, #12]
 2390 0154 03F00203 		and	r3, r3, #2
 2391 0158 002B     		cmp	r3, #0
ARM GAS  /tmp/ccjIcGgN.s 			page 74


 2392 015a 24D0     		beq	.L113
1246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_TC) != RESET)    
 2393              		.loc 1 1247 0
 2394 015c BB68     		ldr	r3, [r7, #8]
 2395 015e 03F40073 		and	r3, r3, #512
 2396 0162 002B     		cmp	r3, #0
 2397 0164 1FD0     		beq	.L113
1248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {   
1249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the transfer complete interrupt */
1250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 2398              		.loc 1 1250 0
 2399 0166 7B68     		ldr	r3, [r7, #4]
 2400 0168 1B68     		ldr	r3, [r3]
 2401 016a 7A68     		ldr	r2, [r7, #4]
 2402 016c 1268     		ldr	r2, [r2]
 2403 016e 1268     		ldr	r2, [r2]
 2404 0170 22F40072 		bic	r2, r2, #512
 2405 0174 1A60     		str	r2, [r3]
1251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the transfer complete flag */  
1253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 2406              		.loc 1 1253 0
 2407 0176 7B68     		ldr	r3, [r7, #4]
 2408 0178 1B68     		ldr	r3, [r3]
 2409 017a 0222     		movs	r2, #2
 2410 017c 9A60     		str	r2, [r3, #8]
1254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;    
 2411              		.loc 1 1256 0
 2412 017e 7B68     		ldr	r3, [r7, #4]
 2413 0180 5A6D     		ldr	r2, [r3, #84]
 2414 0182 7B68     		ldr	r3, [r7, #4]
 2415 0184 5A65     		str	r2, [r3, #84]
1257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
 2416              		.loc 1 1259 0
 2417 0186 7B68     		ldr	r3, [r7, #4]
 2418 0188 0122     		movs	r2, #1
 2419 018a 83F85120 		strb	r2, [r3, #81]
1260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);       
 2420              		.loc 1 1262 0
 2421 018e 7B68     		ldr	r3, [r7, #4]
 2422 0190 0022     		movs	r2, #0
 2423 0192 83F85020 		strb	r2, [r3, #80]
1263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
1264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       if(hdma2d->XferCpltCallback != NULL)
 2424              		.loc 1 1264 0
 2425 0196 7B68     		ldr	r3, [r7, #4]
 2426 0198 9B69     		ldr	r3, [r3, #24]
 2427 019a 002B     		cmp	r3, #0
 2428 019c 03D0     		beq	.L113
1265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       {
ARM GAS  /tmp/ccjIcGgN.s 			page 75


1266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         /* Transfer complete Callback */
1267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         hdma2d->XferCpltCallback(hdma2d);
 2429              		.loc 1 1267 0
 2430 019e 7B68     		ldr	r3, [r7, #4]
 2431 01a0 9B69     		ldr	r3, [r3, #24]
 2432 01a2 7868     		ldr	r0, [r7, #4]
 2433 01a4 9847     		blx	r3
 2434              	.L113:
1268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       }         
1269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* CLUT Transfer Complete Interrupt management ******************************/
1272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((isrflags & DMA2D_FLAG_CTC) != RESET)
 2435              		.loc 1 1272 0
 2436 01a6 FB68     		ldr	r3, [r7, #12]
 2437 01a8 03F01003 		and	r3, r3, #16
 2438 01ac 002B     		cmp	r3, #0
 2439 01ae 1FD0     		beq	.L108
1273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((crflags & DMA2D_IT_CTC) != RESET)    
 2440              		.loc 1 1274 0
 2441 01b0 BB68     		ldr	r3, [r7, #8]
 2442 01b2 03F48053 		and	r3, r3, #4096
 2443 01b6 002B     		cmp	r3, #0
 2444 01b8 1AD0     		beq	.L108
1275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {    
1276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Disable the CLUT transfer complete interrupt */
1277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 2445              		.loc 1 1277 0
 2446 01ba 7B68     		ldr	r3, [r7, #4]
 2447 01bc 1B68     		ldr	r3, [r3]
 2448 01be 7A68     		ldr	r2, [r7, #4]
 2449 01c0 1268     		ldr	r2, [r2]
 2450 01c2 1268     		ldr	r2, [r2]
 2451 01c4 22F48052 		bic	r2, r2, #4096
 2452 01c8 1A60     		str	r2, [r3]
1278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Clear the CLUT transfer complete flag */  
1280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 2453              		.loc 1 1280 0
 2454 01ca 7B68     		ldr	r3, [r7, #4]
 2455 01cc 1B68     		ldr	r3, [r3]
 2456 01ce 1022     		movs	r2, #16
 2457 01d0 9A60     		str	r2, [r3, #8]
1281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Update error code */
1283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;    
 2458              		.loc 1 1283 0
 2459 01d2 7B68     		ldr	r3, [r7, #4]
 2460 01d4 5A6D     		ldr	r2, [r3, #84]
 2461 01d6 7B68     		ldr	r3, [r7, #4]
 2462 01d8 5A65     		str	r2, [r3, #84]
1284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Change DMA2D state */
1286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       hdma2d->State = HAL_DMA2D_STATE_READY;
 2463              		.loc 1 1286 0
 2464 01da 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjIcGgN.s 			page 76


 2465 01dc 0122     		movs	r2, #1
 2466 01de 83F85120 		strb	r2, [r3, #81]
1287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* Process Unlocked */
1289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       __HAL_UNLOCK(hdma2d);       
 2467              		.loc 1 1289 0
 2468 01e2 7B68     		ldr	r3, [r7, #4]
 2469 01e4 0022     		movs	r2, #0
 2470 01e6 83F85020 		strb	r2, [r3, #80]
1290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       
1291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       /* CLUT Transfer complete Callback */
1292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);         
 2471              		.loc 1 1292 0
 2472 01ea 7868     		ldr	r0, [r7, #4]
 2473 01ec FFF7FEFF 		bl	HAL_DMA2D_CLUTLoadingCpltCallback
 2474              	.L108:
1293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }  
1295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2475              		.loc 1 1296 0
 2476 01f0 1037     		adds	r7, r7, #16
 2477              	.LCFI100:
 2478              		.cfi_def_cfa_offset 8
 2479 01f2 BD46     		mov	sp, r7
 2480              	.LCFI101:
 2481              		.cfi_def_cfa_register 13
 2482              		@ sp needed
 2483 01f4 80BD     		pop	{r7, pc}
 2484              		.cfi_endproc
 2485              	.LFE153:
 2487 01f6 00BF     		.section	.text.HAL_DMA2D_LineEventCallback,"ax",%progbits
 2488              		.align	2
 2489              		.weak	HAL_DMA2D_LineEventCallback
 2490              		.thumb
 2491              		.thumb_func
 2493              	HAL_DMA2D_LineEventCallback:
 2494              	.LFB154:
1297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Transfer watermark callback.
1300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
1301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
1303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
1305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 2495              		.loc 1 1305 0
 2496              		.cfi_startproc
 2497              		@ args = 0, pretend = 0, frame = 8
 2498              		@ frame_needed = 1, uses_anonymous_args = 0
 2499              		@ link register save eliminated.
 2500 0000 80B4     		push	{r7}
 2501              	.LCFI102:
 2502              		.cfi_def_cfa_offset 4
 2503              		.cfi_offset 7, -4
 2504 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccjIcGgN.s 			page 77


 2505              	.LCFI103:
 2506              		.cfi_def_cfa_offset 16
 2507 0004 00AF     		add	r7, sp, #0
 2508              	.LCFI104:
 2509              		.cfi_def_cfa_register 7
 2510 0006 7860     		str	r0, [r7, #4]
1306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_LineEventCallback can be implemented in the user file.
1311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
1312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2511              		.loc 1 1312 0
 2512 0008 0C37     		adds	r7, r7, #12
 2513              	.LCFI105:
 2514              		.cfi_def_cfa_offset 4
 2515 000a BD46     		mov	sp, r7
 2516              	.LCFI106:
 2517              		.cfi_def_cfa_register 13
 2518              		@ sp needed
 2519 000c 5DF8047B 		ldr	r7, [sp], #4
 2520              	.LCFI107:
 2521              		.cfi_restore 7
 2522              		.cfi_def_cfa_offset 0
 2523 0010 7047     		bx	lr
 2524              		.cfi_endproc
 2525              	.LFE154:
 2527 0012 00BF     		.section	.text.HAL_DMA2D_CLUTLoadingCpltCallback,"ax",%progbits
 2528              		.align	2
 2529              		.weak	HAL_DMA2D_CLUTLoadingCpltCallback
 2530              		.thumb
 2531              		.thumb_func
 2533              	HAL_DMA2D_CLUTLoadingCpltCallback:
 2534              	.LFB155:
1313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  CLUT Transfer Complete callback.
1316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
1317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval None
1319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** __weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
1321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 2535              		.loc 1 1321 0
 2536              		.cfi_startproc
 2537              		@ args = 0, pretend = 0, frame = 8
 2538              		@ frame_needed = 1, uses_anonymous_args = 0
 2539              		@ link register save eliminated.
 2540 0000 80B4     		push	{r7}
 2541              	.LCFI108:
 2542              		.cfi_def_cfa_offset 4
 2543              		.cfi_offset 7, -4
 2544 0002 83B0     		sub	sp, sp, #12
 2545              	.LCFI109:
 2546              		.cfi_def_cfa_offset 16
 2547 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccjIcGgN.s 			page 78


 2548              	.LCFI110:
 2549              		.cfi_def_cfa_register 7
 2550 0006 7860     		str	r0, [r7, #4]
1322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prevent unused argument(s) compilation warning */
1323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   UNUSED(hdma2d);
1324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* NOTE : This function should not be modified; when the callback is needed,
1326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
1327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    */
1328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** } 
 2551              		.loc 1 1328 0
 2552 0008 0C37     		adds	r7, r7, #12
 2553              	.LCFI111:
 2554              		.cfi_def_cfa_offset 4
 2555 000a BD46     		mov	sp, r7
 2556              	.LCFI112:
 2557              		.cfi_def_cfa_register 13
 2558              		@ sp needed
 2559 000c 5DF8047B 		ldr	r7, [sp], #4
 2560              	.LCFI113:
 2561              		.cfi_restore 7
 2562              		.cfi_def_cfa_offset 0
 2563 0010 7047     		bx	lr
 2564              		.cfi_endproc
 2565              	.LFE155:
 2567 0012 00BF     		.section	.text.HAL_DMA2D_ConfigLayer,"ax",%progbits
 2568              		.align	2
 2569              		.global	HAL_DMA2D_ConfigLayer
 2570              		.thumb
 2571              		.thumb_func
 2573              	HAL_DMA2D_ConfigLayer:
 2574              	.LFB156:
1329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group3 Peripheral Control functions
1335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief    Peripheral Control functions 
1336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
1337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim   
1338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
1339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                     ##### Peripheral Control functions #####
1340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================  
1341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]  This section provides functions allowing to:
1342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the DMA2D foreground or background layer parameters.
1343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the DMA2D CLUT transfer.
1344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the line watermark
1345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Configure the dead time value.
1346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Enable or disable the dead time value functionality.      
1347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****           
1348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
1350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
1351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
ARM GAS  /tmp/ccjIcGgN.s 			page 79


1354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D Layer according to the specified
1355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *         parameters in the DMA2D_InitTypeDef and create the associated handle.
1356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
1357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
1359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)
1361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
1364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** { 
 2575              		.loc 1 1364 0
 2576              		.cfi_startproc
 2577              		@ args = 0, pretend = 0, frame = 56
 2578              		@ frame_needed = 1, uses_anonymous_args = 0
 2579              		@ link register save eliminated.
 2580 0000 80B4     		push	{r7}
 2581              	.LCFI114:
 2582              		.cfi_def_cfa_offset 4
 2583              		.cfi_offset 7, -4
 2584 0002 8FB0     		sub	sp, sp, #60
 2585              	.LCFI115:
 2586              		.cfi_def_cfa_offset 64
 2587 0004 00AF     		add	r7, sp, #0
 2588              	.LCFI116:
 2589              		.cfi_def_cfa_register 7
 2590 0006 7860     		str	r0, [r7, #4]
 2591 0008 3960     		str	r1, [r7]
1365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   DMA2D_LayerCfgTypeDef *pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 2592              		.loc 1 1365 0
 2593 000a 3A68     		ldr	r2, [r7]
 2594 000c 1346     		mov	r3, r2
 2595 000e 5B00     		lsls	r3, r3, #1
 2596 0010 1344     		add	r3, r3, r2
 2597 0012 DB00     		lsls	r3, r3, #3
 2598 0014 2033     		adds	r3, r3, #32
 2599 0016 7A68     		ldr	r2, [r7, #4]
 2600 0018 1344     		add	r3, r3, r2
 2601 001a 3B63     		str	r3, [r7, #48]
1366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t regMask = 0, regValue = 0;
 2602              		.loc 1 1367 0
 2603 001c 0023     		movs	r3, #0
 2604 001e FB62     		str	r3, [r7, #44]
 2605 0020 0023     		movs	r3, #0
 2606 0022 7B63     		str	r3, [r7, #52]
1368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));  
1371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_OFFSET(pLayerCfg->InputOffset));  
1372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(hdma2d->Init.Mode != DMA2D_R2M)
 2607              		.loc 1 1372 0
 2608 0024 7B68     		ldr	r3, [r7, #4]
 2609 0026 5B68     		ldr	r3, [r3, #4]
 2610 0028 B3F5403F 		cmp	r3, #196608
1373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {  
1374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     assert_param(IS_DMA2D_INPUT_COLOR_MODE(pLayerCfg->InputColorMode));
ARM GAS  /tmp/ccjIcGgN.s 			page 80


1375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if(hdma2d->Init.Mode != DMA2D_M2M)
1376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       assert_param(IS_DMA2D_ALPHA_MODE(pLayerCfg->AlphaMode));
1378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
1382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 2611              		.loc 1 1382 0
 2612 002c 7B68     		ldr	r3, [r7, #4]
 2613 002e 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2614 0032 012B     		cmp	r3, #1
 2615 0034 01D1     		bne	.L119
 2616              		.loc 1 1382 0 is_stmt 0 discriminator 1
 2617 0036 0223     		movs	r3, #2
 2618 0038 B1E0     		b	.L120
 2619              	.L119:
 2620              		.loc 1 1382 0 discriminator 2
 2621 003a 7B68     		ldr	r3, [r7, #4]
 2622 003c 0122     		movs	r2, #1
 2623 003e 83F85020 		strb	r2, [r3, #80]
1383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;  
 2624              		.loc 1 1385 0 is_stmt 1 discriminator 2
 2625 0042 7B68     		ldr	r3, [r7, #4]
 2626 0044 0222     		movs	r2, #2
 2627 0046 83F85120 		strb	r2, [r3, #81]
1386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* DMA2D BGPFCR register configuration -----------------------------------*/
1388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Prepare the value to be written to the BGPFCCR register */
1389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_POSITION_BGPFCCR_AM);
 2628              		.loc 1 1390 0 discriminator 2
 2629 004a 3B6B     		ldr	r3, [r7, #48]
 2630 004c 5A68     		ldr	r2, [r3, #4]
 2631 004e 3B6B     		ldr	r3, [r7, #48]
 2632 0050 9968     		ldr	r1, [r3, #8]
 2633 0052 4FF44033 		mov	r3, #196608
 2634 0056 BB62     		str	r3, [r7, #40]
 2635              	.LBB62:
 2636              	.LBB63:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2637              		.loc 2 531 0 discriminator 2
 2638 0058 BB6A     		ldr	r3, [r7, #40]
 2639              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2640 005a 93FAA3F3 		rbit r3, r3
 2641              	@ 0 "" 2
 2642              		.thumb
 2643 005e 7B62     		str	r3, [r7, #36]
 2644              		.loc 2 544 0 discriminator 2
 2645 0060 7B6A     		ldr	r3, [r7, #36]
 2646              	.LBE63:
 2647              	.LBE62:
 2648              		.loc 1 1390 0 discriminator 2
 2649 0062 B3FA83F3 		clz	r3, r3
 2650 0066 01FA03F3 		lsl	r3, r1, r3
ARM GAS  /tmp/ccjIcGgN.s 			page 81


 2651 006a 1343     		orrs	r3, r3, r2
 2652 006c 7B63     		str	r3, [r7, #52]
1391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 2653              		.loc 1 1391 0 discriminator 2
 2654 006e 4F4B     		ldr	r3, .L133
 2655 0070 FB62     		str	r3, [r7, #44]
1392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_FGPFCCR_AI) && defined (DMA2D_BGPFCCR_AI)
1394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regValue |= (pLayerCfg->AlphaInverted << DMA2D_POSITION_BGPFCCR_AI);
 2656              		.loc 1 1394 0 discriminator 2
 2657 0072 3B6B     		ldr	r3, [r7, #48]
 2658 0074 1A69     		ldr	r2, [r3, #16]
 2659 0076 4FF48013 		mov	r3, #1048576
 2660 007a 3B62     		str	r3, [r7, #32]
 2661              	.LBB64:
 2662              	.LBB65:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2663              		.loc 2 531 0 discriminator 2
 2664 007c 3B6A     		ldr	r3, [r7, #32]
 2665              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2666 007e 93FAA3F3 		rbit r3, r3
 2667              	@ 0 "" 2
 2668              		.thumb
 2669 0082 FB61     		str	r3, [r7, #28]
 2670              		.loc 2 544 0 discriminator 2
 2671 0084 FB69     		ldr	r3, [r7, #28]
 2672              	.LBE65:
 2673              	.LBE64:
 2674              		.loc 1 1394 0 discriminator 2
 2675 0086 B3FA83F3 		clz	r3, r3
 2676 008a 02FA03F3 		lsl	r3, r2, r3
 2677 008e 7A6B     		ldr	r2, [r7, #52]
 2678 0090 1343     		orrs	r3, r3, r2
 2679 0092 7B63     		str	r3, [r7, #52]
1395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regMask  |= DMA2D_BGPFCCR_AI;  
 2680              		.loc 1 1395 0 discriminator 2
 2681 0094 FB6A     		ldr	r3, [r7, #44]
 2682 0096 43F48013 		orr	r3, r3, #1048576
 2683 009a FB62     		str	r3, [r7, #44]
1396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif /* (DMA2D_FGPFCCR_AI) && (DMA2D_BGPFCCR_AI)  */ 
1397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #if defined (DMA2D_FGPFCCR_RBS) && defined (DMA2D_BGPFCCR_RBS)
1399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regValue |= (pLayerCfg->RedBlueSwap << DMA2D_POSITION_BGPFCCR_RBS);
 2684              		.loc 1 1399 0 discriminator 2
 2685 009c 3B6B     		ldr	r3, [r7, #48]
 2686 009e 5A69     		ldr	r2, [r3, #20]
 2687 00a0 4FF40013 		mov	r3, #2097152
 2688 00a4 BB61     		str	r3, [r7, #24]
 2689              	.LBB66:
 2690              	.LBB67:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2691              		.loc 2 531 0 discriminator 2
 2692 00a6 BB69     		ldr	r3, [r7, #24]
 2693              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2694 00a8 93FAA3F3 		rbit r3, r3
 2695              	@ 0 "" 2
 2696              		.thumb
ARM GAS  /tmp/ccjIcGgN.s 			page 82


 2697 00ac 7B61     		str	r3, [r7, #20]
 2698              		.loc 2 544 0 discriminator 2
 2699 00ae 7B69     		ldr	r3, [r7, #20]
 2700              	.LBE67:
 2701              	.LBE66:
 2702              		.loc 1 1399 0 discriminator 2
 2703 00b0 B3FA83F3 		clz	r3, r3
 2704 00b4 02FA03F3 		lsl	r3, r2, r3
 2705 00b8 7A6B     		ldr	r2, [r7, #52]
 2706 00ba 1343     		orrs	r3, r3, r2
 2707 00bc 7B63     		str	r3, [r7, #52]
1400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   regMask  |= DMA2D_BGPFCCR_RBS;  
 2708              		.loc 1 1400 0 discriminator 2
 2709 00be FB6A     		ldr	r3, [r7, #44]
 2710 00c0 43F40013 		orr	r3, r3, #2097152
 2711 00c4 FB62     		str	r3, [r7, #44]
1401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** #endif  
1402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8
 2712              		.loc 1 1403 0 discriminator 2
 2713 00c6 3B6B     		ldr	r3, [r7, #48]
 2714 00c8 5B68     		ldr	r3, [r3, #4]
 2715 00ca 0A2B     		cmp	r3, #10
 2716 00cc 03D0     		beq	.L124
 2717              		.loc 1 1403 0 is_stmt 0 discriminator 1
 2718 00ce 3B6B     		ldr	r3, [r7, #48]
 2719 00d0 5B68     		ldr	r3, [r3, #4]
 2720 00d2 092B     		cmp	r3, #9
 2721 00d4 07D1     		bne	.L125
 2722              	.L124:
1404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 2723              		.loc 1 1405 0 is_stmt 1
 2724 00d6 3B6B     		ldr	r3, [r7, #48]
 2725 00d8 DB68     		ldr	r3, [r3, #12]
 2726 00da 03F07F43 		and	r3, r3, #-16777216
 2727 00de 7A6B     		ldr	r2, [r7, #52]
 2728 00e0 1343     		orrs	r3, r3, r2
 2729 00e2 7B63     		str	r3, [r7, #52]
 2730 00e4 10E0     		b	.L126
 2731              	.L125:
1406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     regValue |=  (pLayerCfg->InputAlpha << DMA2D_POSITION_BGPFCCR_ALPHA);
 2732              		.loc 1 1409 0
 2733 00e6 3B6B     		ldr	r3, [r7, #48]
 2734 00e8 DA68     		ldr	r2, [r3, #12]
 2735 00ea 4FF07F43 		mov	r3, #-16777216
 2736 00ee 3B61     		str	r3, [r7, #16]
 2737              	.LBB68:
 2738              	.LBB69:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2739              		.loc 2 531 0
 2740 00f0 3B69     		ldr	r3, [r7, #16]
 2741              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2742 00f2 93FAA3F3 		rbit r3, r3
ARM GAS  /tmp/ccjIcGgN.s 			page 83


 2743              	@ 0 "" 2
 2744              		.thumb
 2745 00f6 FB60     		str	r3, [r7, #12]
 2746              		.loc 2 544 0
 2747 00f8 FB68     		ldr	r3, [r7, #12]
 2748              	.LBE69:
 2749              	.LBE68:
 2750              		.loc 1 1409 0
 2751 00fa B3FA83F3 		clz	r3, r3
 2752 00fe 02FA03F3 		lsl	r3, r2, r3
 2753 0102 7A6B     		ldr	r2, [r7, #52]
 2754 0104 1343     		orrs	r3, r3, r2
 2755 0106 7B63     		str	r3, [r7, #52]
 2756              	.L126:
1410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the background DMA2D layer */
1413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 0)
 2757              		.loc 1 1413 0
 2758 0108 3B68     		ldr	r3, [r7]
 2759 010a 002B     		cmp	r3, #0
 2760 010c 1FD1     		bne	.L128
1414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write DMA2D BGPFCCR register */
1416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 2761              		.loc 1 1416 0
 2762 010e 7B68     		ldr	r3, [r7, #4]
 2763 0110 1B68     		ldr	r3, [r3]
 2764 0112 7A68     		ldr	r2, [r7, #4]
 2765 0114 1268     		ldr	r2, [r2]
 2766 0116 516A     		ldr	r1, [r2, #36]
 2767 0118 FA6A     		ldr	r2, [r7, #44]
 2768 011a D243     		mvns	r2, r2
 2769 011c 1140     		ands	r1, r1, r2
 2770 011e 7A6B     		ldr	r2, [r7, #52]
 2771 0120 0A43     		orrs	r2, r2, r1
 2772 0122 5A62     		str	r2, [r3, #36]
1417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****               
1418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D BGOR register configuration -------------------------------------*/  
1419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 2773              		.loc 1 1419 0
 2774 0124 7B68     		ldr	r3, [r7, #4]
 2775 0126 1B68     		ldr	r3, [r3]
 2776 0128 3A6B     		ldr	r2, [r7, #48]
 2777 012a 1268     		ldr	r2, [r2]
 2778 012c 9A61     		str	r2, [r3, #24]
1420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D BGCOLR register configuration -------------------------------------*/ 
1422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
 2779              		.loc 1 1422 0
 2780 012e 3B6B     		ldr	r3, [r7, #48]
 2781 0130 5B68     		ldr	r3, [r3, #4]
 2782 0132 0A2B     		cmp	r3, #10
 2783 0134 03D0     		beq	.L129
 2784              		.loc 1 1422 0 is_stmt 0 discriminator 1
 2785 0136 3B6B     		ldr	r3, [r7, #48]
 2786 0138 5B68     		ldr	r3, [r3, #4]
ARM GAS  /tmp/ccjIcGgN.s 			page 84


 2787 013a 092B     		cmp	r3, #9
 2788 013c 26D1     		bne	.L131
 2789              	.L129:
1423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {    
1424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_G
 2790              		.loc 1 1424 0 is_stmt 1
 2791 013e 7B68     		ldr	r3, [r7, #4]
 2792 0140 1B68     		ldr	r3, [r3]
 2793 0142 3A6B     		ldr	r2, [r7, #48]
 2794 0144 D268     		ldr	r2, [r2, #12]
 2795 0146 22F07F42 		bic	r2, r2, #-16777216
 2796 014a 9A62     		str	r2, [r3, #40]
 2797 014c 1EE0     		b	.L131
 2798              	.L128:
1425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }    
1426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the foreground DMA2D layer */
1428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      /* Write DMA2D FGPFCCR register */
1431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 2799              		.loc 1 1431 0
 2800 014e 7B68     		ldr	r3, [r7, #4]
 2801 0150 1B68     		ldr	r3, [r3]
 2802 0152 7A68     		ldr	r2, [r7, #4]
 2803 0154 1268     		ldr	r2, [r2]
 2804 0156 D169     		ldr	r1, [r2, #28]
 2805 0158 FA6A     		ldr	r2, [r7, #44]
 2806 015a D243     		mvns	r2, r2
 2807 015c 1140     		ands	r1, r1, r2
 2808 015e 7A6B     		ldr	r2, [r7, #52]
 2809 0160 0A43     		orrs	r2, r2, r1
 2810 0162 DA61     		str	r2, [r3, #28]
1432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D FGOR register configuration -------------------------------------*/
1434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);      
 2811              		.loc 1 1434 0
 2812 0164 7B68     		ldr	r3, [r7, #4]
 2813 0166 1B68     		ldr	r3, [r3]
 2814 0168 3A6B     		ldr	r2, [r7, #48]
 2815 016a 1268     		ldr	r2, [r2]
 2816 016c 1A61     		str	r2, [r3, #16]
1435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    
1436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* DMA2D FGCOLR register configuration -------------------------------------*/   
1437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_
 2817              		.loc 1 1437 0
 2818 016e 3B6B     		ldr	r3, [r7, #48]
 2819 0170 5B68     		ldr	r3, [r3, #4]
 2820 0172 0A2B     		cmp	r3, #10
 2821 0174 03D0     		beq	.L132
 2822              		.loc 1 1437 0 is_stmt 0 discriminator 1
 2823 0176 3B6B     		ldr	r3, [r7, #48]
 2824 0178 5B68     		ldr	r3, [r3, #4]
 2825 017a 092B     		cmp	r3, #9
 2826 017c 06D1     		bne	.L131
 2827              	.L132:
1438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
ARM GAS  /tmp/ccjIcGgN.s 			page 85


1439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_G
 2828              		.loc 1 1439 0 is_stmt 1
 2829 017e 7B68     		ldr	r3, [r7, #4]
 2830 0180 1B68     		ldr	r3, [r3]
 2831 0182 3A6B     		ldr	r2, [r7, #48]
 2832 0184 D268     		ldr	r2, [r2, #12]
 2833 0186 22F07F42 		bic	r2, r2, #-16777216
 2834 018a 1A62     		str	r2, [r3, #32]
 2835              	.L131:
1440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }   
1441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }   
1442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Initialize the DMA2D state*/
1443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 2836              		.loc 1 1443 0
 2837 018c 7B68     		ldr	r3, [r7, #4]
 2838 018e 0122     		movs	r2, #1
 2839 0190 83F85120 		strb	r2, [r3, #81]
1444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process unlocked */
1446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);  
 2840              		.loc 1 1446 0
 2841 0194 7B68     		ldr	r3, [r7, #4]
 2842 0196 0022     		movs	r2, #0
 2843 0198 83F85020 		strb	r2, [r3, #80]
1447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 2844              		.loc 1 1448 0
 2845 019c 0023     		movs	r3, #0
 2846              	.L120:
1449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 2847              		.loc 1 1449 0
 2848 019e 1846     		mov	r0, r3
 2849 01a0 3C37     		adds	r7, r7, #60
 2850              	.LCFI117:
 2851              		.cfi_def_cfa_offset 4
 2852 01a2 BD46     		mov	sp, r7
 2853              	.LCFI118:
 2854              		.cfi_def_cfa_register 13
 2855              		@ sp needed
 2856 01a4 5DF8047B 		ldr	r7, [sp], #4
 2857              	.LCFI119:
 2858              		.cfi_restore 7
 2859              		.cfi_def_cfa_offset 0
 2860 01a8 7047     		bx	lr
 2861              	.L134:
 2862 01aa 00BF     		.align	2
 2863              	.L133:
 2864 01ac 0F0003FF 		.word	-16580593
 2865              		.cfi_endproc
 2866              	.LFE156:
 2868              		.section	.text.HAL_DMA2D_ConfigCLUT,"ax",%progbits
 2869              		.align	2
 2870              		.global	HAL_DMA2D_ConfigCLUT
 2871              		.thumb
 2872              		.thumb_func
 2874              	HAL_DMA2D_ConfigCLUT:
 2875              	.LFB157:
ARM GAS  /tmp/ccjIcGgN.s 			page 86


1450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Configure the DMA2D CLUT Transfer.
1453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:   Pointer to a DMA2D_HandleTypeDef structure that contains
1454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the DMA2D.
1455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  CLUTCfg:  Pointer to a DMA2D_CLUTCfgTypeDef structure that contains
1456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   the configuration information for the color look up table.
1457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  LayerIdx: DMA2D Layer index.
1458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   This parameter can be one of the following values:
1459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                   0(background) / 1(foreground)
1460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigCLUT(DMA2D_HandleTypeDef *hdma2d, DMA2D_CLUTCfgTypeDef CLUTCfg, u
1463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 2876              		.loc 1 1463 0
 2877              		.cfi_startproc
 2878              		@ args = 4, pretend = 0, frame = 48
 2879              		@ frame_needed = 1, uses_anonymous_args = 0
 2880              		@ link register save eliminated.
 2881 0000 90B4     		push	{r4, r7}
 2882              	.LCFI120:
 2883              		.cfi_def_cfa_offset 8
 2884              		.cfi_offset 4, -8
 2885              		.cfi_offset 7, -4
 2886 0002 8CB0     		sub	sp, sp, #48
 2887              	.LCFI121:
 2888              		.cfi_def_cfa_offset 56
 2889 0004 00AF     		add	r7, sp, #0
 2890              	.LCFI122:
 2891              		.cfi_def_cfa_register 7
 2892 0006 F860     		str	r0, [r7, #12]
 2893 0008 3846     		mov	r0, r7
 2894 000a 80E80E00 		stmia	r0, {r1, r2, r3}
1464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LAYER(LayerIdx));   
1466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_CM(CLUTCfg.CLUTColorMode));
1467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_CLUT_SIZE(CLUTCfg.Size));
1468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process locked */
1470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 2895              		.loc 1 1470 0
 2896 000e FB68     		ldr	r3, [r7, #12]
 2897 0010 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 2898 0014 012B     		cmp	r3, #1
 2899 0016 01D1     		bne	.L136
 2900              		.loc 1 1470 0 is_stmt 0 discriminator 1
 2901 0018 0223     		movs	r3, #2
 2902 001a 60E0     		b	.L137
 2903              	.L136:
 2904              		.loc 1 1470 0 discriminator 2
 2905 001c FB68     		ldr	r3, [r7, #12]
 2906 001e 0122     		movs	r2, #1
 2907 0020 83F85020 		strb	r2, [r3, #80]
1471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Change DMA2D peripheral state */
1473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;     
 2908              		.loc 1 1473 0 is_stmt 1 discriminator 2
ARM GAS  /tmp/ccjIcGgN.s 			page 87


 2909 0024 FB68     		ldr	r3, [r7, #12]
 2910 0026 0222     		movs	r2, #2
 2911 0028 83F85120 		strb	r2, [r3, #81]
1474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure the CLUT of the background DMA2D layer */
1476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if(LayerIdx == 0)
 2912              		.loc 1 1476 0 discriminator 2
 2913 002c BB6B     		ldr	r3, [r7, #56]
 2914 002e 002B     		cmp	r3, #0
 2915 0030 26D1     		bne	.L138
1477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT memory address */
1479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->BGCMAR, (uint32_t)CLUTCfg.pCLUT);
 2916              		.loc 1 1479 0
 2917 0032 FB68     		ldr	r3, [r7, #12]
 2918 0034 1B68     		ldr	r3, [r3]
 2919 0036 3A68     		ldr	r2, [r7]
 2920 0038 1A63     		str	r2, [r3, #48]
1480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      
1481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write background CLUT size and CLUT color mode */
1482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->BGPFCCR, (DMA2D_BGPFCCR_CS | DMA2D_BGPFCCR_CCM), 
 2921              		.loc 1 1482 0
 2922 003a FB68     		ldr	r3, [r7, #12]
 2923 003c 1A68     		ldr	r2, [r3]
 2924 003e FB68     		ldr	r3, [r7, #12]
 2925 0040 1B68     		ldr	r3, [r3]
 2926 0042 596A     		ldr	r1, [r3, #36]
 2927 0044 284B     		ldr	r3, .L144
 2928 0046 0B40     		ands	r3, r3, r1
 2929 0048 B868     		ldr	r0, [r7, #8]
 2930 004a 4FF47F41 		mov	r1, #65280
 2931 004e F962     		str	r1, [r7, #44]
 2932              	.LBB70:
 2933              	.LBB71:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2934              		.loc 2 531 0
 2935 0050 F96A     		ldr	r1, [r7, #44]
 2936              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2937 0052 91FAA1F1 		rbit r1, r1
 2938              	@ 0 "" 2
 2939              		.thumb
 2940 0056 B962     		str	r1, [r7, #40]
 2941              		.loc 2 544 0
 2942 0058 B96A     		ldr	r1, [r7, #40]
 2943              	.LBE71:
 2944              	.LBE70:
 2945              		.loc 1 1482 0
 2946 005a B1FA81F1 		clz	r1, r1
 2947 005e 8840     		lsls	r0, r0, r1
 2948 0060 7C68     		ldr	r4, [r7, #4]
 2949 0062 1021     		movs	r1, #16
 2950 0064 7962     		str	r1, [r7, #36]
 2951              	.LBB72:
 2952              	.LBB73:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2953              		.loc 2 531 0
 2954 0066 796A     		ldr	r1, [r7, #36]
ARM GAS  /tmp/ccjIcGgN.s 			page 88


 2955              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2956 0068 91FAA1F1 		rbit r1, r1
 2957              	@ 0 "" 2
 2958              		.thumb
 2959 006c 3962     		str	r1, [r7, #32]
 2960              		.loc 2 544 0
 2961 006e 396A     		ldr	r1, [r7, #32]
 2962              	.LBE73:
 2963              	.LBE72:
 2964              		.loc 1 1482 0
 2965 0070 B1FA81F1 		clz	r1, r1
 2966 0074 04FA01F1 		lsl	r1, r4, r1
 2967 0078 0143     		orrs	r1, r1, r0
 2968 007a 0B43     		orrs	r3, r3, r1
 2969 007c 5362     		str	r3, [r2, #36]
 2970 007e 25E0     		b	.L141
 2971              	.L138:
1483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_POSITION_BGPFCCR_CS) | (CLUTCfg.CLUTColorMode << DMA2D_POSITION
1484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  }
1485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  /* Configure the CLUT of the foreground DMA2D layer */
1486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  else
1487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  {
1488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****    /* Write foreground CLUT memory address */
1489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGCMAR, (uint32_t)CLUTCfg.pCLUT);
 2972              		.loc 1 1489 0
 2973 0080 FB68     		ldr	r3, [r7, #12]
 2974 0082 1B68     		ldr	r3, [r3]
 2975 0084 3A68     		ldr	r2, [r7]
 2976 0086 DA62     		str	r2, [r3, #44]
1490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****      
1491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write foreground CLUT size and CLUT color mode */
1492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     MODIFY_REG(hdma2d->Instance->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), 
 2977              		.loc 1 1492 0
 2978 0088 FB68     		ldr	r3, [r7, #12]
 2979 008a 1A68     		ldr	r2, [r3]
 2980 008c FB68     		ldr	r3, [r7, #12]
 2981 008e 1B68     		ldr	r3, [r3]
 2982 0090 D969     		ldr	r1, [r3, #28]
 2983 0092 154B     		ldr	r3, .L144
 2984 0094 0B40     		ands	r3, r3, r1
 2985 0096 B868     		ldr	r0, [r7, #8]
 2986 0098 4FF47F41 		mov	r1, #65280
 2987 009c F961     		str	r1, [r7, #28]
 2988              	.LBB74:
 2989              	.LBB75:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2990              		.loc 2 531 0
 2991 009e F969     		ldr	r1, [r7, #28]
 2992              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2993 00a0 91FAA1F1 		rbit r1, r1
 2994              	@ 0 "" 2
 2995              		.thumb
 2996 00a4 B961     		str	r1, [r7, #24]
 2997              		.loc 2 544 0
 2998 00a6 B969     		ldr	r1, [r7, #24]
 2999              	.LBE75:
 3000              	.LBE74:
ARM GAS  /tmp/ccjIcGgN.s 			page 89


 3001              		.loc 1 1492 0
 3002 00a8 B1FA81F1 		clz	r1, r1
 3003 00ac 8840     		lsls	r0, r0, r1
 3004 00ae 7C68     		ldr	r4, [r7, #4]
 3005 00b0 1021     		movs	r1, #16
 3006 00b2 7961     		str	r1, [r7, #20]
 3007              	.LBB76:
 3008              	.LBB77:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3009              		.loc 2 531 0
 3010 00b4 7969     		ldr	r1, [r7, #20]
 3011              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3012 00b6 91FAA1F1 		rbit r1, r1
 3013              	@ 0 "" 2
 3014              		.thumb
 3015 00ba 3961     		str	r1, [r7, #16]
 3016              		.loc 2 544 0
 3017 00bc 3969     		ldr	r1, [r7, #16]
 3018              	.LBE77:
 3019              	.LBE76:
 3020              		.loc 1 1492 0
 3021 00be B1FA81F1 		clz	r1, r1
 3022 00c2 04FA01F1 		lsl	r1, r4, r1
 3023 00c6 0143     		orrs	r1, r1, r0
 3024 00c8 0B43     		orrs	r3, r3, r1
 3025 00ca D361     		str	r3, [r2, #28]
 3026              	.L141:
1493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****             ((CLUTCfg.Size << DMA2D_POSITION_BGPFCCR_CS) | (CLUTCfg.CLUTColorMode << DMA2D_POSITION
1494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Set the DMA2D state to Ready*/
1497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3027              		.loc 1 1497 0
 3028 00cc FB68     		ldr	r3, [r7, #12]
 3029 00ce 0122     		movs	r2, #1
 3030 00d0 83F85120 		strb	r2, [r3, #81]
1498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process unlocked */
1500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d); 
 3031              		.loc 1 1500 0
 3032 00d4 FB68     		ldr	r3, [r7, #12]
 3033 00d6 0022     		movs	r2, #0
 3034 00d8 83F85020 		strb	r2, [r3, #80]
1501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 3035              		.loc 1 1502 0
 3036 00dc 0023     		movs	r3, #0
 3037              	.L137:
1503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3038              		.loc 1 1503 0
 3039 00de 1846     		mov	r0, r3
 3040 00e0 3037     		adds	r7, r7, #48
 3041              	.LCFI123:
 3042              		.cfi_def_cfa_offset 8
 3043 00e2 BD46     		mov	sp, r7
 3044              	.LCFI124:
 3045              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccjIcGgN.s 			page 90


 3046              		@ sp needed
 3047 00e4 90BC     		pop	{r4, r7}
 3048              	.LCFI125:
 3049              		.cfi_restore 7
 3050              		.cfi_restore 4
 3051              		.cfi_def_cfa_offset 0
 3052 00e6 7047     		bx	lr
 3053              	.L145:
 3054              		.align	2
 3055              	.L144:
 3056 00e8 EF00FFFF 		.word	-65297
 3057              		.cfi_endproc
 3058              	.LFE157:
 3060              		.section	.text.HAL_DMA2D_ProgramLineEvent,"ax",%progbits
 3061              		.align	2
 3062              		.global	HAL_DMA2D_ProgramLineEvent
 3063              		.thumb
 3064              		.thumb_func
 3066              	HAL_DMA2D_ProgramLineEvent:
 3067              	.LFB158:
1504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1505:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1506:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Configure the line watermark.
1508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: Pointer to a DMA2D_HandleTypeDef structure that contains
1509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.
1510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Line:   Line Watermark configuration (maximum 16-bit long value expected).
1511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note   HAL_DMA2D_ProgramLineEvent() API enables the transfer watermark interrupt.
1512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note   The transfer watermark interrupt is disabled once it has occurred.
1513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ProgramLineEvent(DMA2D_HandleTypeDef *hdma2d, uint32_t Line)
1517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 3068              		.loc 1 1517 0
 3069              		.cfi_startproc
 3070              		@ args = 0, pretend = 0, frame = 8
 3071              		@ frame_needed = 1, uses_anonymous_args = 0
 3072              		@ link register save eliminated.
 3073 0000 80B4     		push	{r7}
 3074              	.LCFI126:
 3075              		.cfi_def_cfa_offset 4
 3076              		.cfi_offset 7, -4
 3077 0002 83B0     		sub	sp, sp, #12
 3078              	.LCFI127:
 3079              		.cfi_def_cfa_offset 16
 3080 0004 00AF     		add	r7, sp, #0
 3081              	.LCFI128:
 3082              		.cfi_def_cfa_register 7
 3083 0006 7860     		str	r0, [r7, #4]
 3084 0008 3960     		str	r1, [r7]
1518:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Check the parameters */
1519:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   assert_param(IS_DMA2D_LINEWATERMARK(Line));
1520:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1521:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (Line > DMA2D_LWR_LW)
 3085              		.loc 1 1521 0
 3086 000a 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccjIcGgN.s 			page 91


 3087 000c B3F5803F 		cmp	r3, #65536
 3088 0010 01D3     		bcc	.L147
1522:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1523:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     return HAL_ERROR;  
 3089              		.loc 1 1523 0
 3090 0012 0123     		movs	r3, #1
 3091 0014 23E0     		b	.L148
 3092              	.L147:
1524:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
1525:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else
1526:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {      
1527:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Process locked */
1528:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_LOCK(hdma2d);
 3093              		.loc 1 1528 0
 3094 0016 7B68     		ldr	r3, [r7, #4]
 3095 0018 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3096 001c 012B     		cmp	r3, #1
 3097 001e 01D1     		bne	.L149
 3098              		.loc 1 1528 0 is_stmt 0 discriminator 1
 3099 0020 0223     		movs	r3, #2
 3100 0022 1CE0     		b	.L148
 3101              	.L149:
 3102              		.loc 1 1528 0 discriminator 2
 3103 0024 7B68     		ldr	r3, [r7, #4]
 3104 0026 0122     		movs	r2, #1
 3105 0028 83F85020 		strb	r2, [r3, #80]
1529:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1530:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Change DMA2D peripheral state */
1531:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3106              		.loc 1 1531 0 is_stmt 1 discriminator 2
 3107 002c 7B68     		ldr	r3, [r7, #4]
 3108 002e 0222     		movs	r2, #2
 3109 0030 83F85120 		strb	r2, [r3, #81]
1532:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1533:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Sets the Line watermark configuration */
1534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->LWR, Line);
 3110              		.loc 1 1534 0 discriminator 2
 3111 0034 7B68     		ldr	r3, [r7, #4]
 3112 0036 1B68     		ldr	r3, [r3]
 3113 0038 3A68     		ldr	r2, [r7]
 3114 003a 9A64     		str	r2, [r3, #72]
1535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Enable the Line interrupt */
1537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TW);
 3115              		.loc 1 1537 0 discriminator 2
 3116 003c 7B68     		ldr	r3, [r7, #4]
 3117 003e 1B68     		ldr	r3, [r3]
 3118 0040 7A68     		ldr	r2, [r7, #4]
 3119 0042 1268     		ldr	r2, [r2]
 3120 0044 1268     		ldr	r2, [r2]
 3121 0046 42F48062 		orr	r2, r2, #1024
 3122 004a 1A60     		str	r2, [r3]
1538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****         
1539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Initialize the DMA2D state*/
1540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     hdma2d->State = HAL_DMA2D_STATE_READY;
 3123              		.loc 1 1540 0 discriminator 2
 3124 004c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccjIcGgN.s 			page 92


 3125 004e 0122     		movs	r2, #1
 3126 0050 83F85120 		strb	r2, [r3, #81]
1541:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1542:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Process unlocked */
1543:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     __HAL_UNLOCK(hdma2d);  
 3127              		.loc 1 1543 0 discriminator 2
 3128 0054 7B68     		ldr	r3, [r7, #4]
 3129 0056 0022     		movs	r2, #0
 3130 0058 83F85020 		strb	r2, [r3, #80]
1544:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1545:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     return HAL_OK;
 3131              		.loc 1 1545 0 discriminator 2
 3132 005c 0023     		movs	r3, #0
 3133              	.L148:
1546:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }  
1547:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3134              		.loc 1 1547 0
 3135 005e 1846     		mov	r0, r3
 3136 0060 0C37     		adds	r7, r7, #12
 3137              	.LCFI129:
 3138              		.cfi_def_cfa_offset 4
 3139 0062 BD46     		mov	sp, r7
 3140              	.LCFI130:
 3141              		.cfi_def_cfa_register 13
 3142              		@ sp needed
 3143 0064 5DF8047B 		ldr	r7, [sp], #4
 3144              	.LCFI131:
 3145              		.cfi_restore 7
 3146              		.cfi_def_cfa_offset 0
 3147 0068 7047     		bx	lr
 3148              		.cfi_endproc
 3149              	.LFE158:
 3151 006a 00BF     		.section	.text.HAL_DMA2D_EnableDeadTime,"ax",%progbits
 3152              		.align	2
 3153              		.global	HAL_DMA2D_EnableDeadTime
 3154              		.thumb
 3155              		.thumb_func
 3157              	HAL_DMA2D_EnableDeadTime:
 3158              	.LFB159:
1548:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1549:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1550:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief Enable DMA2D dead time feature.
1551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d: DMA2D handle.
1552:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1553:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1554:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_EnableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1555:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 3159              		.loc 1 1555 0
 3160              		.cfi_startproc
 3161              		@ args = 0, pretend = 0, frame = 8
 3162              		@ frame_needed = 1, uses_anonymous_args = 0
 3163              		@ link register save eliminated.
 3164 0000 80B4     		push	{r7}
 3165              	.LCFI132:
 3166              		.cfi_def_cfa_offset 4
 3167              		.cfi_offset 7, -4
 3168 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccjIcGgN.s 			page 93


 3169              	.LCFI133:
 3170              		.cfi_def_cfa_offset 16
 3171 0004 00AF     		add	r7, sp, #0
 3172              	.LCFI134:
 3173              		.cfi_def_cfa_register 7
 3174 0006 7860     		str	r0, [r7, #4]
1556:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
1557:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3175              		.loc 1 1557 0
 3176 0008 7B68     		ldr	r3, [r7, #4]
 3177 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3178 000e 012B     		cmp	r3, #1
 3179 0010 01D1     		bne	.L151
 3180              		.loc 1 1557 0 is_stmt 0 discriminator 1
 3181 0012 0223     		movs	r3, #2
 3182 0014 18E0     		b	.L152
 3183              	.L151:
 3184              		.loc 1 1557 0 discriminator 2
 3185 0016 7B68     		ldr	r3, [r7, #4]
 3186 0018 0122     		movs	r2, #1
 3187 001a 83F85020 		strb	r2, [r3, #80]
1558:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1559:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3188              		.loc 1 1559 0 is_stmt 1 discriminator 2
 3189 001e 7B68     		ldr	r3, [r7, #4]
 3190 0020 0222     		movs	r2, #2
 3191 0022 83F85120 		strb	r2, [r3, #81]
1560:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1561:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR EN bit */
1562:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   SET_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
 3192              		.loc 1 1562 0 discriminator 2
 3193 0026 7B68     		ldr	r3, [r7, #4]
 3194 0028 1B68     		ldr	r3, [r3]
 3195 002a 7A68     		ldr	r2, [r7, #4]
 3196 002c 1268     		ldr	r2, [r2]
 3197 002e D26C     		ldr	r2, [r2, #76]
 3198 0030 42F00102 		orr	r2, r2, #1
 3199 0034 DA64     		str	r2, [r3, #76]
1563:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1564:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3200              		.loc 1 1564 0 discriminator 2
 3201 0036 7B68     		ldr	r3, [r7, #4]
 3202 0038 0122     		movs	r2, #1
 3203 003a 83F85120 		strb	r2, [r3, #81]
1565:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1566:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1567:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3204              		.loc 1 1567 0 discriminator 2
 3205 003e 7B68     		ldr	r3, [r7, #4]
 3206 0040 0022     		movs	r2, #0
 3207 0042 83F85020 		strb	r2, [r3, #80]
1568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 3208              		.loc 1 1569 0 discriminator 2
 3209 0046 0023     		movs	r3, #0
 3210              	.L152:
1570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
ARM GAS  /tmp/ccjIcGgN.s 			page 94


 3211              		.loc 1 1570 0
 3212 0048 1846     		mov	r0, r3
 3213 004a 0C37     		adds	r7, r7, #12
 3214              	.LCFI135:
 3215              		.cfi_def_cfa_offset 4
 3216 004c BD46     		mov	sp, r7
 3217              	.LCFI136:
 3218              		.cfi_def_cfa_register 13
 3219              		@ sp needed
 3220 004e 5DF8047B 		ldr	r7, [sp], #4
 3221              	.LCFI137:
 3222              		.cfi_restore 7
 3223              		.cfi_def_cfa_offset 0
 3224 0052 7047     		bx	lr
 3225              		.cfi_endproc
 3226              	.LFE159:
 3228              		.section	.text.HAL_DMA2D_DisableDeadTime,"ax",%progbits
 3229              		.align	2
 3230              		.global	HAL_DMA2D_DisableDeadTime
 3231              		.thumb
 3232              		.thumb_func
 3234              	HAL_DMA2D_DisableDeadTime:
 3235              	.LFB160:
1571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1572:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1573:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief Disable DMA2D dead time feature.
1574:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d: DMA2D handle.
1575:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1576:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1577:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_DisableDeadTime(DMA2D_HandleTypeDef *hdma2d)
1578:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 3236              		.loc 1 1578 0
 3237              		.cfi_startproc
 3238              		@ args = 0, pretend = 0, frame = 8
 3239              		@ frame_needed = 1, uses_anonymous_args = 0
 3240              		@ link register save eliminated.
 3241 0000 80B4     		push	{r7}
 3242              	.LCFI138:
 3243              		.cfi_def_cfa_offset 4
 3244              		.cfi_offset 7, -4
 3245 0002 83B0     		sub	sp, sp, #12
 3246              	.LCFI139:
 3247              		.cfi_def_cfa_offset 16
 3248 0004 00AF     		add	r7, sp, #0
 3249              	.LCFI140:
 3250              		.cfi_def_cfa_register 7
 3251 0006 7860     		str	r0, [r7, #4]
1579:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
1580:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);
 3252              		.loc 1 1580 0
 3253 0008 7B68     		ldr	r3, [r7, #4]
 3254 000a 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3255 000e 012B     		cmp	r3, #1
 3256 0010 01D1     		bne	.L154
 3257              		.loc 1 1580 0 is_stmt 0 discriminator 1
 3258 0012 0223     		movs	r3, #2
 3259 0014 18E0     		b	.L155
ARM GAS  /tmp/ccjIcGgN.s 			page 95


 3260              	.L154:
 3261              		.loc 1 1580 0 discriminator 2
 3262 0016 7B68     		ldr	r3, [r7, #4]
 3263 0018 0122     		movs	r2, #1
 3264 001a 83F85020 		strb	r2, [r3, #80]
1581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1582:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3265              		.loc 1 1582 0 is_stmt 1 discriminator 2
 3266 001e 7B68     		ldr	r3, [r7, #4]
 3267 0020 0222     		movs	r2, #2
 3268 0022 83F85120 		strb	r2, [r3, #81]
1583:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1584:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Clear DMA2D_AMTCR EN bit */
1585:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   CLEAR_BIT(hdma2d->Instance->AMTCR, DMA2D_AMTCR_EN);
 3269              		.loc 1 1585 0 discriminator 2
 3270 0026 7B68     		ldr	r3, [r7, #4]
 3271 0028 1B68     		ldr	r3, [r3]
 3272 002a 7A68     		ldr	r2, [r7, #4]
 3273 002c 1268     		ldr	r2, [r2]
 3274 002e D26C     		ldr	r2, [r2, #76]
 3275 0030 22F00102 		bic	r2, r2, #1
 3276 0034 DA64     		str	r2, [r3, #76]
1586:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1587:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3277              		.loc 1 1587 0 discriminator 2
 3278 0036 7B68     		ldr	r3, [r7, #4]
 3279 0038 0122     		movs	r2, #1
 3280 003a 83F85120 		strb	r2, [r3, #81]
1588:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1589:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1590:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3281              		.loc 1 1590 0 discriminator 2
 3282 003e 7B68     		ldr	r3, [r7, #4]
 3283 0040 0022     		movs	r2, #0
 3284 0042 83F85020 		strb	r2, [r3, #80]
1591:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1592:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 3285              		.loc 1 1592 0 discriminator 2
 3286 0046 0023     		movs	r3, #0
 3287              	.L155:
1593:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3288              		.loc 1 1593 0
 3289 0048 1846     		mov	r0, r3
 3290 004a 0C37     		adds	r7, r7, #12
 3291              	.LCFI141:
 3292              		.cfi_def_cfa_offset 4
 3293 004c BD46     		mov	sp, r7
 3294              	.LCFI142:
 3295              		.cfi_def_cfa_register 13
 3296              		@ sp needed
 3297 004e 5DF8047B 		ldr	r7, [sp], #4
 3298              	.LCFI143:
 3299              		.cfi_restore 7
 3300              		.cfi_def_cfa_offset 0
 3301 0052 7047     		bx	lr
 3302              		.cfi_endproc
 3303              	.LFE160:
ARM GAS  /tmp/ccjIcGgN.s 			page 96


 3305              		.section	.text.HAL_DMA2D_ConfigDeadTime,"ax",%progbits
 3306              		.align	2
 3307              		.global	HAL_DMA2D_ConfigDeadTime
 3308              		.thumb
 3309              		.thumb_func
 3311              	HAL_DMA2D_ConfigDeadTime:
 3312              	.LFB161:
1594:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1595:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1596:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief Configure dead time.
1597:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @note The dead time value represents the guaranteed minimum number of cycles between 
1598:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *       two consecutive transactions on the AHB bus.
1599:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param hdma2d: DMA2D handle.
1600:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param DeadTime: dead time value.
1601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1602:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1603:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_StatusTypeDef HAL_DMA2D_ConfigDeadTime(DMA2D_HandleTypeDef *hdma2d, uint8_t DeadTime)
1604:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 3313              		.loc 1 1604 0
 3314              		.cfi_startproc
 3315              		@ args = 0, pretend = 0, frame = 16
 3316              		@ frame_needed = 1, uses_anonymous_args = 0
 3317              		@ link register save eliminated.
 3318 0000 80B4     		push	{r7}
 3319              	.LCFI144:
 3320              		.cfi_def_cfa_offset 4
 3321              		.cfi_offset 7, -4
 3322 0002 85B0     		sub	sp, sp, #20
 3323              	.LCFI145:
 3324              		.cfi_def_cfa_offset 24
 3325 0004 00AF     		add	r7, sp, #0
 3326              	.LCFI146:
 3327              		.cfi_def_cfa_register 7
 3328 0006 7860     		str	r0, [r7, #4]
 3329 0008 0B46     		mov	r3, r1
 3330 000a FB70     		strb	r3, [r7, #3]
1605:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Locked */
1606:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_LOCK(hdma2d);  
 3331              		.loc 1 1606 0
 3332 000c 7B68     		ldr	r3, [r7, #4]
 3333 000e 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 3334 0012 012B     		cmp	r3, #1
 3335 0014 01D1     		bne	.L157
 3336              		.loc 1 1606 0 is_stmt 0 discriminator 1
 3337 0016 0223     		movs	r3, #2
 3338 0018 26E0     		b	.L158
 3339              	.L157:
 3340              		.loc 1 1606 0 discriminator 2
 3341 001a 7B68     		ldr	r3, [r7, #4]
 3342 001c 0122     		movs	r2, #1
 3343 001e 83F85020 		strb	r2, [r3, #80]
1607:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1608:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_BUSY;
 3344              		.loc 1 1608 0 is_stmt 1 discriminator 2
 3345 0022 7B68     		ldr	r3, [r7, #4]
 3346 0024 0222     		movs	r2, #2
 3347 0026 83F85120 		strb	r2, [r3, #81]
ARM GAS  /tmp/ccjIcGgN.s 			page 97


1609:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1610:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Set DMA2D_AMTCR DT field */
1611:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->AMTCR, DMA2D_AMTCR_DT, (((uint32_t) DeadTime) << DMA2D_POSITION_AMTC
 3348              		.loc 1 1611 0 discriminator 2
 3349 002a 7B68     		ldr	r3, [r7, #4]
 3350 002c 1B68     		ldr	r3, [r3]
 3351 002e 7A68     		ldr	r2, [r7, #4]
 3352 0030 1268     		ldr	r2, [r2]
 3353 0032 D26C     		ldr	r2, [r2, #76]
 3354 0034 22F47F41 		bic	r1, r2, #65280
 3355 0038 F878     		ldrb	r0, [r7, #3]	@ zero_extendqisi2
 3356 003a 4FF47F42 		mov	r2, #65280
 3357 003e FA60     		str	r2, [r7, #12]
 3358              	.LBB78:
 3359              	.LBB79:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3360              		.loc 2 531 0 discriminator 2
 3361 0040 FA68     		ldr	r2, [r7, #12]
 3362              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3363 0042 92FAA2F2 		rbit r2, r2
 3364              	@ 0 "" 2
 3365              		.thumb
 3366 0046 BA60     		str	r2, [r7, #8]
 3367              		.loc 2 544 0 discriminator 2
 3368 0048 BA68     		ldr	r2, [r7, #8]
 3369              	.LBE79:
 3370              	.LBE78:
 3371              		.loc 1 1611 0 discriminator 2
 3372 004a B2FA82F2 		clz	r2, r2
 3373 004e 00FA02F2 		lsl	r2, r0, r2
 3374 0052 0A43     		orrs	r2, r2, r1
 3375 0054 DA64     		str	r2, [r3, #76]
1612:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1613:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   hdma2d->State = HAL_DMA2D_STATE_READY;
 3376              		.loc 1 1613 0 discriminator 2
 3377 0056 7B68     		ldr	r3, [r7, #4]
 3378 0058 0122     		movs	r2, #1
 3379 005a 83F85120 		strb	r2, [r3, #81]
1614:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1615:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Process Unlocked */
1616:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   __HAL_UNLOCK(hdma2d);
 3380              		.loc 1 1616 0 discriminator 2
 3381 005e 7B68     		ldr	r3, [r7, #4]
 3382 0060 0022     		movs	r2, #0
 3383 0062 83F85020 		strb	r2, [r3, #80]
1617:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1618:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return HAL_OK;
 3384              		.loc 1 1618 0 discriminator 2
 3385 0066 0023     		movs	r3, #0
 3386              	.L158:
1619:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3387              		.loc 1 1619 0
 3388 0068 1846     		mov	r0, r3
 3389 006a 1437     		adds	r7, r7, #20
 3390              	.LCFI147:
 3391              		.cfi_def_cfa_offset 4
 3392 006c BD46     		mov	sp, r7
ARM GAS  /tmp/ccjIcGgN.s 			page 98


 3393              	.LCFI148:
 3394              		.cfi_def_cfa_register 13
 3395              		@ sp needed
 3396 006e 5DF8047B 		ldr	r7, [sp], #4
 3397              	.LCFI149:
 3398              		.cfi_restore 7
 3399              		.cfi_def_cfa_offset 0
 3400 0072 7047     		bx	lr
 3401              		.cfi_endproc
 3402              	.LFE161:
 3404              		.section	.text.HAL_DMA2D_GetState,"ax",%progbits
 3405              		.align	2
 3406              		.global	HAL_DMA2D_GetState
 3407              		.thumb
 3408              		.thumb_func
 3410              	HAL_DMA2D_GetState:
 3411              	.LFB162:
1620:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1621:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Exported_Functions_Group4 Peripheral State and Error functions
1627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *  @brief    Peripheral State functions 
1628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  *
1629:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @verbatim   
1630:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================
1631:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****                   ##### Peripheral State and Errors functions #####
1632:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  ===============================================================================  
1633:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     [..]
1634:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     This subsection provides functions allowing to :
1635:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Get the DMA2D state
1636:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       (+) Get the DMA2D error code  
1637:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1638:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** @endverbatim
1639:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
1640:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */ 
1641:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1642:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Return the DMA2D state
1644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d: pointer to a DMA2D_HandleTypeDef structure that contains
1645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                 the configuration information for the DMA2D.  
1646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL state
1647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** HAL_DMA2D_StateTypeDef HAL_DMA2D_GetState(DMA2D_HandleTypeDef *hdma2d)
1649:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {  
 3412              		.loc 1 1649 0
 3413              		.cfi_startproc
 3414              		@ args = 0, pretend = 0, frame = 8
 3415              		@ frame_needed = 1, uses_anonymous_args = 0
 3416              		@ link register save eliminated.
 3417 0000 80B4     		push	{r7}
 3418              	.LCFI150:
 3419              		.cfi_def_cfa_offset 4
 3420              		.cfi_offset 7, -4
 3421 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccjIcGgN.s 			page 99


 3422              	.LCFI151:
 3423              		.cfi_def_cfa_offset 16
 3424 0004 00AF     		add	r7, sp, #0
 3425              	.LCFI152:
 3426              		.cfi_def_cfa_register 7
 3427 0006 7860     		str	r0, [r7, #4]
1650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return hdma2d->State;
 3428              		.loc 1 1650 0
 3429 0008 7B68     		ldr	r3, [r7, #4]
 3430 000a 93F85130 		ldrb	r3, [r3, #81]
 3431 000e DBB2     		uxtb	r3, r3
1651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3432              		.loc 1 1651 0
 3433 0010 1846     		mov	r0, r3
 3434 0012 0C37     		adds	r7, r7, #12
 3435              	.LCFI153:
 3436              		.cfi_def_cfa_offset 4
 3437 0014 BD46     		mov	sp, r7
 3438              	.LCFI154:
 3439              		.cfi_def_cfa_register 13
 3440              		@ sp needed
 3441 0016 5DF8047B 		ldr	r7, [sp], #4
 3442              	.LCFI155:
 3443              		.cfi_restore 7
 3444              		.cfi_def_cfa_offset 0
 3445 001a 7047     		bx	lr
 3446              		.cfi_endproc
 3447              	.LFE162:
 3449              		.section	.text.HAL_DMA2D_GetError,"ax",%progbits
 3450              		.align	2
 3451              		.global	HAL_DMA2D_GetError
 3452              		.thumb
 3453              		.thumb_func
 3455              	HAL_DMA2D_GetError:
 3456              	.LFB163:
1652:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1653:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1654:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Return the DMA2D error code
1655:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d : pointer to a DMA2D_HandleTypeDef structure that contains
1656:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *               the configuration information for DMA2D.
1657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval DMA2D Error Code
1658:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1659:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** uint32_t HAL_DMA2D_GetError(DMA2D_HandleTypeDef *hdma2d)
1660:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {
 3457              		.loc 1 1660 0
 3458              		.cfi_startproc
 3459              		@ args = 0, pretend = 0, frame = 8
 3460              		@ frame_needed = 1, uses_anonymous_args = 0
 3461              		@ link register save eliminated.
 3462 0000 80B4     		push	{r7}
 3463              	.LCFI156:
 3464              		.cfi_def_cfa_offset 4
 3465              		.cfi_offset 7, -4
 3466 0002 83B0     		sub	sp, sp, #12
 3467              	.LCFI157:
 3468              		.cfi_def_cfa_offset 16
 3469 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccjIcGgN.s 			page 100


 3470              	.LCFI158:
 3471              		.cfi_def_cfa_register 7
 3472 0006 7860     		str	r0, [r7, #4]
1661:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   return hdma2d->ErrorCode;
 3473              		.loc 1 1661 0
 3474 0008 7B68     		ldr	r3, [r7, #4]
 3475 000a 5B6D     		ldr	r3, [r3, #84]
1662:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3476              		.loc 1 1662 0
 3477 000c 1846     		mov	r0, r3
 3478 000e 0C37     		adds	r7, r7, #12
 3479              	.LCFI159:
 3480              		.cfi_def_cfa_offset 4
 3481 0010 BD46     		mov	sp, r7
 3482              	.LCFI160:
 3483              		.cfi_def_cfa_register 13
 3484              		@ sp needed
 3485 0012 5DF8047B 		ldr	r7, [sp], #4
 3486              	.LCFI161:
 3487              		.cfi_restore 7
 3488              		.cfi_def_cfa_offset 0
 3489 0016 7047     		bx	lr
 3490              		.cfi_endproc
 3491              	.LFE163:
 3493              		.section	.text.DMA2D_SetConfig,"ax",%progbits
 3494              		.align	2
 3495              		.thumb
 3496              		.thumb_func
 3498              	DMA2D_SetConfig:
 3499              	.LFB164:
1663:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1664:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1665:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1666:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1667:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1668:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1669:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @}
1670:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */  
1671:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1672:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1673:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /** @defgroup DMA2D_Private_Functions DMA2D Private Functions
1674:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @{
1675:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1676:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** 
1677:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** /**
1678:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @brief  Set the DMA2D transfer parameters.
1679:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  hdma2d:     Pointer to a DMA2D_HandleTypeDef structure that contains
1680:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   *                     the configuration information for the specified DMA2D.  
1681:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  pdata:      The source memory Buffer address
1682:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  DstAddress: The destination memory Buffer address
1683:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Width:      The width of data to be transferred from source to destination.
1684:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @param  Height:     The height of data to be transferred from source to destination.
1685:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   * @retval HAL status
1686:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   */
1687:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint3
1688:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** {  
 3500              		.loc 1 1688 0
ARM GAS  /tmp/ccjIcGgN.s 			page 101


 3501              		.cfi_startproc
 3502              		@ args = 4, pretend = 0, frame = 48
 3503              		@ frame_needed = 1, uses_anonymous_args = 0
 3504              		@ link register save eliminated.
 3505 0000 80B4     		push	{r7}
 3506              	.LCFI162:
 3507              		.cfi_def_cfa_offset 4
 3508              		.cfi_offset 7, -4
 3509 0002 8DB0     		sub	sp, sp, #52
 3510              	.LCFI163:
 3511              		.cfi_def_cfa_offset 56
 3512 0004 00AF     		add	r7, sp, #0
 3513              	.LCFI164:
 3514              		.cfi_def_cfa_register 7
 3515 0006 F860     		str	r0, [r7, #12]
 3516 0008 B960     		str	r1, [r7, #8]
 3517 000a 7A60     		str	r2, [r7, #4]
 3518 000c 3B60     		str	r3, [r7]
1689:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp = 0;
 3519              		.loc 1 1689 0
 3520 000e 0023     		movs	r3, #0
 3521 0010 FB62     		str	r3, [r7, #44]
1690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp1 = 0;
 3522              		.loc 1 1690 0
 3523 0012 0023     		movs	r3, #0
 3524 0014 BB62     		str	r3, [r7, #40]
1691:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp2 = 0;
 3525              		.loc 1 1691 0
 3526 0016 0023     		movs	r3, #0
 3527 0018 7B62     		str	r3, [r7, #36]
1692:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp3 = 0;
 3528              		.loc 1 1692 0
 3529 001a 0023     		movs	r3, #0
 3530 001c 3B62     		str	r3, [r7, #32]
1693:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   uint32_t tmp4 = 0;
 3531              		.loc 1 1693 0
 3532 001e 0023     		movs	r3, #0
 3533 0020 FB61     		str	r3, [r7, #28]
1694:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1695:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D data size */
1696:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_POSITION_
 3534              		.loc 1 1696 0
 3535 0022 FB68     		ldr	r3, [r7, #12]
 3536 0024 1B68     		ldr	r3, [r3]
 3537 0026 FA68     		ldr	r2, [r7, #12]
 3538 0028 1268     		ldr	r2, [r2]
 3539 002a 526C     		ldr	r2, [r2, #68]
 3540 002c 02F04041 		and	r1, r2, #-1073741824
 3541 0030 4A4A     		ldr	r2, .L173
 3542 0032 BA61     		str	r2, [r7, #24]
 3543              	.LBB80:
 3544              	.LBB81:
 531:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3545              		.loc 2 531 0
 3546 0034 BA69     		ldr	r2, [r7, #24]
 3547              	@ 531 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3548 0036 92FAA2F2 		rbit r2, r2
ARM GAS  /tmp/ccjIcGgN.s 			page 102


 3549              	@ 0 "" 2
 3550              		.thumb
 3551 003a 7A61     		str	r2, [r7, #20]
 3552              		.loc 2 544 0
 3553 003c 7A69     		ldr	r2, [r7, #20]
 3554              	.LBE81:
 3555              	.LBE80:
 3556              		.loc 1 1696 0
 3557 003e B2FA82F2 		clz	r2, r2
 3558 0042 3868     		ldr	r0, [r7]
 3559 0044 9040     		lsls	r0, r0, r2
 3560 0046 BA6B     		ldr	r2, [r7, #56]
 3561 0048 0243     		orrs	r2, r2, r0
 3562 004a 0A43     		orrs	r2, r2, r1
 3563 004c 5A64     		str	r2, [r3, #68]
1697:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   
1698:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Configure DMA2D destination address */
1699:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 3564              		.loc 1 1699 0
 3565 004e FB68     		ldr	r3, [r7, #12]
 3566 0050 1B68     		ldr	r3, [r3]
 3567 0052 7A68     		ldr	r2, [r7, #4]
 3568 0054 DA63     		str	r2, [r3, #60]
1700:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****  
1701:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   /* Register to memory DMA2D mode selected */
1702:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   if (hdma2d->Init.Mode == DMA2D_R2M)
 3569              		.loc 1 1702 0
 3570 0056 FB68     		ldr	r3, [r7, #12]
 3571 0058 5B68     		ldr	r3, [r3, #4]
 3572 005a B3F5403F 		cmp	r3, #196608
 3573 005e 74D1     		bne	.L166
1703:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {    
1704:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 3574              		.loc 1 1704 0
 3575 0060 BB68     		ldr	r3, [r7, #8]
 3576 0062 03F07F43 		and	r3, r3, #-16777216
 3577 0066 BB62     		str	r3, [r7, #40]
1705:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp2 = pdata & DMA2D_OCOLR_RED_1;
 3578              		.loc 1 1705 0
 3579 0068 BB68     		ldr	r3, [r7, #8]
 3580 006a 03F47F03 		and	r3, r3, #16711680
 3581 006e 7B62     		str	r3, [r7, #36]
1706:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 3582              		.loc 1 1706 0
 3583 0070 BB68     		ldr	r3, [r7, #8]
 3584 0072 03F47F43 		and	r3, r3, #65280
 3585 0076 3B62     		str	r3, [r7, #32]
1707:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 3586              		.loc 1 1707 0
 3587 0078 BB68     		ldr	r3, [r7, #8]
 3588 007a DBB2     		uxtb	r3, r3
 3589 007c FB61     		str	r3, [r7, #28]
1708:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     
1709:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Prepare the value to be written to the OCOLR register according to the color mode */
1710:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 3590              		.loc 1 1710 0
 3591 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccjIcGgN.s 			page 103


 3592 0080 9B68     		ldr	r3, [r3, #8]
 3593 0082 002B     		cmp	r3, #0
 3594 0084 08D1     		bne	.L167
1711:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1712:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp1| tmp4);
 3595              		.loc 1 1712 0
 3596 0086 3A6A     		ldr	r2, [r7, #32]
 3597 0088 7B6A     		ldr	r3, [r7, #36]
 3598 008a 1A43     		orrs	r2, r2, r3
 3599 008c BB6A     		ldr	r3, [r7, #40]
 3600 008e 1A43     		orrs	r2, r2, r3
 3601 0090 FB69     		ldr	r3, [r7, #28]
 3602 0092 1343     		orrs	r3, r3, r2
 3603 0094 FB62     		str	r3, [r7, #44]
 3604 0096 53E0     		b	.L168
 3605              	.L167:
1713:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1714:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 3606              		.loc 1 1714 0
 3607 0098 FB68     		ldr	r3, [r7, #12]
 3608 009a 9B68     		ldr	r3, [r3, #8]
 3609 009c 012B     		cmp	r3, #1
 3610 009e 06D1     		bne	.L169
1715:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1716:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp = (tmp3 | tmp2 | tmp4);  
 3611              		.loc 1 1716 0
 3612 00a0 3A6A     		ldr	r2, [r7, #32]
 3613 00a2 7B6A     		ldr	r3, [r7, #36]
 3614 00a4 1A43     		orrs	r2, r2, r3
 3615 00a6 FB69     		ldr	r3, [r7, #28]
 3616 00a8 1343     		orrs	r3, r3, r2
 3617 00aa FB62     		str	r3, [r7, #44]
 3618 00ac 48E0     		b	.L168
 3619              	.L169:
1717:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1718:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 3620              		.loc 1 1718 0
 3621 00ae FB68     		ldr	r3, [r7, #12]
 3622 00b0 9B68     		ldr	r3, [r3, #8]
 3623 00b2 022B     		cmp	r3, #2
 3624 00b4 11D1     		bne	.L170
1719:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1720:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19);
 3625              		.loc 1 1720 0
 3626 00b6 7B6A     		ldr	r3, [r7, #36]
 3627 00b8 DB0C     		lsrs	r3, r3, #19
 3628 00ba 7B62     		str	r3, [r7, #36]
1721:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 10);
 3629              		.loc 1 1721 0
 3630 00bc 3B6A     		ldr	r3, [r7, #32]
 3631 00be 9B0A     		lsrs	r3, r3, #10
 3632 00c0 3B62     		str	r3, [r7, #32]
1722:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3 );
 3633              		.loc 1 1722 0
 3634 00c2 FB69     		ldr	r3, [r7, #28]
 3635 00c4 DB08     		lsrs	r3, r3, #3
 3636 00c6 FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccjIcGgN.s 			page 104


1723:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5) | (tmp2 << 11) | tmp4); 
 3637              		.loc 1 1723 0
 3638 00c8 3B6A     		ldr	r3, [r7, #32]
 3639 00ca 5A01     		lsls	r2, r3, #5
 3640 00cc 7B6A     		ldr	r3, [r7, #36]
 3641 00ce DB02     		lsls	r3, r3, #11
 3642 00d0 1A43     		orrs	r2, r2, r3
 3643 00d2 FB69     		ldr	r3, [r7, #28]
 3644 00d4 1343     		orrs	r3, r3, r2
 3645 00d6 FB62     		str	r3, [r7, #44]
 3646 00d8 32E0     		b	.L168
 3647              	.L170:
1724:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }
1725:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 3648              		.loc 1 1725 0
 3649 00da FB68     		ldr	r3, [r7, #12]
 3650 00dc 9B68     		ldr	r3, [r3, #8]
 3651 00de 032B     		cmp	r3, #3
 3652 00e0 17D1     		bne	.L171
1726:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     { 
1727:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 31);
 3653              		.loc 1 1727 0
 3654 00e2 BB6A     		ldr	r3, [r7, #40]
 3655 00e4 DB0F     		lsrs	r3, r3, #31
 3656 00e6 BB62     		str	r3, [r7, #40]
1728:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 19);
 3657              		.loc 1 1728 0
 3658 00e8 7B6A     		ldr	r3, [r7, #36]
 3659 00ea DB0C     		lsrs	r3, r3, #19
 3660 00ec 7B62     		str	r3, [r7, #36]
1729:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 11);
 3661              		.loc 1 1729 0
 3662 00ee 3B6A     		ldr	r3, [r7, #32]
 3663 00f0 DB0A     		lsrs	r3, r3, #11
 3664 00f2 3B62     		str	r3, [r7, #32]
1730:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 3 );      
 3665              		.loc 1 1730 0
 3666 00f4 FB69     		ldr	r3, [r7, #28]
 3667 00f6 DB08     		lsrs	r3, r3, #3
 3668 00f8 FB61     		str	r3, [r7, #28]
1731:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 5) | (tmp2 << 10) | (tmp1 << 15) | tmp4);    
 3669              		.loc 1 1731 0
 3670 00fa 3B6A     		ldr	r3, [r7, #32]
 3671 00fc 5A01     		lsls	r2, r3, #5
 3672 00fe 7B6A     		ldr	r3, [r7, #36]
 3673 0100 9B02     		lsls	r3, r3, #10
 3674 0102 1A43     		orrs	r2, r2, r3
 3675 0104 BB6A     		ldr	r3, [r7, #40]
 3676 0106 DB03     		lsls	r3, r3, #15
 3677 0108 1A43     		orrs	r2, r2, r3
 3678 010a FB69     		ldr	r3, [r7, #28]
 3679 010c 1343     		orrs	r3, r3, r2
 3680 010e FB62     		str	r3, [r7, #44]
 3681 0110 16E0     		b	.L168
 3682              	.L171:
1732:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     } 
1733:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
ARM GAS  /tmp/ccjIcGgN.s 			page 105


1734:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     {
1735:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp1 = (tmp1 >> 28);
 3683              		.loc 1 1735 0
 3684 0112 BB6A     		ldr	r3, [r7, #40]
 3685 0114 1B0F     		lsrs	r3, r3, #28
 3686 0116 BB62     		str	r3, [r7, #40]
1736:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp2 = (tmp2 >> 20);
 3687              		.loc 1 1736 0
 3688 0118 7B6A     		ldr	r3, [r7, #36]
 3689 011a 1B0D     		lsrs	r3, r3, #20
 3690 011c 7B62     		str	r3, [r7, #36]
1737:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp3 = (tmp3 >> 12);
 3691              		.loc 1 1737 0
 3692 011e 3B6A     		ldr	r3, [r7, #32]
 3693 0120 1B0B     		lsrs	r3, r3, #12
 3694 0122 3B62     		str	r3, [r7, #32]
1738:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp4 = (tmp4 >> 4 );
 3695              		.loc 1 1738 0
 3696 0124 FB69     		ldr	r3, [r7, #28]
 3697 0126 1B09     		lsrs	r3, r3, #4
 3698 0128 FB61     		str	r3, [r7, #28]
1739:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****       tmp  = ((tmp3 << 4) | (tmp2 << 8) | (tmp1 << 12) | tmp4);
 3699              		.loc 1 1739 0
 3700 012a 3B6A     		ldr	r3, [r7, #32]
 3701 012c 1A01     		lsls	r2, r3, #4
 3702 012e 7B6A     		ldr	r3, [r7, #36]
 3703 0130 1B02     		lsls	r3, r3, #8
 3704 0132 1A43     		orrs	r2, r2, r3
 3705 0134 BB6A     		ldr	r3, [r7, #40]
 3706 0136 1B03     		lsls	r3, r3, #12
 3707 0138 1A43     		orrs	r2, r2, r3
 3708 013a FB69     		ldr	r3, [r7, #28]
 3709 013c 1343     		orrs	r3, r3, r2
 3710 013e FB62     		str	r3, [r7, #44]
 3711              	.L168:
1740:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     }    
1741:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Write to DMA2D OCOLR register */
1742:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->OCOLR, tmp);    
 3712              		.loc 1 1742 0
 3713 0140 FB68     		ldr	r3, [r7, #12]
 3714 0142 1B68     		ldr	r3, [r3]
 3715 0144 FA6A     		ldr	r2, [r7, #44]
 3716 0146 9A63     		str	r2, [r3, #56]
 3717 0148 03E0     		b	.L164
 3718              	.L166:
1743:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   } 
1744:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
1745:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   {
1746:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     /* Configure DMA2D source address */
1747:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****     WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 3719              		.loc 1 1747 0
 3720 014a FB68     		ldr	r3, [r7, #12]
 3721 014c 1B68     		ldr	r3, [r3]
 3722 014e BA68     		ldr	r2, [r7, #8]
 3723 0150 DA60     		str	r2, [r3, #12]
 3724              	.L164:
1748:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c ****   }
ARM GAS  /tmp/ccjIcGgN.s 			page 106


1749:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_dma2d.c **** }
 3725              		.loc 1 1749 0
 3726 0152 3437     		adds	r7, r7, #52
 3727              	.LCFI165:
 3728              		.cfi_def_cfa_offset 4
 3729 0154 BD46     		mov	sp, r7
 3730              	.LCFI166:
 3731              		.cfi_def_cfa_register 13
 3732              		@ sp needed
 3733 0156 5DF8047B 		ldr	r7, [sp], #4
 3734              	.LCFI167:
 3735              		.cfi_restore 7
 3736              		.cfi_def_cfa_offset 0
 3737 015a 7047     		bx	lr
 3738              	.L174:
 3739              		.align	2
 3740              	.L173:
 3741 015c 0000FF3F 		.word	1073676288
 3742              		.cfi_endproc
 3743              	.LFE164:
 3745              		.text
 3746              	.Letext0:
 3747              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 3748              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 3749              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 3750              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 3751              		.file 7 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 3752              		.file 8 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_dma2d.h"
 3753              		.file 9 "../../Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/ccjIcGgN.s 			page 107


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_dma2d.c
     /tmp/ccjIcGgN.s:21     .text.HAL_DMA2D_Init:0000000000000000 $t
     /tmp/ccjIcGgN.s:26     .text.HAL_DMA2D_Init:0000000000000000 HAL_DMA2D_Init
     /tmp/ccjIcGgN.s:354    .text.HAL_DMA2D_MspInit:0000000000000000 HAL_DMA2D_MspInit
     /tmp/ccjIcGgN.s:188    .text.HAL_DMA2D_Init:00000000000000ec $d
     /tmp/ccjIcGgN.s:193    .text.HAL_DMA2D_DeInit:0000000000000000 $t
     /tmp/ccjIcGgN.s:198    .text.HAL_DMA2D_DeInit:0000000000000000 HAL_DMA2D_DeInit
     /tmp/ccjIcGgN.s:764    .text.HAL_DMA2D_Abort:0000000000000000 HAL_DMA2D_Abort
     /tmp/ccjIcGgN.s:1550   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 HAL_DMA2D_CLUTLoading_Abort
     /tmp/ccjIcGgN.s:394    .text.HAL_DMA2D_MspDeInit:0000000000000000 HAL_DMA2D_MspDeInit
     /tmp/ccjIcGgN.s:344    .text.HAL_DMA2D_DeInit:00000000000000d4 $d
     /tmp/ccjIcGgN.s:349    .text.HAL_DMA2D_MspInit:0000000000000000 $t
     /tmp/ccjIcGgN.s:389    .text.HAL_DMA2D_MspDeInit:0000000000000000 $t
     /tmp/ccjIcGgN.s:429    .text.HAL_DMA2D_Start:0000000000000000 $t
     /tmp/ccjIcGgN.s:434    .text.HAL_DMA2D_Start:0000000000000000 HAL_DMA2D_Start
     /tmp/ccjIcGgN.s:3498   .text.DMA2D_SetConfig:0000000000000000 DMA2D_SetConfig
     /tmp/ccjIcGgN.s:505    .text.HAL_DMA2D_Start_IT:0000000000000000 $t
     /tmp/ccjIcGgN.s:510    .text.HAL_DMA2D_Start_IT:0000000000000000 HAL_DMA2D_Start_IT
     /tmp/ccjIcGgN.s:589    .text.HAL_DMA2D_BlendingStart:0000000000000000 $t
     /tmp/ccjIcGgN.s:594    .text.HAL_DMA2D_BlendingStart:0000000000000000 HAL_DMA2D_BlendingStart
     /tmp/ccjIcGgN.s:670    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 $t
     /tmp/ccjIcGgN.s:675    .text.HAL_DMA2D_BlendingStart_IT:0000000000000000 HAL_DMA2D_BlendingStart_IT
     /tmp/ccjIcGgN.s:759    .text.HAL_DMA2D_Abort:0000000000000000 $t
     /tmp/ccjIcGgN.s:865    .text.HAL_DMA2D_Suspend:0000000000000000 $t
     /tmp/ccjIcGgN.s:870    .text.HAL_DMA2D_Suspend:0000000000000000 HAL_DMA2D_Suspend
     /tmp/ccjIcGgN.s:981    .text.HAL_DMA2D_Resume:0000000000000000 $t
     /tmp/ccjIcGgN.s:986    .text.HAL_DMA2D_Resume:0000000000000000 HAL_DMA2D_Resume
     /tmp/ccjIcGgN.s:1044   .text.HAL_DMA2D_EnableCLUT:0000000000000000 $t
     /tmp/ccjIcGgN.s:1049   .text.HAL_DMA2D_EnableCLUT:0000000000000000 HAL_DMA2D_EnableCLUT
     /tmp/ccjIcGgN.s:1129   .text.HAL_DMA2D_CLUTLoad:0000000000000000 $t
     /tmp/ccjIcGgN.s:1134   .text.HAL_DMA2D_CLUTLoad:0000000000000000 HAL_DMA2D_CLUTLoad
     /tmp/ccjIcGgN.s:1324   .text.HAL_DMA2D_CLUTLoad:00000000000000f8 $d
     /tmp/ccjIcGgN.s:1329   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 $t
     /tmp/ccjIcGgN.s:1334   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000000 HAL_DMA2D_CLUTLoad_IT
     /tmp/ccjIcGgN.s:1540   .text.HAL_DMA2D_CLUTLoad_IT:0000000000000118 $d
     /tmp/ccjIcGgN.s:1545   .text.HAL_DMA2D_CLUTLoading_Abort:0000000000000000 $t
     /tmp/ccjIcGgN.s:1665   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 $t
     /tmp/ccjIcGgN.s:1670   .text.HAL_DMA2D_CLUTLoading_Suspend:0000000000000000 HAL_DMA2D_CLUTLoading_Suspend
     /tmp/ccjIcGgN.s:1794   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 $t
     /tmp/ccjIcGgN.s:1799   .text.HAL_DMA2D_CLUTLoading_Resume:0000000000000000 HAL_DMA2D_CLUTLoading_Resume
     /tmp/ccjIcGgN.s:1889   .text.HAL_DMA2D_PollForTransfer:0000000000000000 $t
     /tmp/ccjIcGgN.s:1894   .text.HAL_DMA2D_PollForTransfer:0000000000000000 HAL_DMA2D_PollForTransfer
     /tmp/ccjIcGgN.s:2184   .text.HAL_DMA2D_IRQHandler:0000000000000000 $t
     /tmp/ccjIcGgN.s:2189   .text.HAL_DMA2D_IRQHandler:0000000000000000 HAL_DMA2D_IRQHandler
     /tmp/ccjIcGgN.s:2493   .text.HAL_DMA2D_LineEventCallback:0000000000000000 HAL_DMA2D_LineEventCallback
     /tmp/ccjIcGgN.s:2533   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 HAL_DMA2D_CLUTLoadingCpltCallback
     /tmp/ccjIcGgN.s:2488   .text.HAL_DMA2D_LineEventCallback:0000000000000000 $t
     /tmp/ccjIcGgN.s:2528   .text.HAL_DMA2D_CLUTLoadingCpltCallback:0000000000000000 $t
     /tmp/ccjIcGgN.s:2568   .text.HAL_DMA2D_ConfigLayer:0000000000000000 $t
     /tmp/ccjIcGgN.s:2573   .text.HAL_DMA2D_ConfigLayer:0000000000000000 HAL_DMA2D_ConfigLayer
     /tmp/ccjIcGgN.s:2864   .text.HAL_DMA2D_ConfigLayer:00000000000001ac $d
     /tmp/ccjIcGgN.s:2869   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 $t
     /tmp/ccjIcGgN.s:2874   .text.HAL_DMA2D_ConfigCLUT:0000000000000000 HAL_DMA2D_ConfigCLUT
     /tmp/ccjIcGgN.s:3056   .text.HAL_DMA2D_ConfigCLUT:00000000000000e8 $d
     /tmp/ccjIcGgN.s:3061   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 $t
     /tmp/ccjIcGgN.s:3066   .text.HAL_DMA2D_ProgramLineEvent:0000000000000000 HAL_DMA2D_ProgramLineEvent
ARM GAS  /tmp/ccjIcGgN.s 			page 108


     /tmp/ccjIcGgN.s:3152   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 $t
     /tmp/ccjIcGgN.s:3157   .text.HAL_DMA2D_EnableDeadTime:0000000000000000 HAL_DMA2D_EnableDeadTime
     /tmp/ccjIcGgN.s:3229   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 $t
     /tmp/ccjIcGgN.s:3234   .text.HAL_DMA2D_DisableDeadTime:0000000000000000 HAL_DMA2D_DisableDeadTime
     /tmp/ccjIcGgN.s:3306   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 $t
     /tmp/ccjIcGgN.s:3311   .text.HAL_DMA2D_ConfigDeadTime:0000000000000000 HAL_DMA2D_ConfigDeadTime
     /tmp/ccjIcGgN.s:3405   .text.HAL_DMA2D_GetState:0000000000000000 $t
     /tmp/ccjIcGgN.s:3410   .text.HAL_DMA2D_GetState:0000000000000000 HAL_DMA2D_GetState
     /tmp/ccjIcGgN.s:3450   .text.HAL_DMA2D_GetError:0000000000000000 $t
     /tmp/ccjIcGgN.s:3455   .text.HAL_DMA2D_GetError:0000000000000000 HAL_DMA2D_GetError
     /tmp/ccjIcGgN.s:3494   .text.DMA2D_SetConfig:0000000000000000 $t
     /tmp/ccjIcGgN.s:3741   .text.DMA2D_SetConfig:000000000000015c $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
