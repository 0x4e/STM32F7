ARM GAS  /tmp/ccrA3BdH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"FreeRTOS_Sockets.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.FreeRTOS_max_uint32,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	FreeRTOS_max_uint32:
  26              	.LFB6:
  27              		.file 1 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h"
   1:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /*
   2:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * FreeRTOS+TCP Labs Build 160919 (C) 2016 Real Time Engineers ltd.
   3:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * Authors include Hein Tibosch and Richard Barry
   4:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
   5:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *******************************************************************************
   6:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
   7:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***                                                                         ***
   8:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***                                                                         ***
   9:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   FREERTOS+TCP IS STILL IN THE LAB (mainly because the FTP and HTTP     ***
  10:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   demos have a dependency on FreeRTOS+FAT, which is only in the Labs    ***
  11:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   download):                                                            ***
  12:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***                                                                         ***
  13:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   FreeRTOS+TCP is functional and has been used in commercial products   ***
  14:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   for some time.  Be aware however that we are still refining its       ***
  15:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   design, the source code does not yet quite conform to the strict      ***
  16:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   coding and style standards mandated by Real Time Engineers ltd., and  ***
  17:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   the documentation and testing is not necessarily complete.            ***
  18:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***                                                                         ***
  19:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   PLEASE REPORT EXPERIENCES USING THE SUPPORT RESOURCES FOUND ON THE    ***
  20:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   URL: http://www.FreeRTOS.org/contact  Active early adopters may, at   ***
  21:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   the sole discretion of Real Time Engineers Ltd., be offered versions  ***
  22:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***   under a license other than that described below.                      ***
  23:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***                                                                         ***
  24:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***                                                                         ***
  25:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
  26:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *******************************************************************************
  27:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
  28:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * FreeRTOS+TCP can be used under two different free open source licenses.  The
  29:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * license that applies is dependent on the processor on which FreeRTOS+TCP is
  30:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * executed, as follows:
  31:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
ARM GAS  /tmp/ccrA3BdH.s 			page 2


  32:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * If FreeRTOS+TCP is executed on one of the processors listed under the Special
  33:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * License Arrangements heading of the FreeRTOS+TCP license information web
  34:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * page, then it can be used under the terms of the FreeRTOS Open Source
  35:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * License.  If FreeRTOS+TCP is used on any other processor, then it can be used
  36:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * under the terms of the GNU General Public License V2.  Links to the relevant
  37:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * licenses follow:
  38:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
  39:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * The FreeRTOS+TCP License Information Page: http://www.FreeRTOS.org/tcp_license
  40:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * The FreeRTOS Open Source License: http://www.FreeRTOS.org/license
  41:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * The GNU General Public License Version 2: http://www.FreeRTOS.org/gpl-2.0.txt
  42:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
  43:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * FreeRTOS+TCP is distributed in the hope that it will be useful.  You cannot
  44:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * use FreeRTOS+TCP unless you agree that you use the software 'as is'.
  45:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * FreeRTOS+TCP is provided WITHOUT ANY WARRANTY; without even the implied
  46:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR
  47:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * PURPOSE. Real Time Engineers Ltd. disclaims all conditions and terms, be they
  48:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * implied, expressed, or statutory.
  49:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
  50:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * 1 tab == 4 spaces!
  51:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
  52:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * http://www.FreeRTOS.org
  53:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * http://www.FreeRTOS.org/plus
  54:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  * http://www.FreeRTOS.org/labs
  55:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  *
  56:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  */
  57:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  58:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #ifndef FREERTOS_IP_H
  59:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define FREERTOS_IP_H
  60:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  61:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #ifdef __cplusplus
  62:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** extern "C" {
  63:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #endif
  64:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  65:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* Application level configuration options. */
  66:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #include "FreeRTOSIPConfig.h"
  67:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #include "FreeRTOSIPConfigDefaults.h"
  68:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #include "IPTraceMacroDefaults.h"
  69:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  70:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* Some constants defining the sizes of several parts of a packet */
  71:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_ETH_HEADER			14u
  72:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_IPv4_HEADER			20u
  73:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_IGMP_HEADER			8u
  74:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_ICMP_HEADER			8u
  75:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_UDP_HEADER			8u
  76:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_TCP_HEADER			20u
  77:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  78:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  79:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* The number of octets in the MAC and IP addresses respectively. */
  80:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipMAC_ADDRESS_LENGTH_BYTES ( 6 )
  81:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipIP_ADDRESS_LENGTH_BYTES ( 4 )
  82:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  83:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* IP protocol definitions. */
  84:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipPROTOCOL_ICMP			( 1 )
  85:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipPROTOCOL_IGMP         ( 2 )
  86:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipPROTOCOL_TCP			( 6 )
  87:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipPROTOCOL_UDP			( 17 )
  88:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 3


  89:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* Dimensions the buffers that are filled by received Ethernet frames. */
  90:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_ETH_CRC_BYTES					( 4UL )
  91:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipSIZE_OF_ETH_OPTIONAL_802_1Q_TAG_BYTES	( 4UL )
  92:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define ipTOTAL_ETHERNET_FRAME_SIZE				( ( ( uint32_t ) ipconfigNETWORK_MTU ) + ( ( uint32_t ) ipSI
  93:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  94:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /*_RB_ Comment may need updating. */
  95:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* Space left at the beginning of a network buffer storage area to store a
  96:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** pointer back to the network buffer.  Should be a multiple of 8 to ensure 8 byte
  97:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** alignment is maintained on architectures that require it.
  98:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
  99:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** In order to get a 32-bit alignment of network packets, an offset of 2 bytes
 100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** would be desirable, as defined by ipconfigPACKET_FILLER_SIZE.  So the malloc'd
 101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** buffer will have the following contents:
 102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint32_t pointer;	// word-aligned
 103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uchar_8 filler[6];
 104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	<< ETH-header >>	// half-word-aligned
 105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uchar_8 dest[6];    // start of pucEthernetBuffer
 106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uchar_8 dest[6];
 107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uchar16_t type;
 108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	<< IP-header >>		// word-aligned
 109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint8_t ucVersionHeaderLength;
 110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	etc
 111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****  */
 112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #if( ipconfigBUFFER_PADDING != 0 )
 113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****     #define ipBUFFER_PADDING    ipconfigBUFFER_PADDING
 114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #else
 115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h ****     #define ipBUFFER_PADDING    ( 8u + ipconfigPACKET_FILLER_SIZE )
 116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #endif
 117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* The structure used to store buffers and pass them around the network stack.
 119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** Buffers can be in use by the stack, in use by the network interface hardware
 120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** driver, or free (not in use). */
 121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** typedef struct xNETWORK_BUFFER
 122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** {
 123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	ListItem_t xBufferListItem; 	/* Used to reference the buffer form the free buffer list or a socket
 124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint32_t ulIPAddress;			/* Source or destination IP address, depending on usage scenario. */
 125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint8_t *pucEthernetBuffer; 	/* Pointer to the start of the Ethernet frame. */
 126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	size_t xDataLength; 			/* Starts by holding the total Ethernet frame length, then the UDP/TCP payl
 127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint16_t usPort;				/* Source or destination port, depending on usage scenario. */
 128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint16_t usBoundPort;			/* The port to which a transmitting socket is bound. */
 129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#if( ipconfigUSE_LINKED_RX_MESSAGES != 0 )
 130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 		struct xNETWORK_BUFFER *pxNextBuffer; /* Possible optimisation for expert users - requires networ
 131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#endif
 132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** } NetworkBufferDescriptor_t;
 133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #include "pack_struct_start.h"
 135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** struct xMAC_ADDRESS
 136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** {
 137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	uint8_t ucBytes[ ipMAC_ADDRESS_LENGTH_BYTES ];
 138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** }
 139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #include "pack_struct_end.h"
 140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** typedef struct xMAC_ADDRESS MACAddress_t;
 141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** typedef enum eNETWORK_EVENTS
 143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** {
 144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	eNetworkUp,		/* The network is configured. */
 145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	eNetworkDown	/* The network connection has been lost. */
ARM GAS  /tmp/ccrA3BdH.s 			page 4


 146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** } eIPCallbackEvent_t;
 147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** typedef enum ePING_REPLY_STATUS
 149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** {
 150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	eSuccess = 0,		/* A correct reply has been received for an outgoing ping. */
 151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	eInvalidChecksum,	/* A reply was received for an outgoing ping but the checksum of the reply was i
 152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	eInvalidData		/* A reply was received to an outgoing ping but the payload of the reply was not cor
 153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** } ePingReplyStatus_t;
 154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** /* Endian related definitions. */
 156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #if( ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN )
 157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	/* FreeRTOS_htons / FreeRTOS_htonl: some platforms might have built-in versions
 159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	using a single instruction so allow these versions to be overridden. */
 160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#ifndef FreeRTOS_htons
 161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 		#define FreeRTOS_htons( usIn ) ( (uint16_t) ( ( ( usIn ) << 8U ) | ( ( usIn ) >> 8U ) ) )
 162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#endif
 163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#ifndef	FreeRTOS_htonl
 165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 		#define FreeRTOS_htonl( ulIn ) 											\
 166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 			(																	\
 167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 				( uint32_t ) 													\
 168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 				( 																\
 169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) )                ) << 24  ) | 	\
 170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) ) & 0x0000ff00UL ) <<  8  ) | 	\
 171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) ) & 0x00ff0000UL ) >>  8  ) | 	\
 172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 					( ( ( ( uint32_t ) ( ulIn ) )                ) >> 24  )  	\
 173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 				) 																\
 174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 			)
 175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#endif
 176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #else /* ipconfigBYTE_ORDER */
 178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#define FreeRTOS_htons( x ) ( ( uint16_t ) ( x ) )
 180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	#define FreeRTOS_htonl( x ) ( ( uint32_t ) ( x ) )
 181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #endif /* ipconfigBYTE_ORDER == pdFREERTOS_LITTLE_ENDIAN */
 183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define FreeRTOS_ntohs( x ) FreeRTOS_htons( x )
 185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #define FreeRTOS_ntohl( x ) FreeRTOS_htonl( x )
 186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** #if( ipconfigHAS_INLINE_FUNCTIONS == 1 )
 188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_max_int32  (int32_t  a, int32_t  b);
 190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_max_uint32 (uint32_t a, uint32_t b);
 191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_min_int32  (int32_t  a, int32_t  b);
 192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_min_uint32 (uint32_t a, uint32_t b);
 193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_round_up   (uint32_t a, uint32_t d);
 194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_round_down (uint32_t a, uint32_t d);
 195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE BaseType_t  FreeRTOS_min_BaseType  (BaseType_t  a, BaseType_t  b);
 196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE BaseType_t  FreeRTOS_max_BaseType  (BaseType_t  a, BaseType_t  b);
 197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE UBaseType_t FreeRTOS_max_UBaseTyp (UBaseType_t a, UBaseType_t b);
 198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE BaseType_t  	FreeRTOS_min_BaseType  (BaseType_t  a, BaseType_t  b);
 199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE UBaseType_t  	FreeRTOS_min_UBaseType (UBaseType_t  a, UBaseType_t  b);
 200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_max_int32  (int32_t  a, int32_t  b) { return a >= b ? a : b; }
ARM GAS  /tmp/ccrA3BdH.s 			page 5


 203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_max_uint32 (uint32_t a, uint32_t b) { return a >= b ? a : b; }
  28              		.loc 1 203 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
  44 0008 3960     		str	r1, [r7]
  45              		.loc 1 203 0
  46 000a 7A68     		ldr	r2, [r7, #4]
  47 000c 3B68     		ldr	r3, [r7]
  48 000e 9342     		cmp	r3, r2
  49 0010 38BF     		it	cc
  50 0012 1346     		movcc	r3, r2
  51 0014 1846     		mov	r0, r3
  52 0016 0C37     		adds	r7, r7, #12
  53              	.LCFI3:
  54              		.cfi_def_cfa_offset 4
  55 0018 BD46     		mov	sp, r7
  56              	.LCFI4:
  57              		.cfi_def_cfa_register 13
  58              		@ sp needed
  59 001a 5DF8047B 		ldr	r7, [sp], #4
  60              	.LCFI5:
  61              		.cfi_restore 7
  62              		.cfi_def_cfa_offset 0
  63 001e 7047     		bx	lr
  64              		.cfi_endproc
  65              	.LFE6:
  67              		.section	.text.FreeRTOS_min_int32,"ax",%progbits
  68              		.align	2
  69              		.thumb
  70              		.thumb_func
  72              	FreeRTOS_min_int32:
  73              	.LFB7:
 204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE int32_t  FreeRTOS_min_int32  (int32_t  a, int32_t  b) { return a <= b ? a : b; }
  74              		.loc 1 204 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              	.LCFI6:
  81              		.cfi_def_cfa_offset 4
  82              		.cfi_offset 7, -4
  83 0002 83B0     		sub	sp, sp, #12
  84              	.LCFI7:
ARM GAS  /tmp/ccrA3BdH.s 			page 6


  85              		.cfi_def_cfa_offset 16
  86 0004 00AF     		add	r7, sp, #0
  87              	.LCFI8:
  88              		.cfi_def_cfa_register 7
  89 0006 7860     		str	r0, [r7, #4]
  90 0008 3960     		str	r1, [r7]
  91              		.loc 1 204 0
  92 000a 7A68     		ldr	r2, [r7, #4]
  93 000c 3B68     		ldr	r3, [r7]
  94 000e 9342     		cmp	r3, r2
  95 0010 A8BF     		it	ge
  96 0012 1346     		movge	r3, r2
  97 0014 1846     		mov	r0, r3
  98 0016 0C37     		adds	r7, r7, #12
  99              	.LCFI9:
 100              		.cfi_def_cfa_offset 4
 101 0018 BD46     		mov	sp, r7
 102              	.LCFI10:
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 001a 5DF8047B 		ldr	r7, [sp], #4
 106              	.LCFI11:
 107              		.cfi_restore 7
 108              		.cfi_def_cfa_offset 0
 109 001e 7047     		bx	lr
 110              		.cfi_endproc
 111              	.LFE7:
 113              		.section	.text.FreeRTOS_min_uint32,"ax",%progbits
 114              		.align	2
 115              		.thumb
 116              		.thumb_func
 118              	FreeRTOS_min_uint32:
 119              	.LFB8:
 205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_min_uint32 (uint32_t a, uint32_t b) { return a <= b ? a : b; }
 120              		.loc 1 205 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125 0000 80B4     		push	{r7}
 126              	.LCFI12:
 127              		.cfi_def_cfa_offset 4
 128              		.cfi_offset 7, -4
 129 0002 83B0     		sub	sp, sp, #12
 130              	.LCFI13:
 131              		.cfi_def_cfa_offset 16
 132 0004 00AF     		add	r7, sp, #0
 133              	.LCFI14:
 134              		.cfi_def_cfa_register 7
 135 0006 7860     		str	r0, [r7, #4]
 136 0008 3960     		str	r1, [r7]
 137              		.loc 1 205 0
 138 000a 7A68     		ldr	r2, [r7, #4]
 139 000c 3B68     		ldr	r3, [r7]
 140 000e 9342     		cmp	r3, r2
 141 0010 28BF     		it	cs
 142 0012 1346     		movcs	r3, r2
ARM GAS  /tmp/ccrA3BdH.s 			page 7


 143 0014 1846     		mov	r0, r3
 144 0016 0C37     		adds	r7, r7, #12
 145              	.LCFI15:
 146              		.cfi_def_cfa_offset 4
 147 0018 BD46     		mov	sp, r7
 148              	.LCFI16:
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 001a 5DF8047B 		ldr	r7, [sp], #4
 152              	.LCFI17:
 153              		.cfi_restore 7
 154              		.cfi_def_cfa_offset 0
 155 001e 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE8:
 159              		.section	.text.FreeRTOS_round_up,"ax",%progbits
 160              		.align	2
 161              		.thumb
 162              		.thumb_func
 164              	FreeRTOS_round_up:
 165              	.LFB9:
 206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_round_up   (uint32_t a, uint32_t d) { return d * ( ( a + d - 1
 166              		.loc 1 206 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 8
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171 0000 80B4     		push	{r7}
 172              	.LCFI18:
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 83B0     		sub	sp, sp, #12
 176              	.LCFI19:
 177              		.cfi_def_cfa_offset 16
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI20:
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 182 0008 3960     		str	r1, [r7]
 183              		.loc 1 206 0
 184 000a 7A68     		ldr	r2, [r7, #4]
 185 000c 3B68     		ldr	r3, [r7]
 186 000e 1344     		add	r3, r3, r2
 187 0010 5A1E     		subs	r2, r3, #1
 188 0012 3B68     		ldr	r3, [r7]
 189 0014 B2FBF3F3 		udiv	r3, r2, r3
 190 0018 3A68     		ldr	r2, [r7]
 191 001a 02FB03F3 		mul	r3, r2, r3
 192 001e 1846     		mov	r0, r3
 193 0020 0C37     		adds	r7, r7, #12
 194              	.LCFI21:
 195              		.cfi_def_cfa_offset 4
 196 0022 BD46     		mov	sp, r7
 197              	.LCFI22:
 198              		.cfi_def_cfa_register 13
 199              		@ sp needed
 200 0024 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  /tmp/ccrA3BdH.s 			page 8


 201              	.LCFI23:
 202              		.cfi_restore 7
 203              		.cfi_def_cfa_offset 0
 204 0028 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE9:
 208 002a 00BF     		.section	.text.FreeRTOS_min_BaseType,"ax",%progbits
 209              		.align	2
 210              		.thumb
 211              		.thumb_func
 213              	FreeRTOS_min_BaseType:
 214              	.LFB13:
 207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE uint32_t FreeRTOS_round_down (uint32_t a, uint32_t d) { return d * ( a / d ); }
 208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 
 209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE BaseType_t  FreeRTOS_max_BaseType  (BaseType_t  a, BaseType_t  b) { return a >= 
 210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE UBaseType_t FreeRTOS_max_UBaseTyp (UBaseType_t a, UBaseType_t b) { return a >= b
 211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP.h **** 	static portINLINE BaseType_t  	FreeRTOS_min_BaseType  (BaseType_t  a, BaseType_t  b) { return a <=
 215              		.loc 1 211 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 8
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219              		@ link register save eliminated.
 220 0000 80B4     		push	{r7}
 221              	.LCFI24:
 222              		.cfi_def_cfa_offset 4
 223              		.cfi_offset 7, -4
 224 0002 83B0     		sub	sp, sp, #12
 225              	.LCFI25:
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              	.LCFI26:
 229              		.cfi_def_cfa_register 7
 230 0006 7860     		str	r0, [r7, #4]
 231 0008 3960     		str	r1, [r7]
 232              		.loc 1 211 0
 233 000a 7A68     		ldr	r2, [r7, #4]
 234 000c 3B68     		ldr	r3, [r7]
 235 000e 9342     		cmp	r3, r2
 236 0010 A8BF     		it	ge
 237 0012 1346     		movge	r3, r2
 238 0014 1846     		mov	r0, r3
 239 0016 0C37     		adds	r7, r7, #12
 240              	.LCFI27:
 241              		.cfi_def_cfa_offset 4
 242 0018 BD46     		mov	sp, r7
 243              	.LCFI28:
 244              		.cfi_def_cfa_register 13
 245              		@ sp needed
 246 001a 5DF8047B 		ldr	r7, [sp], #4
 247              	.LCFI29:
 248              		.cfi_restore 7
 249              		.cfi_def_cfa_offset 0
 250 001e 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE13:
 254              		.section	.text.vStreamBufferClear,"ax",%progbits
 255              		.align	2
ARM GAS  /tmp/ccrA3BdH.s 			page 9


 256              		.thumb
 257              		.thumb_func
 259              	vStreamBufferClear:
 260              	.LFB15:
 261              		.file 2 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h"
   1:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*
   2:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP Labs Build 160919 (C) 2016 Real Time Engineers ltd.
   3:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * Authors include Hein Tibosch and Richard Barry
   4:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
   5:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *******************************************************************************
   6:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
   7:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
   8:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
   9:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   FREERTOS+TCP IS STILL IN THE LAB (mainly because the FTP and HTTP     ***
  10:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   demos have a dependency on FreeRTOS+FAT, which is only in the Labs    ***
  11:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   download):                                                            ***
  12:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  13:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   FreeRTOS+TCP is functional and has been used in commercial products   ***
  14:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   for some time.  Be aware however that we are still refining its       ***
  15:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   design, the source code does not yet quite conform to the strict      ***
  16:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   coding and style standards mandated by Real Time Engineers ltd., and  ***
  17:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   the documentation and testing is not necessarily complete.            ***
  18:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  19:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   PLEASE REPORT EXPERIENCES USING THE SUPPORT RESOURCES FOUND ON THE    ***
  20:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   URL: http://www.FreeRTOS.org/contact  Active early adopters may, at   ***
  21:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   the sole discretion of Real Time Engineers Ltd., be offered versions  ***
  22:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***   under a license other than that described below.                      ***
  23:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  24:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***                                                                         ***
  25:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
  26:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *******************************************************************************
  27:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  28:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP can be used under two different free open source licenses.  The
  29:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * license that applies is dependent on the processor on which FreeRTOS+TCP is
  30:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * executed, as follows:
  31:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  32:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * If FreeRTOS+TCP is executed on one of the processors listed under the Special
  33:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * License Arrangements heading of the FreeRTOS+TCP license information web
  34:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * page, then it can be used under the terms of the FreeRTOS Open Source
  35:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * License.  If FreeRTOS+TCP is used on any other processor, then it can be used
  36:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * under the terms of the GNU General Public License V2.  Links to the relevant
  37:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * licenses follow:
  38:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  39:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * The FreeRTOS+TCP License Information Page: http://www.FreeRTOS.org/tcp_license
  40:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * The FreeRTOS Open Source License: http://www.FreeRTOS.org/license
  41:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * The GNU General Public License Version 2: http://www.FreeRTOS.org/gpl-2.0.txt
  42:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  43:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP is distributed in the hope that it will be useful.  You cannot
  44:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * use FreeRTOS+TCP unless you agree that you use the software 'as is'.
  45:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * FreeRTOS+TCP is provided WITHOUT ANY WARRANTY; without even the implied
  46:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR
  47:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * PURPOSE. Real Time Engineers Ltd. disclaims all conditions and terms, be they
  48:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * implied, expressed, or statutory.
  49:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  50:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * 1 tab == 4 spaces!
  51:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  52:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * http://www.FreeRTOS.org
ARM GAS  /tmp/ccrA3BdH.s 			page 10


  53:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * http://www.FreeRTOS.org/plus
  54:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  * http://www.FreeRTOS.org/labs
  55:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  56:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  */
  57:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  58:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*
  59:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	FreeRTOS_Stream_Buffer.h
  60:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *
  61:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	A cicular character buffer
  62:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	An implementation of a circular buffer without a length field
  63:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	If LENGTH defines the size of the buffer, a maximum of (LENGT-1) bytes can be stored
  64:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  *	In order to add or read data from the buffer, memcpy() will be called at most 2 times
  65:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h ****  */
  66:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  67:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #ifndef FREERTOS_STREAM_BUFFER_H
  68:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #define	FREERTOS_STREAM_BUFFER_H
  69:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  70:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #ifdef __cplusplus
  71:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** extern "C" {
  72:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** #endif
  73:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  74:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** typedef struct xSTREAM_BUFFER {
  75:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxTail;		/* next item to read */
  76:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxMid;		/* iterator within the valid items */
  77:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxHead;		/* next position store a new item */
  78:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	volatile size_t uxFront;	/* iterator within the free space */
  79:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	size_t LENGTH;				/* const value: number of reserved elements */
  80:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	uint8_t ucArray[ sizeof( size_t ) ];
  81:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** } StreamBuffer_t;
  82:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  83:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE void vStreamBufferClear( StreamBuffer_t *pxBuffer );
  84:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE void vStreamBufferClear( StreamBuffer_t *pxBuffer )
  85:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 262              		.loc 2 85 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 80B4     		push	{r7}
 268              	.LCFI30:
 269              		.cfi_def_cfa_offset 4
 270              		.cfi_offset 7, -4
 271 0002 83B0     		sub	sp, sp, #12
 272              	.LCFI31:
 273              		.cfi_def_cfa_offset 16
 274 0004 00AF     		add	r7, sp, #0
 275              	.LCFI32:
 276              		.cfi_def_cfa_register 7
 277 0006 7860     		str	r0, [r7, #4]
  86:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	/* Make the circular buffer empty */
  87:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxHead = 0u;
 278              		.loc 2 87 0
 279 0008 7B68     		ldr	r3, [r7, #4]
 280 000a 0022     		movs	r2, #0
 281 000c 9A60     		str	r2, [r3, #8]
  88:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxTail = 0u;
 282              		.loc 2 88 0
ARM GAS  /tmp/ccrA3BdH.s 			page 11


 283 000e 7B68     		ldr	r3, [r7, #4]
 284 0010 0022     		movs	r2, #0
 285 0012 1A60     		str	r2, [r3]
  89:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxFront = 0u;
 286              		.loc 2 89 0
 287 0014 7B68     		ldr	r3, [r7, #4]
 288 0016 0022     		movs	r2, #0
 289 0018 DA60     		str	r2, [r3, #12]
  90:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxMid = 0u;
 290              		.loc 2 90 0
 291 001a 7B68     		ldr	r3, [r7, #4]
 292 001c 0022     		movs	r2, #0
 293 001e 5A60     		str	r2, [r3, #4]
  91:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 294              		.loc 2 91 0
 295 0020 0C37     		adds	r7, r7, #12
 296              	.LCFI33:
 297              		.cfi_def_cfa_offset 4
 298 0022 BD46     		mov	sp, r7
 299              	.LCFI34:
 300              		.cfi_def_cfa_register 13
 301              		@ sp needed
 302 0024 5DF8047B 		ldr	r7, [sp], #4
 303              	.LCFI35:
 304              		.cfi_restore 7
 305              		.cfi_def_cfa_offset 0
 306 0028 7047     		bx	lr
 307              		.cfi_endproc
 308              	.LFE15:
 310 002a 00BF     		.section	.text.uxStreamBufferSpace,"ax",%progbits
 311              		.align	2
 312              		.thumb
 313              		.thumb_func
 315              	uxStreamBufferSpace:
 316              	.LFB16:
  92:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
  93:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
  94:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferSpace( const StreamBuffer_t *pxBuffer, const size_t uxLower,
  95:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferSpace( const StreamBuffer_t *pxBuffer, const size_t uxLower,
  96:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 317              		.loc 2 96 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 24
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              	.LCFI36:
 324              		.cfi_def_cfa_offset 4
 325              		.cfi_offset 7, -4
 326 0002 87B0     		sub	sp, sp, #28
 327              	.LCFI37:
 328              		.cfi_def_cfa_offset 32
 329 0004 00AF     		add	r7, sp, #0
 330              	.LCFI38:
 331              		.cfi_def_cfa_register 7
 332 0006 F860     		str	r0, [r7, #12]
 333 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/ccrA3BdH.s 			page 12


 334 000a 7A60     		str	r2, [r7, #4]
  97:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the space between uxLower and uxUpper, which equals to the distance minus 1 */
  98:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxCount;
  99:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	uxCount = pxBuffer->LENGTH + uxUpper - uxLower - 1u;
 335              		.loc 2 100 0
 336 000c FB68     		ldr	r3, [r7, #12]
 337 000e 1A69     		ldr	r2, [r3, #16]
 338 0010 7B68     		ldr	r3, [r7, #4]
 339 0012 1A44     		add	r2, r2, r3
 340 0014 BB68     		ldr	r3, [r7, #8]
 341 0016 D31A     		subs	r3, r2, r3
 342 0018 013B     		subs	r3, r3, #1
 343 001a 7B61     		str	r3, [r7, #20]
 101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if( uxCount >= pxBuffer->LENGTH )
 344              		.loc 2 101 0
 345 001c FB68     		ldr	r3, [r7, #12]
 346 001e 1A69     		ldr	r2, [r3, #16]
 347 0020 7B69     		ldr	r3, [r7, #20]
 348 0022 9A42     		cmp	r2, r3
 349 0024 04D8     		bhi	.L13
 102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		uxCount -= pxBuffer->LENGTH;
 350              		.loc 2 103 0
 351 0026 FB68     		ldr	r3, [r7, #12]
 352 0028 1B69     		ldr	r3, [r3, #16]
 353 002a 7A69     		ldr	r2, [r7, #20]
 354 002c D31A     		subs	r3, r2, r3
 355 002e 7B61     		str	r3, [r7, #20]
 356              	.L13:
 104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxCount;
 357              		.loc 2 106 0
 358 0030 7B69     		ldr	r3, [r7, #20]
 107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 359              		.loc 2 107 0
 360 0032 1846     		mov	r0, r3
 361 0034 1C37     		adds	r7, r7, #28
 362              	.LCFI39:
 363              		.cfi_def_cfa_offset 4
 364 0036 BD46     		mov	sp, r7
 365              	.LCFI40:
 366              		.cfi_def_cfa_register 13
 367              		@ sp needed
 368 0038 5DF8047B 		ldr	r7, [sp], #4
 369              	.LCFI41:
 370              		.cfi_restore 7
 371              		.cfi_def_cfa_offset 0
 372 003c 7047     		bx	lr
 373              		.cfi_endproc
 374              	.LFE16:
 376 003e 00BF     		.section	.text.uxStreamBufferDistance,"ax",%progbits
 377              		.align	2
 378              		.thumb
 379              		.thumb_func
 381              	uxStreamBufferDistance:
ARM GAS  /tmp/ccrA3BdH.s 			page 13


 382              	.LFB17:
 108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferDistance( const StreamBuffer_t *pxBuffer, const size_t uxLow
 111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferDistance( const StreamBuffer_t *pxBuffer, const size_t uxLow
 112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 383              		.loc 2 112 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 24
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              	.LCFI42:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 87B0     		sub	sp, sp, #28
 393              	.LCFI43:
 394              		.cfi_def_cfa_offset 32
 395 0004 00AF     		add	r7, sp, #0
 396              	.LCFI44:
 397              		.cfi_def_cfa_register 7
 398 0006 F860     		str	r0, [r7, #12]
 399 0008 B960     		str	r1, [r7, #8]
 400 000a 7A60     		str	r2, [r7, #4]
 113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the distance between uxLower and uxUpper */
 114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxCount;
 115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	uxCount = pxBuffer->LENGTH + uxUpper - uxLower;
 401              		.loc 2 116 0
 402 000c FB68     		ldr	r3, [r7, #12]
 403 000e 1A69     		ldr	r2, [r3, #16]
 404 0010 7B68     		ldr	r3, [r7, #4]
 405 0012 1A44     		add	r2, r2, r3
 406 0014 BB68     		ldr	r3, [r7, #8]
 407 0016 D31A     		subs	r3, r2, r3
 408 0018 7B61     		str	r3, [r7, #20]
 117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if ( uxCount >= pxBuffer->LENGTH )
 409              		.loc 2 117 0
 410 001a FB68     		ldr	r3, [r7, #12]
 411 001c 1A69     		ldr	r2, [r3, #16]
 412 001e 7B69     		ldr	r3, [r7, #20]
 413 0020 9A42     		cmp	r2, r3
 414 0022 04D8     		bhi	.L16
 118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		uxCount -= pxBuffer->LENGTH;
 415              		.loc 2 119 0
 416 0024 FB68     		ldr	r3, [r7, #12]
 417 0026 1B69     		ldr	r3, [r3, #16]
 418 0028 7A69     		ldr	r2, [r7, #20]
 419 002a D31A     		subs	r3, r2, r3
 420 002c 7B61     		str	r3, [r7, #20]
 421              	.L16:
 120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxCount;
 422              		.loc 2 122 0
 423 002e 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccrA3BdH.s 			page 14


 123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 424              		.loc 2 123 0
 425 0030 1846     		mov	r0, r3
 426 0032 1C37     		adds	r7, r7, #28
 427              	.LCFI45:
 428              		.cfi_def_cfa_offset 4
 429 0034 BD46     		mov	sp, r7
 430              	.LCFI46:
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 0036 5DF8047B 		ldr	r7, [sp], #4
 434              	.LCFI47:
 435              		.cfi_restore 7
 436              		.cfi_def_cfa_offset 0
 437 003a 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE17:
 441              		.section	.text.uxStreamBufferGetSpace,"ax",%progbits
 442              		.align	2
 443              		.thumb
 444              		.thumb_func
 446              	uxStreamBufferGetSpace:
 447              	.LFB18:
 124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSpace( const StreamBuffer_t *pxBuffer );
 127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSpace( const StreamBuffer_t *pxBuffer )
 128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 448              		.loc 2 128 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452 0000 80B5     		push	{r7, lr}
 453              	.LCFI48:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 7, -8
 456              		.cfi_offset 14, -4
 457 0002 84B0     		sub	sp, sp, #16
 458              	.LCFI49:
 459              		.cfi_def_cfa_offset 24
 460 0004 00AF     		add	r7, sp, #0
 461              	.LCFI50:
 462              		.cfi_def_cfa_register 7
 463 0006 7860     		str	r0, [r7, #4]
 129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the number of items which can still be added to uxHead
 130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** before hitting on uxTail */
 131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxHead = pxBuffer->uxHead;
 464              		.loc 2 131 0
 465 0008 7B68     		ldr	r3, [r7, #4]
 466 000a 9B68     		ldr	r3, [r3, #8]
 467 000c FB60     		str	r3, [r7, #12]
 132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
 468              		.loc 2 132 0
 469 000e 7B68     		ldr	r3, [r7, #4]
 470 0010 1B68     		ldr	r3, [r3]
 471 0012 BB60     		str	r3, [r7, #8]
 133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 15


 134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferSpace( pxBuffer, uxHead, uxTail );
 472              		.loc 2 134 0
 473 0014 7868     		ldr	r0, [r7, #4]
 474 0016 F968     		ldr	r1, [r7, #12]
 475 0018 BA68     		ldr	r2, [r7, #8]
 476 001a FFF7FEFF 		bl	uxStreamBufferSpace
 477 001e 0346     		mov	r3, r0
 135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 478              		.loc 2 135 0
 479 0020 1846     		mov	r0, r3
 480 0022 1037     		adds	r7, r7, #16
 481              	.LCFI51:
 482              		.cfi_def_cfa_offset 8
 483 0024 BD46     		mov	sp, r7
 484              	.LCFI52:
 485              		.cfi_def_cfa_register 13
 486              		@ sp needed
 487 0026 80BD     		pop	{r7, pc}
 488              		.cfi_endproc
 489              	.LFE18:
 491              		.section	.text.uxStreamBufferFrontSpace,"ax",%progbits
 492              		.align	2
 493              		.thumb
 494              		.thumb_func
 496              	uxStreamBufferFrontSpace:
 497              	.LFB19:
 136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferFrontSpace( const StreamBuffer_t *pxBuffer );
 139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferFrontSpace( const StreamBuffer_t *pxBuffer )
 140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 498              		.loc 2 140 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 16
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              	.LCFI53:
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 84B0     		sub	sp, sp, #16
 508              	.LCFI54:
 509              		.cfi_def_cfa_offset 24
 510 0004 00AF     		add	r7, sp, #0
 511              	.LCFI55:
 512              		.cfi_def_cfa_register 7
 513 0006 7860     		str	r0, [r7, #4]
 141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Distance between uxFront and uxTail
 142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** or the number of items which can still be added to uxFront,
 143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** before hitting on uxTail */
 144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxFront = pxBuffer->uxFront;
 514              		.loc 2 145 0
 515 0008 7B68     		ldr	r3, [r7, #4]
 516 000a DB68     		ldr	r3, [r3, #12]
 517 000c FB60     		str	r3, [r7, #12]
 146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
ARM GAS  /tmp/ccrA3BdH.s 			page 16


 518              		.loc 2 146 0
 519 000e 7B68     		ldr	r3, [r7, #4]
 520 0010 1B68     		ldr	r3, [r3]
 521 0012 BB60     		str	r3, [r7, #8]
 147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferSpace( pxBuffer, uxFront, uxTail );
 522              		.loc 2 148 0
 523 0014 7868     		ldr	r0, [r7, #4]
 524 0016 F968     		ldr	r1, [r7, #12]
 525 0018 BA68     		ldr	r2, [r7, #8]
 526 001a FFF7FEFF 		bl	uxStreamBufferSpace
 527 001e 0346     		mov	r3, r0
 149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 528              		.loc 2 149 0
 529 0020 1846     		mov	r0, r3
 530 0022 1037     		adds	r7, r7, #16
 531              	.LCFI56:
 532              		.cfi_def_cfa_offset 8
 533 0024 BD46     		mov	sp, r7
 534              	.LCFI57:
 535              		.cfi_def_cfa_register 13
 536              		@ sp needed
 537 0026 80BD     		pop	{r7, pc}
 538              		.cfi_endproc
 539              	.LFE19:
 541              		.section	.text.uxStreamBufferGetSize,"ax",%progbits
 542              		.align	2
 543              		.thumb
 544              		.thumb_func
 546              	uxStreamBufferGetSize:
 547              	.LFB20:
 150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSize( const StreamBuffer_t *pxBuffer );
 153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetSize( const StreamBuffer_t *pxBuffer )
 154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 548              		.loc 2 154 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 16
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              	.LCFI58:
 554              		.cfi_def_cfa_offset 8
 555              		.cfi_offset 7, -8
 556              		.cfi_offset 14, -4
 557 0002 84B0     		sub	sp, sp, #16
 558              	.LCFI59:
 559              		.cfi_def_cfa_offset 24
 560 0004 00AF     		add	r7, sp, #0
 561              	.LCFI60:
 562              		.cfi_def_cfa_register 7
 563 0006 7860     		str	r0, [r7, #4]
 155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the number of items which can be read from uxTail
 156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** before reaching uxHead */
 157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxHead = pxBuffer->uxHead;
 564              		.loc 2 157 0
 565 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrA3BdH.s 			page 17


 566 000a 9B68     		ldr	r3, [r3, #8]
 567 000c FB60     		str	r3, [r7, #12]
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
 568              		.loc 2 158 0
 569 000e 7B68     		ldr	r3, [r7, #4]
 570 0010 1B68     		ldr	r3, [r3]
 571 0012 BB60     		str	r3, [r7, #8]
 159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferDistance( pxBuffer, uxTail, uxHead );
 572              		.loc 2 160 0
 573 0014 7868     		ldr	r0, [r7, #4]
 574 0016 B968     		ldr	r1, [r7, #8]
 575 0018 FA68     		ldr	r2, [r7, #12]
 576 001a FFF7FEFF 		bl	uxStreamBufferDistance
 577 001e 0346     		mov	r3, r0
 161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 578              		.loc 2 161 0
 579 0020 1846     		mov	r0, r3
 580 0022 1037     		adds	r7, r7, #16
 581              	.LCFI61:
 582              		.cfi_def_cfa_offset 8
 583 0024 BD46     		mov	sp, r7
 584              	.LCFI62:
 585              		.cfi_def_cfa_register 13
 586              		@ sp needed
 587 0026 80BD     		pop	{r7, pc}
 588              		.cfi_endproc
 589              	.LFE20:
 591              		.section	.text.uxStreamBufferGetPtr,"ax",%progbits
 592              		.align	2
 593              		.thumb
 594              		.thumb_func
 596              	uxStreamBufferGetPtr:
 597              	.LFB26:
 162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferMidSpace( const StreamBuffer_t *pxBuffer );
 165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferMidSpace( const StreamBuffer_t *pxBuffer )
 166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Returns the distance between uxHead and uxMid */
 168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxHead = pxBuffer->uxHead;
 169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxMid = pxBuffer->uxMid;
 170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return uxStreamBufferDistance( pxBuffer, uxMid, uxHead );
 172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE void vStreamBufferMoveMid( StreamBuffer_t *pxBuffer, size_t uxCount );
 176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE void vStreamBufferMoveMid( StreamBuffer_t *pxBuffer, size_t uxCount )
 177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /* Increment uxMid, but no further than uxHead */
 179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxSize = uxStreamBufferMidSpace( pxBuffer );
 180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if( uxCount > uxSize )
 182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		uxCount = uxSize;
 184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
ARM GAS  /tmp/ccrA3BdH.s 			page 18


 185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	pxBuffer->uxMid += uxCount;
 186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if( pxBuffer->uxMid >= pxBuffer->LENGTH )
 187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		pxBuffer->uxMid -= pxBuffer->LENGTH;
 189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE BaseType_t xStreamBufferIsEmpty( const StreamBuffer_t *pxBuffer );
 193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE BaseType_t xStreamBufferIsEmpty( const StreamBuffer_t *pxBuffer )
 194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** BaseType_t xReturn;
 196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	/* True if no item is available */
 198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if( pxBuffer->uxHead == pxBuffer->uxTail )
 199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		xReturn = pdTRUE;
 201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	else
 203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		xReturn = pdFALSE;
 205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return xReturn;
 207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE BaseType_t xStreamBufferIsFull( const StreamBuffer_t *pxBuffer );
 211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE BaseType_t xStreamBufferIsFull( const StreamBuffer_t *pxBuffer )
 212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	/* True if the available space equals zero. */
 214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return ( BaseType_t ) ( uxStreamBufferGetSpace( pxBuffer ) == 0u );
 215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE BaseType_t xStreamBufferLessThenEqual( const StreamBuffer_t *pxBuffer, const size
 219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE BaseType_t xStreamBufferLessThenEqual( const StreamBuffer_t *pxBuffer, const size
 220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** BaseType_t xReturn;
 222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxTail = pxBuffer->uxTail;
 223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	/* Returns true if ( uxLeft < uxRight ) */
 225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	if( ( uxLeft < uxTail ) ^ ( uxRight < uxTail ) )
 226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		if( uxRight < uxTail )
 228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		{
 229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 			xReturn = pdTRUE;
 230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		}
 231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		else
 232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		{
 233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 			xReturn = pdFALSE;
 234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		}
 235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	else
 237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	{
 238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		if( uxLeft <= uxRight )
 239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		{
 240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 			xReturn = pdTRUE;
 241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		}
ARM GAS  /tmp/ccrA3BdH.s 			page 19


 242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		else
 243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		{
 244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 			xReturn = pdFALSE;
 245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 		}
 246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	}
 247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return xReturn;
 248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** /*-----------------------------------------------------------*/
 250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetPtr( StreamBuffer_t *pxBuffer, uint8_t **ppucData );
 252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** static portINLINE size_t uxStreamBufferGetPtr( StreamBuffer_t *pxBuffer, uint8_t **ppucData )
 253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** {
 598              		.loc 2 253 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 16
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              	.LCFI63:
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 84B0     		sub	sp, sp, #16
 608              	.LCFI64:
 609              		.cfi_def_cfa_offset 24
 610 0004 00AF     		add	r7, sp, #0
 611              	.LCFI65:
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 614 0008 3960     		str	r1, [r7]
 254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxNextTail = pxBuffer->uxTail;
 615              		.loc 2 254 0
 616 000a 7B68     		ldr	r3, [r7, #4]
 617 000c 1B68     		ldr	r3, [r3]
 618 000e FB60     		str	r3, [r7, #12]
 255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** size_t uxSize = uxStreamBufferGetSize( pxBuffer );
 619              		.loc 2 255 0
 620 0010 7868     		ldr	r0, [r7, #4]
 621 0012 FFF7FEFF 		bl	uxStreamBufferGetSize
 622 0016 B860     		str	r0, [r7, #8]
 256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	*ppucData = pxBuffer->ucArray + uxNextTail;
 623              		.loc 2 257 0
 624 0018 FB68     		ldr	r3, [r7, #12]
 625 001a 1033     		adds	r3, r3, #16
 626 001c 7A68     		ldr	r2, [r7, #4]
 627 001e 1344     		add	r3, r3, r2
 628 0020 1A1D     		adds	r2, r3, #4
 629 0022 3B68     		ldr	r3, [r7]
 630 0024 1A60     		str	r2, [r3]
 258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 
 259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** 	return FreeRTOS_min_uint32( uxSize, pxBuffer->LENGTH - uxNextTail );
 631              		.loc 2 259 0
 632 0026 7B68     		ldr	r3, [r7, #4]
 633 0028 1A69     		ldr	r2, [r3, #16]
 634 002a FB68     		ldr	r3, [r7, #12]
 635 002c D31A     		subs	r3, r2, r3
 636 002e B868     		ldr	r0, [r7, #8]
ARM GAS  /tmp/ccrA3BdH.s 			page 20


 637 0030 1946     		mov	r1, r3
 638 0032 FFF7FEFF 		bl	FreeRTOS_min_uint32
 639 0036 0346     		mov	r3, r0
 260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Stream_Buffer.h **** }
 640              		.loc 2 260 0
 641 0038 1846     		mov	r0, r3
 642 003a 1037     		adds	r7, r7, #16
 643              	.LCFI66:
 644              		.cfi_def_cfa_offset 8
 645 003c BD46     		mov	sp, r7
 646              	.LCFI67:
 647              		.cfi_def_cfa_register 13
 648              		@ sp needed
 649 003e 80BD     		pop	{r7, pc}
 650              		.cfi_endproc
 651              	.LFE26:
 653              		.comm	xBoundUDPSocketsList,20,4
 654              		.comm	xBoundTCPSocketsList,20,4
 655              		.section	.bss.usNextPortToUse,"aw",%nobits
 656              		.align	2
 659              	usNextPortToUse:
 660 0000 00000000 		.space	4
 661              		.section	.text.prvValidSocket,"ax",%progbits
 662              		.align	2
 663              		.thumb
 664              		.thumb_func
 666              	prvValidSocket:
 667              	.LFB29:
 668              		.file 3 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c"
   1:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
   2:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * FreeRTOS+TCP Labs Build 160919 (C) 2016 Real Time Engineers ltd.
   3:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Authors include Hein Tibosch and Richard Barry
   4:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
   5:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *******************************************************************************
   6:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
   7:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***                                                                         ***
   8:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***                                                                         ***
   9:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   FREERTOS+TCP IS STILL IN THE LAB (mainly because the FTP and HTTP     ***
  10:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   demos have a dependency on FreeRTOS+FAT, which is only in the Labs    ***
  11:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   download):                                                            ***
  12:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***                                                                         ***
  13:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   FreeRTOS+TCP is functional and has been used in commercial products   ***
  14:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   for some time.  Be aware however that we are still refining its       ***
  15:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   design, the source code does not yet quite conform to the strict      ***
  16:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   coding and style standards mandated by Real Time Engineers ltd., and  ***
  17:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   the documentation and testing is not necessarily complete.            ***
  18:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***                                                                         ***
  19:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   PLEASE REPORT EXPERIENCES USING THE SUPPORT RESOURCES FOUND ON THE    ***
  20:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   URL: http://www.FreeRTOS.org/contact  Active early adopters may, at   ***
  21:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   the sole discretion of Real Time Engineers Ltd., be offered versions  ***
  22:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***   under a license other than that described below.                      ***
  23:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***                                                                         ***
  24:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***                                                                         ***
  25:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  ***** NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ******* NOTE ***
  26:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *******************************************************************************
  27:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  28:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * FreeRTOS+TCP can be used under two different free open source licenses.  The
ARM GAS  /tmp/ccrA3BdH.s 			page 21


  29:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * license that applies is dependent on the processor on which FreeRTOS+TCP is
  30:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * executed, as follows:
  31:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  32:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * If FreeRTOS+TCP is executed on one of the processors listed under the Special
  33:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * License Arrangements heading of the FreeRTOS+TCP license information web
  34:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * page, then it can be used under the terms of the FreeRTOS Open Source
  35:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * License.  If FreeRTOS+TCP is used on any other processor, then it can be used
  36:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * under the terms of the GNU General Public License V2.  Links to the relevant
  37:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * licenses follow:
  38:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  39:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * The FreeRTOS+TCP License Information Page: http://www.FreeRTOS.org/tcp_license
  40:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * The FreeRTOS Open Source License: http://www.FreeRTOS.org/license
  41:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * The GNU General Public License Version 2: http://www.FreeRTOS.org/gpl-2.0.txt
  42:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  43:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * FreeRTOS+TCP is distributed in the hope that it will be useful.  You cannot
  44:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * use FreeRTOS+TCP unless you agree that you use the software 'as is'.
  45:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * FreeRTOS+TCP is provided WITHOUT ANY WARRANTY; without even the implied
  46:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * warranties of NON-INFRINGEMENT, MERCHANTABILITY or FITNESS FOR A PARTICULAR
  47:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * PURPOSE. Real Time Engineers Ltd. disclaims all conditions and terms, be they
  48:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * implied, expressed, or statutory.
  49:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  50:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * 1 tab == 4 spaces!
  51:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  52:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * http://www.FreeRTOS.org
  53:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * http://www.FreeRTOS.org/plus
  54:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * http://www.FreeRTOS.org/labs
  55:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  *
  56:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
  57:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  58:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* Standard includes. */
  59:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include <stdint.h>
  60:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include <stdio.h>
  61:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  62:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* FreeRTOS includes. */
  63:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "FreeRTOS.h"
  64:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "task.h"
  65:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "queue.h"
  66:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "semphr.h"
  67:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  68:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* FreeRTOS+TCP includes. */
  69:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "FreeRTOS_UDP_IP.h"
  70:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "FreeRTOS_IP.h"
  71:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "FreeRTOS_Sockets.h"
  72:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "FreeRTOS_IP_Private.h"
  73:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "FreeRTOS_DNS.h"
  74:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #include "NetworkBufferManagement.h"
  75:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  76:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* The ItemValue of the sockets xBoundSocketListItem member holds the socket's
  77:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** port number. */
  78:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketSET_SOCKET_PORT( pxSocket, usPort ) listSET_LIST_ITEM_VALUE( ( &( ( pxSocket )->xBoun
  79:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketGET_SOCKET_PORT( pxSocket ) listGET_LIST_ITEM_VALUE( ( &( ( pxSocket )->xBoundSocketL
  80:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  81:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* Test if a socket it bound which means it is either included in
  82:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** xBoundUDPSocketsList or xBoundTCPSocketsList */
  83:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketSOCKET_IS_BOUND( pxSocket )      ( listLIST_ITEM_CONTAINER( & ( pxSocket )->xBoundSoc
  84:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  85:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* If FreeRTOS_sendto() is called on a socket that is not bound to a port
ARM GAS  /tmp/ccrA3BdH.s 			page 22


  86:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** number then, depending on the FreeRTOSIPConfig.h settings, it might be that a
  87:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** port number is automatically generated for the socket.  Automatically generated
  88:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** port numbers will be between socketAUTO_PORT_ALLOCATION_START_NUMBER and
  89:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 0xffff. */
  90:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* _HT_ thinks that the default of 0xc000 is pretty high */
  91:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if !defined( socketAUTO_PORT_ALLOCATION_START_NUMBER )
  92:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#define socketAUTO_PORT_ALLOCATION_START_NUMBER ( ( uint16_t ) 0xc000 )
  93:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif
  94:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
  95:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* When the automatically generated port numbers overflow, the next value used
  96:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** is not set back to socketAUTO_PORT_ALLOCATION_START_NUMBER because it is likely
  97:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** that the first few automatically generated ports will still be in use.  Instead
  98:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** it is reset back to the value defined by this constant. */
  99:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketAUTO_PORT_ALLOCATION_RESET_NUMBER ( ( uint16_t ) 0xc100 )
 100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketAUTO_PORT_ALLOCATION_MAX_NUMBER   ( ( uint16_t ) 0xff00 )
 101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* The number of octets that make up an IP address. */
 103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketMAX_IP_ADDRESS_OCTETS		4u
 104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* A block time of 0 simply means "don't block". */
 106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketDONT_BLOCK				( ( TickType_t ) 0 )
 107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ( ipconfigUSE_TCP == 1 ) && !defined( ipTCP_TIMER_PERIOD_MS ) )
 109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#define ipTCP_TIMER_PERIOD_MS	( 1000 )
 110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif
 111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* The next private port number to use when binding a client socket is stored in
 113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** the usNextPortToUse[] array - which has either 1 or two indexes depending on
 114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** whether TCP is being supported. */
 115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
 116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#define socketPROTOCOL_COUNT		2
 117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #else
 118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#define socketPROTOCOL_COUNT		1
 119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif
 120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* Indexes into the usNextPortToUse[] array for UDP and TCP sockets
 122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** respectively. */
 123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketNEXT_UDP_PORT_NUMBER_INDEX	0
 124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #define socketNEXT_TCP_PORT_NUMBER_INDEX	1
 125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
 130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Allocate the next port number from the private allocation range.
 131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * TCP and UDP each have their own series of port numbers
 132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * ulProtocol is either ipPROTOCOL_UDP or ipPROTOCOL_TCP
 133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
 134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static uint16_t prvGetPrivatePortNumber( BaseType_t xProtocol );
 135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
 137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Return the list item from within pxList that has an item value of
 138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * xWantedItemValue.  If there is no such list item return NULL.
 139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
 140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static const ListItem_t * pxListFindListItemWithValue( const List_t *pxList, TickType_t xWantedItem
 141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
ARM GAS  /tmp/ccrA3BdH.s 			page 23


 143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Return pdTRUE only if pxSocket is valid and bound, as far as can be
 144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * determined.
 145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
 146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static BaseType_t prvValidSocket( FreeRTOS_Socket_t *pxSocket, BaseType_t xProtocol, BaseType_t xIs
 147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
 149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Before creating a socket, check the validity of the parameters used
 150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * and find the size of the socket space, which is different for UDP and TCP
 151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
 152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static BaseType_t prvDetermineSocketSize( BaseType_t xDomain, BaseType_t xType, BaseType_t xProtoco
 153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
 155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
 156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Create a txStream or a rxStream, depending on the parameter 'xIsInputStream'
 157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
 158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static StreamBuffer_t *prvTCPCreateStream (FreeRTOS_Socket_t *pxSocket, BaseType_t xIsInputStream 
 159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP == 1 */
 160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
 162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
 163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Called from FreeRTOS_send(): some checks which will be done before
 164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * sending a TCP packed.
 165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
 166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static int32_t prvTCPSendCheck( FreeRTOS_Socket_t *pxSocket, size_t xDataLength );
 167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
 168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
 170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
 171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * When a child socket gets closed, make sure to update the child-count of the parent
 172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
 173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static void prvTCPSetSocketCount( FreeRTOS_Socket_t *pxSocketToDelete );
 174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif  /* ipconfigUSE_TCP == 1 */
 175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
 177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
 178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Called from FreeRTOS_connect(): make some checks and if allowed, send a
 179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * message to the IP-task to start connecting to a remote socket
 180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
 181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static BaseType_t prvTCPConnectStart( FreeRTOS_Socket_t *pxSocket, struct freertos_sockaddr *pxAdd
 182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
 183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Executed by the IP-task, it will check all sockets belonging to a set */
 187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static FreeRTOS_Socket_t *prvFindSelectedSocket( SocketSelect_t *pxSocketSet );
 188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* The list that contains mappings between sockets and port numbers.  Accesses
 193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** to this list must be protected by critical sections of one kind or another. */
 194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** List_t xBoundUDPSocketsList;
 195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if ipconfigUSE_TCP == 1
 197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	List_t xBoundTCPSocketsList;
 198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP == 1 */
 199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 24


 200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* Holds the next private port number to use when binding a client socket for
 201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** UDP, and if ipconfigUSE_TCP is set to 1, also TCP.  UDP uses index
 202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** socketNEXT_UDP_PORT_NUMBER_INDEX and TCP uses index
 203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** socketNEXT_TCP_PORT_NUMBER_INDEX.  The initial value is set to be between
 204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** socketAUTO_PORT_ALLOCATION_RESET_NUMBER and socketAUTO_PORT_ALLOCATION_MAX_NUMBER
 205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** when the IP stack is initialised.  Note ipconfigRAND32() is used, which must be
 206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** seeded prior to the IP task being started. */
 207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static uint16_t usNextPortToUse[ socketPROTOCOL_COUNT ] = { 0 };
 208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static BaseType_t prvValidSocket( FreeRTOS_Socket_t *pxSocket, BaseType_t xProtocol, BaseType_t xIs
 212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 669              		.loc 3 212 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 24
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              	.LCFI68:
 676              		.cfi_def_cfa_offset 4
 677              		.cfi_offset 7, -4
 678 0002 87B0     		sub	sp, sp, #28
 679              	.LCFI69:
 680              		.cfi_def_cfa_offset 32
 681 0004 00AF     		add	r7, sp, #0
 682              	.LCFI70:
 683              		.cfi_def_cfa_register 7
 684 0006 F860     		str	r0, [r7, #12]
 685 0008 B960     		str	r1, [r7, #8]
 686 000a 7A60     		str	r2, [r7, #4]
 213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xReturn = pdTRUE;
 687              		.loc 3 213 0
 688 000c 0123     		movs	r3, #1
 689 000e 7B61     		str	r3, [r7, #20]
 214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( ( pxSocket == NULL ) || ( pxSocket == FREERTOS_INVALID_SOCKET ) )
 690              		.loc 3 215 0
 691 0010 FB68     		ldr	r3, [r7, #12]
 692 0012 002B     		cmp	r3, #0
 693 0014 03D0     		beq	.L27
 694              		.loc 3 215 0 is_stmt 0 discriminator 1
 695 0016 FB68     		ldr	r3, [r7, #12]
 696 0018 B3F1FF3F 		cmp	r3, #-1
 697 001c 02D1     		bne	.L28
 698              	.L27:
 216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = pdFALSE;
 699              		.loc 3 217 0 is_stmt 1
 700 001e 0023     		movs	r3, #0
 701 0020 7B61     		str	r3, [r7, #20]
 702 0022 12E0     		b	.L29
 703              	.L28:
 218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else if( ( xIsBound != pdFALSE ) && ( socketSOCKET_IS_BOUND( pxSocket ) == pdFALSE ) )
 704              		.loc 3 219 0
 705 0024 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccrA3BdH.s 			page 25


 706 0026 002B     		cmp	r3, #0
 707 0028 06D0     		beq	.L30
 708              		.loc 3 219 0 is_stmt 0 discriminator 1
 709 002a FB68     		ldr	r3, [r7, #12]
 710 002c 9B69     		ldr	r3, [r3, #24]
 711 002e 002B     		cmp	r3, #0
 712 0030 02D1     		bne	.L30
 220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* The caller expects the socket to be bound, but it isn't. */
 222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = pdFALSE;
 713              		.loc 3 222 0 is_stmt 1
 714 0032 0023     		movs	r3, #0
 715 0034 7B61     		str	r3, [r7, #20]
 716 0036 08E0     		b	.L29
 717              	.L30:
 223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else if( pxSocket->ucProtocol != ( uint8_t ) xProtocol )
 718              		.loc 3 224 0
 719 0038 FB68     		ldr	r3, [r7, #12]
 720 003a 93F82720 		ldrb	r2, [r3, #39]	@ zero_extendqisi2
 721 003e BB68     		ldr	r3, [r7, #8]
 722 0040 DBB2     		uxtb	r3, r3
 723 0042 9A42     		cmp	r2, r3
 724 0044 01D0     		beq	.L29
 225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Socket has a wrong type (UDP != TCP). */
 227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = pdFALSE;
 725              		.loc 3 227 0
 726 0046 0023     		movs	r3, #0
 727 0048 7B61     		str	r3, [r7, #20]
 728              	.L29:
 228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xReturn;
 729              		.loc 3 230 0
 730 004a 7B69     		ldr	r3, [r7, #20]
 231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 731              		.loc 3 231 0
 732 004c 1846     		mov	r0, r3
 733 004e 1C37     		adds	r7, r7, #28
 734              	.LCFI71:
 735              		.cfi_def_cfa_offset 4
 736 0050 BD46     		mov	sp, r7
 737              	.LCFI72:
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0052 5DF8047B 		ldr	r7, [sp], #4
 741              	.LCFI73:
 742              		.cfi_restore 7
 743              		.cfi_def_cfa_offset 0
 744 0056 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE29:
 748              		.section	.text.vNetworkSocketsInit,"ax",%progbits
 749              		.align	2
 750              		.global	vNetworkSocketsInit
 751              		.thumb
ARM GAS  /tmp/ccrA3BdH.s 			page 26


 752              		.thumb_func
 754              	vNetworkSocketsInit:
 755              	.LFB30:
 232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** void vNetworkSocketsInit( void )
 235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 756              		.loc 3 235 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760 0000 80B5     		push	{r7, lr}
 761              	.LCFI74:
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 7, -8
 764              		.cfi_offset 14, -4
 765 0002 82B0     		sub	sp, sp, #8
 766              	.LCFI75:
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              	.LCFI76:
 770              		.cfi_def_cfa_register 7
 236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** const uint32_t ulAutoPortRange = socketAUTO_PORT_ALLOCATION_MAX_NUMBER - socketAUTO_PORT_ALLOCATION
 771              		.loc 3 236 0
 772 0006 4FF47853 		mov	r3, #15872
 773 000a 7B60     		str	r3, [r7, #4]
 237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** uint32_t ulRandomPort;
 238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	vListInitialise( &xBoundUDPSocketsList );
 774              		.loc 3 239 0
 775 000c 1A48     		ldr	r0, .L33
 776 000e FFF7FEFF 		bl	vListInitialise
 240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Determine the first anonymous UDP port number to get assigned.  Give it
 242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	a random value in order to avoid confusion about port numbers being used
 243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	earlier, before rebooting the device.  Start with the first auto port
 244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	number, then add a random offset up to a maximum of the range of numbers. */
 245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ulRandomPort = socketAUTO_PORT_ALLOCATION_START_NUMBER;
 777              		.loc 3 245 0
 778 0012 4FF44043 		mov	r3, #49152
 779 0016 3B60     		str	r3, [r7]
 246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ulRandomPort += ( ipconfigRAND32() % ulAutoPortRange );
 780              		.loc 3 246 0
 781 0018 FFF7FEFF 		bl	uxRand
 782 001c 0346     		mov	r3, r0
 783 001e 7A68     		ldr	r2, [r7, #4]
 784 0020 B3FBF2F2 		udiv	r2, r3, r2
 785 0024 7968     		ldr	r1, [r7, #4]
 786 0026 01FB02F2 		mul	r2, r1, r2
 787 002a 9B1A     		subs	r3, r3, r2
 788 002c 3A68     		ldr	r2, [r7]
 789 002e 1344     		add	r3, r3, r2
 790 0030 3B60     		str	r3, [r7]
 247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	usNextPortToUse[ socketNEXT_UDP_PORT_NUMBER_INDEX ] = ( uint16_t ) ulRandomPort;
 791              		.loc 3 247 0
 792 0032 3B68     		ldr	r3, [r7]
 793 0034 9AB2     		uxth	r2, r3
ARM GAS  /tmp/ccrA3BdH.s 			page 27


 794 0036 114B     		ldr	r3, .L33+4
 795 0038 1A80     		strh	r2, [r3]	@ movhi
 796              	.LBB42:
 248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigUSE_TCP == 1 )
 250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		extern uint32_t ulNextInitialSequenceNumber;
 252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		ulNextInitialSequenceNumber = ipconfigRAND32();
 797              		.loc 3 253 0
 798 003a FFF7FEFF 		bl	uxRand
 799 003e 0246     		mov	r2, r0
 800 0040 0F4B     		ldr	r3, .L33+8
 801 0042 1A60     		str	r2, [r3]
 254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Determine the first anonymous TCP port number to get assigned. */
 256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		ulRandomPort = socketAUTO_PORT_ALLOCATION_START_NUMBER;
 802              		.loc 3 256 0
 803 0044 4FF44043 		mov	r3, #49152
 804 0048 3B60     		str	r3, [r7]
 257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		ulRandomPort += ( ipconfigRAND32() % ulAutoPortRange );
 805              		.loc 3 257 0
 806 004a FFF7FEFF 		bl	uxRand
 807 004e 0346     		mov	r3, r0
 808 0050 7A68     		ldr	r2, [r7, #4]
 809 0052 B3FBF2F2 		udiv	r2, r3, r2
 810 0056 7968     		ldr	r1, [r7, #4]
 811 0058 01FB02F2 		mul	r2, r1, r2
 812 005c 9B1A     		subs	r3, r3, r2
 813 005e 3A68     		ldr	r2, [r7]
 814 0060 1344     		add	r3, r3, r2
 815 0062 3B60     		str	r3, [r7]
 258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		usNextPortToUse[ socketNEXT_TCP_PORT_NUMBER_INDEX ] = ( uint16_t ) ulRandomPort;
 816              		.loc 3 258 0
 817 0064 3B68     		ldr	r3, [r7]
 818 0066 9AB2     		uxth	r2, r3
 819 0068 044B     		ldr	r3, .L33+4
 820 006a 5A80     		strh	r2, [r3, #2]	@ movhi
 259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		vListInitialise( &xBoundTCPSocketsList );
 821              		.loc 3 260 0
 822 006c 0548     		ldr	r0, .L33+12
 823 006e FFF7FEFF 		bl	vListInitialise
 824              	.LBE42:
 261:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 262:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif  /* ipconfigUSE_TCP == 1 */
 263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 825              		.loc 3 263 0
 826 0072 0837     		adds	r7, r7, #8
 827              	.LCFI77:
 828              		.cfi_def_cfa_offset 8
 829 0074 BD46     		mov	sp, r7
 830              	.LCFI78:
 831              		.cfi_def_cfa_register 13
 832              		@ sp needed
 833 0076 80BD     		pop	{r7, pc}
 834              	.L34:
ARM GAS  /tmp/ccrA3BdH.s 			page 28


 835              		.align	2
 836              	.L33:
 837 0078 00000000 		.word	xBoundUDPSocketsList
 838 007c 00000000 		.word	usNextPortToUse
 839 0080 00000000 		.word	ulNextInitialSequenceNumber
 840 0084 00000000 		.word	xBoundTCPSocketsList
 841              		.cfi_endproc
 842              	.LFE30:
 844              		.section	.text.prvDetermineSocketSize,"ax",%progbits
 845              		.align	2
 846              		.thumb
 847              		.thumb_func
 849              	prvDetermineSocketSize:
 850              	.LFB31:
 264:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 265:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 266:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static BaseType_t prvDetermineSocketSize( BaseType_t xDomain, BaseType_t xType, BaseType_t xProtoco
 267:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 851              		.loc 3 267 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 32
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              	.LCFI79:
 857              		.cfi_def_cfa_offset 8
 858              		.cfi_offset 7, -8
 859              		.cfi_offset 14, -4
 860 0002 88B0     		sub	sp, sp, #32
 861              	.LCFI80:
 862              		.cfi_def_cfa_offset 40
 863 0004 00AF     		add	r7, sp, #0
 864              	.LCFI81:
 865              		.cfi_def_cfa_register 7
 866 0006 F860     		str	r0, [r7, #12]
 867 0008 B960     		str	r1, [r7, #8]
 868 000a 7A60     		str	r2, [r7, #4]
 869 000c 3B60     		str	r3, [r7]
 268:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xReturn = pdPASS;
 870              		.loc 3 268 0
 871 000e 0123     		movs	r3, #1
 872 0010 FB61     		str	r3, [r7, #28]
 269:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket;
 270:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 271:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Asserts must not appear before it has been determined that the network
 272:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	task is ready - otherwise the asserts will fail. */
 273:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( xIPIsNetworkTaskReady() == pdFALSE )
 873              		.loc 3 273 0
 874 0012 FFF7FEFF 		bl	xIPIsNetworkTaskReady
 875 0016 0346     		mov	r3, r0
 876 0018 002B     		cmp	r3, #0
 877 001a 02D1     		bne	.L36
 274:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 275:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = pdFAIL;
 878              		.loc 3 275 0
 879 001c 0023     		movs	r3, #0
 880 001e FB61     		str	r3, [r7, #28]
 881 0020 45E0     		b	.L37
ARM GAS  /tmp/ccrA3BdH.s 			page 29


 882              	.L36:
 276:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 277:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
 278:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 279:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Only Ethernet is currently supported. */
 280:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( xDomain == FREERTOS_AF_INET );
 883              		.loc 3 280 0
 884 0022 FB68     		ldr	r3, [r7, #12]
 885 0024 022B     		cmp	r3, #2
 886 0026 09D0     		beq	.L38
 887              	.LBB43:
 888              	.LBB44:
 889              		.file 4 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     All rights reserved
   4:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   5:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   7:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
   9:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  13:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  14:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  19:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  20:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  25:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  26:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  27:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  32:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****      *                                                                       *
  37:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     ***************************************************************************
  38:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  39:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     defined configASSERT()?
  42:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  43:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
ARM GAS  /tmp/ccrA3BdH.s 			page 30


  45:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     participating in the support forum.
  46:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  47:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  52:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  56:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  63:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  67:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** */
  69:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  70:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  71:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  73:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  74:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  75:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  76:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  77:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  80:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  81:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  83:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  84:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  85:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  87:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  88:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  89:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  90:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  91:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  92:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  93:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  94:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  95:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  96:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  97:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  99:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 101:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
ARM GAS  /tmp/ccrA3BdH.s 			page 31


 102:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
 103:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
 104:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
 105:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
 106:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
 110:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
 111:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 112:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 114:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
 115:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
 116:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
 118:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 120:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
 121:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
 122:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
 123:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
 124:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
 125:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
 126:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
 127:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
 128:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" );													\
 129:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
 130:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 131:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 132:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 133:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
 134:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) { if( xSwitchRequired != pdFALSE ) { traceISR_EXIT
 135:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
 136:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 137:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
 139:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 140:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
 141:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 142:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 143:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 144:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 145:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 146:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 147:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 148:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 149:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 150:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 151:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 152:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 153:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 156:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 157:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 158:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
ARM GAS  /tmp/ccrA3BdH.s 			page 32


 159:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 160:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 161:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 162:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 163:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 164:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 165:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 166:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 167:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 170:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 171:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 172:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 173:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 174:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 175:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 176:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) );
 177:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 178:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 179:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 180:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 181:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 182:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 183:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 184:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 185:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 186:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 187:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 188:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 190:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 192:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 193:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 194:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 196:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 197:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 198:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 199:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 200:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 201:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 202:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 203:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 204:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 206:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 208:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 209:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 210:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 212:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 213:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 214:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 215:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 33


 216:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 217:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 218:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 219:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 220:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 221:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 222:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 223:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 224:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 225:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 226:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 227:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 228:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 229:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 230:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 231:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 232:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 233:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 234:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 235:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 236:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 237:../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 890              		.loc 4 237 0 discriminator 1
 891              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 892 0028 4FF05003 			mov r3, #80												
 893 002c 83F31188 		msr basepri, r3											
 894 0030 BFF36F8F 		isb														
 895 0034 BFF34F8F 		dsb														
 896              	
 897              	@ 0 "" 2
 898              		.thumb
 899 0038 BB61     		str	r3, [r7, #24]
 900              	.L39:
 901              	.LBE44:
 902              	.LBE43:
 903              		.loc 3 280 0 discriminator 1
 904 003a FEE7     		b	.L39
 905              	.L38:
 281:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 282:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Check if the UDP socket-list has been initialised. */
 283:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( listLIST_IS_INITIALISED( &xBoundUDPSocketsList ) );
 906              		.loc 3 283 0
 907 003c 1E4B     		ldr	r3, .L49
 908 003e 9B68     		ldr	r3, [r3, #8]
 909 0040 B3F1FF3F 		cmp	r3, #-1
 910 0044 09D0     		beq	.L40
 911              	.LBB45:
 912              	.LBB46:
 913              		.loc 4 237 0 discriminator 1
 914              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 915 0046 4FF05003 			mov r3, #80												
 916 004a 83F31188 		msr basepri, r3											
 917 004e BFF36F8F 		isb														
 918 0052 BFF34F8F 		dsb														
 919              	
 920              	@ 0 "" 2
 921              		.thumb
ARM GAS  /tmp/ccrA3BdH.s 			page 34


 922 0056 7B61     		str	r3, [r7, #20]
 923              	.L41:
 924              	.LBE46:
 925              	.LBE45:
 926              		.loc 3 283 0 discriminator 2
 927 0058 FEE7     		b	.L41
 928              	.L40:
 284:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigUSE_TCP == 1 )
 285:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 286:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Check if the TCP socket-list has been initialised. */
 287:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			configASSERT( listLIST_IS_INITIALISED( &xBoundTCPSocketsList ) );
 929              		.loc 3 287 0
 930 005a 184B     		ldr	r3, .L49+4
 931 005c 9B68     		ldr	r3, [r3, #8]
 932 005e B3F1FF3F 		cmp	r3, #-1
 933 0062 09D0     		beq	.L42
 934              	.LBB47:
 935              	.LBB48:
 936              		.loc 4 237 0 discriminator 1
 937              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 938 0064 4FF05003 			mov r3, #80												
 939 0068 83F31188 		msr basepri, r3											
 940 006c BFF36F8F 		isb														
 941 0070 BFF34F8F 		dsb														
 942              	
 943              	@ 0 "" 2
 944              		.thumb
 945 0074 3B61     		str	r3, [r7, #16]
 946              	.L43:
 947              	.LBE48:
 948              	.LBE47:
 949              		.loc 3 287 0 discriminator 3
 950 0076 FEE7     		b	.L43
 951              	.L42:
 288:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 289:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif  /* ipconfigUSE_TCP == 1 */
 290:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 291:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xProtocol == FREERTOS_IPPROTO_UDP )
 952              		.loc 3 291 0
 953 0078 7B68     		ldr	r3, [r7, #4]
 954 007a 112B     		cmp	r3, #17
 955 007c 08D1     		bne	.L44
 292:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 293:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xType != FREERTOS_SOCK_DGRAM )
 956              		.loc 3 293 0
 957 007e BB68     		ldr	r3, [r7, #8]
 958 0080 022B     		cmp	r3, #2
 959 0082 01D0     		beq	.L45
 294:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 295:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = pdFAIL;
 960              		.loc 3 295 0
 961 0084 0023     		movs	r3, #0
 962 0086 FB61     		str	r3, [r7, #28]
 963              	.L45:
 296:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 297:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* In case a UDP socket is created, do not allocate space for TCP data. */
 298:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			*pxSocketSize = ( sizeof( *pxSocket ) - sizeof( pxSocket->u ) ) + sizeof( pxSocket->u.xUDP );
ARM GAS  /tmp/ccrA3BdH.s 			page 35


 964              		.loc 3 298 0
 965 0088 3B68     		ldr	r3, [r7]
 966 008a 4C22     		movs	r2, #76
 967 008c 1A60     		str	r2, [r3]
 968 008e 0EE0     		b	.L37
 969              	.L44:
 299:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 300:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
 301:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( xProtocol == FREERTOS_IPPROTO_TCP )
 970              		.loc 3 301 0
 971 0090 7B68     		ldr	r3, [r7, #4]
 972 0092 062B     		cmp	r3, #6
 973 0094 09D1     		bne	.L46
 302:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 303:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xType != FREERTOS_SOCK_STREAM )
 974              		.loc 3 303 0
 975 0096 BB68     		ldr	r3, [r7, #8]
 976 0098 012B     		cmp	r3, #1
 977 009a 01D0     		beq	.L47
 304:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 305:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = pdFAIL;
 978              		.loc 3 305 0
 979 009c 0023     		movs	r3, #0
 980 009e FB61     		str	r3, [r7, #28]
 981              	.L47:
 306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 307:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			*pxSocketSize = ( sizeof( *pxSocket ) - sizeof( pxSocket->u ) ) + sizeof( pxSocket->u.xTCP );
 982              		.loc 3 308 0
 983 00a0 3B68     		ldr	r3, [r7]
 984 00a2 4FF4D072 		mov	r2, #416
 985 00a6 1A60     		str	r2, [r3]
 986 00a8 01E0     		b	.L37
 987              	.L46:
 309:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 310:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif  /* ipconfigUSE_TCP == 1 */
 311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 313:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = pdFAIL;
 988              		.loc 3 313 0
 989 00aa 0023     		movs	r3, #0
 990 00ac FB61     		str	r3, [r7, #28]
 991              	.L37:
 314:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 315:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 316:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* In case configASSERT() is not used */
 317:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void )xDomain;
 318:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xReturn;
 992              		.loc 3 318 0
 993 00ae FB69     		ldr	r3, [r7, #28]
 319:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 994              		.loc 3 319 0
 995 00b0 1846     		mov	r0, r3
 996 00b2 2037     		adds	r7, r7, #32
 997              	.LCFI82:
 998              		.cfi_def_cfa_offset 8
 999 00b4 BD46     		mov	sp, r7
ARM GAS  /tmp/ccrA3BdH.s 			page 36


 1000              	.LCFI83:
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 00b6 80BD     		pop	{r7, pc}
 1004              	.L50:
 1005              		.align	2
 1006              	.L49:
 1007 00b8 00000000 		.word	xBoundUDPSocketsList
 1008 00bc 00000000 		.word	xBoundTCPSocketsList
 1009              		.cfi_endproc
 1010              	.LFE31:
 1012              		.section	.text.FreeRTOS_socket,"ax",%progbits
 1013              		.align	2
 1014              		.global	FreeRTOS_socket
 1015              		.thumb
 1016              		.thumb_func
 1018              	FreeRTOS_socket:
 1019              	.LFB32:
 320:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 321:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 322:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* FreeRTOS_socket() allocates and initiates a socket */
 323:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** Socket_t FreeRTOS_socket( BaseType_t xDomain, BaseType_t xType, BaseType_t xProtocol )
 324:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 1020              		.loc 3 324 0
 1021              		.cfi_startproc
 1022              		@ args = 0, pretend = 0, frame = 32
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              	.LCFI84:
 1026              		.cfi_def_cfa_offset 8
 1027              		.cfi_offset 7, -8
 1028              		.cfi_offset 14, -4
 1029 0002 88B0     		sub	sp, sp, #32
 1030              	.LCFI85:
 1031              		.cfi_def_cfa_offset 40
 1032 0004 00AF     		add	r7, sp, #0
 1033              	.LCFI86:
 1034              		.cfi_def_cfa_register 7
 1035 0006 F860     		str	r0, [r7, #12]
 1036 0008 B960     		str	r1, [r7, #8]
 1037 000a 7A60     		str	r2, [r7, #4]
 325:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket;
 326:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** size_t uxSocketSize;
 327:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** EventGroupHandle_t xEventGroup;
 328:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** Socket_t xReturn;
 329:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 330:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( prvDetermineSocketSize( xDomain, xType, xProtocol, &uxSocketSize ) == pdFAIL )
 1038              		.loc 3 330 0
 1039 000c 07F11003 		add	r3, r7, #16
 1040 0010 F868     		ldr	r0, [r7, #12]
 1041 0012 B968     		ldr	r1, [r7, #8]
 1042 0014 7A68     		ldr	r2, [r7, #4]
 1043 0016 FFF7FEFF 		bl	prvDetermineSocketSize
 1044 001a 0346     		mov	r3, r0
 1045 001c 002B     		cmp	r3, #0
 1046 001e 03D1     		bne	.L52
 331:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
ARM GAS  /tmp/ccrA3BdH.s 			page 37


 332:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = FREERTOS_INVALID_SOCKET;
 1047              		.loc 3 332 0
 1048 0020 4FF0FF33 		mov	r3, #-1
 1049 0024 BB61     		str	r3, [r7, #24]
 1050 0026 7DE0     		b	.L53
 1051              	.L52:
 333:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 334:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
 335:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 336:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Allocate the structure that will hold the socket information.  The
 337:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		size depends on the type of socket: UDP sockets need less space.  A
 338:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		define 'pvPortMallocSocket' will used to allocate the necessary space.
 339:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		By default it points to the FreeRTOS function 'pvPortMalloc()'. */
 340:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocket = ( FreeRTOS_Socket_t * ) pvPortMallocSocket( uxSocketSize );
 1052              		.loc 3 340 0
 1053 0028 3B69     		ldr	r3, [r7, #16]
 1054 002a 1846     		mov	r0, r3
 1055 002c FFF7FEFF 		bl	pvPortMalloc
 1056 0030 F861     		str	r0, [r7, #28]
 341:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 342:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket == NULL )
 1057              		.loc 3 342 0
 1058 0032 FB69     		ldr	r3, [r7, #28]
 1059 0034 002B     		cmp	r3, #0
 1060 0036 03D1     		bne	.L54
 343:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 344:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket = ( FreeRTOS_Socket_t * ) FREERTOS_INVALID_SOCKET;
 1061              		.loc 3 344 0
 1062 0038 4FF0FF33 		mov	r3, #-1
 1063 003c FB61     		str	r3, [r7, #28]
 1064 003e 6FE0     		b	.L55
 1065              	.L54:
 345:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			iptraceFAILED_TO_CREATE_SOCKET();
 346:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 347:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( ( xEventGroup = xEventGroupCreate() ) == NULL )
 1066              		.loc 3 347 0
 1067 0040 FFF7FEFF 		bl	xEventGroupCreate
 1068 0044 7861     		str	r0, [r7, #20]
 1069 0046 7B69     		ldr	r3, [r7, #20]
 1070 0048 002B     		cmp	r3, #0
 1071 004a 06D1     		bne	.L56
 348:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 349:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vPortFreeSocket( pxSocket );
 1072              		.loc 3 349 0
 1073 004c F869     		ldr	r0, [r7, #28]
 1074 004e FFF7FEFF 		bl	vPortFree
 350:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket = ( FreeRTOS_Socket_t * ) FREERTOS_INVALID_SOCKET;
 1075              		.loc 3 350 0
 1076 0052 4FF0FF33 		mov	r3, #-1
 1077 0056 FB61     		str	r3, [r7, #28]
 1078 0058 62E0     		b	.L55
 1079              	.L56:
 351:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			iptraceFAILED_TO_CREATE_EVENT_GROUP();
 352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 353:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 355:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Clear the entire space to avoid nulling individual entries */
ARM GAS  /tmp/ccrA3BdH.s 			page 38


 356:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			memset( pxSocket, '\0', uxSocketSize );
 1080              		.loc 3 356 0
 1081 005a 3B69     		ldr	r3, [r7, #16]
 1082 005c F869     		ldr	r0, [r7, #28]
 1083 005e 0021     		movs	r1, #0
 1084 0060 1A46     		mov	r2, r3
 1085 0062 FFF7FEFF 		bl	memset
 357:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 358:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->xEventGroup = xEventGroup;
 1086              		.loc 3 358 0
 1087 0066 FB69     		ldr	r3, [r7, #28]
 1088 0068 7A69     		ldr	r2, [r7, #20]
 1089 006a 5A60     		str	r2, [r3, #4]
 359:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 360:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Initialise the socket's members.  The semaphore will be created
 361:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if the socket is bound to an address, for now the pointer to the
 362:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			semaphore is just set to NULL to show it has not been created. */
 363:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xProtocol == FREERTOS_IPPROTO_UDP )
 1090              		.loc 3 363 0
 1091 006c 7B68     		ldr	r3, [r7, #4]
 1092 006e 112B     		cmp	r3, #17
 1093 0070 04D1     		bne	.L57
 364:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 365:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vListInitialise( &( pxSocket->u.xUDP.xWaitingPacketsList ) );
 1094              		.loc 3 365 0
 1095 0072 FB69     		ldr	r3, [r7, #28]
 1096 0074 3833     		adds	r3, r3, #56
 1097 0076 1846     		mov	r0, r3
 1098 0078 FFF7FEFF 		bl	vListInitialise
 1099              	.L57:
 366:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 367:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigUDP_MAX_RX_PACKETS > 0 )
 368:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 369:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xUDP.uxMaxPackets = ( UBaseType_t ) ipconfigUDP_MAX_RX_PACKETS;
 370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 371:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif /* ipconfigUDP_MAX_RX_PACKETS > 0 */
 372:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 373:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 374:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vListInitialiseItem( &( pxSocket->xBoundSocketListItem ) );
 1100              		.loc 3 374 0
 1101 007c FB69     		ldr	r3, [r7, #28]
 1102 007e 0833     		adds	r3, r3, #8
 1103 0080 1846     		mov	r0, r3
 1104 0082 FFF7FEFF 		bl	vListInitialiseItem
 375:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			listSET_LIST_ITEM_OWNER( &( pxSocket->xBoundSocketListItem ), ( void * ) pxSocket );
 1105              		.loc 3 375 0
 1106 0086 FB69     		ldr	r3, [r7, #28]
 1107 0088 FA69     		ldr	r2, [r7, #28]
 1108 008a 5A61     		str	r2, [r3, #20]
 376:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 377:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->xReceiveBlockTime = ipconfigSOCK_DEFAULT_RECEIVE_BLOCK_TIME;
 1109              		.loc 3 377 0
 1110 008c FB69     		ldr	r3, [r7, #28]
 1111 008e 41F28832 		movw	r2, #5000
 1112 0092 DA61     		str	r2, [r3, #28]
 378:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->xSendBlockTime    = ipconfigSOCK_DEFAULT_SEND_BLOCK_TIME;
 1113              		.loc 3 378 0
ARM GAS  /tmp/ccrA3BdH.s 			page 39


 1114 0094 FB69     		ldr	r3, [r7, #28]
 1115 0096 41F28832 		movw	r2, #5000
 1116 009a 1A62     		str	r2, [r3, #32]
 379:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->ucSocketOptions   = ( uint8_t ) FREERTOS_SO_UDPCKSUM_OUT;
 1117              		.loc 3 379 0
 1118 009c FB69     		ldr	r3, [r7, #28]
 1119 009e 0222     		movs	r2, #2
 1120 00a0 83F82620 		strb	r2, [r3, #38]
 380:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->ucProtocol        = ( uint8_t ) xProtocol; /* protocol: UDP or TCP */
 1121              		.loc 3 380 0
 1122 00a4 7B68     		ldr	r3, [r7, #4]
 1123 00a6 DAB2     		uxtb	r2, r3
 1124 00a8 FB69     		ldr	r3, [r7, #28]
 1125 00aa 83F82720 		strb	r2, [r3, #39]
 381:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 382:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigUSE_TCP == 1 )
 383:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 384:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xProtocol == FREERTOS_IPPROTO_TCP )
 1126              		.loc 3 384 0
 1127 00ae 7B68     		ldr	r3, [r7, #4]
 1128 00b0 062B     		cmp	r3, #6
 1129 00b2 35D1     		bne	.L55
 385:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 386:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* StreamSize is expressed in number of bytes */
 387:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Round up buffer sizes to nearest multiple of MSS */
 388:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.usInitMSS    = pxSocket->u.xTCP.usCurMSS = ipconfigTCP_MSS;
 1130              		.loc 3 388 0
 1131 00b4 FB69     		ldr	r3, [r7, #28]
 1132 00b6 40F2B452 		movw	r2, #1460
 1133 00ba A3F84A20 		strh	r2, [r3, #74]	@ movhi
 1134 00be FB69     		ldr	r3, [r7, #28]
 1135 00c0 B3F84A20 		ldrh	r2, [r3, #74]
 1136 00c4 FB69     		ldr	r3, [r7, #28]
 1137 00c6 A3F84C20 		strh	r2, [r3, #76]	@ movhi
 389:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.uxRxStreamSize = ( size_t ) ipconfigTCP_RX_BUFFER_LENGTH;
 1138              		.loc 3 389 0
 1139 00ca FB69     		ldr	r3, [r7, #28]
 1140 00cc 41F21C12 		movw	r2, #4380
 1141 00d0 DA66     		str	r2, [r3, #108]
 390:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.uxTxStreamSize = ( size_t ) FreeRTOS_round_up( ipconfigTCP_TX_BUFFER_LENGTH, 
 1142              		.loc 3 390 0
 1143 00d2 40F66830 		movw	r0, #2920
 1144 00d6 40F2B451 		movw	r1, #1460
 1145 00da FFF7FEFF 		bl	FreeRTOS_round_up
 1146 00de 0246     		mov	r2, r0
 1147 00e0 FB69     		ldr	r3, [r7, #28]
 1148 00e2 1A67     		str	r2, [r3, #112]
 391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Use half of the buffer size of the TCP windows */
 392:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#if ( ipconfigUSE_TCP_WIN == 1 )
 393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
 394:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxRxWinSize  = FreeRTOS_max_uint32( 1UL, ( uint32_t ) ( pxSocket->u.xTCP.uxR
 1149              		.loc 3 394 0
 1150 00e4 FB69     		ldr	r3, [r7, #28]
 1151 00e6 DB6E     		ldr	r3, [r3, #108]
 1152 00e8 DB08     		lsrs	r3, r3, #3
 1153 00ea 114A     		ldr	r2, .L59
 1154 00ec A2FB0323 		umull	r2, r3, r2, r3
ARM GAS  /tmp/ccrA3BdH.s 			page 40


 1155 00f0 9B09     		lsrs	r3, r3, #6
 1156 00f2 0120     		movs	r0, #1
 1157 00f4 1946     		mov	r1, r3
 1158 00f6 FFF7FEFF 		bl	FreeRTOS_max_uint32
 1159 00fa 0246     		mov	r2, r0
 1160 00fc FB69     		ldr	r3, [r7, #28]
 1161 00fe C3F8D420 		str	r2, [r3, #212]
 395:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxTxWinSize  = FreeRTOS_max_uint32( 1UL, ( uint32_t ) ( pxSocket->u.xTCP.uxT
 1162              		.loc 3 395 0
 1163 0102 FB69     		ldr	r3, [r7, #28]
 1164 0104 1B6F     		ldr	r3, [r3, #112]
 1165 0106 DB08     		lsrs	r3, r3, #3
 1166 0108 094A     		ldr	r2, .L59
 1167 010a A2FB0323 		umull	r2, r3, r2, r3
 1168 010e 9B09     		lsrs	r3, r3, #6
 1169 0110 0120     		movs	r0, #1
 1170 0112 1946     		mov	r1, r3
 1171 0114 FFF7FEFF 		bl	FreeRTOS_max_uint32
 1172 0118 0246     		mov	r2, r0
 1173 011a FB69     		ldr	r3, [r7, #28]
 1174 011c C3F8D820 		str	r2, [r3, #216]
 1175              	.L55:
 396:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
 397:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#else
 398:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
 399:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxRxWinSize  = 1u;
 400:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxTxWinSize  = 1u;
 401:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
 402:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#endif
 403:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* The above values are just defaults, and can be overridden by
 404:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					calling FreeRTOS_setsockopt().  No buffers will be allocated until a
 405:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					socket is connected and data is exchanged. */
 406:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 407:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif  /* ipconfigUSE_TCP == 1 */
 409:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 410:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 411:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = ( Socket_t ) pxSocket;
 1176              		.loc 3 411 0
 1177 0120 FB69     		ldr	r3, [r7, #28]
 1178 0122 BB61     		str	r3, [r7, #24]
 1179              	.L53:
 412:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 413:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 414:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Remove compiler warnings in the case the configASSERT() is not defined. */
 415:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) xDomain;
 416:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 417:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xReturn;
 1180              		.loc 3 417 0
 1181 0124 BB69     		ldr	r3, [r7, #24]
 418:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 1182              		.loc 3 418 0
 1183 0126 1846     		mov	r0, r3
 1184 0128 2037     		adds	r7, r7, #32
 1185              	.LCFI87:
 1186              		.cfi_def_cfa_offset 8
 1187 012a BD46     		mov	sp, r7
ARM GAS  /tmp/ccrA3BdH.s 			page 41


 1188              	.LCFI88:
 1189              		.cfi_def_cfa_register 13
 1190              		@ sp needed
 1191 012c 80BD     		pop	{r7, pc}
 1192              	.L60:
 1193 012e 00BF     		.align	2
 1194              	.L59:
 1195 0130 6D3EE32C 		.word	753090157
 1196              		.cfi_endproc
 1197              	.LFE32:
 1199              		.section	.text.FreeRTOS_CreateSocketSet,"ax",%progbits
 1200              		.align	2
 1201              		.global	FreeRTOS_CreateSocketSet
 1202              		.thumb
 1203              		.thumb_func
 1205              	FreeRTOS_CreateSocketSet:
 1206              	.LFB33:
 419:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 420:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 421:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 422:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 423:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	SocketSet_t FreeRTOS_CreateSocketSet( void )
 424:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1207              		.loc 3 424 0
 1208              		.cfi_startproc
 1209              		@ args = 0, pretend = 0, frame = 8
 1210              		@ frame_needed = 1, uses_anonymous_args = 0
 1211 0000 80B5     		push	{r7, lr}
 1212              	.LCFI89:
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 7, -8
 1215              		.cfi_offset 14, -4
 1216 0002 82B0     		sub	sp, sp, #8
 1217              	.LCFI90:
 1218              		.cfi_def_cfa_offset 16
 1219 0004 00AF     		add	r7, sp, #0
 1220              	.LCFI91:
 1221              		.cfi_def_cfa_register 7
 425:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	SocketSelect_t *pxSocketSet;
 426:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 427:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocketSet = ( SocketSelect_t * ) pvPortMalloc( sizeof( *pxSocketSet ) );
 1222              		.loc 3 427 0
 1223 0006 0C20     		movs	r0, #12
 1224 0008 FFF7FEFF 		bl	pvPortMalloc
 1225 000c 7860     		str	r0, [r7, #4]
 428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 429:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocketSet != NULL )
 1226              		.loc 3 429 0
 1227 000e 7B68     		ldr	r3, [r7, #4]
 1228 0010 002B     		cmp	r3, #0
 1229 0012 12D0     		beq	.L62
 430:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 431:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			memset( pxSocketSet, '\0', sizeof( *pxSocketSet ) );
 1230              		.loc 3 431 0
 1231 0014 7868     		ldr	r0, [r7, #4]
 1232 0016 0021     		movs	r1, #0
 1233 0018 0C22     		movs	r2, #12
ARM GAS  /tmp/ccrA3BdH.s 			page 42


 1234 001a FFF7FEFF 		bl	memset
 432:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocketSet->xSelectGroup = xEventGroupCreate();
 1235              		.loc 3 432 0
 1236 001e FFF7FEFF 		bl	xEventGroupCreate
 1237 0022 0246     		mov	r2, r0
 1238 0024 7B68     		ldr	r3, [r7, #4]
 1239 0026 1A60     		str	r2, [r3]
 433:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 434:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocketSet->xSelectGroup == NULL )
 1240              		.loc 3 434 0
 1241 0028 7B68     		ldr	r3, [r7, #4]
 1242 002a 1B68     		ldr	r3, [r3]
 1243 002c 002B     		cmp	r3, #0
 1244 002e 04D1     		bne	.L62
 435:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 436:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vPortFree( ( void* ) pxSocketSet );
 1245              		.loc 3 436 0
 1246 0030 7868     		ldr	r0, [r7, #4]
 1247 0032 FFF7FEFF 		bl	vPortFree
 437:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocketSet = NULL;
 1248              		.loc 3 437 0
 1249 0036 0023     		movs	r3, #0
 1250 0038 7B60     		str	r3, [r7, #4]
 1251              	.L62:
 438:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 439:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 440:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 441:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return ( SocketSet_t * ) pxSocketSet;
 1252              		.loc 3 441 0
 1253 003a 7B68     		ldr	r3, [r7, #4]
 442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1254              		.loc 3 442 0
 1255 003c 1846     		mov	r0, r3
 1256 003e 0837     		adds	r7, r7, #8
 1257              	.LCFI92:
 1258              		.cfi_def_cfa_offset 8
 1259 0040 BD46     		mov	sp, r7
 1260              	.LCFI93:
 1261              		.cfi_def_cfa_register 13
 1262              		@ sp needed
 1263 0042 80BD     		pop	{r7, pc}
 1264              		.cfi_endproc
 1265              	.LFE33:
 1267              		.section	.text.FreeRTOS_DeleteSocketSet,"ax",%progbits
 1268              		.align	2
 1269              		.global	FreeRTOS_DeleteSocketSet
 1270              		.thumb
 1271              		.thumb_func
 1273              	FreeRTOS_DeleteSocketSet:
 1274              	.LFB34:
 443:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 445:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 446:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 447:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 448:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 449:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	void FreeRTOS_DeleteSocketSet( SocketSet_t xSocketSet )
ARM GAS  /tmp/ccrA3BdH.s 			page 43


 450:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1275              		.loc 3 450 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 16
 1278              		@ frame_needed = 1, uses_anonymous_args = 0
 1279 0000 80B5     		push	{r7, lr}
 1280              	.LCFI94:
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 84B0     		sub	sp, sp, #16
 1285              	.LCFI95:
 1286              		.cfi_def_cfa_offset 24
 1287 0004 00AF     		add	r7, sp, #0
 1288              	.LCFI96:
 1289              		.cfi_def_cfa_register 7
 1290 0006 7860     		str	r0, [r7, #4]
 451:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		SocketSelect_t *pxSocketSet = ( SocketSelect_t*) xSocketSet;
 1291              		.loc 3 451 0
 1292 0008 7B68     		ldr	r3, [r7, #4]
 1293 000a FB60     		str	r3, [r7, #12]
 452:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 453:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		vEventGroupDelete( pxSocketSet->xSelectGroup );
 1294              		.loc 3 453 0
 1295 000c FB68     		ldr	r3, [r7, #12]
 1296 000e 1B68     		ldr	r3, [r3]
 1297 0010 1846     		mov	r0, r3
 1298 0012 FFF7FEFF 		bl	vEventGroupDelete
 454:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		vPortFree( ( void* ) pxSocketSet );
 1299              		.loc 3 454 0
 1300 0016 F868     		ldr	r0, [r7, #12]
 1301 0018 FFF7FEFF 		bl	vPortFree
 455:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1302              		.loc 3 455 0
 1303 001c 1037     		adds	r7, r7, #16
 1304              	.LCFI97:
 1305              		.cfi_def_cfa_offset 8
 1306 001e BD46     		mov	sp, r7
 1307              	.LCFI98:
 1308              		.cfi_def_cfa_register 13
 1309              		@ sp needed
 1310 0020 80BD     		pop	{r7, pc}
 1311              		.cfi_endproc
 1312              	.LFE34:
 1314 0022 00BF     		.section	.text.FreeRTOS_FD_SET,"ax",%progbits
 1315              		.align	2
 1316              		.global	FreeRTOS_FD_SET
 1317              		.thumb
 1318              		.thumb_func
 1320              	FreeRTOS_FD_SET:
 1321              	.LFB35:
 456:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 457:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 458:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 459:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 460:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 461:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 44


 462:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Add a socket to a set */
 463:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	void FreeRTOS_FD_SET( Socket_t xSocket, SocketSet_t xSocketSet, EventBits_t xSelectBits )
 464:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1322              		.loc 3 464 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 32
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326 0000 80B5     		push	{r7, lr}
 1327              	.LCFI99:
 1328              		.cfi_def_cfa_offset 8
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
 1331 0002 88B0     		sub	sp, sp, #32
 1332              	.LCFI100:
 1333              		.cfi_def_cfa_offset 40
 1334 0004 00AF     		add	r7, sp, #0
 1335              	.LCFI101:
 1336              		.cfi_def_cfa_register 7
 1337 0006 F860     		str	r0, [r7, #12]
 1338 0008 B960     		str	r1, [r7, #8]
 1339 000a 7A60     		str	r2, [r7, #4]
 465:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 1340              		.loc 3 465 0
 1341 000c FB68     		ldr	r3, [r7, #12]
 1342 000e FB61     		str	r3, [r7, #28]
 466:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	SocketSelect_t *pxSocketSet = ( SocketSelect_t * ) xSocketSet;
 1343              		.loc 3 466 0
 1344 0010 BB68     		ldr	r3, [r7, #8]
 1345 0012 BB61     		str	r3, [r7, #24]
 467:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 468:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket != NULL );
 1346              		.loc 3 468 0
 1347 0014 FB69     		ldr	r3, [r7, #28]
 1348 0016 002B     		cmp	r3, #0
 1349 0018 09D1     		bne	.L66
 1350              	.LBB49:
 1351              	.LBB50:
 1352              		.loc 4 237 0 discriminator 1
 1353              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1354 001a 4FF05003 			mov r3, #80												
 1355 001e 83F31188 		msr basepri, r3											
 1356 0022 BFF36F8F 		isb														
 1357 0026 BFF34F8F 		dsb														
 1358              	
 1359              	@ 0 "" 2
 1360              		.thumb
 1361 002a 7B61     		str	r3, [r7, #20]
 1362              	.L67:
 1363              	.LBE50:
 1364              	.LBE49:
 1365              		.loc 3 468 0 discriminator 1
 1366 002c FEE7     		b	.L67
 1367              	.L66:
 469:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( xSocketSet != NULL );
 1368              		.loc 3 469 0
 1369 002e BB68     		ldr	r3, [r7, #8]
 1370 0030 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 45


 1371 0032 09D1     		bne	.L68
 1372              	.LBB51:
 1373              	.LBB52:
 1374              		.loc 4 237 0 discriminator 1
 1375              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1376 0034 4FF05003 			mov r3, #80												
 1377 0038 83F31188 		msr basepri, r3											
 1378 003c BFF36F8F 		isb														
 1379 0040 BFF34F8F 		dsb														
 1380              	
 1381              	@ 0 "" 2
 1382              		.thumb
 1383 0044 3B61     		str	r3, [r7, #16]
 1384              	.L69:
 1385              	.LBE52:
 1386              	.LBE51:
 1387              		.loc 3 469 0 discriminator 2
 1388 0046 FEE7     		b	.L69
 1389              	.L68:
 470:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 471:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Make sure we're not adding bits which are reserved for internal use,
 472:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		such as eSELECT_CALL_IP */
 473:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocket->xSelectBits |= ( xSelectBits & eSELECT_ALL );
 1390              		.loc 3 473 0
 1391 0048 FB69     		ldr	r3, [r7, #28]
 1392 004a DA6A     		ldr	r2, [r3, #44]
 1393 004c 7B68     		ldr	r3, [r7, #4]
 1394 004e 03F00F03 		and	r3, r3, #15
 1395 0052 1A43     		orrs	r2, r2, r3
 1396 0054 FB69     		ldr	r3, [r7, #28]
 1397 0056 DA62     		str	r2, [r3, #44]
 474:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 475:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( ( pxSocket->xSelectBits & eSELECT_ALL ) != 0 )
 1398              		.loc 3 475 0
 1399 0058 FB69     		ldr	r3, [r7, #28]
 1400 005a DB6A     		ldr	r3, [r3, #44]
 1401 005c 03F00F03 		and	r3, r3, #15
 1402 0060 002B     		cmp	r3, #0
 1403 0062 08D0     		beq	.L65
 476:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 477:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Adding a socket to a socket set. */
 478:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->pxSocketSet = ( SocketSelect_t * ) xSocketSet;
 1404              		.loc 3 478 0
 1405 0064 FB69     		ldr	r3, [r7, #28]
 1406 0066 BA68     		ldr	r2, [r7, #8]
 1407 0068 9A62     		str	r2, [r3, #40]
 479:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Now have the IP-task call vSocketSelect() to see if the set contains
 481:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			any sockets which are 'ready' and set the proper bits.
 482:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			By setting 'bApiCalled = false', vSocketSelect() knows that it was
 483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			not called from a user API */
 484:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocketSet->bApiCalled = pdFALSE;
 1408              		.loc 3 484 0
 1409 006a BB69     		ldr	r3, [r7, #24]
 1410 006c 0022     		movs	r2, #0
 1411 006e 5A60     		str	r2, [r3, #4]
 485:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			prvFindSelectedSocket( pxSocketSet );
ARM GAS  /tmp/ccrA3BdH.s 			page 46


 1412              		.loc 3 485 0
 1413 0070 B869     		ldr	r0, [r7, #24]
 1414 0072 FFF7FEFF 		bl	prvFindSelectedSocket
 1415              	.L65:
 486:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 487:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1416              		.loc 3 487 0
 1417 0076 2037     		adds	r7, r7, #32
 1418              	.LCFI102:
 1419              		.cfi_def_cfa_offset 8
 1420 0078 BD46     		mov	sp, r7
 1421              	.LCFI103:
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 007a 80BD     		pop	{r7, pc}
 1425              		.cfi_endproc
 1426              	.LFE35:
 1428              		.section	.text.FreeRTOS_FD_CLR,"ax",%progbits
 1429              		.align	2
 1430              		.global	FreeRTOS_FD_CLR
 1431              		.thumb
 1432              		.thumb_func
 1434              	FreeRTOS_FD_CLR:
 1435              	.LFB36:
 488:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 489:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 490:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 491:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 492:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 493:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Clear select bits for a socket
 494:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	If the mask becomes 0, remove the socket from the set */
 495:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	void FreeRTOS_FD_CLR( Socket_t xSocket, SocketSet_t xSocketSet, EventBits_t xSelectBits )
 496:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1436              		.loc 3 496 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 32
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 1441 0000 80B4     		push	{r7}
 1442              	.LCFI104:
 1443              		.cfi_def_cfa_offset 4
 1444              		.cfi_offset 7, -4
 1445 0002 89B0     		sub	sp, sp, #36
 1446              	.LCFI105:
 1447              		.cfi_def_cfa_offset 40
 1448 0004 00AF     		add	r7, sp, #0
 1449              	.LCFI106:
 1450              		.cfi_def_cfa_register 7
 1451 0006 F860     		str	r0, [r7, #12]
 1452 0008 B960     		str	r1, [r7, #8]
 1453 000a 7A60     		str	r2, [r7, #4]
 497:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 1454              		.loc 3 497 0
 1455 000c FB68     		ldr	r3, [r7, #12]
 1456 000e FB61     		str	r3, [r7, #28]
 498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket != NULL );
ARM GAS  /tmp/ccrA3BdH.s 			page 47


 1457              		.loc 3 499 0
 1458 0010 FB69     		ldr	r3, [r7, #28]
 1459 0012 002B     		cmp	r3, #0
 1460 0014 09D1     		bne	.L72
 1461              	.LBB53:
 1462              	.LBB54:
 1463              		.loc 4 237 0 discriminator 1
 1464              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1465 0016 4FF05003 			mov r3, #80												
 1466 001a 83F31188 		msr basepri, r3											
 1467 001e BFF36F8F 		isb														
 1468 0022 BFF34F8F 		dsb														
 1469              	
 1470              	@ 0 "" 2
 1471              		.thumb
 1472 0026 BB61     		str	r3, [r7, #24]
 1473              	.L73:
 1474              	.LBE54:
 1475              	.LBE53:
 1476              		.loc 3 499 0 discriminator 1
 1477 0028 FEE7     		b	.L73
 1478              	.L72:
 500:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( xSocketSet != NULL );
 1479              		.loc 3 500 0
 1480 002a BB68     		ldr	r3, [r7, #8]
 1481 002c 002B     		cmp	r3, #0
 1482 002e 09D1     		bne	.L74
 1483              	.LBB55:
 1484              	.LBB56:
 1485              		.loc 4 237 0 discriminator 1
 1486              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1487 0030 4FF05003 			mov r3, #80												
 1488 0034 83F31188 		msr basepri, r3											
 1489 0038 BFF36F8F 		isb														
 1490 003c BFF34F8F 		dsb														
 1491              	
 1492              	@ 0 "" 2
 1493              		.thumb
 1494 0040 7B61     		str	r3, [r7, #20]
 1495              	.L75:
 1496              	.LBE56:
 1497              	.LBE55:
 1498              		.loc 3 500 0 discriminator 2
 1499 0042 FEE7     		b	.L75
 1500              	.L74:
 501:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 502:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocket->xSelectBits &= ~( xSelectBits & eSELECT_ALL );
 1501              		.loc 3 502 0
 1502 0044 FB69     		ldr	r3, [r7, #28]
 1503 0046 DA6A     		ldr	r2, [r3, #44]
 1504 0048 7B68     		ldr	r3, [r7, #4]
 1505 004a 03F00F03 		and	r3, r3, #15
 1506 004e DB43     		mvns	r3, r3
 1507 0050 1A40     		ands	r2, r2, r3
 1508 0052 FB69     		ldr	r3, [r7, #28]
 1509 0054 DA62     		str	r2, [r3, #44]
 503:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( ( pxSocket->xSelectBits & eSELECT_ALL ) != 0 )
ARM GAS  /tmp/ccrA3BdH.s 			page 48


 1510              		.loc 3 503 0
 1511 0056 FB69     		ldr	r3, [r7, #28]
 1512 0058 DB6A     		ldr	r3, [r3, #44]
 1513 005a 03F00F03 		and	r3, r3, #15
 1514 005e 002B     		cmp	r3, #0
 1515 0060 03D0     		beq	.L76
 504:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 505:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->pxSocketSet = ( SocketSelect_t *)xSocketSet;
 1516              		.loc 3 505 0
 1517 0062 FB69     		ldr	r3, [r7, #28]
 1518 0064 BA68     		ldr	r2, [r7, #8]
 1519 0066 9A62     		str	r2, [r3, #40]
 1520 0068 02E0     		b	.L71
 1521              	.L76:
 506:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 507:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 508:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* disconnect it from the socket set */
 510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->pxSocketSet = ( SocketSelect_t *)NULL;
 1522              		.loc 3 510 0
 1523 006a FB69     		ldr	r3, [r7, #28]
 1524 006c 0022     		movs	r2, #0
 1525 006e 9A62     		str	r2, [r3, #40]
 1526              	.L71:
 511:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 512:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1527              		.loc 3 512 0
 1528 0070 2437     		adds	r7, r7, #36
 1529              	.LCFI107:
 1530              		.cfi_def_cfa_offset 4
 1531 0072 BD46     		mov	sp, r7
 1532              	.LCFI108:
 1533              		.cfi_def_cfa_register 13
 1534              		@ sp needed
 1535 0074 5DF8047B 		ldr	r7, [sp], #4
 1536              	.LCFI109:
 1537              		.cfi_restore 7
 1538              		.cfi_def_cfa_offset 0
 1539 0078 7047     		bx	lr
 1540              		.cfi_endproc
 1541              	.LFE36:
 1543 007a 00BF     		.section	.text.FreeRTOS_FD_ISSET,"ax",%progbits
 1544              		.align	2
 1545              		.global	FreeRTOS_FD_ISSET
 1546              		.thumb
 1547              		.thumb_func
 1549              	FreeRTOS_FD_ISSET:
 1550              	.LFB37:
 513:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 514:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 516:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 517:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 518:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 519:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 520:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Test if a socket belongs to a socket-set */
 521:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	EventBits_t FreeRTOS_FD_ISSET( Socket_t xSocket, SocketSet_t xSocketSet )
ARM GAS  /tmp/ccrA3BdH.s 			page 49


 522:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1551              		.loc 3 522 0
 1552              		.cfi_startproc
 1553              		@ args = 0, pretend = 0, frame = 24
 1554              		@ frame_needed = 1, uses_anonymous_args = 0
 1555              		@ link register save eliminated.
 1556 0000 80B4     		push	{r7}
 1557              	.LCFI110:
 1558              		.cfi_def_cfa_offset 4
 1559              		.cfi_offset 7, -4
 1560 0002 87B0     		sub	sp, sp, #28
 1561              	.LCFI111:
 1562              		.cfi_def_cfa_offset 32
 1563 0004 00AF     		add	r7, sp, #0
 1564              	.LCFI112:
 1565              		.cfi_def_cfa_register 7
 1566 0006 7860     		str	r0, [r7, #4]
 1567 0008 3960     		str	r1, [r7]
 523:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	EventBits_t xReturn;
 524:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 1568              		.loc 3 524 0
 1569 000a 7B68     		ldr	r3, [r7, #4]
 1570 000c 3B61     		str	r3, [r7, #16]
 525:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 526:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket != NULL );
 1571              		.loc 3 526 0
 1572 000e 3B69     		ldr	r3, [r7, #16]
 1573 0010 002B     		cmp	r3, #0
 1574 0012 09D1     		bne	.L79
 1575              	.LBB57:
 1576              	.LBB58:
 1577              		.loc 4 237 0 discriminator 1
 1578              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1579 0014 4FF05003 			mov r3, #80												
 1580 0018 83F31188 		msr basepri, r3											
 1581 001c BFF36F8F 		isb														
 1582 0020 BFF34F8F 		dsb														
 1583              	
 1584              	@ 0 "" 2
 1585              		.thumb
 1586 0024 FB60     		str	r3, [r7, #12]
 1587              	.L80:
 1588              	.LBE58:
 1589              	.LBE57:
 1590              		.loc 3 526 0 discriminator 1
 1591 0026 FEE7     		b	.L80
 1592              	.L79:
 527:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( xSocketSet != NULL );
 1593              		.loc 3 527 0
 1594 0028 3B68     		ldr	r3, [r7]
 1595 002a 002B     		cmp	r3, #0
 1596 002c 09D1     		bne	.L81
 1597              	.LBB59:
 1598              	.LBB60:
 1599              		.loc 4 237 0 discriminator 1
 1600              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1601 002e 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccrA3BdH.s 			page 50


 1602 0032 83F31188 		msr basepri, r3											
 1603 0036 BFF36F8F 		isb														
 1604 003a BFF34F8F 		dsb														
 1605              	
 1606              	@ 0 "" 2
 1607              		.thumb
 1608 003e BB60     		str	r3, [r7, #8]
 1609              	.L82:
 1610              	.LBE60:
 1611              	.LBE59:
 1612              		.loc 3 527 0 discriminator 2
 1613 0040 FEE7     		b	.L82
 1614              	.L81:
 528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 529:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xSocketSet == ( SocketSet_t ) pxSocket->pxSocketSet )
 1615              		.loc 3 529 0
 1616 0042 3B69     		ldr	r3, [r7, #16]
 1617 0044 9A6A     		ldr	r2, [r3, #40]
 1618 0046 3B68     		ldr	r3, [r7]
 1619 0048 9A42     		cmp	r2, r3
 1620 004a 05D1     		bne	.L83
 530:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 531:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Make sure we're not adding bits which are reserved for internal
 532:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			use. */
 533:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = pxSocket->xSocketBits & eSELECT_ALL;
 1621              		.loc 3 533 0
 1622 004c 3B69     		ldr	r3, [r7, #16]
 1623 004e 1B6B     		ldr	r3, [r3, #48]
 1624 0050 03F00F03 		and	r3, r3, #15
 1625 0054 7B61     		str	r3, [r7, #20]
 1626 0056 01E0     		b	.L84
 1627              	.L83:
 534:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 535:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 536:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 537:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
 1628              		.loc 3 537 0
 1629 0058 0023     		movs	r3, #0
 1630 005a 7B61     		str	r3, [r7, #20]
 1631              	.L84:
 538:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 539:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 540:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 1632              		.loc 3 540 0
 1633 005c 7B69     		ldr	r3, [r7, #20]
 541:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1634              		.loc 3 541 0
 1635 005e 1846     		mov	r0, r3
 1636 0060 1C37     		adds	r7, r7, #28
 1637              	.LCFI113:
 1638              		.cfi_def_cfa_offset 4
 1639 0062 BD46     		mov	sp, r7
 1640              	.LCFI114:
 1641              		.cfi_def_cfa_register 13
 1642              		@ sp needed
 1643 0064 5DF8047B 		ldr	r7, [sp], #4
 1644              	.LCFI115:
ARM GAS  /tmp/ccrA3BdH.s 			page 51


 1645              		.cfi_restore 7
 1646              		.cfi_def_cfa_offset 0
 1647 0068 7047     		bx	lr
 1648              		.cfi_endproc
 1649              	.LFE37:
 1651 006a 00BF     		.section	.text.FreeRTOS_select,"ax",%progbits
 1652              		.align	2
 1653              		.global	FreeRTOS_select
 1654              		.thumb
 1655              		.thumb_func
 1657              	FreeRTOS_select:
 1658              	.LFB38:
 542:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 543:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 544:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 545:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 546:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 547:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 548:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* The select() statement: wait for an event to occur on any of the sockets
 549:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	included in a socket set */
 550:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_select( SocketSet_t xSocketSet, TickType_t xBlockTimeTicks )
 551:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1659              		.loc 3 551 0
 1660              		.cfi_startproc
 1661              		@ args = 0, pretend = 0, frame = 32
 1662              		@ frame_needed = 1, uses_anonymous_args = 0
 1663 0000 80B5     		push	{r7, lr}
 1664              	.LCFI116:
 1665              		.cfi_def_cfa_offset 8
 1666              		.cfi_offset 7, -8
 1667              		.cfi_offset 14, -4
 1668 0002 8AB0     		sub	sp, sp, #40
 1669              	.LCFI117:
 1670              		.cfi_def_cfa_offset 48
 1671 0004 02AF     		add	r7, sp, #8
 1672              	.LCFI118:
 1673              		.cfi_def_cfa 7, 40
 1674 0006 7860     		str	r0, [r7, #4]
 1675 0008 3960     		str	r1, [r7]
 552:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TimeOut_t xTimeOut;
 553:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xRemainingTime;
 554:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	SocketSelect_t *pxSocketSet = ( SocketSelect_t*) xSocketSet;
 1676              		.loc 3 554 0
 1677 000a 7B68     		ldr	r3, [r7, #4]
 1678 000c BB61     		str	r3, [r7, #24]
 555:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult;
 556:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 557:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( xSocketSet != NULL );
 1679              		.loc 3 557 0
 1680 000e 7B68     		ldr	r3, [r7, #4]
 1681 0010 002B     		cmp	r3, #0
 1682 0012 09D1     		bne	.L87
 1683              	.LBB61:
 1684              	.LBB62:
 1685              		.loc 4 237 0 discriminator 1
 1686              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1687 0014 4FF05003 			mov r3, #80												
ARM GAS  /tmp/ccrA3BdH.s 			page 52


 1688 0018 83F31188 		msr basepri, r3											
 1689 001c BFF36F8F 		isb														
 1690 0020 BFF34F8F 		dsb														
 1691              	
 1692              	@ 0 "" 2
 1693              		.thumb
 1694 0024 7B61     		str	r3, [r7, #20]
 1695              	.L88:
 1696              	.LBE62:
 1697              	.LBE61:
 1698              		.loc 3 557 0 discriminator 1
 1699 0026 FEE7     		b	.L88
 1700              	.L87:
 558:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 559:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Only in the first round, check for non-blocking */
 560:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xRemainingTime = xBlockTimeTicks;
 1701              		.loc 3 560 0
 1702 0028 3B68     		ldr	r3, [r7]
 1703 002a BB60     		str	r3, [r7, #8]
 561:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 562:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Fetch the current time */
 563:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		vTaskSetTimeOutState( &xTimeOut );
 1704              		.loc 3 563 0
 1705 002c 07F10C03 		add	r3, r7, #12
 1706 0030 1846     		mov	r0, r3
 1707 0032 FFF7FEFF 		bl	vTaskSetTimeOutState
 1708              	.L93:
 564:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 565:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		for( ;; )
 566:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 567:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Find a socket which might have triggered the bit
 568:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			This function might return immediately or block for a limited time */
 569:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = ( BaseType_t ) xEventGroupWaitBits( pxSocketSet->xSelectGroup, eSELECT_ALL, pdFALSE, p
 1709              		.loc 3 569 0
 1710 0036 BB69     		ldr	r3, [r7, #24]
 1711 0038 1A68     		ldr	r2, [r3]
 1712 003a BB68     		ldr	r3, [r7, #8]
 1713 003c 0093     		str	r3, [sp]
 1714 003e 1046     		mov	r0, r2
 1715 0040 0F21     		movs	r1, #15
 1716 0042 0022     		movs	r2, #0
 1717 0044 0023     		movs	r3, #0
 1718 0046 FFF7FEFF 		bl	xEventGroupWaitBits
 1719 004a 0346     		mov	r3, r0
 1720 004c FB61     		str	r3, [r7, #28]
 570:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 571:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigSUPPORT_SIGNALS != 0 )
 572:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 573:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( ( xResult & eSELECT_INTR ) != 0u )
 1721              		.loc 3 573 0
 1722 004e FB69     		ldr	r3, [r7, #28]
 1723 0050 03F00803 		and	r3, r3, #8
 1724 0054 002B     		cmp	r3, #0
 1725 0056 06D0     		beq	.L89
 574:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 575:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xEventGroupClearBits( pxSocketSet->xSelectGroup, eSELECT_INTR );
 1726              		.loc 3 575 0
ARM GAS  /tmp/ccrA3BdH.s 			page 53


 1727 0058 BB69     		ldr	r3, [r7, #24]
 1728 005a 1B68     		ldr	r3, [r3]
 1729 005c 1846     		mov	r0, r3
 1730 005e 0821     		movs	r1, #8
 1731 0060 FFF7FEFF 		bl	xEventGroupClearBits
 576:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					FreeRTOS_debug_printf( ( "FreeRTOS_select: interrupted\n" ) );
 577:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 1732              		.loc 3 577 0
 1733 0064 1EE0     		b	.L90
 1734              	.L89:
 578:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 579:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 580:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif /* ipconfigSUPPORT_SIGNALS */
 581:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 582:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Have the IP-task find the socket which had an event */
 583:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocketSet->bApiCalled = pdTRUE;
 1735              		.loc 3 583 0
 1736 0066 BB69     		ldr	r3, [r7, #24]
 1737 0068 0122     		movs	r2, #1
 1738 006a 5A60     		str	r2, [r3, #4]
 584:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			prvFindSelectedSocket( pxSocketSet );
 1739              		.loc 3 584 0
 1740 006c B869     		ldr	r0, [r7, #24]
 1741 006e FFF7FEFF 		bl	prvFindSelectedSocket
 585:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 586:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = ( BaseType_t ) xEventGroupGetBits( pxSocketSet->xSelectGroup );
 1742              		.loc 3 586 0
 1743 0072 BB69     		ldr	r3, [r7, #24]
 1744 0074 1B68     		ldr	r3, [r3]
 1745 0076 1846     		mov	r0, r3
 1746 0078 0021     		movs	r1, #0
 1747 007a FFF7FEFF 		bl	xEventGroupClearBits
 1748 007e 0346     		mov	r3, r0
 1749 0080 FB61     		str	r3, [r7, #28]
 587:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 588:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xResult != 0 )
 1750              		.loc 3 588 0
 1751 0082 FB69     		ldr	r3, [r7, #28]
 1752 0084 002B     		cmp	r3, #0
 1753 0086 00D0     		beq	.L91
 589:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 590:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 1754              		.loc 3 590 0
 1755 0088 0CE0     		b	.L90
 1756              	.L91:
 591:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 592:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 593:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Has the timeout been reached? */
 594:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xTaskCheckForTimeOut( &xTimeOut, &xRemainingTime ) != pdFALSE )
 1757              		.loc 3 594 0
 1758 008a 07F10C02 		add	r2, r7, #12
 1759 008e 07F10803 		add	r3, r7, #8
 1760 0092 1046     		mov	r0, r2
 1761 0094 1946     		mov	r1, r3
 1762 0096 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1763 009a 0346     		mov	r3, r0
 1764 009c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 54


 1765 009e 00D0     		beq	.L92
 595:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 596:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 1766              		.loc 3 596 0
 1767 00a0 00E0     		b	.L90
 1768              	.L92:
 597:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 598:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 1769              		.loc 3 598 0
 1770 00a2 C8E7     		b	.L93
 1771              	.L90:
 599:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 600:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 1772              		.loc 3 600 0
 1773 00a4 FB69     		ldr	r3, [r7, #28]
 601:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1774              		.loc 3 601 0
 1775 00a6 1846     		mov	r0, r3
 1776 00a8 2037     		adds	r7, r7, #32
 1777              	.LCFI119:
 1778              		.cfi_def_cfa_offset 8
 1779 00aa BD46     		mov	sp, r7
 1780              	.LCFI120:
 1781              		.cfi_def_cfa_register 13
 1782              		@ sp needed
 1783 00ac 80BD     		pop	{r7, pc}
 1784              		.cfi_endproc
 1785              	.LFE38:
 1787 00ae 00BF     		.section	.text.prvFindSelectedSocket,"ax",%progbits
 1788              		.align	2
 1789              		.thumb
 1790              		.thumb_func
 1792              	prvFindSelectedSocket:
 1793              	.LFB39:
 602:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 603:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION */
 604:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 605:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
 607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 608:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Send a message to the IP-task to have it check all sockets belonging to
 609:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	'pxSocketSet' */
 610:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static FreeRTOS_Socket_t *prvFindSelectedSocket( SocketSelect_t *pxSocketSet )
 611:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 1794              		.loc 3 611 0
 1795              		.cfi_startproc
 1796              		@ args = 0, pretend = 0, frame = 24
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 0000 80B5     		push	{r7, lr}
 1799              	.LCFI121:
 1800              		.cfi_def_cfa_offset 8
 1801              		.cfi_offset 7, -8
 1802              		.cfi_offset 14, -4
 1803 0002 88B0     		sub	sp, sp, #32
 1804              	.LCFI122:
 1805              		.cfi_def_cfa_offset 40
 1806 0004 02AF     		add	r7, sp, #8
ARM GAS  /tmp/ccrA3BdH.s 			page 55


 1807              	.LCFI123:
 1808              		.cfi_def_cfa 7, 32
 1809 0006 7860     		str	r0, [r7, #4]
 612:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	IPStackEvent_t xSelectEvent;
 613:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *xReturn;
 614:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 615:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xSelectEvent.eEventType = eSocketSelectEvent;
 1810              		.loc 3 615 0
 1811 0008 0A23     		movs	r3, #10
 1812 000a 3B73     		strb	r3, [r7, #12]
 616:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xSelectEvent.pvData = ( void * ) pxSocketSet;
 1813              		.loc 3 616 0
 1814 000c 7B68     		ldr	r3, [r7, #4]
 1815 000e 3B61     		str	r3, [r7, #16]
 617:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 618:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* while the IP-task works on the request, the API will block on
 619:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		'eSELECT_CALL_IP'.  So clear it first. */
 620:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xEventGroupClearBits( pxSocketSet->xSelectGroup, eSELECT_CALL_IP );
 1816              		.loc 3 620 0
 1817 0010 7B68     		ldr	r3, [r7, #4]
 1818 0012 1B68     		ldr	r3, [r3]
 1819 0014 1846     		mov	r0, r3
 1820 0016 1021     		movs	r1, #16
 1821 0018 FFF7FEFF 		bl	xEventGroupClearBits
 621:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 622:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Now send the socket select event */
 623:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xSendEventStructToIPTask( &xSelectEvent, ( TickType_t ) portMAX_DELAY ) == pdFAIL )
 1822              		.loc 3 623 0
 1823 001c 07F10C03 		add	r3, r7, #12
 1824 0020 1846     		mov	r0, r3
 1825 0022 4FF0FF31 		mov	r1, #-1
 1826 0026 FFF7FEFF 		bl	xSendEventStructToIPTask
 1827 002a 0346     		mov	r3, r0
 1828 002c 002B     		cmp	r3, #0
 1829 002e 02D1     		bne	.L96
 624:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 625:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Oops, we failed to wake-up the IP task. No use to wait for it. */
 626:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_debug_printf( ( "prvFindSelectedSocket: failed\n" ) );
 627:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = NULL;
 1830              		.loc 3 627 0
 1831 0030 0023     		movs	r3, #0
 1832 0032 7B61     		str	r3, [r7, #20]
 1833 0034 0DE0     		b	.L97
 1834              	.L96:
 628:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 629:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 630:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 631:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* As soon as the IP-task is ready, it will set 'eSELECT_CALL_IP' to
 632:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			wakeup the calling API */
 633:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xEventGroupWaitBits( pxSocketSet->xSelectGroup, eSELECT_CALL_IP, pdTRUE, pdFALSE, portMAX_DELAY 
 1835              		.loc 3 633 0
 1836 0036 7B68     		ldr	r3, [r7, #4]
 1837 0038 1A68     		ldr	r2, [r3]
 1838 003a 4FF0FF33 		mov	r3, #-1
 1839 003e 0093     		str	r3, [sp]
 1840 0040 1046     		mov	r0, r2
 1841 0042 1021     		movs	r1, #16
ARM GAS  /tmp/ccrA3BdH.s 			page 56


 1842 0044 0122     		movs	r2, #1
 1843 0046 0023     		movs	r3, #0
 1844 0048 FFF7FEFF 		bl	xEventGroupWaitBits
 634:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 635:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Return 'pxSocket' which is set by the IP-task */
 636:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = pxSocketSet->pxSocket;
 1845              		.loc 3 636 0
 1846 004c 7B68     		ldr	r3, [r7, #4]
 1847 004e 9B68     		ldr	r3, [r3, #8]
 1848 0050 7B61     		str	r3, [r7, #20]
 1849              	.L97:
 637:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 638:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 639:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 1850              		.loc 3 639 0
 1851 0052 7B69     		ldr	r3, [r7, #20]
 640:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 1852              		.loc 3 640 0
 1853 0054 1846     		mov	r0, r3
 1854 0056 1837     		adds	r7, r7, #24
 1855              	.LCFI124:
 1856              		.cfi_def_cfa_offset 8
 1857 0058 BD46     		mov	sp, r7
 1858              	.LCFI125:
 1859              		.cfi_def_cfa_register 13
 1860              		@ sp needed
 1861 005a 80BD     		pop	{r7, pc}
 1862              		.cfi_endproc
 1863              	.LFE39:
 1865              		.section	.text.FreeRTOS_recvfrom,"ax",%progbits
 1866              		.align	2
 1867              		.global	FreeRTOS_recvfrom
 1868              		.thumb
 1869              		.thumb_func
 1871              	FreeRTOS_recvfrom:
 1872              	.LFB40:
 641:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 642:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
 643:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 644:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 645:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
 646:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * FreeRTOS_recvfrom: receive data from a bound socket
 647:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * In this library, the function can only be used with connectionsless sockets
 648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * (UDP)
 649:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
 650:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** int32_t FreeRTOS_recvfrom( Socket_t xSocket, void *pvBuffer, size_t xBufferLength, BaseType_t xFlag
 651:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 1873              		.loc 3 651 0
 1874              		.cfi_startproc
 1875              		@ args = 8, pretend = 0, frame = 56
 1876              		@ frame_needed = 1, uses_anonymous_args = 0
 1877 0000 80B5     		push	{r7, lr}
 1878              	.LCFI126:
 1879              		.cfi_def_cfa_offset 8
 1880              		.cfi_offset 7, -8
 1881              		.cfi_offset 14, -4
 1882 0002 90B0     		sub	sp, sp, #64
ARM GAS  /tmp/ccrA3BdH.s 			page 57


 1883              	.LCFI127:
 1884              		.cfi_def_cfa_offset 72
 1885 0004 02AF     		add	r7, sp, #8
 1886              	.LCFI128:
 1887              		.cfi_def_cfa 7, 64
 1888 0006 F860     		str	r0, [r7, #12]
 1889 0008 B960     		str	r1, [r7, #8]
 1890 000a 7A60     		str	r2, [r7, #4]
 1891 000c 3B60     		str	r3, [r7]
 652:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t lPacketCount = 0;
 1892              		.loc 3 652 0
 1893 000e 0023     		movs	r3, #0
 1894 0010 7B63     		str	r3, [r7, #52]
 653:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** NetworkBufferDescriptor_t *pxNetworkBuffer;
 654:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 1895              		.loc 3 654 0
 1896 0012 FB68     		ldr	r3, [r7, #12]
 1897 0014 7B62     		str	r3, [r7, #36]
 655:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** TickType_t xRemainingTime = ( TickType_t ) 0; /* Obsolete assignment, but some compilers output a w
 1898              		.loc 3 655 0
 1899 0016 0023     		movs	r3, #0
 1900 0018 FB61     		str	r3, [r7, #28]
 656:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xTimed = pdFALSE;
 1901              		.loc 3 656 0
 1902 001a 0023     		movs	r3, #0
 1903 001c 3B63     		str	r3, [r7, #48]
 657:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** TimeOut_t xTimeOut;
 658:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** int32_t lReturn;
 659:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** EventBits_t xEventBits = ( EventBits_t ) 0;
 1904              		.loc 3 659 0
 1905 001e 0023     		movs	r3, #0
 1906 0020 BB62     		str	r3, [r7, #40]
 660:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 661:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_UDP, pdTRUE ) == pdFALSE )
 1907              		.loc 3 661 0
 1908 0022 786A     		ldr	r0, [r7, #36]
 1909 0024 1121     		movs	r1, #17
 1910 0026 0122     		movs	r2, #1
 1911 0028 FFF7FEFF 		bl	prvValidSocket
 1912 002c 0346     		mov	r3, r0
 1913 002e 002B     		cmp	r3, #0
 1914 0030 02D1     		bne	.L100
 662:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 663:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return -pdFREERTOS_ERRNO_EINVAL;
 1915              		.loc 3 663 0
 1916 0032 6FF01503 		mvn	r3, #21
 1917 0036 ACE0     		b	.L120
 1918              	.L100:
 664:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 665:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 666:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	lPacketCount = ( BaseType_t ) listCURRENT_LIST_LENGTH( &( pxSocket->u.xUDP.xWaitingPacketsList ) )
 1919              		.loc 3 666 0
 1920 0038 7B6A     		ldr	r3, [r7, #36]
 1921 003a 9B6B     		ldr	r3, [r3, #56]
 1922 003c 7B63     		str	r3, [r7, #52]
 667:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 668:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* The function prototype is designed to maintain the expected Berkeley
ARM GAS  /tmp/ccrA3BdH.s 			page 58


 669:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	sockets standard, but this implementation does not use all the parameters. */
 670:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) pxSourceAddressLength;
 671:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 672:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	while( lPacketCount == 0 )
 1923              		.loc 3 672 0
 1924 003e 51E0     		b	.L102
 1925              	.L110:
 673:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 674:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xTimed == pdFALSE )
 1926              		.loc 3 674 0
 1927 0040 3B6B     		ldr	r3, [r7, #48]
 1928 0042 002B     		cmp	r3, #0
 1929 0044 1ED1     		bne	.L103
 675:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 676:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Check to see if the socket is non blocking on the first
 677:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			iteration.  */
 678:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xRemainingTime = pxSocket->xReceiveBlockTime;
 1930              		.loc 3 678 0
 1931 0046 7B6A     		ldr	r3, [r7, #36]
 1932 0048 DB69     		ldr	r3, [r3, #28]
 1933 004a FB61     		str	r3, [r7, #28]
 679:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 680:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xRemainingTime == ( TickType_t ) 0 )
 1934              		.loc 3 680 0
 1935 004c FB69     		ldr	r3, [r7, #28]
 1936 004e 002B     		cmp	r3, #0
 1937 0050 0BD1     		bne	.L104
 681:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 682:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigSUPPORT_SIGNALS != 0 )
 683:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 684:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Just check for the interrupt flag. */
 685:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xEventBits = xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_INTR,
 1938              		.loc 3 685 0
 1939 0052 7B6A     		ldr	r3, [r7, #36]
 1940 0054 5A68     		ldr	r2, [r3, #4]
 1941 0056 0023     		movs	r3, #0
 1942 0058 0093     		str	r3, [sp]
 1943 005a 1046     		mov	r0, r2
 1944 005c 4021     		movs	r1, #64
 1945 005e 0122     		movs	r2, #1
 1946 0060 0023     		movs	r3, #0
 1947 0062 FFF7FEFF 		bl	xEventGroupWaitBits
 1948 0066 B862     		str	r0, [r7, #40]
 686:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pdTRUE /*xClearOnExit*/, pdFALSE /*xWaitAllBits*/, socketDONT_BLOCK );
 687:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 688:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif /* ipconfigSUPPORT_SIGNALS */
 689:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 1949              		.loc 3 689 0
 1950 0068 3FE0     		b	.L105
 1951              	.L104:
 690:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 691:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 692:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xFlags & FREERTOS_MSG_DONTWAIT ) != 0 )
 1952              		.loc 3 692 0
 1953 006a 3B68     		ldr	r3, [r7]
 1954 006c 03F01003 		and	r3, r3, #16
 1955 0070 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 59


 1956 0072 00D0     		beq	.L106
 693:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 694:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 1957              		.loc 3 694 0
 1958 0074 39E0     		b	.L105
 1959              	.L106:
 695:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 696:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 697:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* To ensure this part only executes once. */
 698:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xTimed = pdTRUE;
 1960              		.loc 3 698 0
 1961 0076 0123     		movs	r3, #1
 1962 0078 3B63     		str	r3, [r7, #48]
 699:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 700:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Fetch the current time. */
 701:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vTaskSetTimeOutState( &xTimeOut );
 1963              		.loc 3 701 0
 1964 007a 07F11403 		add	r3, r7, #20
 1965 007e 1846     		mov	r0, r3
 1966 0080 FFF7FEFF 		bl	vTaskSetTimeOutState
 1967              	.L103:
 702:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 703:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 704:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Wait for arrival of data.  While waiting, the IP-task may set the
 705:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		'eSOCKET_RECEIVE' bit in 'xEventGroup', if it receives data for this
 706:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		socket, thus unblocking this API call. */
 707:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xEventBits = xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_RECEIVE | eSOCKET_INTR,
 1968              		.loc 3 707 0
 1969 0084 7B6A     		ldr	r3, [r7, #36]
 1970 0086 5A68     		ldr	r2, [r3, #4]
 1971 0088 FB69     		ldr	r3, [r7, #28]
 1972 008a 0093     		str	r3, [sp]
 1973 008c 1046     		mov	r0, r2
 1974 008e 4121     		movs	r1, #65
 1975 0090 0122     		movs	r2, #1
 1976 0092 0023     		movs	r3, #0
 1977 0094 FFF7FEFF 		bl	xEventGroupWaitBits
 1978 0098 B862     		str	r0, [r7, #40]
 708:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pdTRUE /*xClearOnExit*/, pdFALSE /*xWaitAllBits*/, xRemainingTime );
 709:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 710:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigSUPPORT_SIGNALS != 0 )
 711:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 712:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xEventBits & eSOCKET_INTR ) != 0 )
 1979              		.loc 3 712 0
 1980 009a BB6A     		ldr	r3, [r7, #40]
 1981 009c 03F04003 		and	r3, r3, #64
 1982 00a0 002B     		cmp	r3, #0
 1983 00a2 0CD0     		beq	.L107
 713:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 714:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( ( xEventBits & eSOCKET_RECEIVE ) != 0 )
 1984              		.loc 3 714 0
 1985 00a4 BB6A     		ldr	r3, [r7, #40]
 1986 00a6 03F00103 		and	r3, r3, #1
 1987 00aa 002B     		cmp	r3, #0
 1988 00ac 06D0     		beq	.L108
 715:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 716:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Shouldn't have cleared the eSOCKET_RECEIVE flag. */
ARM GAS  /tmp/ccrA3BdH.s 			page 60


 717:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xEventGroupSetBits( pxSocket->xEventGroup, eSOCKET_RECEIVE );
 1989              		.loc 3 717 0
 1990 00ae 7B6A     		ldr	r3, [r7, #36]
 1991 00b0 5B68     		ldr	r3, [r3, #4]
 1992 00b2 1846     		mov	r0, r3
 1993 00b4 0121     		movs	r1, #1
 1994 00b6 FFF7FEFF 		bl	xEventGroupSetBits
 718:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 719:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 1995              		.loc 3 719 0
 1996 00ba 16E0     		b	.L105
 1997              	.L108:
 1998 00bc 15E0     		b	.L105
 1999              	.L107:
 720:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 721:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 722:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#else
 723:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 724:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			( void ) xEventBits;
 725:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 726:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigSUPPORT_SIGNALS */
 727:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 728:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		lPacketCount = ( BaseType_t ) listCURRENT_LIST_LENGTH( &( pxSocket->u.xUDP.xWaitingPacketsList ) 
 2000              		.loc 3 728 0
 2001 00be 7B6A     		ldr	r3, [r7, #36]
 2002 00c0 9B6B     		ldr	r3, [r3, #56]
 2003 00c2 7B63     		str	r3, [r7, #52]
 729:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 730:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( lPacketCount != 0 )
 2004              		.loc 3 730 0
 2005 00c4 7B6B     		ldr	r3, [r7, #52]
 2006 00c6 002B     		cmp	r3, #0
 2007 00c8 00D0     		beq	.L109
 731:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 732:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 2008              		.loc 3 732 0
 2009 00ca 0EE0     		b	.L105
 2010              	.L109:
 733:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 734:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 735:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Has the timeout been reached ? */
 736:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xRemainingTime ) )
 2011              		.loc 3 736 0
 2012 00cc 07F11402 		add	r2, r7, #20
 2013 00d0 07F11C03 		add	r3, r7, #28
 2014 00d4 1046     		mov	r0, r2
 2015 00d6 1946     		mov	r1, r3
 2016 00d8 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2017 00dc 0346     		mov	r3, r0
 2018 00de 002B     		cmp	r3, #0
 2019 00e0 00D0     		beq	.L102
 737:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 738:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 2020              		.loc 3 738 0
 2021 00e2 02E0     		b	.L105
 2022              	.L102:
 672:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
ARM GAS  /tmp/ccrA3BdH.s 			page 61


 2023              		.loc 3 672 0
 2024 00e4 7B6B     		ldr	r3, [r7, #52]
 2025 00e6 002B     		cmp	r3, #0
 2026 00e8 AAD0     		beq	.L110
 2027              	.L105:
 739:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 740:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	} /* while( lPacketCount == 0 ) */
 741:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 742:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( lPacketCount != 0 )
 2028              		.loc 3 742 0
 2029 00ea 7B6B     		ldr	r3, [r7, #52]
 2030 00ec 002B     		cmp	r3, #0
 2031 00ee 43D0     		beq	.L111
 743:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 744:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		taskENTER_CRITICAL();
 2032              		.loc 3 744 0
 2033 00f0 FFF7FEFF 		bl	vPortEnterCritical
 745:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 746:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* The owner of the list item is the network buffer. */
 747:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxNetworkBuffer = ( NetworkBufferDescriptor_t * ) listGET_OWNER_OF_HEAD_ENTRY( &( pxSocket->u.xU
 2034              		.loc 3 747 0
 2035 00f4 7B6A     		ldr	r3, [r7, #36]
 2036 00f6 5B6C     		ldr	r3, [r3, #68]
 2037 00f8 DB68     		ldr	r3, [r3, #12]
 2038 00fa 3B62     		str	r3, [r7, #32]
 748:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 749:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xFlags & FREERTOS_MSG_PEEK ) == 0 )
 2039              		.loc 3 749 0
 2040 00fc 3B68     		ldr	r3, [r7]
 2041 00fe 03F00403 		and	r3, r3, #4
 2042 0102 002B     		cmp	r3, #0
 2043 0104 03D1     		bne	.L112
 750:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 751:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Remove the network buffer from the list of buffers waiting to
 752:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				be processed by the socket. */
 753:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				uxListRemove( &( pxNetworkBuffer->xBufferListItem ) );
 2044              		.loc 3 753 0
 2045 0106 3B6A     		ldr	r3, [r7, #32]
 2046 0108 1846     		mov	r0, r3
 2047 010a FFF7FEFF 		bl	uxListRemove
 2048              	.L112:
 754:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 755:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 756:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		taskEXIT_CRITICAL();
 2049              		.loc 3 756 0
 2050 010e FFF7FEFF 		bl	vPortExitCritical
 757:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 758:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* The returned value is the data length, which may have been capped to
 759:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		the receive buffer size. */
 760:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		lReturn = ( int32_t ) pxNetworkBuffer->xDataLength;
 2051              		.loc 3 760 0
 2052 0112 3B6A     		ldr	r3, [r7, #32]
 2053 0114 DB69     		ldr	r3, [r3, #28]
 2054 0116 FB62     		str	r3, [r7, #44]
 761:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 762:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSourceAddress != NULL )
 2055              		.loc 3 762 0
ARM GAS  /tmp/ccrA3BdH.s 			page 62


 2056 0118 3B6C     		ldr	r3, [r7, #64]
 2057 011a 002B     		cmp	r3, #0
 2058 011c 07D0     		beq	.L113
 763:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 764:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSourceAddress->sin_port = pxNetworkBuffer->usPort;
 2059              		.loc 3 764 0
 2060 011e 3B6A     		ldr	r3, [r7, #32]
 2061 0120 1A8C     		ldrh	r2, [r3, #32]
 2062 0122 3B6C     		ldr	r3, [r7, #64]
 2063 0124 5A80     		strh	r2, [r3, #2]	@ movhi
 765:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSourceAddress->sin_addr = pxNetworkBuffer->ulIPAddress;
 2064              		.loc 3 765 0
 2065 0126 3B6A     		ldr	r3, [r7, #32]
 2066 0128 5A69     		ldr	r2, [r3, #20]
 2067 012a 3B6C     		ldr	r3, [r7, #64]
 2068 012c 5A60     		str	r2, [r3, #4]
 2069              	.L113:
 766:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 767:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 768:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( ( xFlags & FREERTOS_ZERO_COPY ) == 0 )
 2070              		.loc 3 768 0
 2071 012e 3B68     		ldr	r3, [r7]
 2072 0130 03F00103 		and	r3, r3, #1
 2073 0134 002B     		cmp	r3, #0
 2074 0136 18D1     		bne	.L114
 769:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 770:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* The zero copy flag is not set.  Truncate the length if it won't
 771:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			fit in the provided buffer. */
 772:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( lReturn > ( int32_t ) xBufferLength )
 2075              		.loc 3 772 0
 2076 0138 7A68     		ldr	r2, [r7, #4]
 2077 013a FB6A     		ldr	r3, [r7, #44]
 2078 013c 9A42     		cmp	r2, r3
 2079 013e 01DA     		bge	.L115
 773:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 774:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				iptraceRECVFROM_DISCARDING_BYTES( ( xBufferLength - lReturn ) );
 775:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				lReturn = ( int32_t )xBufferLength;
 2080              		.loc 3 775 0
 2081 0140 7B68     		ldr	r3, [r7, #4]
 2082 0142 FB62     		str	r3, [r7, #44]
 2083              	.L115:
 776:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 777:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 778:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Copy the received data into the provided buffer, then release the
 779:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			network buffer. */
 780:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			memcpy( pvBuffer, ( void * ) &( pxNetworkBuffer->pucEthernetBuffer[ ipUDP_PAYLOAD_OFFSET_IPv4 ] 
 2084              		.loc 3 780 0
 2085 0144 3B6A     		ldr	r3, [r7, #32]
 2086 0146 9B69     		ldr	r3, [r3, #24]
 2087 0148 03F12A02 		add	r2, r3, #42
 2088 014c FB6A     		ldr	r3, [r7, #44]
 2089 014e B868     		ldr	r0, [r7, #8]
 2090 0150 1146     		mov	r1, r2
 2091 0152 1A46     		mov	r2, r3
 2092 0154 FFF7FEFF 		bl	memcpy
 781:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 782:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xFlags & FREERTOS_MSG_PEEK ) == 0 )
ARM GAS  /tmp/ccrA3BdH.s 			page 63


 2093              		.loc 3 782 0
 2094 0158 3B68     		ldr	r3, [r7]
 2095 015a 03F00403 		and	r3, r3, #4
 2096 015e 002B     		cmp	r3, #0
 2097 0160 16D1     		bne	.L118
 783:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 784:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vReleaseNetworkBufferAndDescriptor( pxNetworkBuffer );
 2098              		.loc 3 784 0
 2099 0162 386A     		ldr	r0, [r7, #32]
 2100 0164 FFF7FEFF 		bl	vReleaseNetworkBufferAndDescriptor
 2101 0168 12E0     		b	.L118
 2102              	.L114:
 785:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 786:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 787:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 788:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 789:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* The zero copy flag was set.  pvBuffer is not a buffer into which
 790:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			the received data can be copied, but a pointer that must be set to
 791:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			point to the buffer in which the received data has already been
 792:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			placed. */
 793:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			*( ( void** ) pvBuffer ) = ( void * ) ( &( pxNetworkBuffer->pucEthernetBuffer[ ipUDP_PAYLOAD_OFF
 2103              		.loc 3 793 0
 2104 016a 3B6A     		ldr	r3, [r7, #32]
 2105 016c 9B69     		ldr	r3, [r3, #24]
 2106 016e 03F12A02 		add	r2, r3, #42
 2107 0172 BB68     		ldr	r3, [r7, #8]
 2108 0174 1A60     		str	r2, [r3]
 2109 0176 0BE0     		b	.L118
 2110              	.L111:
 794:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 795:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 796:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 797:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SIGNALS != 0 )
 798:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else if( ( xEventBits & eSOCKET_INTR ) != 0 )
 2111              		.loc 3 798 0
 2112 0178 BB6A     		ldr	r3, [r7, #40]
 2113 017a 03F04003 		and	r3, r3, #64
 2114 017e 002B     		cmp	r3, #0
 2115 0180 03D0     		beq	.L119
 799:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 800:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		lReturn = -pdFREERTOS_ERRNO_EINTR;
 2116              		.loc 3 800 0
 2117 0182 6FF00303 		mvn	r3, #3
 2118 0186 FB62     		str	r3, [r7, #44]
 2119 0188 02E0     		b	.L118
 2120              	.L119:
 801:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		iptraceRECVFROM_INTERRUPTED();
 802:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 803:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SIGNALS */
 804:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
 805:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 806:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		lReturn = -pdFREERTOS_ERRNO_EWOULDBLOCK;
 2121              		.loc 3 806 0
 2122 018a 6FF00A03 		mvn	r3, #10
 2123 018e FB62     		str	r3, [r7, #44]
 2124              	.L118:
 807:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		iptraceRECVFROM_TIMEOUT();
ARM GAS  /tmp/ccrA3BdH.s 			page 64


 808:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 809:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 810:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return lReturn;
 2125              		.loc 3 810 0
 2126 0190 FB6A     		ldr	r3, [r7, #44]
 2127              	.L120:
 811:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 2128              		.loc 3 811 0 discriminator 2
 2129 0192 1846     		mov	r0, r3
 2130 0194 3837     		adds	r7, r7, #56
 2131              	.LCFI129:
 2132              		.cfi_def_cfa_offset 8
 2133 0196 BD46     		mov	sp, r7
 2134              	.LCFI130:
 2135              		.cfi_def_cfa_register 13
 2136              		@ sp needed
 2137 0198 80BD     		pop	{r7, pc}
 2138              		.cfi_endproc
 2139              	.LFE40:
 2141 019a 00BF     		.section	.text.FreeRTOS_sendto,"ax",%progbits
 2142              		.align	2
 2143              		.global	FreeRTOS_sendto
 2144              		.thumb
 2145              		.thumb_func
 2147              	FreeRTOS_sendto:
 2148              	.LFB41:
 812:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 813:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 814:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** int32_t FreeRTOS_sendto( Socket_t xSocket, const void *pvBuffer, size_t xTotalDataLength, BaseType_
 815:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 2149              		.loc 3 815 0
 2150              		.cfi_startproc
 2151              		@ args = 8, pretend = 0, frame = 56
 2152              		@ frame_needed = 1, uses_anonymous_args = 0
 2153 0000 80B5     		push	{r7, lr}
 2154              	.LCFI131:
 2155              		.cfi_def_cfa_offset 8
 2156              		.cfi_offset 7, -8
 2157              		.cfi_offset 14, -4
 2158 0002 8EB0     		sub	sp, sp, #56
 2159              	.LCFI132:
 2160              		.cfi_def_cfa_offset 64
 2161 0004 00AF     		add	r7, sp, #0
 2162              	.LCFI133:
 2163              		.cfi_def_cfa_register 7
 2164 0006 F860     		str	r0, [r7, #12]
 2165 0008 B960     		str	r1, [r7, #8]
 2166 000a 7A60     		str	r2, [r7, #4]
 2167 000c 3B60     		str	r3, [r7]
 816:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** NetworkBufferDescriptor_t *pxNetworkBuffer;
 817:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** IPStackEvent_t xStackTxEvent = { eStackTxEvent, NULL };
 2168              		.loc 3 817 0
 2169 000e 0323     		movs	r3, #3
 2170 0010 87F82030 		strb	r3, [r7, #32]
 2171 0014 0023     		movs	r3, #0
 2172 0016 7B62     		str	r3, [r7, #36]
 818:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** TimeOut_t xTimeOut;
ARM GAS  /tmp/ccrA3BdH.s 			page 65


 819:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** TickType_t xTicksToWait;
 820:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** int32_t lReturn = 0;
 2173              		.loc 3 820 0
 2174 0018 0023     		movs	r3, #0
 2175 001a 3B63     		str	r3, [r7, #48]
 821:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket;
 822:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 823:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 2176              		.loc 3 823 0
 2177 001c FB68     		ldr	r3, [r7, #12]
 2178 001e FB62     		str	r3, [r7, #44]
 824:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 825:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* The function prototype is designed to maintain the expected Berkeley
 826:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	sockets standard, but this implementation does not use all the
 827:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	parameters. */
 828:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) xDestinationAddressLength;
 829:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	configASSERT( pvBuffer );
 2179              		.loc 3 829 0
 2180 0020 BB68     		ldr	r3, [r7, #8]
 2181 0022 002B     		cmp	r3, #0
 2182 0024 09D1     		bne	.L122
 2183              	.LBB63:
 2184              	.LBB64:
 2185              		.loc 4 237 0 discriminator 1
 2186              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2187 0026 4FF05003 			mov r3, #80												
 2188 002a 83F31188 		msr basepri, r3											
 2189 002e BFF36F8F 		isb														
 2190 0032 BFF34F8F 		dsb														
 2191              	
 2192              	@ 0 "" 2
 2193              		.thumb
 2194 0036 BB62     		str	r3, [r7, #40]
 2195              	.L123:
 2196              	.LBE64:
 2197              	.LBE63:
 2198              		.loc 3 829 0 discriminator 1
 2199 0038 FEE7     		b	.L123
 2200              	.L122:
 830:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 831:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( xTotalDataLength <= ( size_t ) ipMAX_UDP_PAYLOAD_LENGTH )
 2201              		.loc 3 831 0
 2202 003a 7B68     		ldr	r3, [r7, #4]
 2203 003c B3F5B86F 		cmp	r3, #1472
 2204 0040 76D8     		bhi	.L124
 832:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 833:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* If the socket is not already bound to an address, bind it now.
 834:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		Passing NULL as the address parameter tells FreeRTOS_bind() to select
 835:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		the address to bind to. */
 836:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( ( socketSOCKET_IS_BOUND( pxSocket ) != pdFALSE ) ||
 2205              		.loc 3 836 0
 2206 0042 FB6A     		ldr	r3, [r7, #44]
 2207 0044 9B69     		ldr	r3, [r3, #24]
 2208 0046 002B     		cmp	r3, #0
 2209 0048 07D1     		bne	.L125
 837:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			( FreeRTOS_bind( xSocket, NULL, 0u ) == 0 ) )
 2210              		.loc 3 837 0 discriminator 3
ARM GAS  /tmp/ccrA3BdH.s 			page 66


 2211 004a F868     		ldr	r0, [r7, #12]
 2212 004c 0021     		movs	r1, #0
 2213 004e 0022     		movs	r2, #0
 2214 0050 FFF7FEFF 		bl	FreeRTOS_bind
 2215 0054 0346     		mov	r3, r0
 836:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			( FreeRTOS_bind( xSocket, NULL, 0u ) == 0 ) )
 2216              		.loc 3 836 0 discriminator 3
 2217 0056 002B     		cmp	r3, #0
 2218 0058 6AD1     		bne	.L124
 2219              	.L125:
 838:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 839:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xTicksToWait = pxSocket->xSendBlockTime;
 2220              		.loc 3 839 0
 2221 005a FB6A     		ldr	r3, [r7, #44]
 2222 005c 1B6A     		ldr	r3, [r3, #32]
 2223 005e 7B61     		str	r3, [r7, #20]
 840:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 841:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigUSE_CALLBACKS != 0 )
 842:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 843:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xIsCallingFromIPTask() != pdFALSE )
 844:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 845:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* If this send function is called from within a call-back
 846:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					handler it may not block, otherwise chances would be big to
 847:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					get a deadlock: the IP-task waiting for itself. */
 848:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xTicksToWait = ( TickType_t )0;
 849:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 850:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 851:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif /* ipconfigUSE_CALLBACKS */
 852:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 853:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xFlags & FREERTOS_MSG_DONTWAIT ) != 0 )
 2224              		.loc 3 853 0
 2225 0060 3B68     		ldr	r3, [r7]
 2226 0062 03F01003 		and	r3, r3, #16
 2227 0066 002B     		cmp	r3, #0
 2228 0068 01D0     		beq	.L126
 854:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 855:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xTicksToWait = ( TickType_t ) 0;
 2229              		.loc 3 855 0
 2230 006a 0023     		movs	r3, #0
 2231 006c 7B61     		str	r3, [r7, #20]
 2232              	.L126:
 856:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 857:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 858:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xFlags & FREERTOS_ZERO_COPY ) == 0 )
 2233              		.loc 3 858 0
 2234 006e 3B68     		ldr	r3, [r7]
 2235 0070 03F00103 		and	r3, r3, #1
 2236 0074 002B     		cmp	r3, #0
 2237 0076 26D1     		bne	.L127
 859:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 860:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Zero copy is not set, so obtain a network buffer into
 861:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				which the payload will be copied. */
 862:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vTaskSetTimeOutState( &xTimeOut );
 2238              		.loc 3 862 0
 2239 0078 07F11803 		add	r3, r7, #24
 2240 007c 1846     		mov	r0, r3
 2241 007e FFF7FEFF 		bl	vTaskSetTimeOutState
ARM GAS  /tmp/ccrA3BdH.s 			page 67


 863:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 864:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Block until a buffer becomes available, or until a
 865:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				timeout has been reached */
 866:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer = pxGetNetworkBufferWithDescriptor( xTotalDataLength + sizeof( UDPPacket_t ), x
 2242              		.loc 3 866 0
 2243 0082 7B68     		ldr	r3, [r7, #4]
 2244 0084 03F12A02 		add	r2, r3, #42
 2245 0088 7B69     		ldr	r3, [r7, #20]
 2246 008a 1046     		mov	r0, r2
 2247 008c 1946     		mov	r1, r3
 2248 008e FFF7FEFF 		bl	pxGetNetworkBufferWithDescriptor
 2249 0092 7863     		str	r0, [r7, #52]
 867:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 868:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxNetworkBuffer != NULL )
 2250              		.loc 3 868 0
 2251 0094 7B6B     		ldr	r3, [r7, #52]
 2252 0096 002B     		cmp	r3, #0
 2253 0098 19D0     		beq	.L129
 869:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 870:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					memcpy( ( void * ) &( pxNetworkBuffer->pucEthernetBuffer[ ipUDP_PAYLOAD_OFFSET_IPv4 ] ), ( voi
 2254              		.loc 3 870 0
 2255 009a 7B6B     		ldr	r3, [r7, #52]
 2256 009c 9B69     		ldr	r3, [r3, #24]
 2257 009e 2A33     		adds	r3, r3, #42
 2258 00a0 1846     		mov	r0, r3
 2259 00a2 B968     		ldr	r1, [r7, #8]
 2260 00a4 7A68     		ldr	r2, [r7, #4]
 2261 00a6 FFF7FEFF 		bl	memcpy
 871:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 872:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdTRUE )
 2262              		.loc 3 872 0
 2263 00aa 07F11802 		add	r2, r7, #24
 2264 00ae 07F11403 		add	r3, r7, #20
 2265 00b2 1046     		mov	r0, r2
 2266 00b4 1946     		mov	r1, r3
 2267 00b6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 2268 00ba 0346     		mov	r3, r0
 2269 00bc 012B     		cmp	r3, #1
 2270 00be 06D1     		bne	.L129
 873:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
 874:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* The entire block time has been used up. */
 875:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xTicksToWait = ( TickType_t ) 0;
 2271              		.loc 3 875 0
 2272 00c0 0023     		movs	r3, #0
 2273 00c2 7B61     		str	r3, [r7, #20]
 2274 00c4 03E0     		b	.L129
 2275              	.L127:
 876:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
 877:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 878:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 879:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
 880:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 881:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* When zero copy is used, pvBuffer is a pointer to the
 882:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				payload of a buffer that has already been obtained from the
 883:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				stack.  Obtain the network buffer pointer from the buffer. */
 884:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer = pxUDPPayloadBuffer_to_NetworkBuffer( (void*)pvBuffer );
 2276              		.loc 3 884 0
ARM GAS  /tmp/ccrA3BdH.s 			page 68


 2277 00c6 B868     		ldr	r0, [r7, #8]
 2278 00c8 FFF7FEFF 		bl	pxUDPPayloadBuffer_to_NetworkBuffer
 2279 00cc 7863     		str	r0, [r7, #52]
 2280              	.L129:
 885:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 886:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 887:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxNetworkBuffer != NULL )
 2281              		.loc 3 887 0
 2282 00ce 7B6B     		ldr	r3, [r7, #52]
 2283 00d0 002B     		cmp	r3, #0
 2284 00d2 2DD0     		beq	.L124
 888:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 889:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer->xDataLength = xTotalDataLength;
 2285              		.loc 3 889 0
 2286 00d4 7B6B     		ldr	r3, [r7, #52]
 2287 00d6 7A68     		ldr	r2, [r7, #4]
 2288 00d8 DA61     		str	r2, [r3, #28]
 890:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer->usPort = pxDestinationAddress->sin_port;
 2289              		.loc 3 890 0
 2290 00da 3B6C     		ldr	r3, [r7, #64]
 2291 00dc 5A88     		ldrh	r2, [r3, #2]
 2292 00de 7B6B     		ldr	r3, [r7, #52]
 2293 00e0 1A84     		strh	r2, [r3, #32]	@ movhi
 891:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer->usBoundPort = ( uint16_t ) socketGET_SOCKET_PORT( pxSocket );
 2294              		.loc 3 891 0
 2295 00e2 FB6A     		ldr	r3, [r7, #44]
 2296 00e4 9B68     		ldr	r3, [r3, #8]
 2297 00e6 9AB2     		uxth	r2, r3
 2298 00e8 7B6B     		ldr	r3, [r7, #52]
 2299 00ea 5A84     		strh	r2, [r3, #34]	@ movhi
 892:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer->ulIPAddress = pxDestinationAddress->sin_addr;
 2300              		.loc 3 892 0
 2301 00ec 3B6C     		ldr	r3, [r7, #64]
 2302 00ee 5A68     		ldr	r2, [r3, #4]
 2303 00f0 7B6B     		ldr	r3, [r7, #52]
 2304 00f2 5A61     		str	r2, [r3, #20]
 893:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 894:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* The socket options are passed to the IP layer in the
 895:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				space that will eventually get used by the Ethernet header. */
 896:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxNetworkBuffer->pucEthernetBuffer[ ipSOCKET_OPTIONS_OFFSET ] = pxSocket->ucSocketOptions;
 2305              		.loc 3 896 0
 2306 00f4 7B6B     		ldr	r3, [r7, #52]
 2307 00f6 9B69     		ldr	r3, [r3, #24]
 2308 00f8 0633     		adds	r3, r3, #6
 2309 00fa FA6A     		ldr	r2, [r7, #44]
 2310 00fc 92F82620 		ldrb	r2, [r2, #38]	@ zero_extendqisi2
 2311 0100 1A70     		strb	r2, [r3]
 897:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 898:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Tell the networking task that the packet needs sending. */
 899:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xStackTxEvent.pvData = pxNetworkBuffer;
 2312              		.loc 3 899 0
 2313 0102 7B6B     		ldr	r3, [r7, #52]
 2314 0104 7B62     		str	r3, [r7, #36]
 900:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 901:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Ask the IP-task to send this packet */
 902:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xSendEventStructToIPTask( &xStackTxEvent, xTicksToWait ) == pdPASS )
 2315              		.loc 3 902 0
ARM GAS  /tmp/ccrA3BdH.s 			page 69


 2316 0106 7B69     		ldr	r3, [r7, #20]
 2317 0108 07F12002 		add	r2, r7, #32
 2318 010c 1046     		mov	r0, r2
 2319 010e 1946     		mov	r1, r3
 2320 0110 FFF7FEFF 		bl	xSendEventStructToIPTask
 2321 0114 0346     		mov	r3, r0
 2322 0116 012B     		cmp	r3, #1
 2323 0118 02D1     		bne	.L130
 903:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 904:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* The packet was successfully sent to the IP task. */
 905:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					lReturn = ( int32_t ) xTotalDataLength;
 2324              		.loc 3 905 0
 2325 011a 7B68     		ldr	r3, [r7, #4]
 2326 011c 3B63     		str	r3, [r7, #48]
 2327 011e 07E0     		b	.L124
 2328              	.L130:
 906:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#if( ipconfigUSE_CALLBACKS == 1 )
 907:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
 908:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( ipconfigIS_VALID_PROG_ADDRESS( pxSocket->u.xUDP.pxHandleSent ) )
 909:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
 910:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xUDP.pxHandleSent( (Socket_t *)pxSocket, xTotalDataLength );
 911:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
 912:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
 913:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#endif /* ipconfigUSE_CALLBACKS */
 914:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 915:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else
 916:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
 917:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* If the buffer was allocated in this function, release
 918:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					it. */
 919:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( xFlags & FREERTOS_ZERO_COPY ) == 0 )
 2329              		.loc 3 919 0
 2330 0120 3B68     		ldr	r3, [r7]
 2331 0122 03F00103 		and	r3, r3, #1
 2332 0126 002B     		cmp	r3, #0
 2333 0128 02D1     		bne	.L124
 920:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
 921:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						vReleaseNetworkBufferAndDescriptor( pxNetworkBuffer );
 2334              		.loc 3 921 0
 2335 012a 786B     		ldr	r0, [r7, #52]
 2336 012c FFF7FEFF 		bl	vReleaseNetworkBufferAndDescriptor
 2337              	.L124:
 922:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
 923:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					iptraceSTACK_TX_EVENT_LOST( ipSTACK_TX_EVENT );
 924:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
 925:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 926:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
 927:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 928:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* If errno was available, errno would be set to
 929:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FREERTOS_ENOPKTS.  As it is, the function must return the
 930:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				number of transmitted bytes, so the calling function knows
 931:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				how	much data was actually sent. */
 932:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				iptraceNO_BUFFER_FOR_SENDTO();
 933:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 934:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 935:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 936:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 937:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			iptraceSENDTO_SOCKET_NOT_BOUND();
ARM GAS  /tmp/ccrA3BdH.s 			page 70


 938:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 939:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 940:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
 941:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 942:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* The data is longer than the available buffer space. */
 943:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		iptraceSENDTO_DATA_TOO_LONG();
 944:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 945:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 946:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return lReturn;
 2338              		.loc 3 946 0
 2339 0130 3B6B     		ldr	r3, [r7, #48]
 947:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** } /* Tested */
 2340              		.loc 3 947 0
 2341 0132 1846     		mov	r0, r3
 2342 0134 3837     		adds	r7, r7, #56
 2343              	.LCFI134:
 2344              		.cfi_def_cfa_offset 8
 2345 0136 BD46     		mov	sp, r7
 2346              	.LCFI135:
 2347              		.cfi_def_cfa_register 13
 2348              		@ sp needed
 2349 0138 80BD     		pop	{r7, pc}
 2350              		.cfi_endproc
 2351              	.LFE41:
 2353 013a 00BF     		.section	.text.FreeRTOS_bind,"ax",%progbits
 2354              		.align	2
 2355              		.global	FreeRTOS_bind
 2356              		.thumb
 2357              		.thumb_func
 2359              	FreeRTOS_bind:
 2360              	.LFB42:
 948:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
 949:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 950:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
 951:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * FreeRTOS_bind() : binds a sockt to a local port number.  If port 0 is
 952:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * provided, a system provided port number will be assigned.  This function can
 953:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * be used for both UDP and TCP sockets.  The actual binding will be performed
 954:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * by the IP-task to avoid mutual access to the bound-socket-lists
 955:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * (xBoundUDPSocketsList or xBoundTCPSocketsList).
 956:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
 957:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t FreeRTOS_bind( Socket_t xSocket, struct freertos_sockaddr * pxAddress, socklen_t xAddres
 958:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 2361              		.loc 3 958 0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 32
 2364              		@ frame_needed = 1, uses_anonymous_args = 0
 2365 0000 80B5     		push	{r7, lr}
 2366              	.LCFI136:
 2367              		.cfi_def_cfa_offset 8
 2368              		.cfi_offset 7, -8
 2369              		.cfi_offset 14, -4
 2370 0002 8AB0     		sub	sp, sp, #40
 2371              	.LCFI137:
 2372              		.cfi_def_cfa_offset 48
 2373 0004 02AF     		add	r7, sp, #8
 2374              	.LCFI138:
 2375              		.cfi_def_cfa 7, 40
ARM GAS  /tmp/ccrA3BdH.s 			page 71


 2376 0006 F860     		str	r0, [r7, #12]
 2377 0008 B960     		str	r1, [r7, #8]
 2378 000a 7A60     		str	r2, [r7, #4]
 959:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** IPStackEvent_t xBindEvent;
 960:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 2379              		.loc 3 960 0
 2380 000c FB68     		ldr	r3, [r7, #12]
 2381 000e BB61     		str	r3, [r7, #24]
 961:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xReturn = 0;
 2382              		.loc 3 961 0
 2383 0010 0023     		movs	r3, #0
 2384 0012 FB61     		str	r3, [r7, #28]
 962:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 963:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) xAddressLength;
 964:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 965:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( ( pxSocket == NULL ) || ( pxSocket == FREERTOS_INVALID_SOCKET ) )
 2385              		.loc 3 965 0
 2386 0014 BB69     		ldr	r3, [r7, #24]
 2387 0016 002B     		cmp	r3, #0
 2388 0018 03D0     		beq	.L134
 2389              		.loc 3 965 0 is_stmt 0 discriminator 1
 2390 001a BB69     		ldr	r3, [r7, #24]
 2391 001c B3F1FF3F 		cmp	r3, #-1
 2392 0020 03D1     		bne	.L135
 2393              	.L134:
 966:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 967:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = -pdFREERTOS_ERRNO_EINVAL;
 2394              		.loc 3 967 0 is_stmt 1
 2395 0022 6FF01503 		mvn	r3, #21
 2396 0026 FB61     		str	r3, [r7, #28]
 2397 0028 45E0     		b	.L136
 2398              	.L135:
 968:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 969:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Once a socket is bound to a port, it can not be bound to a different
 970:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	port number */
 971:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else if( socketSOCKET_IS_BOUND( pxSocket) != pdFALSE )
 2399              		.loc 3 971 0
 2400 002a BB69     		ldr	r3, [r7, #24]
 2401 002c 9B69     		ldr	r3, [r3, #24]
 2402 002e 002B     		cmp	r3, #0
 2403 0030 01D0     		beq	.L137
 2404              		.loc 3 971 0 is_stmt 0 discriminator 1
 2405 0032 0123     		movs	r3, #1
 2406 0034 00E0     		b	.L138
 2407              	.L137:
 2408              		.loc 3 971 0 discriminator 2
 2409 0036 0023     		movs	r3, #0
 2410              	.L138:
 2411              		.loc 3 971 0 discriminator 4
 2412 0038 002B     		cmp	r3, #0
 2413 003a 03D0     		beq	.L139
 972:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 973:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* The socket is already bound. */
 974:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		FreeRTOS_debug_printf( ( "vSocketBind: Socket already bound to %d\n", pxSocket->usLocalPort ) );
 975:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = -pdFREERTOS_ERRNO_EINVAL;
 2414              		.loc 3 975 0 is_stmt 1
 2415 003c 6FF01503 		mvn	r3, #21
ARM GAS  /tmp/ccrA3BdH.s 			page 72


 2416 0040 FB61     		str	r3, [r7, #28]
 2417 0042 38E0     		b	.L136
 2418              	.L139:
 976:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 977:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
 978:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 979:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Prepare a messages to the IP-task in order to perform the binding.
 980:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		The desired port number will be passed in usLocalPort. */
 981:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xBindEvent.eEventType = eSocketBindEvent;
 2419              		.loc 3 981 0
 2420 0044 0823     		movs	r3, #8
 2421 0046 3B74     		strb	r3, [r7, #16]
 982:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xBindEvent.pvData = ( void * ) xSocket;
 2422              		.loc 3 982 0
 2423 0048 FB68     		ldr	r3, [r7, #12]
 2424 004a 7B61     		str	r3, [r7, #20]
 983:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxAddress != NULL )
 2425              		.loc 3 983 0
 2426 004c BB68     		ldr	r3, [r7, #8]
 2427 004e 002B     		cmp	r3, #0
 2428 0050 0ED0     		beq	.L140
 984:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 985:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->usLocalPort = FreeRTOS_ntohs( pxAddress->sin_port );
 2429              		.loc 3 985 0
 2430 0052 BB68     		ldr	r3, [r7, #8]
 2431 0054 5B88     		ldrh	r3, [r3, #2]
 2432 0056 1B02     		lsls	r3, r3, #8
 2433 0058 9AB2     		uxth	r2, r3
 2434 005a BB68     		ldr	r3, [r7, #8]
 2435 005c 5B88     		ldrh	r3, [r3, #2]
 2436 005e 1B0A     		lsrs	r3, r3, #8
 2437 0060 9BB2     		uxth	r3, r3
 2438 0062 9BB2     		uxth	r3, r3
 2439 0064 1343     		orrs	r3, r3, r2
 2440 0066 9BB2     		uxth	r3, r3
 2441 0068 9AB2     		uxth	r2, r3
 2442 006a BB69     		ldr	r3, [r7, #24]
 2443 006c 9A84     		strh	r2, [r3, #36]	@ movhi
 2444 006e 02E0     		b	.L141
 2445              	.L140:
 986:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 987:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
 988:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 989:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Caller wants to bind to a random port number. */
 990:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->usLocalPort = 0u;
 2446              		.loc 3 990 0
 2447 0070 BB69     		ldr	r3, [r7, #24]
 2448 0072 0022     		movs	r2, #0
 2449 0074 9A84     		strh	r2, [r3, #36]	@ movhi
 2450              	.L141:
 991:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
 992:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
 993:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* portMAX_DELAY is used as a the time-out parameter, as binding *must*
 994:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		succeed before the socket can be used.  _RB_ The use of an infinite
 995:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		block time needs be changed as it could result in the task hanging. */
 996:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xSendEventStructToIPTask( &xBindEvent, ( TickType_t ) portMAX_DELAY ) == pdFAIL )
 2451              		.loc 3 996 0
ARM GAS  /tmp/ccrA3BdH.s 			page 73


 2452 0076 07F11003 		add	r3, r7, #16
 2453 007a 1846     		mov	r0, r3
 2454 007c 4FF0FF31 		mov	r1, #-1
 2455 0080 FFF7FEFF 		bl	xSendEventStructToIPTask
 2456 0084 0346     		mov	r3, r0
 2457 0086 002B     		cmp	r3, #0
 2458 0088 03D1     		bne	.L142
 997:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 998:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Failed to wake-up the IP-task, no use to wait for it */
 999:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_debug_printf( ( "FreeRTOS_bind: send event failed\n" ) );
1000:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_ECANCELED;
 2459              		.loc 3 1000 0
 2460 008a 6FF08B03 		mvn	r3, #139
 2461 008e FB61     		str	r3, [r7, #28]
 2462 0090 11E0     		b	.L136
 2463              	.L142:
1001:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1002:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
1003:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1004:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* The IP-task will set the 'eSOCKET_BOUND' bit when it has done its
1005:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			job. */
1006:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_BOUND, pdTRUE /*xClearOnExit*/, pdFALSE /*xW
 2464              		.loc 3 1006 0
 2465 0092 BB69     		ldr	r3, [r7, #24]
 2466 0094 5A68     		ldr	r2, [r3, #4]
 2467 0096 4FF0FF33 		mov	r3, #-1
 2468 009a 0093     		str	r3, [sp]
 2469 009c 1046     		mov	r0, r2
 2470 009e 1021     		movs	r1, #16
 2471 00a0 0122     		movs	r2, #1
 2472 00a2 0023     		movs	r3, #0
 2473 00a4 FFF7FEFF 		bl	xEventGroupWaitBits
1007:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( socketSOCKET_IS_BOUND( pxSocket ) == pdFALSE )
 2474              		.loc 3 1007 0
 2475 00a8 BB69     		ldr	r3, [r7, #24]
 2476 00aa 9B69     		ldr	r3, [r3, #24]
 2477 00ac 002B     		cmp	r3, #0
 2478 00ae 02D1     		bne	.L136
1008:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1009:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = -pdFREERTOS_ERRNO_EINVAL;
 2479              		.loc 3 1009 0
 2480 00b0 6FF01503 		mvn	r3, #21
 2481 00b4 FB61     		str	r3, [r7, #28]
 2482              	.L136:
1010:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1011:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1012:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1013:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1014:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xReturn;
 2483              		.loc 3 1014 0
 2484 00b6 FB69     		ldr	r3, [r7, #28]
1015:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 2485              		.loc 3 1015 0
 2486 00b8 1846     		mov	r0, r3
 2487 00ba 2037     		adds	r7, r7, #32
 2488              	.LCFI139:
 2489              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccrA3BdH.s 			page 74


 2490 00bc BD46     		mov	sp, r7
 2491              	.LCFI140:
 2492              		.cfi_def_cfa_register 13
 2493              		@ sp needed
 2494 00be 80BD     		pop	{r7, pc}
 2495              		.cfi_endproc
 2496              	.LFE42:
 2498              		.section	.text.vSocketBind,"ax",%progbits
 2499              		.align	2
 2500              		.global	vSocketBind
 2501              		.thumb
 2502              		.thumb_func
 2504              	vSocketBind:
 2505              	.LFB43:
1016:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1017:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
1018:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * vSocketBind(): internal version of bind() that should not be called directly.
1019:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * 'xInternal' is used for TCP sockets only: it allows to have several
1020:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * (connected) child sockets bound to the same server port.
1021:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
1022:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t vSocketBind( FreeRTOS_Socket_t *pxSocket, struct freertos_sockaddr * pxAddress, size_t u
1023:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 2506              		.loc 3 1023 0
 2507              		.cfi_startproc
 2508              		@ args = 0, pretend = 0, frame = 48
 2509              		@ frame_needed = 1, uses_anonymous_args = 0
 2510 0000 80B5     		push	{r7, lr}
 2511              	.LCFI141:
 2512              		.cfi_def_cfa_offset 8
 2513              		.cfi_offset 7, -8
 2514              		.cfi_offset 14, -4
 2515 0002 8CB0     		sub	sp, sp, #48
 2516              	.LCFI142:
 2517              		.cfi_def_cfa_offset 56
 2518 0004 00AF     		add	r7, sp, #0
 2519              	.LCFI143:
 2520              		.cfi_def_cfa_register 7
 2521 0006 F860     		str	r0, [r7, #12]
 2522 0008 B960     		str	r1, [r7, #8]
 2523 000a 7A60     		str	r2, [r7, #4]
 2524 000c 3B60     		str	r3, [r7]
1024:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xReturn = 0; /* In Berkeley sockets, 0 means pass for bind(). */
 2525              		.loc 3 1024 0
 2526 000e 0023     		movs	r3, #0
 2527 0010 FB62     		str	r3, [r7, #44]
1025:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** List_t *pxSocketList;
1026:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND == 1 )
1027:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	struct freertos_sockaddr xAddress;
1028:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND */
1029:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1030:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
1031:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_TCP )
 2528              		.loc 3 1031 0
 2529 0012 FB68     		ldr	r3, [r7, #12]
 2530 0014 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2531 0018 062B     		cmp	r3, #6
 2532 001a 02D1     		bne	.L145
ARM GAS  /tmp/ccrA3BdH.s 			page 75


1032:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1033:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocketList = &xBoundTCPSocketsList;
 2533              		.loc 3 1033 0
 2534 001c 3E4B     		ldr	r3, .L162
 2535 001e BB62     		str	r3, [r7, #40]
 2536 0020 01E0     		b	.L146
 2537              	.L145:
1034:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1035:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
1036:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif  /* ipconfigUSE_TCP == 1 */
1037:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1038:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocketList = &xBoundUDPSocketsList;
 2538              		.loc 3 1038 0
 2539 0022 3E4B     		ldr	r3, .L162+4
 2540 0024 BB62     		str	r3, [r7, #40]
 2541              	.L146:
1039:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1040:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1041:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* The function prototype is designed to maintain the expected Berkeley
1042:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	sockets standard, but this implementation does not use all the parameters. */
1043:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) uxAddressLength;
1044:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1045:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	configASSERT( pxSocket );
 2542              		.loc 3 1045 0
 2543 0026 FB68     		ldr	r3, [r7, #12]
 2544 0028 002B     		cmp	r3, #0
 2545 002a 09D1     		bne	.L147
 2546              	.LBB65:
 2547              	.LBB66:
 2548              		.loc 4 237 0 discriminator 1
 2549              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2550 002c 4FF05003 			mov r3, #80												
 2551 0030 83F31188 		msr basepri, r3											
 2552 0034 BFF36F8F 		isb														
 2553 0038 BFF34F8F 		dsb														
 2554              	
 2555              	@ 0 "" 2
 2556              		.thumb
 2557 003c 7B62     		str	r3, [r7, #36]
 2558              	.L148:
 2559              	.LBE66:
 2560              	.LBE65:
 2561              		.loc 3 1045 0 discriminator 1
 2562 003e FEE7     		b	.L148
 2563              	.L147:
1046:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	configASSERT( pxSocket != FREERTOS_INVALID_SOCKET );
 2564              		.loc 3 1046 0
 2565 0040 FB68     		ldr	r3, [r7, #12]
 2566 0042 B3F1FF3F 		cmp	r3, #-1
 2567 0046 09D1     		bne	.L149
 2568              	.LBB67:
 2569              	.LBB68:
 2570              		.loc 4 237 0 discriminator 1
 2571              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2572 0048 4FF05003 			mov r3, #80												
 2573 004c 83F31188 		msr basepri, r3											
 2574 0050 BFF36F8F 		isb														
ARM GAS  /tmp/ccrA3BdH.s 			page 76


 2575 0054 BFF34F8F 		dsb														
 2576              	
 2577              	@ 0 "" 2
 2578              		.thumb
 2579 0058 3B62     		str	r3, [r7, #32]
 2580              	.L150:
 2581              	.LBE68:
 2582              	.LBE67:
 2583              		.loc 3 1046 0 discriminator 2
 2584 005a FEE7     		b	.L150
 2585              	.L149:
1047:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1048:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND == 1 )
1049:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1050:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* pxAddress will be NULL if sendto() was called on a socket without the
1051:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		socket being bound to an address.  In this case, automatically allocate
1052:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		an address to the socket.  There is a very tiny chance that the allocated
1053:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		port will already be in use - if that is the case, then the check below
1054:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		[pxListFindListItemWithValue()] will result in an error being returned. */
1055:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxAddress == NULL )
 2586              		.loc 3 1055 0
 2587 005c BB68     		ldr	r3, [r7, #8]
 2588 005e 002B     		cmp	r3, #0
 2589 0060 05D1     		bne	.L151
1056:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1057:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxAddress = &xAddress;
 2590              		.loc 3 1057 0
 2591 0062 07F11403 		add	r3, r7, #20
 2592 0066 BB60     		str	r3, [r7, #8]
1058:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* For now, put it to zero, will be assigned later */
1059:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxAddress->sin_port = 0u;
 2593              		.loc 3 1059 0
 2594 0068 BB68     		ldr	r3, [r7, #8]
 2595 006a 0022     		movs	r2, #0
 2596 006c 5A80     		strh	r2, [r3, #2]	@ movhi
 2597              	.L151:
1060:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1061:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1062:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif /* ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND == 1 */
1063:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1064:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Sockets must be bound before calling FreeRTOS_sendto() if
1065:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ipconfigALLOW_SOCKET_SEND_WITHOUT_BIND is not set to 1. */
1066:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	configASSERT( pxAddress );
 2598              		.loc 3 1066 0
 2599 006e BB68     		ldr	r3, [r7, #8]
 2600 0070 002B     		cmp	r3, #0
 2601 0072 09D1     		bne	.L152
 2602              	.LBB69:
 2603              	.LBB70:
 2604              		.loc 4 237 0 discriminator 1
 2605              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2606 0074 4FF05003 			mov r3, #80												
 2607 0078 83F31188 		msr basepri, r3											
 2608 007c BFF36F8F 		isb														
 2609 0080 BFF34F8F 		dsb														
 2610              	
 2611              	@ 0 "" 2
ARM GAS  /tmp/ccrA3BdH.s 			page 77


 2612              		.thumb
 2613 0084 FB61     		str	r3, [r7, #28]
 2614              	.L153:
 2615              	.LBE70:
 2616              	.LBE69:
 2617              		.loc 3 1066 0 discriminator 3
 2618 0086 FEE7     		b	.L153
 2619              	.L152:
1067:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1068:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( pxAddress != NULL )
 2620              		.loc 3 1068 0
 2621 0088 BB68     		ldr	r3, [r7, #8]
 2622 008a 002B     		cmp	r3, #0
 2623 008c 3CD0     		beq	.L154
1069:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1070:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxAddress->sin_port == 0u )
 2624              		.loc 3 1070 0
 2625 008e BB68     		ldr	r3, [r7, #8]
 2626 0090 5B88     		ldrh	r3, [r3, #2]
 2627 0092 002B     		cmp	r3, #0
 2628 0094 09D1     		bne	.L155
1071:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1072:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxAddress->sin_port = prvGetPrivatePortNumber( ( BaseType_t ) pxSocket->ucProtocol );
 2629              		.loc 3 1072 0
 2630 0096 FB68     		ldr	r3, [r7, #12]
 2631 0098 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2632 009c 1846     		mov	r0, r3
 2633 009e FFF7FEFF 		bl	prvGetPrivatePortNumber
 2634 00a2 0346     		mov	r3, r0
 2635 00a4 1A46     		mov	r2, r3
 2636 00a6 BB68     		ldr	r3, [r7, #8]
 2637 00a8 5A80     		strh	r2, [r3, #2]	@ movhi
 2638              	.L155:
1073:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1074:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1075:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* If vSocketBind() is called from the API FreeRTOS_bind() it has been
1076:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		confirmed that the socket was not yet bound to a port.  If it is called
1077:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		from the IP-task, no such check is necessary. */
1078:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1079:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Check to ensure the port is not already in use.  If the bind is
1080:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		called internally, a port MAY be used by more than one socket. */
1081:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( ( ( xInternal == pdFALSE ) || ( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP ) ) 
 2639              		.loc 3 1081 0
 2640 00aa 3B68     		ldr	r3, [r7]
 2641 00ac 002B     		cmp	r3, #0
 2642 00ae 04D0     		beq	.L156
 2643              		.loc 3 1081 0 is_stmt 0 discriminator 2
 2644 00b0 FB68     		ldr	r3, [r7, #12]
 2645 00b2 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2646 00b6 062B     		cmp	r3, #6
 2647 00b8 0CD0     		beq	.L157
 2648              	.L156:
1082:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			( pxListFindListItemWithValue( pxSocketList, ( TickType_t ) pxAddress->sin_port ) != NULL ) )
 2649              		.loc 3 1082 0 is_stmt 1 discriminator 3
 2650 00ba BB68     		ldr	r3, [r7, #8]
 2651 00bc 5B88     		ldrh	r3, [r3, #2]
 2652 00be B86A     		ldr	r0, [r7, #40]
ARM GAS  /tmp/ccrA3BdH.s 			page 78


 2653 00c0 1946     		mov	r1, r3
 2654 00c2 FFF7FEFF 		bl	pxListFindListItemWithValue
 2655 00c6 0346     		mov	r3, r0
1081:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			( pxListFindListItemWithValue( pxSocketList, ( TickType_t ) pxAddress->sin_port ) != NULL ) )
 2656              		.loc 3 1081 0 discriminator 3
 2657 00c8 002B     		cmp	r3, #0
 2658 00ca 03D0     		beq	.L157
1083:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1084:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_debug_printf( ( "vSocketBind: %sP port %d in use\n",
1085:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_TCP ? "TC" : "UD",
1086:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_ntohs( pxAddress->sin_port ) ) );
1087:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EADDRINUSE;
 2659              		.loc 3 1087 0
 2660 00cc 6FF06F03 		mvn	r3, #111
 2661 00d0 FB62     		str	r3, [r7, #44]
 2662 00d2 1CE0     		b	.L161
 2663              	.L157:
1088:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1089:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
1090:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1091:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Allocate the port number to the socket.
1092:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			This macro will set 'xBoundSocketListItem->xItemValue' */
1093:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			socketSET_SOCKET_PORT( pxSocket, pxAddress->sin_port );
 2664              		.loc 3 1093 0
 2665 00d4 BB68     		ldr	r3, [r7, #8]
 2666 00d6 5B88     		ldrh	r3, [r3, #2]
 2667 00d8 1A46     		mov	r2, r3
 2668 00da FB68     		ldr	r3, [r7, #12]
 2669 00dc 9A60     		str	r2, [r3, #8]
1094:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1095:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* And also store it in a socket field 'usLocalPort' in host-byte-order,
1096:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			mostly used for logging and debugging purposes */
1097:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->usLocalPort = FreeRTOS_ntohs( pxAddress->sin_port );
 2670              		.loc 3 1097 0
 2671 00de BB68     		ldr	r3, [r7, #8]
 2672 00e0 5B88     		ldrh	r3, [r3, #2]
 2673 00e2 1B02     		lsls	r3, r3, #8
 2674 00e4 9AB2     		uxth	r2, r3
 2675 00e6 BB68     		ldr	r3, [r7, #8]
 2676 00e8 5B88     		ldrh	r3, [r3, #2]
 2677 00ea 1B0A     		lsrs	r3, r3, #8
 2678 00ec 9BB2     		uxth	r3, r3
 2679 00ee 9BB2     		uxth	r3, r3
 2680 00f0 1343     		orrs	r3, r3, r2
 2681 00f2 9BB2     		uxth	r3, r3
 2682 00f4 9AB2     		uxth	r2, r3
 2683 00f6 FB68     		ldr	r3, [r7, #12]
 2684 00f8 9A84     		strh	r2, [r3, #36]	@ movhi
1098:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1099:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Add the socket to the list of bound ports. */
1100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* If the network driver can iterate through 'xBoundUDPSocketsList',
1102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				by calling xPortHasUDPSocket() then the IP-task must temporarily
1103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				suspend the scheduler to keep the list in a consistent state. */
1104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 1 )
1105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vTaskSuspendAll();
ARM GAS  /tmp/ccrA3BdH.s 			page 79


1107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif /* ipconfigETHERNET_DRIVER_FILTERS_PACKETS */
1109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Add the socket to 'xBoundUDPSocketsList' or 'xBoundTCPSocketsList' */
1111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vListInsertEnd( pxSocketList, &( pxSocket->xBoundSocketListItem ) );
 2685              		.loc 3 1111 0
 2686 00fa FB68     		ldr	r3, [r7, #12]
 2687 00fc 0833     		adds	r3, r3, #8
 2688 00fe B86A     		ldr	r0, [r7, #40]
 2689 0100 1946     		mov	r1, r3
 2690 0102 FFF7FEFF 		bl	vListInsertEnd
 2691 0106 02E0     		b	.L161
 2692              	.L154:
1112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 1 )
1114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xTaskResumeAll();
1116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif /* ipconfigETHERNET_DRIVER_FILTERS_PACKETS */
1118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
1122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = -pdFREERTOS_ERRNO_EADDRNOTAVAIL;
 2693              		.loc 3 1123 0
 2694 0108 6FF07C03 		mvn	r3, #124
 2695 010c FB62     		str	r3, [r7, #44]
 2696              	.L161:
1124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		FreeRTOS_debug_printf( ( "vSocketBind: Socket no addr\n" ) );
1125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( xReturn != 0 )
1128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		iptraceBIND_FAILED( xSocket, ( FreeRTOS_ntohs( pxAddress->sin_port ) ) );
1130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xReturn;
 2697              		.loc 3 1132 0
 2698 010e FB6A     		ldr	r3, [r7, #44]
1133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** } /* Tested */
 2699              		.loc 3 1133 0
 2700 0110 1846     		mov	r0, r3
 2701 0112 3037     		adds	r7, r7, #48
 2702              	.LCFI144:
 2703              		.cfi_def_cfa_offset 8
 2704 0114 BD46     		mov	sp, r7
 2705              	.LCFI145:
 2706              		.cfi_def_cfa_register 13
 2707              		@ sp needed
 2708 0116 80BD     		pop	{r7, pc}
 2709              	.L163:
 2710              		.align	2
 2711              	.L162:
 2712 0118 00000000 		.word	xBoundTCPSocketsList
 2713 011c 00000000 		.word	xBoundUDPSocketsList
 2714              		.cfi_endproc
ARM GAS  /tmp/ccrA3BdH.s 			page 80


 2715              	.LFE43:
 2717              		.section	.text.FreeRTOS_closesocket,"ax",%progbits
 2718              		.align	2
 2719              		.global	FreeRTOS_closesocket
 2720              		.thumb
 2721              		.thumb_func
 2723              	FreeRTOS_closesocket:
 2724              	.LFB44:
1134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*
1137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Close a socket and free the allocated space
1138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * In case of a TCP socket: the connection will not be closed automatically
1139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * Subsequent messages for the closed socket will be responded to with a RST
1140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * The IP-task will actually close the socket, after receiving a 'eSocketCloseEvent' message
1141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
1142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t FreeRTOS_closesocket( Socket_t xSocket )
1143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 2725              		.loc 3 1143 0
 2726              		.cfi_startproc
 2727              		@ args = 0, pretend = 0, frame = 24
 2728              		@ frame_needed = 1, uses_anonymous_args = 0
 2729 0000 80B5     		push	{r7, lr}
 2730              	.LCFI146:
 2731              		.cfi_def_cfa_offset 8
 2732              		.cfi_offset 7, -8
 2733              		.cfi_offset 14, -4
 2734 0002 86B0     		sub	sp, sp, #24
 2735              	.LCFI147:
 2736              		.cfi_def_cfa_offset 32
 2737 0004 00AF     		add	r7, sp, #0
 2738              	.LCFI148:
 2739              		.cfi_def_cfa_register 7
 2740 0006 7860     		str	r0, [r7, #4]
1144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xResult;
1145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 ) && ( ipconfigUSE_CALLBACKS == 1 )
1146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * )xSocket;
1147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif
1148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** IPStackEvent_t xCloseEvent;
1149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** xCloseEvent.eEventType = eSocketCloseEvent;
 2741              		.loc 3 1149 0
 2742 0008 0923     		movs	r3, #9
 2743 000a 3B73     		strb	r3, [r7, #12]
1150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** xCloseEvent.pvData = ( void * ) xSocket;
 2744              		.loc 3 1150 0
 2745 000c 7B68     		ldr	r3, [r7, #4]
 2746 000e 3B61     		str	r3, [r7, #16]
1151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( ( xSocket == NULL ) || ( xSocket == FREERTOS_INVALID_SOCKET ) )
 2747              		.loc 3 1152 0
 2748 0010 7B68     		ldr	r3, [r7, #4]
 2749 0012 002B     		cmp	r3, #0
 2750 0014 03D0     		beq	.L165
 2751              		.loc 3 1152 0 is_stmt 0 discriminator 1
 2752 0016 7B68     		ldr	r3, [r7, #4]
 2753 0018 B3F1FF3F 		cmp	r3, #-1
 2754 001c 02D1     		bne	.L166
ARM GAS  /tmp/ccrA3BdH.s 			page 81


 2755              	.L165:
1153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xResult = 0;
 2756              		.loc 3 1154 0 is_stmt 1
 2757 001e 0023     		movs	r3, #0
 2758 0020 7B61     		str	r3, [r7, #20]
 2759 0022 0EE0     		b	.L167
 2760              	.L166:
1155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
1157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ( ipconfigUSE_TCP == 1 ) && ( ipconfigUSE_CALLBACKS == 1 ) )
1159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_TCP )
1161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Make sure that IP-task won't call the user callback's anymore */
1163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.pxHandleConnected = NULL;
1164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.pxHandleReceive = NULL;
1165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.pxHandleSent = NULL;
1166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif  /* ( ( ipconfigUSE_TCP == 1 ) && ( ipconfigUSE_CALLBACKS == 1 ) ) */
1169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Let the IP task close the socket to keep it synchronised	with the
1171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		packet handling. */
1172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Note when changing the time-out value below, it must be checked who is calling
1174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		this function. If it is called by the IP-task, a deadlock could occur.
1175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		The IP-task would only call it in case of a user call-back */
1176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xSendEventStructToIPTask( &xCloseEvent, ( TickType_t ) 0 ) == pdFAIL )
 2761              		.loc 3 1176 0
 2762 0024 07F10C03 		add	r3, r7, #12
 2763 0028 1846     		mov	r0, r3
 2764 002a 0021     		movs	r1, #0
 2765 002c FFF7FEFF 		bl	xSendEventStructToIPTask
 2766 0030 0346     		mov	r3, r0
 2767 0032 002B     		cmp	r3, #0
 2768 0034 03D1     		bne	.L168
1177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_debug_printf( ( "FreeRTOS_closesocket: failed\n" ) );
1179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -1;
 2769              		.loc 3 1179 0
 2770 0036 4FF0FF33 		mov	r3, #-1
 2771 003a 7B61     		str	r3, [r7, #20]
 2772 003c 01E0     		b	.L167
 2773              	.L168:
1180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
1182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = 1;
 2774              		.loc 3 1183 0
 2775 003e 0123     		movs	r3, #1
 2776 0040 7B61     		str	r3, [r7, #20]
 2777              	.L167:
1184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 82


1187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xResult;
 2778              		.loc 3 1187 0
 2779 0042 7B69     		ldr	r3, [r7, #20]
1188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 2780              		.loc 3 1188 0
 2781 0044 1846     		mov	r0, r3
 2782 0046 1837     		adds	r7, r7, #24
 2783              	.LCFI149:
 2784              		.cfi_def_cfa_offset 8
 2785 0048 BD46     		mov	sp, r7
 2786              	.LCFI150:
 2787              		.cfi_def_cfa_register 13
 2788              		@ sp needed
 2789 004a 80BD     		pop	{r7, pc}
 2790              		.cfi_endproc
 2791              	.LFE44:
 2793              		.section	.text.vSocketClose,"ax",%progbits
 2794              		.align	2
 2795              		.global	vSocketClose
 2796              		.thumb
 2797              		.thumb_func
 2799              	vSocketClose:
 2800              	.LFB45:
1189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* This is the internal version of FreeRTOS_closesocket()
1191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * It will be called by the IPtask only to avoid problems with synchronicity
1192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  */
1193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** void *vSocketClose( FreeRTOS_Socket_t *pxSocket )
1194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 2801              		.loc 3 1194 0
 2802              		.cfi_startproc
 2803              		@ args = 0, pretend = 0, frame = 16
 2804              		@ frame_needed = 1, uses_anonymous_args = 0
 2805 0000 80B5     		push	{r7, lr}
 2806              	.LCFI151:
 2807              		.cfi_def_cfa_offset 8
 2808              		.cfi_offset 7, -8
 2809              		.cfi_offset 14, -4
 2810 0002 84B0     		sub	sp, sp, #16
 2811              	.LCFI152:
 2812              		.cfi_def_cfa_offset 24
 2813 0004 00AF     		add	r7, sp, #0
 2814              	.LCFI153:
 2815              		.cfi_def_cfa_register 7
 2816 0006 7860     		str	r0, [r7, #4]
1195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** NetworkBufferDescriptor_t *pxNetworkBuffer;
1196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigUSE_TCP == 1 )
1198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* For TCP: clean up a little more. */
1200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_TCP )
 2817              		.loc 3 1200 0
 2818 0008 7B68     		ldr	r3, [r7, #4]
 2819 000a 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2820 000e 062B     		cmp	r3, #6
 2821 0010 22D1     		bne	.L171
1201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
ARM GAS  /tmp/ccrA3BdH.s 			page 83


1202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigUSE_TCP_WIN == 1 )
1203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.pxAckMessage != NULL )
 2822              		.loc 3 1204 0
 2823 0012 7B68     		ldr	r3, [r7, #4]
 2824 0014 DB6F     		ldr	r3, [r3, #124]
 2825 0016 002B     		cmp	r3, #0
 2826 0018 04D0     		beq	.L172
1205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vReleaseNetworkBufferAndDescriptor( pxSocket->u.xTCP.pxAckMessage );
 2827              		.loc 3 1206 0
 2828 001a 7B68     		ldr	r3, [r7, #4]
 2829 001c DB6F     		ldr	r3, [r3, #124]
 2830 001e 1846     		mov	r0, r3
 2831 0020 FFF7FEFF 		bl	vReleaseNetworkBufferAndDescriptor
 2832              	.L172:
1207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Free the resources which were claimed by the tcpWin member */
1209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vTCPWindowDestroy( &pxSocket->u.xTCP.xTCPWindow );
 2833              		.loc 3 1209 0
 2834 0024 7B68     		ldr	r3, [r7, #4]
 2835 0026 DC33     		adds	r3, r3, #220
 2836 0028 1846     		mov	r0, r3
 2837 002a FFF7FEFF 		bl	vTCPWindowDestroy
1210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif /* ipconfigUSE_TCP_WIN */
1212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Free the input and output streams */
1214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.rxStream != NULL )
 2838              		.loc 3 1214 0
 2839 002e 7B68     		ldr	r3, [r7, #4]
 2840 0030 5B6F     		ldr	r3, [r3, #116]
 2841 0032 002B     		cmp	r3, #0
 2842 0034 04D0     		beq	.L173
1215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vPortFreeLarge( pxSocket->u.xTCP.rxStream );
 2843              		.loc 3 1216 0
 2844 0036 7B68     		ldr	r3, [r7, #4]
 2845 0038 5B6F     		ldr	r3, [r3, #116]
 2846 003a 1846     		mov	r0, r3
 2847 003c FFF7FEFF 		bl	vPortFree
 2848              	.L173:
1217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.txStream != NULL )
 2849              		.loc 3 1219 0
 2850 0040 7B68     		ldr	r3, [r7, #4]
 2851 0042 9B6F     		ldr	r3, [r3, #120]
 2852 0044 002B     		cmp	r3, #0
 2853 0046 04D0     		beq	.L174
1220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vPortFreeLarge( pxSocket->u.xTCP.txStream );
 2854              		.loc 3 1221 0
 2855 0048 7B68     		ldr	r3, [r7, #4]
 2856 004a 9B6F     		ldr	r3, [r3, #120]
 2857 004c 1846     		mov	r0, r3
 2858 004e FFF7FEFF 		bl	vPortFree
ARM GAS  /tmp/ccrA3BdH.s 			page 84


 2859              	.L174:
1222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* In case this is a child socket, make sure the child-count of the
1225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			parent socket is decreased. */
1226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			prvTCPSetSocketCount( pxSocket );
 2860              		.loc 3 1226 0
 2861 0052 7868     		ldr	r0, [r7, #4]
 2862 0054 FFF7FEFF 		bl	prvTCPSetSocketCount
 2863              	.L171:
1227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif  /* ipconfigUSE_TCP == 1 */
1230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Socket must be unbound first, to ensure no more packets are queued on
1232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	it. */
1233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( socketSOCKET_IS_BOUND( pxSocket ) != pdFALSE )
 2864              		.loc 3 1233 0
 2865 0058 7B68     		ldr	r3, [r7, #4]
 2866 005a 9B69     		ldr	r3, [r3, #24]
 2867 005c 002B     		cmp	r3, #0
 2868 005e 01D0     		beq	.L175
 2869              		.loc 3 1233 0 is_stmt 0 discriminator 1
 2870 0060 0123     		movs	r3, #1
 2871 0062 00E0     		b	.L176
 2872              	.L175:
 2873              		.loc 3 1233 0 discriminator 2
 2874 0064 0023     		movs	r3, #0
 2875              	.L176:
 2876              		.loc 3 1233 0 discriminator 4
 2877 0066 002B     		cmp	r3, #0
 2878 0068 04D0     		beq	.L177
1234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* If the network driver can iterate through 'xBoundUDPSocketsList',
1236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		by calling xPortHasUDPSocket(), then the IP-task must temporarily
1237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		suspend the scheduler to keep the list in a consistent state. */
1238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 1 )
1239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vTaskSuspendAll();
1241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigETHERNET_DRIVER_FILTERS_PACKETS */
1243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		uxListRemove( &( pxSocket->xBoundSocketListItem ) );
 2879              		.loc 3 1244 0 is_stmt 1
 2880 006a 7B68     		ldr	r3, [r7, #4]
 2881 006c 0833     		adds	r3, r3, #8
 2882 006e 1846     		mov	r0, r3
 2883 0070 FFF7FEFF 		bl	uxListRemove
 2884              	.L177:
1245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 1 )
1247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xTaskResumeAll();
1249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigETHERNET_DRIVER_FILTERS_PACKETS */
1251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 85


1253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Now the socket is not bound the list of waiting packets can be
1254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	drained. */
1255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_UDP )
 2885              		.loc 3 1255 0
 2886 0074 7B68     		ldr	r3, [r7, #4]
 2887 0076 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 2888 007a 112B     		cmp	r3, #17
 2889 007c 0FD1     		bne	.L178
1256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		while( listCURRENT_LIST_LENGTH( &( pxSocket->u.xUDP.xWaitingPacketsList ) ) > 0U )
 2890              		.loc 3 1257 0
 2891 007e 0AE0     		b	.L179
 2892              	.L180:
1258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxNetworkBuffer = ( NetworkBufferDescriptor_t * ) listGET_OWNER_OF_HEAD_ENTRY( &( pxSocket->u.xU
 2893              		.loc 3 1259 0
 2894 0080 7B68     		ldr	r3, [r7, #4]
 2895 0082 5B6C     		ldr	r3, [r3, #68]
 2896 0084 DB68     		ldr	r3, [r3, #12]
 2897 0086 FB60     		str	r3, [r7, #12]
1260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			uxListRemove( &( pxNetworkBuffer->xBufferListItem ) );
 2898              		.loc 3 1260 0
 2899 0088 FB68     		ldr	r3, [r7, #12]
 2900 008a 1846     		mov	r0, r3
 2901 008c FFF7FEFF 		bl	uxListRemove
1261:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vReleaseNetworkBufferAndDescriptor( pxNetworkBuffer );
 2902              		.loc 3 1261 0
 2903 0090 F868     		ldr	r0, [r7, #12]
 2904 0092 FFF7FEFF 		bl	vReleaseNetworkBufferAndDescriptor
 2905              	.L179:
1257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 2906              		.loc 3 1257 0
 2907 0096 7B68     		ldr	r3, [r7, #4]
 2908 0098 9B6B     		ldr	r3, [r3, #56]
 2909 009a 002B     		cmp	r3, #0
 2910 009c F0D1     		bne	.L180
 2911              	.L178:
1262:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1264:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1265:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( pxSocket->xEventGroup )
 2912              		.loc 3 1265 0
 2913 009e 7B68     		ldr	r3, [r7, #4]
 2914 00a0 5B68     		ldr	r3, [r3, #4]
 2915 00a2 002B     		cmp	r3, #0
 2916 00a4 04D0     		beq	.L181
1266:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1267:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		vEventGroupDelete( pxSocket->xEventGroup );
 2917              		.loc 3 1267 0
 2918 00a6 7B68     		ldr	r3, [r7, #4]
 2919 00a8 5B68     		ldr	r3, [r3, #4]
 2920 00aa 1846     		mov	r0, r3
 2921 00ac FFF7FEFF 		bl	vEventGroupDelete
 2922              	.L181:
1268:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1269:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1270:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigUSE_TCP == 1 ) && ( ipconfigHAS_DEBUG_PRINTF != 0 )
ARM GAS  /tmp/ccrA3BdH.s 			page 86


1271:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1272:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_TCP )
1273:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1274:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_debug_printf( ( "FreeRTOS_closesocket[%u to %lxip:%u]: buffers %lu socks %lu\n",
1275:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->usLocalPort,
1276:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.ulRemoteIP,
1277:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.usRemotePort,
1278:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				uxGetNumberOfFreeNetworkBuffers(),
1279:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				listCURRENT_LIST_LENGTH( &xBoundTCPSocketsList ) ) );
1280:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1281:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1282:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif /* ( ipconfigUSE_TCP == 1 ) && ( ipconfigHAS_DEBUG_PRINTF != 0 ) */
1283:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1284:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Anf finally, after all resources have been freed, free the socket space */
1285:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	vPortFreeSocket( pxSocket );
 2923              		.loc 3 1285 0
 2924 00b0 7868     		ldr	r0, [r7, #4]
 2925 00b2 FFF7FEFF 		bl	vPortFree
1286:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1287:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return 0;
 2926              		.loc 3 1287 0
 2927 00b6 0023     		movs	r3, #0
1288:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** } /* Tested */
 2928              		.loc 3 1288 0
 2929 00b8 1846     		mov	r0, r3
 2930 00ba 1037     		adds	r7, r7, #16
 2931              	.LCFI154:
 2932              		.cfi_def_cfa_offset 8
 2933 00bc BD46     		mov	sp, r7
 2934              	.LCFI155:
 2935              		.cfi_def_cfa_register 13
 2936              		@ sp needed
 2937 00be 80BD     		pop	{r7, pc}
 2938              		.cfi_endproc
 2939              	.LFE45:
 2941              		.section	.text.prvTCPSetSocketCount,"ax",%progbits
 2942              		.align	2
 2943              		.thumb
 2944              		.thumb_func
 2946              	prvTCPSetSocketCount:
 2947              	.LFB46:
1289:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1290:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1291:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1292:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if ipconfigUSE_TCP == 1
1293:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1294:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
1295:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * When a child socket gets closed, make sure to update the child-count of the
1296:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * parent.  When a listening parent socket is closed, make sure no child-sockets
1297:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * keep a pointer to it.
1298:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
1299:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static void prvTCPSetSocketCount( FreeRTOS_Socket_t *pxSocketToDelete )
1300:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 2948              		.loc 3 1300 0
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 24
 2951              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccrA3BdH.s 			page 87


 2952              		@ link register save eliminated.
 2953 0000 80B4     		push	{r7}
 2954              	.LCFI156:
 2955              		.cfi_def_cfa_offset 4
 2956              		.cfi_offset 7, -4
 2957 0002 87B0     		sub	sp, sp, #28
 2958              	.LCFI157:
 2959              		.cfi_def_cfa_offset 32
 2960 0004 00AF     		add	r7, sp, #0
 2961              	.LCFI158:
 2962              		.cfi_def_cfa_register 7
 2963 0006 7860     		str	r0, [r7, #4]
1301:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	const ListItem_t *pxIterator;
1302:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	const MiniListItem_t *pxEnd = ( const MiniListItem_t* )listGET_END_MARKER( &xBoundTCPSocketsList )
 2964              		.loc 3 1302 0
 2965 0008 174B     		ldr	r3, .L188
 2966 000a 3B61     		str	r3, [r7, #16]
1303:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxOtherSocket;
1304:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	uint16_t usLocalPort = pxSocketToDelete->usLocalPort;
 2967              		.loc 3 1304 0
 2968 000c 7B68     		ldr	r3, [r7, #4]
 2969 000e 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 2970 0010 FB81     		strh	r3, [r7, #14]	@ movhi
1305:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
 2971              		.loc 3 1306 0
 2972 0012 3B69     		ldr	r3, [r7, #16]
 2973 0014 5B68     		ldr	r3, [r3, #4]
 2974 0016 7B61     		str	r3, [r7, #20]
 2975 0018 1DE0     		b	.L184
 2976              	.L187:
1307:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
1308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator ) )
1309:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1310:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxOtherSocket = ( FreeRTOS_Socket_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 2977              		.loc 3 1310 0
 2978 001a 7B69     		ldr	r3, [r7, #20]
 2979 001c DB68     		ldr	r3, [r3, #12]
 2980 001e BB60     		str	r3, [r7, #8]
1311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( pxOtherSocket->u.xTCP.ucTCPState == eTCP_LISTEN ) &&
 2981              		.loc 3 1311 0
 2982 0020 BB68     		ldr	r3, [r7, #8]
 2983 0022 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 2984 0026 012B     		cmp	r3, #1
 2985 0028 12D1     		bne	.L185
1312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				( pxOtherSocket->usLocalPort == usLocalPort ) &&
 2986              		.loc 3 1312 0 discriminator 1
 2987 002a BB68     		ldr	r3, [r7, #8]
 2988 002c 9B8C     		ldrh	r3, [r3, #36]
1311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( pxOtherSocket->u.xTCP.ucTCPState == eTCP_LISTEN ) &&
 2989              		.loc 3 1311 0 discriminator 1
 2990 002e FA89     		ldrh	r2, [r7, #14]
 2991 0030 9A42     		cmp	r2, r3
 2992 0032 0DD1     		bne	.L185
1313:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				( pxOtherSocket->u.xTCP.usChildCount ) )
 2993              		.loc 3 1313 0
 2994 0034 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccrA3BdH.s 			page 88


 2995 0036 B3F84E30 		ldrh	r3, [r3, #78]
1312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				( pxOtherSocket->usLocalPort == usLocalPort ) &&
 2996              		.loc 3 1312 0
 2997 003a 002B     		cmp	r3, #0
 2998 003c 08D0     		beq	.L185
1314:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1315:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxOtherSocket->u.xTCP.usChildCount--;
 2999              		.loc 3 1315 0
 3000 003e BB68     		ldr	r3, [r7, #8]
 3001 0040 B3F84E30 		ldrh	r3, [r3, #78]
 3002 0044 013B     		subs	r3, r3, #1
 3003 0046 9AB2     		uxth	r2, r3
 3004 0048 BB68     		ldr	r3, [r7, #8]
 3005 004a A3F84E20 		strh	r2, [r3, #78]	@ movhi
1316:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_debug_printf( ( "Lost: Socket %u now has %u / %u child%s\n",
1317:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxOtherSocket->usLocalPort,
1318:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxOtherSocket->u.xTCP.usChildCount,
1319:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxOtherSocket->u.xTCP.usBacklog,
1320:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxOtherSocket->u.xTCP.usChildCount == 1u ? "" : "ren" ) );
1321:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3006              		.loc 3 1321 0
 3007 004e 06E0     		b	.L183
 3008              	.L185:
1308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 3009              		.loc 3 1308 0
 3010 0050 7B69     		ldr	r3, [r7, #20]
 3011 0052 5B68     		ldr	r3, [r3, #4]
 3012 0054 7B61     		str	r3, [r7, #20]
 3013              	.L184:
1306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
 3014              		.loc 3 1306 0 discriminator 1
 3015 0056 7A69     		ldr	r2, [r7, #20]
 3016 0058 3B69     		ldr	r3, [r7, #16]
 3017 005a 9A42     		cmp	r2, r3
 3018 005c DDD1     		bne	.L187
 3019              	.L183:
1322:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1323:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1324:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 3020              		.loc 3 1324 0
 3021 005e 1C37     		adds	r7, r7, #28
 3022              	.LCFI159:
 3023              		.cfi_def_cfa_offset 4
 3024 0060 BD46     		mov	sp, r7
 3025              	.LCFI160:
 3026              		.cfi_def_cfa_register 13
 3027              		@ sp needed
 3028 0062 5DF8047B 		ldr	r7, [sp], #4
 3029              	.LCFI161:
 3030              		.cfi_restore 7
 3031              		.cfi_def_cfa_offset 0
 3032 0066 7047     		bx	lr
 3033              	.L189:
 3034              		.align	2
 3035              	.L188:
 3036 0068 08000000 		.word	xBoundTCPSocketsList+8
 3037              		.cfi_endproc
ARM GAS  /tmp/ccrA3BdH.s 			page 89


 3038              	.LFE46:
 3040              		.section	.text.FreeRTOS_setsockopt,"ax",%progbits
 3041              		.align	2
 3042              		.global	FreeRTOS_setsockopt
 3043              		.thumb
 3044              		.thumb_func
 3046              	FreeRTOS_setsockopt:
 3047              	.LFB47:
1325:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1326:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP == 1 */
1327:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1328:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1329:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1330:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t FreeRTOS_setsockopt( Socket_t xSocket, int32_t lLevel, int32_t lOptionName, const void *
1331:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 3048              		.loc 3 1331 0
 3049              		.cfi_startproc
 3050              		@ args = 4, pretend = 0, frame = 40
 3051              		@ frame_needed = 1, uses_anonymous_args = 0
 3052 0000 90B5     		push	{r4, r7, lr}
 3053              	.LCFI162:
 3054              		.cfi_def_cfa_offset 12
 3055              		.cfi_offset 4, -12
 3056              		.cfi_offset 7, -8
 3057              		.cfi_offset 14, -4
 3058 0002 8DB0     		sub	sp, sp, #52
 3059              	.LCFI163:
 3060              		.cfi_def_cfa_offset 64
 3061 0004 02AF     		add	r7, sp, #8
 3062              	.LCFI164:
 3063              		.cfi_def_cfa 7, 56
 3064 0006 F860     		str	r0, [r7, #12]
 3065 0008 B960     		str	r1, [r7, #8]
 3066 000a 7A60     		str	r2, [r7, #4]
 3067 000c 3B60     		str	r3, [r7]
1332:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* The standard Berkeley function returns 0 for success. */
1333:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xReturn = -pdFREERTOS_ERRNO_EINVAL;
 3068              		.loc 3 1333 0
 3069 000e 6FF01503 		mvn	r3, #21
 3070 0012 7B62     		str	r3, [r7, #36]
1334:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t lOptionValue;
1335:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket;
1336:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1337:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 3071              		.loc 3 1337 0
 3072 0014 FB68     		ldr	r3, [r7, #12]
 3073 0016 3B62     		str	r3, [r7, #32]
1338:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1339:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* The function prototype is designed to maintain the expected Berkeley
1340:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	sockets standard, but this implementation does not use all the parameters. */
1341:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) lLevel;
1342:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) xOptionLength;
1343:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1344:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	configASSERT( xSocket );
 3074              		.loc 3 1344 0
 3075 0018 FB68     		ldr	r3, [r7, #12]
 3076 001a 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 90


 3077 001c 09D1     		bne	.L191
 3078              	.LBB71:
 3079              	.LBB72:
 3080              		.loc 4 237 0 discriminator 1
 3081              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3082 001e 4FF05003 			mov r3, #80												
 3083 0022 83F31188 		msr basepri, r3											
 3084 0026 BFF36F8F 		isb														
 3085 002a BFF34F8F 		dsb														
 3086              	
 3087              	@ 0 "" 2
 3088              		.thumb
 3089 002e 3B61     		str	r3, [r7, #16]
 3090              	.L192:
 3091              	.LBE72:
 3092              	.LBE71:
 3093              		.loc 3 1344 0 discriminator 1
 3094 0030 FEE7     		b	.L192
 3095              	.L191:
1345:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1346:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	switch( lOptionName )
 3096              		.loc 3 1346 0
 3097 0032 7B68     		ldr	r3, [r7, #4]
 3098 0034 0F2B     		cmp	r3, #15
 3099 0036 00F27481 		bhi	.L193
 3100 003a 01A2     		adr	r2, .L195
 3101 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3102              		.p2align 2
 3103              	.L195:
 3104 0040 81000000 		.word	.L194+1
 3105 0044 8F000000 		.word	.L196+1
 3106 0048 BB000000 		.word	.L197+1
 3107 004c 23030000 		.word	.L193+1
 3108 0050 F1000000 		.word	.L198+1
 3109 0054 F1000000 		.word	.L198+1
 3110 0058 23030000 		.word	.L193+1
 3111 005c 23030000 		.word	.L193+1
 3112 0060 23030000 		.word	.L193+1
 3113 0064 23030000 		.word	.L193+1
 3114 0068 23030000 		.word	.L193+1
 3115 006c F3010000 		.word	.L199+1
 3116 0070 2B020000 		.word	.L200+1
 3117 0074 4D010000 		.word	.L201+1
 3118 0078 63020000 		.word	.L202+1
 3119 007c CF020000 		.word	.L203+1
 3120              		.p2align 1
 3121              	.L194:
1347:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1348:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		case FREERTOS_SO_RCVTIMEO	:
1349:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Receive time out. */
1350:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->xReceiveBlockTime = *( ( TickType_t * ) pvOptionValue );
 3122              		.loc 3 1350 0
 3123 0080 3B68     		ldr	r3, [r7]
 3124 0082 1A68     		ldr	r2, [r3]
 3125 0084 3B6A     		ldr	r3, [r7, #32]
 3126 0086 DA61     		str	r2, [r3, #28]
1351:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
ARM GAS  /tmp/ccrA3BdH.s 			page 91


 3127              		.loc 3 1351 0
 3128 0088 0023     		movs	r3, #0
 3129 008a 7B62     		str	r3, [r7, #36]
1352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 3130              		.loc 3 1352 0
 3131 008c 4DE1     		b	.L204
 3132              	.L196:
1353:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		case FREERTOS_SO_SNDTIMEO	:
1355:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->xSendBlockTime = *( ( TickType_t * ) pvOptionValue );
 3133              		.loc 3 1355 0
 3134 008e 3B68     		ldr	r3, [r7]
 3135 0090 1A68     		ldr	r2, [r3]
 3136 0092 3B6A     		ldr	r3, [r7, #32]
 3137 0094 1A62     		str	r2, [r3, #32]
1356:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->ucProtocol == ( uint8_t ) FREERTOS_IPPROTO_UDP )
 3138              		.loc 3 1356 0
 3139 0096 3B6A     		ldr	r3, [r7, #32]
 3140 0098 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3141 009c 112B     		cmp	r3, #17
 3142 009e 09D1     		bne	.L205
1357:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1358:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* The send time out is capped for the reason stated in the
1359:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				comments where ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS is defined
1360:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				in FreeRTOSIPConfig.h (assuming an official configuration file
1361:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				is being used. */
1362:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->xSendBlockTime > ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS )
 3143              		.loc 3 1362 0
 3144 00a0 3B6A     		ldr	r3, [r7, #32]
 3145 00a2 1B6A     		ldr	r3, [r3, #32]
 3146 00a4 41F28832 		movw	r2, #5000
 3147 00a8 9342     		cmp	r3, r2
 3148 00aa 03D9     		bls	.L205
1363:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1364:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->xSendBlockTime = ipconfigUDP_MAX_SEND_BLOCK_TIME_TICKS;
 3149              		.loc 3 1364 0
 3150 00ac 3B6A     		ldr	r3, [r7, #32]
 3151 00ae 41F28832 		movw	r2, #5000
 3152 00b2 1A62     		str	r2, [r3, #32]
 3153              	.L205:
1365:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1366:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1367:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
1368:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1369:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* For TCP socket, it isn't necessary to limit the blocking time
1370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				because	the FreeRTOS_send() function does not wait for a network
1371:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				buffer to become available. */
1372:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1373:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
 3154              		.loc 3 1373 0
 3155 00b4 0023     		movs	r3, #0
 3156 00b6 7B62     		str	r3, [r7, #36]
1374:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 3157              		.loc 3 1374 0
 3158 00b8 37E1     		b	.L204
 3159              	.L197:
1375:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigUDP_MAX_RX_PACKETS > 0 )
ARM GAS  /tmp/ccrA3BdH.s 			page 92


1376:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_UDP_MAX_RX_PACKETS:
1377:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_UDP )
1378:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1379:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
1380:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1381:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xUDP.uxMaxPackets = *( ( UBaseType_t * ) pvOptionValue );
1382:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
1383:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
1384:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigUDP_MAX_RX_PACKETS */
1385:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1386:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		case FREERTOS_SO_UDPCKSUM_OUT :
1387:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Turn calculating of the UDP checksum on/off for this socket. */
1388:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			lOptionValue = ( BaseType_t ) pvOptionValue;
 3160              		.loc 3 1388 0
 3161 00ba 3B68     		ldr	r3, [r7]
 3162 00bc FB61     		str	r3, [r7, #28]
1389:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1390:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( lOptionValue == 0 )
 3163              		.loc 3 1390 0
 3164 00be FB69     		ldr	r3, [r7, #28]
 3165 00c0 002B     		cmp	r3, #0
 3166 00c2 09D1     		bne	.L207
1391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1392:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->ucSocketOptions &= ( uint8_t ) ~FREERTOS_SO_UDPCKSUM_OUT;
 3167              		.loc 3 1392 0
 3168 00c4 3B6A     		ldr	r3, [r7, #32]
 3169 00c6 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 3170 00ca 23F00203 		bic	r3, r3, #2
 3171 00ce DAB2     		uxtb	r2, r3
 3172 00d0 3B6A     		ldr	r3, [r7, #32]
 3173 00d2 83F82620 		strb	r2, [r3, #38]
 3174 00d6 08E0     		b	.L208
 3175              	.L207:
1393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1394:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
1395:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1396:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->ucSocketOptions |= ( uint8_t ) FREERTOS_SO_UDPCKSUM_OUT;
 3176              		.loc 3 1396 0
 3177 00d8 3B6A     		ldr	r3, [r7, #32]
 3178 00da 93F82630 		ldrb	r3, [r3, #38]	@ zero_extendqisi2
 3179 00de 43F00203 		orr	r3, r3, #2
 3180 00e2 DAB2     		uxtb	r2, r3
 3181 00e4 3B6A     		ldr	r3, [r7, #32]
 3182 00e6 83F82620 		strb	r2, [r3, #38]
 3183              	.L208:
1397:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1398:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
 3184              		.loc 3 1398 0
 3185 00ea 0023     		movs	r3, #0
 3186 00ec 7B62     		str	r3, [r7, #36]
1399:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 3187              		.loc 3 1399 0
 3188 00ee 1CE1     		b	.L204
 3189              	.L198:
 3190              	.LBB73:
1400:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1401:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigUSE_CALLBACKS == 1 )
ARM GAS  /tmp/ccrA3BdH.s 			page 93


1402:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigUSE_TCP == 1 )
1403:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case FREERTOS_SO_TCP_CONN_HANDLER:	/* Set a callback for (dis)connection events */
1404:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case FREERTOS_SO_TCP_RECV_HANDLER:	/* Install a callback for receiving TCP data. Supply pointer
1405:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case FREERTOS_SO_TCP_SENT_HANDLER:	/* Install a callback for sending TCP data. Supply pointer t
1406:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif /* ipconfigUSE_TCP */
1407:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case FREERTOS_SO_UDP_RECV_HANDLER:	/* Install a callback for receiving UDP data. Supply pointer
1408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case FREERTOS_SO_UDP_SENT_HANDLER:	/* Install a callback for sending UDP data. Supply pointer t
1409:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1410:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#if( ipconfigUSE_TCP == 1 )
1411:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
1412:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							UBaseType_t uxProtocol;
1413:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( ( lOptionName == FREERTOS_SO_UDP_RECV_HANDLER ) ||
1414:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								( lOptionName == FREERTOS_SO_UDP_SENT_HANDLER ) )
1415:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
1416:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								uxProtocol = ( UBaseType_t ) FREERTOS_IPPROTO_UDP;
1417:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
1418:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							else
1419:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
1420:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								uxProtocol = ( UBaseType_t ) FREERTOS_IPPROTO_TCP;
1421:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
1422:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1423:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( pxSocket->ucProtocol != ( uint8_t ) uxProtocol )
1424:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
1425:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
1426:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
1427:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
1428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#else
1429:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
1430:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							/* No need to check if the socket has the right
1431:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							protocol, because only UDP socket can be created. */
1432:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
1433:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#endif /* ipconfigUSE_TCP */
1434:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1435:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						switch( lOptionName )
1436:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
1437:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#if ipconfigUSE_TCP == 1
1438:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							case FREERTOS_SO_TCP_CONN_HANDLER:
1439:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								pxSocket->u.xTCP.pxHandleConnected = ((F_TCP_UDP_Handler_t *)pvOptionValue)->pxOnTCPConnect
1440:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								break;
1441:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							case FREERTOS_SO_TCP_RECV_HANDLER:
1442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								pxSocket->u.xTCP.pxHandleReceive = ((F_TCP_UDP_Handler_t *)pvOptionValue)->pxOnTCPReceive;
1443:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								break;
1444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							case FREERTOS_SO_TCP_SENT_HANDLER:
1445:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								pxSocket->u.xTCP.pxHandleSent = ((F_TCP_UDP_Handler_t *)pvOptionValue)->pxOnTCPSent;
1446:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								break;
1447:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#endif /* ipconfigUSE_TCP */
1448:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						case FREERTOS_SO_UDP_RECV_HANDLER:
1449:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xUDP.pxHandleReceive = ((F_TCP_UDP_Handler_t *)pvOptionValue)->pxOnUDPReceive;
1450:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							break;
1451:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						case FREERTOS_SO_UDP_SENT_HANDLER:
1452:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xUDP.pxHandleSent = ((F_TCP_UDP_Handler_t *)pvOptionValue)->pxOnUDPSent;
1453:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							break;
1454:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						default:
1455:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							break;
1456:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
1457:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1458:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 94


1459:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xReturn = 0;
1460:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
1461:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigUSE_CALLBACKS */
1462:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1463:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigUSE_TCP != 0 )
1464:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigSOCKET_HAS_USER_SEMAPHORE != 0 )
1465:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Each socket has a semaphore on which the using task normally
1466:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				sleeps. */
1467:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case FREERTOS_SO_SET_SEMAPHORE:
1468:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1469:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->pxUserSemaphore = *( ( SemaphoreHandle_t * ) pvOptionValue );
1470:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1471:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xReturn = 0;
1472:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
1473:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif /* ipconfigSOCKET_HAS_USER_SEMAPHORE */
1474:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_SNDBUF:	/* Set the size of the send buffer, in units of MSS (TCP only) */
1475:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_RCVBUF:	/* Set the size of the receive buffer, in units of MSS (TCP only) */
1476:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1477:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					uint32_t ulNewValue;
1478:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1479:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 3191              		.loc 3 1479 0
 3192 00f0 3B6A     		ldr	r3, [r7, #32]
 3193 00f2 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3194 00f6 062B     		cmp	r3, #6
 3195 00f8 00D0     		beq	.L209
1480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1481:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						FreeRTOS_debug_printf( ( "Set SO_%sBUF: wrong socket type\n",
1482:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							( lOptionName == FREERTOS_SO_SNDBUF ) ? "SND" : "RCV" ) );
1483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
 3196              		.loc 3 1483 0
 3197 00fa 16E1     		b	.L204
 3198              	.L209:
1484:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1485:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1486:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( ( lOptionName == FREERTOS_SO_SNDBUF ) && ( pxSocket->u.xTCP.txStream != NULL ) ) ||
 3199              		.loc 3 1486 0
 3200 00fc 7B68     		ldr	r3, [r7, #4]
 3201 00fe 042B     		cmp	r3, #4
 3202 0100 04D1     		bne	.L210
 3203              		.loc 3 1486 0 is_stmt 0 discriminator 1
 3204 0102 3B6A     		ldr	r3, [r7, #32]
 3205 0104 9B6F     		ldr	r3, [r3, #120]
 3206 0106 002B     		cmp	r3, #0
 3207 0108 40F00F81 		bne	.L204
 3208              	.L210:
 3209              		.loc 3 1486 0 discriminator 3
 3210 010c 7B68     		ldr	r3, [r7, #4]
 3211 010e 052B     		cmp	r3, #5
 3212 0110 04D1     		bne	.L211
1487:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( ( lOptionName == FREERTOS_SO_RCVBUF ) && ( pxSocket->u.xTCP.rxStream != NULL ) ) )
 3213              		.loc 3 1487 0 is_stmt 1
 3214 0112 3B6A     		ldr	r3, [r7, #32]
 3215 0114 5B6F     		ldr	r3, [r3, #116]
 3216 0116 002B     		cmp	r3, #0
 3217 0118 40F00781 		bne	.L204
 3218              	.L211:
ARM GAS  /tmp/ccrA3BdH.s 			page 95


1488:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1489:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						FreeRTOS_debug_printf( ( "Set SO_%sBUF: buffer already created\n",
1490:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							( lOptionName == FREERTOS_SO_SNDBUF ) ? "SND" : "RCV" ) );
1491:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
1492:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1493:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1494:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					ulNewValue = *( ( uint32_t * ) pvOptionValue );
 3219              		.loc 3 1494 0
 3220 011c 3B68     		ldr	r3, [r7]
 3221 011e 1B68     		ldr	r3, [r3]
 3222 0120 BB61     		str	r3, [r7, #24]
1495:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1496:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( lOptionName == FREERTOS_SO_SNDBUF )
 3223              		.loc 3 1496 0
 3224 0122 7B68     		ldr	r3, [r7, #4]
 3225 0124 042B     		cmp	r3, #4
 3226 0126 0BD1     		bne	.L212
1497:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Round up to nearest MSS size */
1499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						ulNewValue = FreeRTOS_round_up( ulNewValue, ( uint32_t ) pxSocket->u.xTCP.usInitMSS );
 3227              		.loc 3 1499 0
 3228 0128 3B6A     		ldr	r3, [r7, #32]
 3229 012a B3F84C30 		ldrh	r3, [r3, #76]
 3230 012e B869     		ldr	r0, [r7, #24]
 3231 0130 1946     		mov	r1, r3
 3232 0132 FFF7FEFF 		bl	FreeRTOS_round_up
 3233 0136 B861     		str	r0, [r7, #24]
1500:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxTxStreamSize = ulNewValue;
 3234              		.loc 3 1500 0
 3235 0138 3B6A     		ldr	r3, [r7, #32]
 3236 013a BA69     		ldr	r2, [r7, #24]
 3237 013c 1A67     		str	r2, [r3, #112]
 3238 013e 02E0     		b	.L213
 3239              	.L212:
1501:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1502:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
1503:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1504:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxRxStreamSize = ulNewValue;
 3240              		.loc 3 1504 0
 3241 0140 3B6A     		ldr	r3, [r7, #32]
 3242 0142 BA69     		ldr	r2, [r7, #24]
 3243 0144 DA66     		str	r2, [r3, #108]
 3244              	.L213:
 3245              	.LBE73:
1505:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1506:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1507:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 3246              		.loc 3 1507 0
 3247 0146 0023     		movs	r3, #0
 3248 0148 7B62     		str	r3, [r7, #36]
1508:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3249              		.loc 3 1508 0
 3250 014a EEE0     		b	.L204
 3251              	.L201:
 3252              	.LBB74:
1509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_WIN_PROPERTIES:	/* Set all buffer and window properties in one call, parameter 
ARM GAS  /tmp/ccrA3BdH.s 			page 96


1511:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1512:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					WinProperties_t* pxProps;
1513:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1514:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 3253              		.loc 3 1514 0
 3254 014c 3B6A     		ldr	r3, [r7, #32]
 3255 014e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3256 0152 062B     		cmp	r3, #6
 3257 0154 00D0     		beq	.L214
1515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1516:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						FreeRTOS_debug_printf( ( "Set SO_WIN_PROP: wrong socket type\n" ) );
1517:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
 3258              		.loc 3 1517 0
 3259 0156 E8E0     		b	.L204
 3260              	.L214:
1518:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1519:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1520:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( pxSocket->u.xTCP.txStream != NULL ) || ( pxSocket->u.xTCP.rxStream != NULL ) )
 3261              		.loc 3 1520 0
 3262 0158 3B6A     		ldr	r3, [r7, #32]
 3263 015a 9B6F     		ldr	r3, [r3, #120]
 3264 015c 002B     		cmp	r3, #0
 3265 015e 40F0E480 		bne	.L204
 3266              		.loc 3 1520 0 is_stmt 0 discriminator 1
 3267 0162 3B6A     		ldr	r3, [r7, #32]
 3268 0164 5B6F     		ldr	r3, [r3, #116]
 3269 0166 002B     		cmp	r3, #0
 3270 0168 40F0DF80 		bne	.L204
1521:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1522:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						FreeRTOS_debug_printf( ( "Set SO_WIN_PROP: buffer already created\n" ) );
1523:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
1524:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1525:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1526:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxProps = ( ( WinProperties_t * ) pvOptionValue );
 3271              		.loc 3 1526 0 is_stmt 1
 3272 016c 3B68     		ldr	r3, [r7]
 3273 016e 7B61     		str	r3, [r7, #20]
1527:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					FreeRTOS_setsockopt( xSocket, 0, FREERTOS_SO_SNDBUF, &( pxProps->lTxBufSize ), sizeof( pxProps
 3274              		.loc 3 1527 0
 3275 0170 7C69     		ldr	r4, [r7, #20]
 3276 0172 0423     		movs	r3, #4
 3277 0174 0093     		str	r3, [sp]
 3278 0176 F868     		ldr	r0, [r7, #12]
 3279 0178 0021     		movs	r1, #0
 3280 017a 0422     		movs	r2, #4
 3281 017c 2346     		mov	r3, r4
 3282 017e FFF7FEFF 		bl	FreeRTOS_setsockopt
1528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					FreeRTOS_setsockopt( xSocket, 0, FREERTOS_SO_RCVBUF, &( pxProps->lRxBufSize ), sizeof( pxProps
 3283              		.loc 3 1528 0
 3284 0182 7B69     		ldr	r3, [r7, #20]
 3285 0184 03F10804 		add	r4, r3, #8
 3286 0188 0423     		movs	r3, #4
 3287 018a 0093     		str	r3, [sp]
 3288 018c F868     		ldr	r0, [r7, #12]
 3289 018e 0021     		movs	r1, #0
 3290 0190 0522     		movs	r2, #5
 3291 0192 2346     		mov	r3, r4
ARM GAS  /tmp/ccrA3BdH.s 			page 97


 3292 0194 FFF7FEFF 		bl	FreeRTOS_setsockopt
1529:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#if( ipconfigUSE_TCP_WIN == 1 )
1530:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1531:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxRxWinSize = ( uint32_t )pxProps->lRxWinSize;	/* Fixed value: size of the T
 3293              		.loc 3 1531 0
 3294 0198 7B69     		ldr	r3, [r7, #20]
 3295 019a DB68     		ldr	r3, [r3, #12]
 3296 019c 1A46     		mov	r2, r3
 3297 019e 3B6A     		ldr	r3, [r7, #32]
 3298 01a0 C3F8D420 		str	r2, [r3, #212]
1532:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxTxWinSize = ( uint32_t )pxProps->lTxWinSize;	/* Fixed value: size of the T
 3299              		.loc 3 1532 0
 3300 01a4 7B69     		ldr	r3, [r7, #20]
 3301 01a6 5B68     		ldr	r3, [r3, #4]
 3302 01a8 1A46     		mov	r2, r3
 3303 01aa 3B6A     		ldr	r3, [r7, #32]
 3304 01ac C3F8D820 		str	r2, [r3, #216]
1533:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1534:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#else
1535:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1536:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxRxWinSize = 1u;
1537:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.uxTxWinSize = 1u;
1538:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1539:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#endif
1540:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1541:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* In case the socket has already initialised its tcpWin,
1542:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					adapt the window size parameters */
1543:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->u.xTCP.xTCPWindow.u.bits.bHasInit != pdFALSE_UNSIGNED )
 3305              		.loc 3 1543 0
 3306 01b0 3B6A     		ldr	r3, [r7, #32]
 3307 01b2 93F8DC30 		ldrb	r3, [r3, #220]	@ zero_extendqisi2
 3308 01b6 03F00103 		and	r3, r3, #1
 3309 01ba DBB2     		uxtb	r3, r3
 3310 01bc 002B     		cmp	r3, #0
 3311 01be 15D0     		beq	.L215
1544:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1545:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.xTCPWindow.xSize.ulRxWindowLength = pxSocket->u.xTCP.uxRxWinSize * pxSocket-
 3312              		.loc 3 1545 0
 3313 01c0 3B6A     		ldr	r3, [r7, #32]
 3314 01c2 D3F8D430 		ldr	r3, [r3, #212]
 3315 01c6 3A6A     		ldr	r2, [r7, #32]
 3316 01c8 B2F84C20 		ldrh	r2, [r2, #76]
 3317 01cc 02FB03F2 		mul	r2, r2, r3
 3318 01d0 3B6A     		ldr	r3, [r7, #32]
 3319 01d2 C3F8E020 		str	r2, [r3, #224]
1546:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.xTCPWindow.xSize.ulRxWindowLength = pxSocket->u.xTCP.uxTxWinSize * pxSocket-
 3320              		.loc 3 1546 0
 3321 01d6 3B6A     		ldr	r3, [r7, #32]
 3322 01d8 D3F8D830 		ldr	r3, [r3, #216]
 3323 01dc 3A6A     		ldr	r2, [r7, #32]
 3324 01de B2F84C20 		ldrh	r2, [r2, #76]
 3325 01e2 02FB03F2 		mul	r2, r2, r3
 3326 01e6 3B6A     		ldr	r3, [r7, #32]
 3327 01e8 C3F8E020 		str	r2, [r3, #224]
 3328              	.L215:
 3329              	.LBE74:
1547:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
ARM GAS  /tmp/ccrA3BdH.s 			page 98


1548:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1549:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1550:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 3330              		.loc 3 1550 0
 3331 01ec 0023     		movs	r3, #0
 3332 01ee 7B62     		str	r3, [r7, #36]
1551:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3333              		.loc 3 1551 0
 3334 01f0 9BE0     		b	.L204
 3335              	.L199:
1552:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1553:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_REUSE_LISTEN_SOCKET:	/* If true, the server-socket will turn into a connected s
1554:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1555:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 3336              		.loc 3 1555 0
 3337 01f2 3B6A     		ldr	r3, [r7, #32]
 3338 01f4 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3339 01f8 062B     		cmp	r3, #6
 3340 01fa 00D0     		beq	.L216
1556:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1557:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
 3341              		.loc 3 1557 0
 3342 01fc 95E0     		b	.L204
 3343              	.L216:
1558:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1559:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( *( ( BaseType_t * ) pvOptionValue ) != 0 )
 3344              		.loc 3 1559 0
 3345 01fe 3B68     		ldr	r3, [r7]
 3346 0200 1B68     		ldr	r3, [r3]
 3347 0202 002B     		cmp	r3, #0
 3348 0204 07D0     		beq	.L217
1560:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1561:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bReuseSocket = pdTRUE_UNSIGNED;
 3349              		.loc 3 1561 0
 3350 0206 3A6A     		ldr	r2, [r7, #32]
 3351 0208 92F84030 		ldrb	r3, [r2, #64]
 3352 020c 43F00803 		orr	r3, r3, #8
 3353 0210 82F84030 		strb	r3, [r2, #64]
 3354 0214 06E0     		b	.L218
 3355              	.L217:
1562:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1563:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
1564:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1565:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bReuseSocket = pdFALSE_UNSIGNED;
 3356              		.loc 3 1565 0
 3357 0216 3A6A     		ldr	r2, [r7, #32]
 3358 0218 92F84030 		ldrb	r3, [r2, #64]
 3359 021c 6FF3C303 		bfc	r3, #3, #1
 3360 0220 82F84030 		strb	r3, [r2, #64]
 3361              	.L218:
1566:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1567:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1568:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 3362              		.loc 3 1568 0
 3363 0224 0023     		movs	r3, #0
 3364 0226 7B62     		str	r3, [r7, #36]
1569:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
ARM GAS  /tmp/ccrA3BdH.s 			page 99


 3365              		.loc 3 1569 0
 3366 0228 7FE0     		b	.L204
 3367              	.L200:
1570:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1571:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_CLOSE_AFTER_SEND:		/* As soon as the last byte has been transmitted, finalise t
1572:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1573:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 3368              		.loc 3 1573 0
 3369 022a 3B6A     		ldr	r3, [r7, #32]
 3370 022c 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3371 0230 062B     		cmp	r3, #6
 3372 0232 00D0     		beq	.L219
1574:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1575:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
 3373              		.loc 3 1575 0
 3374 0234 79E0     		b	.L204
 3375              	.L219:
1576:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1577:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1578:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( *( ( BaseType_t * ) pvOptionValue ) != 0 )
 3376              		.loc 3 1578 0
 3377 0236 3B68     		ldr	r3, [r7]
 3378 0238 1B68     		ldr	r3, [r3]
 3379 023a 002B     		cmp	r3, #0
 3380 023c 07D0     		beq	.L220
1579:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1580:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bCloseAfterSend = pdTRUE_UNSIGNED;
 3381              		.loc 3 1580 0
 3382 023e 3A6A     		ldr	r2, [r7, #32]
 3383 0240 92F84030 		ldrb	r3, [r2, #64]
 3384 0244 43F01003 		orr	r3, r3, #16
 3385 0248 82F84030 		strb	r3, [r2, #64]
 3386 024c 06E0     		b	.L221
 3387              	.L220:
1581:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1582:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
1583:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1584:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bCloseAfterSend = pdFALSE_UNSIGNED;
 3388              		.loc 3 1584 0
 3389 024e 3A6A     		ldr	r2, [r7, #32]
 3390 0250 92F84030 		ldrb	r3, [r2, #64]
 3391 0254 6FF30413 		bfc	r3, #4, #1
 3392 0258 82F84030 		strb	r3, [r2, #64]
 3393              	.L221:
1585:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1586:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1587:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 3394              		.loc 3 1587 0
 3395 025c 0023     		movs	r3, #0
 3396 025e 7B62     		str	r3, [r7, #36]
1588:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3397              		.loc 3 1588 0
 3398 0260 63E0     		b	.L204
 3399              	.L202:
1589:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1590:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_SET_FULL_SIZE:		/* Refuse to send packets smaller than MSS  */
1591:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
ARM GAS  /tmp/ccrA3BdH.s 			page 100


1592:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 3400              		.loc 3 1592 0
 3401 0262 3B6A     		ldr	r3, [r7, #32]
 3402 0264 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3403 0268 062B     		cmp	r3, #6
 3404 026a 00D0     		beq	.L222
1593:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1594:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
 3405              		.loc 3 1594 0
 3406 026c 5DE0     		b	.L204
 3407              	.L222:
1595:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1596:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1597:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( *( ( BaseType_t * ) pvOptionValue ) != 0 )
 3408              		.loc 3 1597 0
 3409 026e 3B68     		ldr	r3, [r7]
 3410 0270 1B68     		ldr	r3, [r3]
 3411 0272 002B     		cmp	r3, #0
 3412 0274 07D0     		beq	.L223
1598:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1599:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.xTCPWindow.u.bits.bSendFullSize = pdTRUE_UNSIGNED;
 3413              		.loc 3 1599 0
 3414 0276 3A6A     		ldr	r2, [r7, #32]
 3415 0278 92F8DC30 		ldrb	r3, [r2, #220]
 3416 027c 43F00203 		orr	r3, r3, #2
 3417 0280 82F8DC30 		strb	r3, [r2, #220]
 3418 0284 06E0     		b	.L224
 3419              	.L223:
1600:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1601:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
1602:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1603:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.xTCPWindow.u.bits.bSendFullSize = pdFALSE_UNSIGNED;
 3420              		.loc 3 1603 0
 3421 0286 3A6A     		ldr	r2, [r7, #32]
 3422 0288 92F8DC30 		ldrb	r3, [r2, #220]
 3423 028c 6FF34103 		bfc	r3, #1, #1
 3424 0290 82F8DC30 		strb	r3, [r2, #220]
 3425              	.L224:
1604:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1605:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( pxSocket->u.xTCP.xTCPWindow.u.bits.bSendFullSize == pdFALSE_UNSIGNED ) &&
 3426              		.loc 3 1606 0
 3427 0294 3B6A     		ldr	r3, [r7, #32]
 3428 0296 93F8DC30 		ldrb	r3, [r3, #220]	@ zero_extendqisi2
 3429 029a 03F00203 		and	r3, r3, #2
 3430 029e DBB2     		uxtb	r3, r3
 3431 02a0 002B     		cmp	r3, #0
 3432 02a2 11D1     		bne	.L225
1607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED ) &&
 3433              		.loc 3 1607 0 discriminator 1
 3434 02a4 3B6A     		ldr	r3, [r7, #32]
 3435 02a6 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
1606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED ) &&
 3436              		.loc 3 1606 0 discriminator 1
 3437 02aa 042B     		cmp	r3, #4
 3438 02ac 0CD9     		bls	.L225
1608:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( FreeRTOS_outstanding( pxSocket ) != 0 ) )
ARM GAS  /tmp/ccrA3BdH.s 			page 101


 3439              		.loc 3 1608 0
 3440 02ae 386A     		ldr	r0, [r7, #32]
 3441 02b0 FFF7FEFF 		bl	FreeRTOS_tx_size
 3442 02b4 0346     		mov	r3, r0
1607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED ) &&
 3443              		.loc 3 1607 0
 3444 02b6 002B     		cmp	r3, #0
 3445 02b8 06D0     		beq	.L225
1609:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1610:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.usTimeout = 1u; /* to set/clear bSendFullSize */
 3446              		.loc 3 1610 0
 3447 02ba 3B6A     		ldr	r3, [r7, #32]
 3448 02bc 0122     		movs	r2, #1
 3449 02be A3F84820 		strh	r2, [r3, #72]	@ movhi
1611:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xSendEventToIPTask( eTCPTimerEvent );
 3450              		.loc 3 1611 0
 3451 02c2 0520     		movs	r0, #5
 3452 02c4 FFF7FEFF 		bl	xSendEventToIPTask
 3453              	.L225:
1612:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1613:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1614:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 3454              		.loc 3 1614 0
 3455 02c8 0023     		movs	r3, #0
 3456 02ca 7B62     		str	r3, [r7, #36]
1615:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3457              		.loc 3 1615 0
 3458 02cc 2DE0     		b	.L204
 3459              	.L203:
1616:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1617:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case FREERTOS_SO_STOP_RX:		/* Refuse to receive more packts */
1618:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1619:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 3460              		.loc 3 1619 0
 3461 02ce 3B6A     		ldr	r3, [r7, #32]
 3462 02d0 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 3463 02d4 062B     		cmp	r3, #6
 3464 02d6 00D0     		beq	.L226
1620:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1621:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;	/* will return -pdFREERTOS_ERRNO_EINVAL */
 3465              		.loc 3 1621 0
 3466 02d8 27E0     		b	.L204
 3467              	.L226:
1622:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1623:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1624:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( *( ( BaseType_t * ) pvOptionValue ) != 0 )
 3468              		.loc 3 1624 0
 3469 02da 3B68     		ldr	r3, [r7]
 3470 02dc 1B68     		ldr	r3, [r3]
 3471 02de 002B     		cmp	r3, #0
 3472 02e0 07D0     		beq	.L227
1625:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1626:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bRxStopped = pdTRUE_UNSIGNED;
 3473              		.loc 3 1626 0
 3474 02e2 3A6A     		ldr	r2, [r7, #32]
 3475 02e4 92F84230 		ldrb	r3, [r2, #66]
 3476 02e8 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/ccrA3BdH.s 			page 102


 3477 02ec 82F84230 		strb	r3, [r2, #66]
 3478 02f0 06E0     		b	.L228
 3479              	.L227:
1627:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1628:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
1629:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1630:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bRxStopped = pdFALSE_UNSIGNED;
 3480              		.loc 3 1630 0
 3481 02f2 3A6A     		ldr	r2, [r7, #32]
 3482 02f4 92F84230 		ldrb	r3, [r2, #66]
 3483 02f8 6FF38203 		bfc	r3, #2, #1
 3484 02fc 82F84230 		strb	r3, [r2, #66]
 3485              	.L228:
1631:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1632:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1633:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.bits.bWinChange = pdTRUE_UNSIGNED;
 3486              		.loc 3 1633 0
 3487 0300 3A6A     		ldr	r2, [r7, #32]
 3488 0302 92F84130 		ldrb	r3, [r2, #65]
 3489 0306 43F00103 		orr	r3, r3, #1
 3490 030a 82F84130 		strb	r3, [r2, #65]
1634:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.usTimeout = 1u; /* to set/clear bRxStopped */
 3491              		.loc 3 1634 0
 3492 030e 3B6A     		ldr	r3, [r7, #32]
 3493 0310 0122     		movs	r2, #1
 3494 0312 A3F84820 		strh	r2, [r3, #72]	@ movhi
1635:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xSendEventToIPTask( eTCPTimerEvent );
 3495              		.loc 3 1635 0
 3496 0316 0520     		movs	r0, #5
 3497 0318 FFF7FEFF 		bl	xSendEventToIPTask
1636:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1637:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 3498              		.loc 3 1637 0
 3499 031c 0023     		movs	r3, #0
 3500 031e 7B62     		str	r3, [r7, #36]
1638:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3501              		.loc 3 1638 0
 3502 0320 03E0     		b	.L204
 3503              	.L193:
1639:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1640:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif  /* ipconfigUSE_TCP == 1 */
1641:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1642:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		default :
1643:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* No other options are handled. */
1644:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_ENOPROTOOPT;
 3504              		.loc 3 1644 0
 3505 0322 6FF06C03 		mvn	r3, #108
 3506 0326 7B62     		str	r3, [r7, #36]
1645:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 3507              		.loc 3 1645 0
 3508 0328 00BF     		nop
 3509              	.L204:
1646:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1647:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return xReturn;
 3510              		.loc 3 1648 0
 3511 032a 7B6A     		ldr	r3, [r7, #36]
ARM GAS  /tmp/ccrA3BdH.s 			page 103


1649:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** } /* Tested */
 3512              		.loc 3 1649 0
 3513 032c 1846     		mov	r0, r3
 3514 032e 2C37     		adds	r7, r7, #44
 3515              	.LCFI165:
 3516              		.cfi_def_cfa_offset 12
 3517 0330 BD46     		mov	sp, r7
 3518              	.LCFI166:
 3519              		.cfi_def_cfa_register 13
 3520              		@ sp needed
 3521 0332 90BD     		pop	{r4, r7, pc}
 3522              		.cfi_endproc
 3523              	.LFE47:
 3525              		.section	.text.prvGetPrivatePortNumber,"ax",%progbits
 3526              		.align	2
 3527              		.thumb
 3528              		.thumb_func
 3530              	prvGetPrivatePortNumber:
 3531              	.LFB48:
1650:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1651:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1652:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1653:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* Get a free private ('anonymous') port number */
1654:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static uint16_t prvGetPrivatePortNumber( BaseType_t xProtocol )
1655:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 3532              		.loc 3 1655 0
 3533              		.cfi_startproc
 3534              		@ args = 0, pretend = 0, frame = 24
 3535              		@ frame_needed = 1, uses_anonymous_args = 0
 3536 0000 80B5     		push	{r7, lr}
 3537              	.LCFI167:
 3538              		.cfi_def_cfa_offset 8
 3539              		.cfi_offset 7, -8
 3540              		.cfi_offset 14, -4
 3541 0002 86B0     		sub	sp, sp, #24
 3542              	.LCFI168:
 3543              		.cfi_def_cfa_offset 32
 3544 0004 00AF     		add	r7, sp, #0
 3545              	.LCFI169:
 3546              		.cfi_def_cfa_register 7
 3547 0006 7860     		str	r0, [r7, #4]
1656:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** uint16_t usResult;
1657:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** BaseType_t xIndex;
1658:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** const List_t *pxList;
1659:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1660:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if ipconfigUSE_TCP == 1
1661:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( xProtocol == ( BaseType_t ) FREERTOS_IPPROTO_TCP )
 3548              		.loc 3 1661 0
 3549 0008 7B68     		ldr	r3, [r7, #4]
 3550 000a 062B     		cmp	r3, #6
 3551 000c 04D1     		bne	.L231
1662:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1663:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xIndex = socketNEXT_TCP_PORT_NUMBER_INDEX;
 3552              		.loc 3 1663 0
 3553 000e 0123     		movs	r3, #1
 3554 0010 7B61     		str	r3, [r7, #20]
1664:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxList = &xBoundTCPSocketsList;
ARM GAS  /tmp/ccrA3BdH.s 			page 104


 3555              		.loc 3 1664 0
 3556 0012 1F4B     		ldr	r3, .L238
 3557 0014 3B61     		str	r3, [r7, #16]
 3558 0016 03E0     		b	.L232
 3559              	.L231:
1665:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1666:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	else
1667:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif
1668:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1669:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xIndex = socketNEXT_UDP_PORT_NUMBER_INDEX;
 3560              		.loc 3 1669 0
 3561 0018 0023     		movs	r3, #0
 3562 001a 7B61     		str	r3, [r7, #20]
1670:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxList = &xBoundUDPSocketsList;
 3563              		.loc 3 1670 0
 3564 001c 1D4B     		ldr	r3, .L238+4
 3565 001e 3B61     		str	r3, [r7, #16]
 3566              	.L232:
1671:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1672:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1673:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Avoid compiler warnings if ipconfigUSE_TCP is not defined. */
1674:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	( void ) xProtocol;
1675:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1676:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Assign the next port in the range.  Has it overflowed? */
1677:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*_RB_ This needs to be randomised rather than sequential. */
1678:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* _HT_ Agreed, although many OS's use sequential port numbers, see
1679:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	https://www.cymru.com/jtk/misc/ephemeralports.html  */
1680:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	for ( ;; )
1681:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1682:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		++( usNextPortToUse[ xIndex ] );
 3567              		.loc 3 1682 0
 3568 0020 1D4A     		ldr	r2, .L238+8
 3569 0022 7B69     		ldr	r3, [r7, #20]
 3570 0024 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3571 0028 0133     		adds	r3, r3, #1
 3572 002a 99B2     		uxth	r1, r3
 3573 002c 1A4A     		ldr	r2, .L238+8
 3574 002e 7B69     		ldr	r3, [r7, #20]
 3575 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1683:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1684:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( usNextPortToUse[ xIndex ] >= socketAUTO_PORT_ALLOCATION_MAX_NUMBER )
 3576              		.loc 3 1684 0
 3577 0034 184A     		ldr	r2, .L238+8
 3578 0036 7B69     		ldr	r3, [r7, #20]
 3579 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3580 003c B3F57F4F 		cmp	r3, #65280
 3581 0040 05D3     		bcc	.L233
1685:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1686:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Don't go right back to the start of the dynamic/private port
1687:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			range numbers as any persistent sockets are likely to have been
1688:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			create first so the early port numbers may still be in use. */
1689:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			usNextPortToUse[ xIndex ] = socketAUTO_PORT_ALLOCATION_RESET_NUMBER;
 3582              		.loc 3 1689 0
 3583 0042 154A     		ldr	r2, .L238+8
 3584 0044 7B69     		ldr	r3, [r7, #20]
 3585 0046 4FF44141 		mov	r1, #49408
 3586 004a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
ARM GAS  /tmp/ccrA3BdH.s 			page 105


 3587              	.L233:
1690:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1691:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1692:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		usResult = FreeRTOS_htons( usNextPortToUse[ xIndex ] );
 3588              		.loc 3 1692 0
 3589 004e 124A     		ldr	r2, .L238+8
 3590 0050 7B69     		ldr	r3, [r7, #20]
 3591 0052 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3592 0056 1B02     		lsls	r3, r3, #8
 3593 0058 99B2     		uxth	r1, r3
 3594 005a 0F4A     		ldr	r2, .L238+8
 3595 005c 7B69     		ldr	r3, [r7, #20]
 3596 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3597 0062 1B0A     		lsrs	r3, r3, #8
 3598 0064 9BB2     		uxth	r3, r3
 3599 0066 9BB2     		uxth	r3, r3
 3600 0068 0A46     		mov	r2, r1	@ movhi
 3601 006a 1343     		orrs	r3, r3, r2
 3602 006c 9BB2     		uxth	r3, r3
 3603 006e FB81     		strh	r3, [r7, #14]	@ movhi
1693:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1694:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxListFindListItemWithValue( pxList, ( TickType_t ) usResult ) == NULL )
 3604              		.loc 3 1694 0
 3605 0070 FB89     		ldrh	r3, [r7, #14]
 3606 0072 3869     		ldr	r0, [r7, #16]
 3607 0074 1946     		mov	r1, r3
 3608 0076 FFF7FEFF 		bl	pxListFindListItemWithValue
 3609 007a 0346     		mov	r3, r0
 3610 007c 002B     		cmp	r3, #0
 3611 007e 00D1     		bne	.L234
1695:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1696:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			break;
 3612              		.loc 3 1696 0
 3613 0080 00E0     		b	.L237
 3614              	.L234:
1697:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1698:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 3615              		.loc 3 1698 0
 3616 0082 CDE7     		b	.L232
 3617              	.L237:
1699:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return usResult;
 3618              		.loc 3 1699 0
 3619 0084 FB89     		ldrh	r3, [r7, #14]
1700:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** } /* Tested */
 3620              		.loc 3 1700 0
 3621 0086 1846     		mov	r0, r3
 3622 0088 1837     		adds	r7, r7, #24
 3623              	.LCFI170:
 3624              		.cfi_def_cfa_offset 8
 3625 008a BD46     		mov	sp, r7
 3626              	.LCFI171:
 3627              		.cfi_def_cfa_register 13
 3628              		@ sp needed
 3629 008c 80BD     		pop	{r7, pc}
 3630              	.L239:
 3631 008e 00BF     		.align	2
 3632              	.L238:
ARM GAS  /tmp/ccrA3BdH.s 			page 106


 3633 0090 00000000 		.word	xBoundTCPSocketsList
 3634 0094 00000000 		.word	xBoundUDPSocketsList
 3635 0098 00000000 		.word	usNextPortToUse
 3636              		.cfi_endproc
 3637              	.LFE48:
 3639              		.section	.text.pxListFindListItemWithValue,"ax",%progbits
 3640              		.align	2
 3641              		.thumb
 3642              		.thumb_func
 3644              	pxListFindListItemWithValue:
 3645              	.LFB49:
1701:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1702:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1703:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* pxListFindListItemWithValue: find a list item in a bound socket list
1704:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 'xWantedItemValue' refers to a port number */
1705:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** static const ListItem_t * pxListFindListItemWithValue( const List_t *pxList, TickType_t xWantedItem
1706:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 3646              		.loc 3 1706 0
 3647              		.cfi_startproc
 3648              		@ args = 0, pretend = 0, frame = 24
 3649              		@ frame_needed = 1, uses_anonymous_args = 0
 3650 0000 80B5     		push	{r7, lr}
 3651              	.LCFI172:
 3652              		.cfi_def_cfa_offset 8
 3653              		.cfi_offset 7, -8
 3654              		.cfi_offset 14, -4
 3655 0002 86B0     		sub	sp, sp, #24
 3656              	.LCFI173:
 3657              		.cfi_def_cfa_offset 32
 3658 0004 00AF     		add	r7, sp, #0
 3659              	.LCFI174:
 3660              		.cfi_def_cfa_register 7
 3661 0006 7860     		str	r0, [r7, #4]
 3662 0008 3960     		str	r1, [r7]
1707:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** const ListItem_t * pxResult = NULL;
 3663              		.loc 3 1707 0
 3664 000a 0023     		movs	r3, #0
 3665 000c 7B61     		str	r3, [r7, #20]
1708:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1709:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( ( xIPIsNetworkTaskReady() != pdFALSE ) && ( pxList != NULL ) )
 3666              		.loc 3 1709 0
 3667 000e FFF7FEFF 		bl	xIPIsNetworkTaskReady
 3668 0012 0346     		mov	r3, r0
 3669 0014 002B     		cmp	r3, #0
 3670 0016 18D0     		beq	.L241
 3671              		.loc 3 1709 0 is_stmt 0 discriminator 1
 3672 0018 7B68     		ldr	r3, [r7, #4]
 3673 001a 002B     		cmp	r3, #0
 3674 001c 15D0     		beq	.L241
 3675              	.LBB75:
1710:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1711:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		const ListItem_t *pxIterator;
1712:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		const MiniListItem_t *pxEnd = ( const MiniListItem_t* )listGET_END_MARKER( pxList );
 3676              		.loc 3 1712 0 is_stmt 1
 3677 001e 7B68     		ldr	r3, [r7, #4]
 3678 0020 0833     		adds	r3, r3, #8
 3679 0022 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccrA3BdH.s 			page 107


1713:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		for( pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxEnd );
 3680              		.loc 3 1713 0
 3681 0024 FB68     		ldr	r3, [r7, #12]
 3682 0026 5B68     		ldr	r3, [r3, #4]
 3683 0028 3B61     		str	r3, [r7, #16]
 3684 002a 0AE0     		b	.L242
 3685              	.L244:
1714:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
1715:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator  = ( const ListItem_t * ) listGET_NEXT( pxIterator ) )
1716:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1717:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( listGET_LIST_ITEM_VALUE( pxIterator ) == xWantedItemValue )
 3686              		.loc 3 1717 0
 3687 002c 3B69     		ldr	r3, [r7, #16]
 3688 002e 1A68     		ldr	r2, [r3]
 3689 0030 3B68     		ldr	r3, [r7]
 3690 0032 9A42     		cmp	r2, r3
 3691 0034 02D1     		bne	.L243
1718:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1719:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxResult = pxIterator;
 3692              		.loc 3 1719 0
 3693 0036 3B69     		ldr	r3, [r7, #16]
 3694 0038 7B61     		str	r3, [r7, #20]
1720:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3695              		.loc 3 1720 0
 3696 003a 06E0     		b	.L241
 3697              	.L243:
1715:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 3698              		.loc 3 1715 0
 3699 003c 3B69     		ldr	r3, [r7, #16]
 3700 003e 5B68     		ldr	r3, [r3, #4]
 3701 0040 3B61     		str	r3, [r7, #16]
 3702              	.L242:
1713:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator != ( const ListItem_t * ) pxEnd;
 3703              		.loc 3 1713 0 discriminator 1
 3704 0042 3A69     		ldr	r2, [r7, #16]
 3705 0044 FB68     		ldr	r3, [r7, #12]
 3706 0046 9A42     		cmp	r2, r3
 3707 0048 F0D1     		bne	.L244
 3708              	.L241:
 3709              	.LBE75:
1721:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1722:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1723:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1724:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1725:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return pxResult;
 3710              		.loc 3 1725 0
 3711 004a 7B69     		ldr	r3, [r7, #20]
1726:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** } /* Tested */
 3712              		.loc 3 1726 0
 3713 004c 1846     		mov	r0, r3
 3714 004e 1837     		adds	r7, r7, #24
 3715              	.LCFI175:
 3716              		.cfi_def_cfa_offset 8
 3717 0050 BD46     		mov	sp, r7
 3718              	.LCFI176:
 3719              		.cfi_def_cfa_register 13
 3720              		@ sp needed
ARM GAS  /tmp/ccrA3BdH.s 			page 108


 3721 0052 80BD     		pop	{r7, pc}
 3722              		.cfi_endproc
 3723              	.LFE49:
 3725              		.section	.text.pxUDPSocketLookup,"ax",%progbits
 3726              		.align	2
 3727              		.global	pxUDPSocketLookup
 3728              		.thumb
 3729              		.thumb_func
 3731              	pxUDPSocketLookup:
 3732              	.LFB50:
1727:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1728:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1729:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1730:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxUDPSocketLookup( UBaseType_t uxLocalPort )
1731:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 3733              		.loc 3 1731 0
 3734              		.cfi_startproc
 3735              		@ args = 0, pretend = 0, frame = 24
 3736              		@ frame_needed = 1, uses_anonymous_args = 0
 3737 0000 80B5     		push	{r7, lr}
 3738              	.LCFI177:
 3739              		.cfi_def_cfa_offset 8
 3740              		.cfi_offset 7, -8
 3741              		.cfi_offset 14, -4
 3742 0002 86B0     		sub	sp, sp, #24
 3743              	.LCFI178:
 3744              		.cfi_def_cfa_offset 32
 3745 0004 00AF     		add	r7, sp, #0
 3746              	.LCFI179:
 3747              		.cfi_def_cfa_register 7
 3748 0006 7860     		str	r0, [r7, #4]
1732:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** const ListItem_t *pxListItem;
1733:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket = NULL;
 3749              		.loc 3 1733 0
 3750 0008 0023     		movs	r3, #0
 3751 000a 7B61     		str	r3, [r7, #20]
1734:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1735:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Looking up a socket is quite simple, find a match with the local port.
1736:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1737:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	See if there is a list item associated with the port number on the
1738:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	list of bound sockets. */
1739:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	pxListItem = pxListFindListItemWithValue( &xBoundUDPSocketsList, ( TickType_t ) uxLocalPort );
 3752              		.loc 3 1739 0
 3753 000c 0E48     		ldr	r0, .L250
 3754 000e 7968     		ldr	r1, [r7, #4]
 3755 0010 FFF7FEFF 		bl	pxListFindListItemWithValue
 3756 0014 3861     		str	r0, [r7, #16]
1740:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1741:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( pxListItem != NULL )
 3757              		.loc 3 1741 0
 3758 0016 3B69     		ldr	r3, [r7, #16]
 3759 0018 002B     		cmp	r3, #0
 3760 001a 0FD0     		beq	.L247
1742:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1743:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* The owner of the list item is the socket itself. */
1744:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocket = ( FreeRTOS_Socket_t * ) listGET_LIST_ITEM_OWNER( pxListItem );
 3761              		.loc 3 1744 0
ARM GAS  /tmp/ccrA3BdH.s 			page 109


 3762 001c 3B69     		ldr	r3, [r7, #16]
 3763 001e DB68     		ldr	r3, [r3, #12]
 3764 0020 7B61     		str	r3, [r7, #20]
1745:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket != NULL );
 3765              		.loc 3 1745 0
 3766 0022 7B69     		ldr	r3, [r7, #20]
 3767 0024 002B     		cmp	r3, #0
 3768 0026 09D1     		bne	.L247
 3769              	.LBB76:
 3770              	.LBB77:
 3771              		.loc 4 237 0 discriminator 1
 3772              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3773 0028 4FF05003 			mov r3, #80												
 3774 002c 83F31188 		msr basepri, r3											
 3775 0030 BFF36F8F 		isb														
 3776 0034 BFF34F8F 		dsb														
 3777              	
 3778              	@ 0 "" 2
 3779              		.thumb
 3780 0038 FB60     		str	r3, [r7, #12]
 3781              	.L248:
 3782              	.LBE77:
 3783              	.LBE76:
 3784              		.loc 3 1745 0 discriminator 1
 3785 003a FEE7     		b	.L248
 3786              	.L247:
1746:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1747:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return pxSocket;
 3787              		.loc 3 1747 0
 3788 003c 7B69     		ldr	r3, [r7, #20]
1748:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 3789              		.loc 3 1748 0
 3790 003e 1846     		mov	r0, r3
 3791 0040 1837     		adds	r7, r7, #24
 3792              	.LCFI180:
 3793              		.cfi_def_cfa_offset 8
 3794 0042 BD46     		mov	sp, r7
 3795              	.LCFI181:
 3796              		.cfi_def_cfa_register 13
 3797              		@ sp needed
 3798 0044 80BD     		pop	{r7, pc}
 3799              	.L251:
 3800 0046 00BF     		.align	2
 3801              	.L250:
 3802 0048 00000000 		.word	xBoundUDPSocketsList
 3803              		.cfi_endproc
 3804              	.LFE50:
 3806              		.section	.text.FreeRTOS_inet_addr,"ax",%progbits
 3807              		.align	2
 3808              		.global	FreeRTOS_inet_addr
 3809              		.thumb
 3810              		.thumb_func
 3812              	FreeRTOS_inet_addr:
 3813              	.LFB51:
1749:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1750:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1751:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 110


1752:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if ipconfigINCLUDE_FULL_INET_ADDR == 1
1753:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1754:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	uint32_t FreeRTOS_inet_addr( const char * pcIPAddress )
1755:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 3814              		.loc 3 1755 0
 3815              		.cfi_startproc
 3816              		@ args = 0, pretend = 0, frame = 40
 3817              		@ frame_needed = 1, uses_anonymous_args = 0
 3818              		@ link register save eliminated.
 3819 0000 80B4     		push	{r7}
 3820              	.LCFI182:
 3821              		.cfi_def_cfa_offset 4
 3822              		.cfi_offset 7, -4
 3823 0002 8BB0     		sub	sp, sp, #44
 3824              	.LCFI183:
 3825              		.cfi_def_cfa_offset 48
 3826 0004 00AF     		add	r7, sp, #0
 3827              	.LCFI184:
 3828              		.cfi_def_cfa_register 7
 3829 0006 7860     		str	r0, [r7, #4]
1756:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	const uint32_t ulDecimalBase = 10u;
 3830              		.loc 3 1756 0
 3831 0008 0A23     		movs	r3, #10
 3832 000a 7B61     		str	r3, [r7, #20]
1757:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	uint8_t ucOctet[ socketMAX_IP_ADDRESS_OCTETS ];
1758:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	const char *pcPointerOnEntering;
1759:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	uint32_t ulReturn = 0UL, ulValue;
 3833              		.loc 3 1759 0
 3834 000c 0023     		movs	r3, #0
 3835 000e 7B62     		str	r3, [r7, #36]
1760:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	UBaseType_t uxOctetNumber;
1761:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult = pdPASS;
 3836              		.loc 3 1761 0
 3837 0010 0123     		movs	r3, #1
 3838 0012 BB61     		str	r3, [r7, #24]
1762:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1763:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		for( uxOctetNumber = 0u; uxOctetNumber < socketMAX_IP_ADDRESS_OCTETS; uxOctetNumber++ )
 3839              		.loc 3 1763 0
 3840 0014 0023     		movs	r3, #0
 3841 0016 FB61     		str	r3, [r7, #28]
 3842 0018 43E0     		b	.L253
 3843              	.L263:
1764:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1765:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			ulValue = 0ul;
 3844              		.loc 3 1765 0
 3845 001a 0023     		movs	r3, #0
 3846 001c 3B62     		str	r3, [r7, #32]
1766:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pcPointerOnEntering = pcIPAddress;
 3847              		.loc 3 1766 0
 3848 001e 7B68     		ldr	r3, [r7, #4]
 3849 0020 3B61     		str	r3, [r7, #16]
1767:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1768:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			while( ( *pcIPAddress >= '0' ) && ( *pcIPAddress <= '9' ) )
 3850              		.loc 3 1768 0
 3851 0022 0EE0     		b	.L254
 3852              	.L256:
1769:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
ARM GAS  /tmp/ccrA3BdH.s 			page 111


1770:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Move previous read characters into the next decimal
1771:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				position. */
1772:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				ulValue *= ulDecimalBase;
 3853              		.loc 3 1772 0
 3854 0024 3B6A     		ldr	r3, [r7, #32]
 3855 0026 7A69     		ldr	r2, [r7, #20]
 3856 0028 02FB03F3 		mul	r3, r2, r3
 3857 002c 3B62     		str	r3, [r7, #32]
1773:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1774:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Add the binary value of the ascii character. */
1775:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				ulValue += ( ( uint32_t ) ( *pcIPAddress ) - ( uint32_t ) '0' );
 3858              		.loc 3 1775 0
 3859 002e 7B68     		ldr	r3, [r7, #4]
 3860 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3861 0032 1A46     		mov	r2, r3
 3862 0034 3B6A     		ldr	r3, [r7, #32]
 3863 0036 1344     		add	r3, r3, r2
 3864 0038 303B     		subs	r3, r3, #48
 3865 003a 3B62     		str	r3, [r7, #32]
1776:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1777:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Move to next character in the string. */
1778:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pcIPAddress++;
 3866              		.loc 3 1778 0
 3867 003c 7B68     		ldr	r3, [r7, #4]
 3868 003e 0133     		adds	r3, r3, #1
 3869 0040 7B60     		str	r3, [r7, #4]
 3870              	.L254:
1768:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 3871              		.loc 3 1768 0
 3872 0042 7B68     		ldr	r3, [r7, #4]
 3873 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3874 0046 2F2B     		cmp	r3, #47
 3875 0048 03D9     		bls	.L255
1768:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 3876              		.loc 3 1768 0 is_stmt 0 discriminator 1
 3877 004a 7B68     		ldr	r3, [r7, #4]
 3878 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3879 004e 392B     		cmp	r3, #57
 3880 0050 E8D9     		bls	.L256
 3881              	.L255:
1779:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1780:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1781:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Check characters were read. */
1782:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pcIPAddress == pcPointerOnEntering )
 3882              		.loc 3 1782 0 is_stmt 1
 3883 0052 7A68     		ldr	r2, [r7, #4]
 3884 0054 3B69     		ldr	r3, [r7, #16]
 3885 0056 9A42     		cmp	r2, r3
 3886 0058 01D1     		bne	.L257
1783:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1784:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xResult = pdFAIL;
 3887              		.loc 3 1784 0
 3888 005a 0023     		movs	r3, #0
 3889 005c BB61     		str	r3, [r7, #24]
 3890              	.L257:
1785:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1786:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 112


1787:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Check the value fits in an 8-bit number. */
1788:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ulValue > 0xffUL )
 3891              		.loc 3 1788 0
 3892 005e 3B6A     		ldr	r3, [r7, #32]
 3893 0060 FF2B     		cmp	r3, #255
 3894 0062 02D9     		bls	.L258
1789:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1790:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xResult = pdFAIL;
 3895              		.loc 3 1790 0
 3896 0064 0023     		movs	r3, #0
 3897 0066 BB61     		str	r3, [r7, #24]
 3898 0068 14E0     		b	.L259
 3899              	.L258:
1791:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1792:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
1793:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1794:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				ucOctet[ uxOctetNumber ] = ( uint8_t ) ulValue;
 3900              		.loc 3 1794 0
 3901 006a 3B6A     		ldr	r3, [r7, #32]
 3902 006c D9B2     		uxtb	r1, r3
 3903 006e 07F10C02 		add	r2, r7, #12
 3904 0072 FB69     		ldr	r3, [r7, #28]
 3905 0074 1344     		add	r3, r3, r2
 3906 0076 0A46     		mov	r2, r1
 3907 0078 1A70     		strb	r2, [r3]
1795:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1796:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Check the next character is as expected. */
1797:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( uxOctetNumber < ( socketMAX_IP_ADDRESS_OCTETS - 1u ) )
 3908              		.loc 3 1797 0
 3909 007a FB69     		ldr	r3, [r7, #28]
 3910 007c 022B     		cmp	r3, #2
 3911 007e 09D8     		bhi	.L259
1798:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1799:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( *pcIPAddress != '.' )
 3912              		.loc 3 1799 0
 3913 0080 7B68     		ldr	r3, [r7, #4]
 3914 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3915 0084 2E2B     		cmp	r3, #46
 3916 0086 02D0     		beq	.L260
1800:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1801:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xResult = pdFAIL;
 3917              		.loc 3 1801 0
 3918 0088 0023     		movs	r3, #0
 3919 008a BB61     		str	r3, [r7, #24]
 3920 008c 02E0     		b	.L259
 3921              	.L260:
1802:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
1803:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
1804:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
1805:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Move past the dot. */
1806:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pcIPAddress++;
 3922              		.loc 3 1806 0
 3923 008e 7B68     		ldr	r3, [r7, #4]
 3924 0090 0133     		adds	r3, r3, #1
 3925 0092 7B60     		str	r3, [r7, #4]
 3926              	.L259:
1807:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
ARM GAS  /tmp/ccrA3BdH.s 			page 113


1808:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1809:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1810:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1811:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xResult == pdFAIL )
 3927              		.loc 3 1811 0
 3928 0094 BB69     		ldr	r3, [r7, #24]
 3929 0096 002B     		cmp	r3, #0
 3930 0098 00D1     		bne	.L261
1812:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1813:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* No point going on. */
1814:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				break;
 3931              		.loc 3 1814 0
 3932 009a 05E0     		b	.L262
 3933              	.L261:
1763:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 3934              		.loc 3 1763 0 discriminator 2
 3935 009c FB69     		ldr	r3, [r7, #28]
 3936 009e 0133     		adds	r3, r3, #1
 3937 00a0 FB61     		str	r3, [r7, #28]
 3938              	.L253:
1763:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 3939              		.loc 3 1763 0 is_stmt 0 discriminator 1
 3940 00a2 FB69     		ldr	r3, [r7, #28]
 3941 00a4 032B     		cmp	r3, #3
 3942 00a6 B8D9     		bls	.L263
 3943              	.L262:
1815:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1816:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1817:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1818:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( *pcIPAddress != ( char ) 0 )
 3944              		.loc 3 1818 0 is_stmt 1
 3945 00a8 7B68     		ldr	r3, [r7, #4]
 3946 00aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3947 00ac 002B     		cmp	r3, #0
 3948 00ae 01D0     		beq	.L264
1819:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1820:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Expected the end of the string. */
1821:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = pdFAIL;
 3949              		.loc 3 1821 0
 3950 00b0 0023     		movs	r3, #0
 3951 00b2 BB61     		str	r3, [r7, #24]
 3952              	.L264:
1822:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1823:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1824:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( uxOctetNumber != socketMAX_IP_ADDRESS_OCTETS )
 3953              		.loc 3 1824 0
 3954 00b4 FB69     		ldr	r3, [r7, #28]
 3955 00b6 042B     		cmp	r3, #4
 3956 00b8 01D0     		beq	.L265
1825:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1826:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Didn't read enough octets. */
1827:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = pdFAIL;
 3957              		.loc 3 1827 0
 3958 00ba 0023     		movs	r3, #0
 3959 00bc BB61     		str	r3, [r7, #24]
 3960              	.L265:
1828:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
ARM GAS  /tmp/ccrA3BdH.s 			page 114


1829:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1830:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xResult == pdPASS )
 3961              		.loc 3 1830 0
 3962 00be BB69     		ldr	r3, [r7, #24]
 3963 00c0 012B     		cmp	r3, #1
 3964 00c2 0AD1     		bne	.L266
1831:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1832:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			ulReturn = FreeRTOS_inet_addr_quick( ucOctet[ 0 ], ucOctet[ 1 ], ucOctet[ 2 ], ucOctet[ 3 ] );
 3965              		.loc 3 1832 0
 3966 00c4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 3967 00c6 1A06     		lsls	r2, r3, #24
 3968 00c8 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 3969 00ca 1B04     		lsls	r3, r3, #16
 3970 00cc 1A43     		orrs	r2, r2, r3
 3971 00ce 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 3972 00d0 1B02     		lsls	r3, r3, #8
 3973 00d2 1343     		orrs	r3, r3, r2
 3974 00d4 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 3975 00d6 1343     		orrs	r3, r3, r2
 3976 00d8 7B62     		str	r3, [r7, #36]
 3977              	.L266:
1833:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1834:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1835:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return ulReturn;
 3978              		.loc 3 1835 0
 3979 00da 7B6A     		ldr	r3, [r7, #36]
1836:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 3980              		.loc 3 1836 0
 3981 00dc 1846     		mov	r0, r3
 3982 00de 2C37     		adds	r7, r7, #44
 3983              	.LCFI185:
 3984              		.cfi_def_cfa_offset 4
 3985 00e0 BD46     		mov	sp, r7
 3986              	.LCFI186:
 3987              		.cfi_def_cfa_register 13
 3988              		@ sp needed
 3989 00e2 5DF8047B 		ldr	r7, [sp], #4
 3990              	.LCFI187:
 3991              		.cfi_restore 7
 3992              		.cfi_def_cfa_offset 0
 3993 00e6 7047     		bx	lr
 3994              		.cfi_endproc
 3995              	.LFE51:
 3997              		.section	.text.FreeRTOS_GetLocalAddress,"ax",%progbits
 3998              		.align	2
 3999              		.global	FreeRTOS_GetLocalAddress
 4000              		.thumb
 4001              		.thumb_func
 4003              	FreeRTOS_GetLocalAddress:
 4004              	.LFB52:
1837:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1838:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigINCLUDE_FULL_INET_ADDR */
1839:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1840:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1841:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1842:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* Function to get the local address and IP port */
1843:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** size_t FreeRTOS_GetLocalAddress( Socket_t xSocket, struct freertos_sockaddr *pxAddress )
ARM GAS  /tmp/ccrA3BdH.s 			page 115


1844:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 4005              		.loc 3 1844 0
 4006              		.cfi_startproc
 4007              		@ args = 0, pretend = 0, frame = 16
 4008              		@ frame_needed = 1, uses_anonymous_args = 0
 4009              		@ link register save eliminated.
 4010 0000 80B4     		push	{r7}
 4011              	.LCFI188:
 4012              		.cfi_def_cfa_offset 4
 4013              		.cfi_offset 7, -4
 4014 0002 85B0     		sub	sp, sp, #20
 4015              	.LCFI189:
 4016              		.cfi_def_cfa_offset 24
 4017 0004 00AF     		add	r7, sp, #0
 4018              	.LCFI190:
 4019              		.cfi_def_cfa_register 7
 4020 0006 7860     		str	r0, [r7, #4]
 4021 0008 3960     		str	r1, [r7]
1845:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 4022              		.loc 3 1845 0
 4023 000a 7B68     		ldr	r3, [r7, #4]
 4024 000c FB60     		str	r3, [r7, #12]
1846:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1847:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* IP address of local machine. */
1848:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	pxAddress->sin_addr = *ipLOCAL_IP_ADDRESS_POINTER;
 4025              		.loc 3 1848 0
 4026 000e 0C4B     		ldr	r3, .L270
 4027 0010 5A69     		ldr	r2, [r3, #20]
 4028 0012 3B68     		ldr	r3, [r7]
 4029 0014 5A60     		str	r2, [r3, #4]
1849:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1850:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Local port on this machine. */
1851:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	pxAddress->sin_port = FreeRTOS_htons( pxSocket->usLocalPort );
 4030              		.loc 3 1851 0
 4031 0016 FB68     		ldr	r3, [r7, #12]
 4032 0018 9B8C     		ldrh	r3, [r3, #36]
 4033 001a 1B02     		lsls	r3, r3, #8
 4034 001c 9AB2     		uxth	r2, r3
 4035 001e FB68     		ldr	r3, [r7, #12]
 4036 0020 9B8C     		ldrh	r3, [r3, #36]
 4037 0022 1B0A     		lsrs	r3, r3, #8
 4038 0024 9BB2     		uxth	r3, r3
 4039 0026 9BB2     		uxth	r3, r3
 4040 0028 1343     		orrs	r3, r3, r2
 4041 002a 9BB2     		uxth	r3, r3
 4042 002c 9AB2     		uxth	r2, r3
 4043 002e 3B68     		ldr	r3, [r7]
 4044 0030 5A80     		strh	r2, [r3, #2]	@ movhi
1852:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1853:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	return sizeof( *pxAddress );
 4045              		.loc 3 1853 0
 4046 0032 0823     		movs	r3, #8
1854:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 4047              		.loc 3 1854 0
 4048 0034 1846     		mov	r0, r3
 4049 0036 1437     		adds	r7, r7, #20
 4050              	.LCFI191:
ARM GAS  /tmp/ccrA3BdH.s 			page 116


 4051              		.cfi_def_cfa_offset 4
 4052 0038 BD46     		mov	sp, r7
 4053              	.LCFI192:
 4054              		.cfi_def_cfa_register 13
 4055              		@ sp needed
 4056 003a 5DF8047B 		ldr	r7, [sp], #4
 4057              	.LCFI193:
 4058              		.cfi_restore 7
 4059              		.cfi_def_cfa_offset 0
 4060 003e 7047     		bx	lr
 4061              	.L271:
 4062              		.align	2
 4063              	.L270:
 4064 0040 00000000 		.word	xDefaultPartUDPPacketHeader
 4065              		.cfi_endproc
 4066              	.LFE52:
 4068              		.section	.text.vSocketWakeUpUser,"ax",%progbits
 4069              		.align	2
 4070              		.global	vSocketWakeUpUser
 4071              		.thumb
 4072              		.thumb_func
 4074              	vSocketWakeUpUser:
 4075              	.LFB53:
1855:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1856:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1857:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1858:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** void vSocketWakeUpUser( FreeRTOS_Socket_t *pxSocket )
1859:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** {
 4076              		.loc 3 1859 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 16
 4079              		@ frame_needed = 1, uses_anonymous_args = 0
 4080 0000 80B5     		push	{r7, lr}
 4081              	.LCFI194:
 4082              		.cfi_def_cfa_offset 8
 4083              		.cfi_offset 7, -8
 4084              		.cfi_offset 14, -4
 4085 0002 84B0     		sub	sp, sp, #16
 4086              	.LCFI195:
 4087              		.cfi_def_cfa_offset 24
 4088 0004 00AF     		add	r7, sp, #0
 4089              	.LCFI196:
 4090              		.cfi_def_cfa_register 7
 4091 0006 7860     		str	r0, [r7, #4]
1860:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /* _HT_ must work this out, now vSocketWakeUpUser will be called for any important
1861:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c ****  * event or transition */
1862:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigSOCKET_HAS_USER_SEMAPHORE == 1 )
1863:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1864:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->pxUserSemaphore != NULL )
1865:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1866:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xSemaphoreGive( pxSocket->pxUserSemaphore );
1867:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1868:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1869:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif /* ipconfigSOCKET_HAS_USER_SEMAPHORE */
1870:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1871:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
1872:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
ARM GAS  /tmp/ccrA3BdH.s 			page 117


1873:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->pxSocketSet != NULL )
 4092              		.loc 3 1873 0
 4093 0008 7B68     		ldr	r3, [r7, #4]
 4094 000a 9B6A     		ldr	r3, [r3, #40]
 4095 000c 002B     		cmp	r3, #0
 4096 000e 15D0     		beq	.L273
 4097              	.LBB78:
1874:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1875:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			EventBits_t xSelectBits = ( pxSocket->xEventBits >> SOCKET_EVENT_BIT_COUNT ) & eSELECT_ALL;
 4098              		.loc 3 1875 0
 4099 0010 7B68     		ldr	r3, [r7, #4]
 4100 0012 1B68     		ldr	r3, [r3]
 4101 0014 1B0A     		lsrs	r3, r3, #8
 4102 0016 03F00F03 		and	r3, r3, #15
 4103 001a FB60     		str	r3, [r7, #12]
1876:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xSelectBits != 0ul )
 4104              		.loc 3 1876 0
 4105 001c FB68     		ldr	r3, [r7, #12]
 4106 001e 002B     		cmp	r3, #0
 4107 0020 0CD0     		beq	.L273
1877:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1878:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->xSocketBits |= xSelectBits;
 4108              		.loc 3 1878 0
 4109 0022 7B68     		ldr	r3, [r7, #4]
 4110 0024 1A6B     		ldr	r2, [r3, #48]
 4111 0026 FB68     		ldr	r3, [r7, #12]
 4112 0028 1A43     		orrs	r2, r2, r3
 4113 002a 7B68     		ldr	r3, [r7, #4]
 4114 002c 1A63     		str	r2, [r3, #48]
1879:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xEventGroupSetBits( pxSocket->pxSocketSet->xSelectGroup, xSelectBits );
 4115              		.loc 3 1879 0
 4116 002e 7B68     		ldr	r3, [r7, #4]
 4117 0030 9B6A     		ldr	r3, [r3, #40]
 4118 0032 1B68     		ldr	r3, [r3]
 4119 0034 1846     		mov	r0, r3
 4120 0036 F968     		ldr	r1, [r7, #12]
 4121 0038 FFF7FEFF 		bl	xEventGroupSetBits
 4122              	.L273:
 4123              	.LBE78:
1880:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1881:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1882:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1883:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocket->xEventBits &= eSOCKET_ALL;
 4124              		.loc 3 1883 0
 4125 003c 7B68     		ldr	r3, [r7, #4]
 4126 003e 1B68     		ldr	r3, [r3]
 4127 0040 03F07F02 		and	r2, r3, #127
 4128 0044 7B68     		ldr	r3, [r7, #4]
 4129 0046 1A60     		str	r2, [r3]
1884:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1885:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif /* ipconfigSUPPORT_SELECT_FUNCTION */
1886:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1887:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	if( ( pxSocket->xEventGroup != NULL ) && ( pxSocket->xEventBits != 0u ) )
 4130              		.loc 3 1887 0
 4131 0048 7B68     		ldr	r3, [r7, #4]
 4132 004a 5B68     		ldr	r3, [r3, #4]
 4133 004c 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 118


 4134 004e 0BD0     		beq	.L274
 4135              		.loc 3 1887 0 is_stmt 0 discriminator 1
 4136 0050 7B68     		ldr	r3, [r7, #4]
 4137 0052 1B68     		ldr	r3, [r3]
 4138 0054 002B     		cmp	r3, #0
 4139 0056 07D0     		beq	.L274
1888:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1889:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xEventGroupSetBits( pxSocket->xEventGroup, pxSocket->xEventBits );
 4140              		.loc 3 1889 0 is_stmt 1
 4141 0058 7B68     		ldr	r3, [r7, #4]
 4142 005a 5A68     		ldr	r2, [r3, #4]
 4143 005c 7B68     		ldr	r3, [r7, #4]
 4144 005e 1B68     		ldr	r3, [r3]
 4145 0060 1046     		mov	r0, r2
 4146 0062 1946     		mov	r1, r3
 4147 0064 FFF7FEFF 		bl	xEventGroupSetBits
 4148              	.L274:
1890:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1891:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1892:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	pxSocket->xEventBits = 0ul;
 4149              		.loc 3 1892 0
 4150 0068 7B68     		ldr	r3, [r7, #4]
 4151 006a 0022     		movs	r2, #0
 4152 006c 1A60     		str	r2, [r3]
1893:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** }
 4153              		.loc 3 1893 0
 4154 006e 1037     		adds	r7, r7, #16
 4155              	.LCFI197:
 4156              		.cfi_def_cfa_offset 8
 4157 0070 BD46     		mov	sp, r7
 4158              	.LCFI198:
 4159              		.cfi_def_cfa_register 13
 4160              		@ sp needed
 4161 0072 80BD     		pop	{r7, pc}
 4162              		.cfi_endproc
 4163              	.LFE53:
 4165              		.section	.text.bMayConnect,"ax",%progbits
 4166              		.align	2
 4167              		.thumb
 4168              		.thumb_func
 4170              	bMayConnect:
 4171              	.LFB54:
1894:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1895:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1896:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1897:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigETHERNET_DRIVER_FILTERS_PACKETS == 1 )
1898:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1899:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* This define makes it possible for network-card drivers to inspect
1900:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * UDP message and see if there is any UDP socket bound to a given port
1901:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * number.
1902:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * This is probably only usefull in systems with a minimum of RAM and
1903:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * when lots of anonymous broadcast messages come in
1904:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
1905:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xPortHasUDPSocket( uint16_t usPortNr )
1906:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
1907:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xFound = pdFALSE;
1908:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 119


1909:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		vTaskSuspendAll();
1910:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1911:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( pxListFindListItemWithValue( &xBoundUDPSocketsList, ( TickType_t ) usPortNr ) != NULL ) )
1912:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1913:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xFound = pdTRUE;
1914:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1915:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1916:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xTaskResumeAll();
1917:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		
1918:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xFound;
1919:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
1920:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1921:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigETHERNET_DRIVER_FILTERS_PACKETS */
1922:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1923:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1924:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1925:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
1926:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1927:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static BaseType_t bMayConnect( FreeRTOS_Socket_t *pxSocket );
1928:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static BaseType_t bMayConnect( FreeRTOS_Socket_t *pxSocket )
1929:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 4172              		.loc 3 1929 0
 4173              		.cfi_startproc
 4174              		@ args = 0, pretend = 0, frame = 8
 4175              		@ frame_needed = 1, uses_anonymous_args = 0
 4176              		@ link register save eliminated.
 4177 0000 80B4     		push	{r7}
 4178              	.LCFI199:
 4179              		.cfi_def_cfa_offset 4
 4180              		.cfi_offset 7, -4
 4181 0002 83B0     		sub	sp, sp, #12
 4182              	.LCFI200:
 4183              		.cfi_def_cfa_offset 16
 4184 0004 00AF     		add	r7, sp, #0
 4185              	.LCFI201:
 4186              		.cfi_def_cfa_register 7
 4187 0006 7860     		str	r0, [r7, #4]
1930:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		switch( pxSocket->u.xTCP.ucTCPState )
 4188              		.loc 3 1930 0
 4189 0008 7B68     		ldr	r3, [r7, #4]
 4190 000a 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 4191 000e 022B     		cmp	r3, #2
 4192 0010 05D0     		beq	.L277
 4193 0012 082B     		cmp	r3, #8
 4194 0014 01D0     		beq	.L278
 4195 0016 002B     		cmp	r3, #0
 4196 0018 04D1     		bne	.L280
 4197              	.L278:
1931:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1932:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case eCLOSED:
1933:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case eCLOSE_WAIT:	return 0;
 4198              		.loc 3 1933 0
 4199 001a 0023     		movs	r3, #0
 4200 001c 04E0     		b	.L279
 4201              	.L277:
1934:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			case eCONNECT_SYN:	return -pdFREERTOS_ERRNO_EINPROGRESS;
 4202              		.loc 3 1934 0
ARM GAS  /tmp/ccrA3BdH.s 			page 120


 4203 001e 6FF07603 		mvn	r3, #118
 4204 0022 01E0     		b	.L279
 4205              	.L280:
1935:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			default:			return -pdFREERTOS_ERRNO_EAGAIN;
 4206              		.loc 3 1935 0
 4207 0024 6FF00A03 		mvn	r3, #10
 4208              	.L279:
1936:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1937:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 4209              		.loc 3 1937 0
 4210 0028 1846     		mov	r0, r3
 4211 002a 0C37     		adds	r7, r7, #12
 4212              	.LCFI202:
 4213              		.cfi_def_cfa_offset 4
 4214 002c BD46     		mov	sp, r7
 4215              	.LCFI203:
 4216              		.cfi_def_cfa_register 13
 4217              		@ sp needed
 4218 002e 5DF8047B 		ldr	r7, [sp], #4
 4219              	.LCFI204:
 4220              		.cfi_restore 7
 4221              		.cfi_def_cfa_offset 0
 4222 0032 7047     		bx	lr
 4223              		.cfi_endproc
 4224              	.LFE54:
 4226              		.section	.text.prvTCPConnectStart,"ax",%progbits
 4227              		.align	2
 4228              		.thumb
 4229              		.thumb_func
 4231              	prvTCPConnectStart:
 4232              	.LFB55:
1938:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1939:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
1940:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
1941:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1942:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
1943:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1944:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static BaseType_t prvTCPConnectStart( FreeRTOS_Socket_t *pxSocket, struct freertos_sockaddr *pxAdd
1945:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 4233              		.loc 3 1945 0
 4234              		.cfi_startproc
 4235              		@ args = 0, pretend = 0, frame = 16
 4236              		@ frame_needed = 1, uses_anonymous_args = 0
 4237 0000 80B5     		push	{r7, lr}
 4238              	.LCFI205:
 4239              		.cfi_def_cfa_offset 8
 4240              		.cfi_offset 7, -8
 4241              		.cfi_offset 14, -4
 4242 0002 84B0     		sub	sp, sp, #16
 4243              	.LCFI206:
 4244              		.cfi_def_cfa_offset 24
 4245 0004 00AF     		add	r7, sp, #0
 4246              	.LCFI207:
 4247              		.cfi_def_cfa_register 7
 4248 0006 7860     		str	r0, [r7, #4]
 4249 0008 3960     		str	r1, [r7]
1946:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult = 0;
ARM GAS  /tmp/ccrA3BdH.s 			page 121


 4250              		.loc 3 1946 0
 4251 000a 0023     		movs	r3, #0
 4252 000c FB60     		str	r3, [r7, #12]
1947:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1948:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_TCP, pdFALSE ) == pdFALSE )
 4253              		.loc 3 1948 0
 4254 000e 7868     		ldr	r0, [r7, #4]
 4255 0010 0621     		movs	r1, #6
 4256 0012 0022     		movs	r2, #0
 4257 0014 FFF7FEFF 		bl	prvValidSocket
 4258 0018 0346     		mov	r3, r0
 4259 001a 002B     		cmp	r3, #0
 4260 001c 03D1     		bne	.L282
1949:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1950:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Not a valid socket or wrong type */
1951:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EBADF;
 4261              		.loc 3 1951 0
 4262 001e 6FF00803 		mvn	r3, #8
 4263 0022 FB60     		str	r3, [r7, #12]
 4264 0024 13E0     		b	.L283
 4265              	.L282:
1952:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1953:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( FreeRTOS_issocketconnected( pxSocket ) > 0 )
 4266              		.loc 3 1953 0
 4267 0026 7868     		ldr	r0, [r7, #4]
 4268 0028 FFF7FEFF 		bl	FreeRTOS_issocketconnected
 4269 002c 0346     		mov	r3, r0
 4270 002e 002B     		cmp	r3, #0
 4271 0030 03DD     		ble	.L284
1954:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1955:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* The socket is already connected. */
1956:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EISCONN;
 4272              		.loc 3 1956 0
 4273 0032 6FF07E03 		mvn	r3, #126
 4274 0036 FB60     		str	r3, [r7, #12]
 4275 0038 09E0     		b	.L283
 4276              	.L284:
1957:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1958:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( socketSOCKET_IS_BOUND( pxSocket ) == pdFALSE )
 4277              		.loc 3 1958 0
 4278 003a 7B68     		ldr	r3, [r7, #4]
 4279 003c 9B69     		ldr	r3, [r3, #24]
 4280 003e 002B     		cmp	r3, #0
 4281 0040 05D1     		bne	.L283
1959:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1960:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Bind the socket to the port that the client task will send from.
1961:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			Non-standard, so the error returned is that returned by bind(). */
1962:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = FreeRTOS_bind( ( Socket_t ) pxSocket, NULL, 0u );
 4282              		.loc 3 1962 0
 4283 0042 7868     		ldr	r0, [r7, #4]
 4284 0044 0021     		movs	r1, #0
 4285 0046 0022     		movs	r2, #0
 4286 0048 FFF7FEFF 		bl	FreeRTOS_bind
 4287 004c F860     		str	r0, [r7, #12]
 4288              	.L283:
1963:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1964:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 122


1965:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xResult == 0 )
 4289              		.loc 3 1965 0
 4290 004e FB68     		ldr	r3, [r7, #12]
 4291 0050 002B     		cmp	r3, #0
 4292 0052 45D1     		bne	.L285
1966:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
1967:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Check if it makes any sense to wait for a connect event, this condition
1968:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			might change while sleeping, so it must be checked within each loop */
1969:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = bMayConnect( pxSocket ); /* -EINPROGRESS, -EAGAIN, or 0 for OK */
 4293              		.loc 3 1969 0
 4294 0054 7868     		ldr	r0, [r7, #4]
 4295 0056 FFF7FEFF 		bl	bMayConnect
 4296 005a F860     		str	r0, [r7, #12]
1970:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1971:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Start the connect procedure, kernel will start working on it */
1972:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xResult == 0 )
 4297              		.loc 3 1972 0
 4298 005c FB68     		ldr	r3, [r7, #12]
 4299 005e 002B     		cmp	r3, #0
 4300 0060 3ED1     		bne	.L285
1973:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
1974:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.bits.bConnPrepared = pdFALSE_UNSIGNED;
 4301              		.loc 3 1974 0
 4302 0062 7A68     		ldr	r2, [r7, #4]
 4303 0064 92F84130 		ldrb	r3, [r2, #65]
 4304 0068 6FF3C303 		bfc	r3, #3, #1
 4305 006c 82F84130 		strb	r3, [r2, #65]
1975:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.ucRepCount = 0u;
 4306              		.loc 3 1975 0
 4307 0070 7B68     		ldr	r3, [r7, #4]
 4308 0072 0022     		movs	r2, #0
 4309 0074 83F85220 		strb	r2, [r3, #82]
1976:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1977:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_debug_printf( ( "FreeRTOS_connect: %u to %lxip:%u\n",
1978:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->usLocalPort, FreeRTOS_ntohl( pxAddress->sin_addr ), FreeRTOS_ntohs( pxAddress->sin_p
1979:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1980:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Port on remote machine. */
1981:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.usRemotePort = FreeRTOS_ntohs( pxAddress->sin_port );
 4310              		.loc 3 1981 0
 4311 0078 3B68     		ldr	r3, [r7]
 4312 007a 5B88     		ldrh	r3, [r3, #2]
 4313 007c 1B02     		lsls	r3, r3, #8
 4314 007e 9AB2     		uxth	r2, r3
 4315 0080 3B68     		ldr	r3, [r7]
 4316 0082 5B88     		ldrh	r3, [r3, #2]
 4317 0084 1B0A     		lsrs	r3, r3, #8
 4318 0086 9BB2     		uxth	r3, r3
 4319 0088 9BB2     		uxth	r3, r3
 4320 008a 1343     		orrs	r3, r3, r2
 4321 008c 9BB2     		uxth	r3, r3
 4322 008e 9AB2     		uxth	r2, r3
 4323 0090 7B68     		ldr	r3, [r7, #4]
 4324 0092 9A87     		strh	r2, [r3, #60]	@ movhi
1982:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1983:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* IP address of remote machine. */
1984:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.ulRemoteIP = FreeRTOS_ntohl( pxAddress->sin_addr );
 4325              		.loc 3 1984 0
ARM GAS  /tmp/ccrA3BdH.s 			page 123


 4326 0094 3B68     		ldr	r3, [r7]
 4327 0096 5B68     		ldr	r3, [r3, #4]
 4328 0098 1A06     		lsls	r2, r3, #24
 4329 009a 3B68     		ldr	r3, [r7]
 4330 009c 5B68     		ldr	r3, [r3, #4]
 4331 009e 03F47F43 		and	r3, r3, #65280
 4332 00a2 1B02     		lsls	r3, r3, #8
 4333 00a4 1A43     		orrs	r2, r2, r3
 4334 00a6 3B68     		ldr	r3, [r7]
 4335 00a8 5B68     		ldr	r3, [r3, #4]
 4336 00aa 03F47F03 		and	r3, r3, #16711680
 4337 00ae 1B0A     		lsrs	r3, r3, #8
 4338 00b0 1A43     		orrs	r2, r2, r3
 4339 00b2 3B68     		ldr	r3, [r7]
 4340 00b4 5B68     		ldr	r3, [r3, #4]
 4341 00b6 1B0E     		lsrs	r3, r3, #24
 4342 00b8 1A43     		orrs	r2, r2, r3
 4343 00ba 7B68     		ldr	r3, [r7, #4]
 4344 00bc 9A63     		str	r2, [r3, #56]
1985:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1986:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* (client) internal state: socket wants to send a connect. */
1987:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vTCPStateChange( pxSocket, eCONNECT_SYN );
 4345              		.loc 3 1987 0
 4346 00be 7868     		ldr	r0, [r7, #4]
 4347 00c0 0221     		movs	r1, #2
 4348 00c2 FFF7FEFF 		bl	vTCPStateChange
1988:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1989:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* To start an active connect. */
1990:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.usTimeout = 1u;
 4349              		.loc 3 1990 0
 4350 00c6 7B68     		ldr	r3, [r7, #4]
 4351 00c8 0122     		movs	r2, #1
 4352 00ca A3F84820 		strh	r2, [r3, #72]	@ movhi
1991:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1992:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xSendEventToIPTask( eTCPTimerEvent ) != pdPASS )
 4353              		.loc 3 1992 0
 4354 00ce 0520     		movs	r0, #5
 4355 00d0 FFF7FEFF 		bl	xSendEventToIPTask
 4356 00d4 0346     		mov	r3, r0
 4357 00d6 012B     		cmp	r3, #1
 4358 00d8 02D0     		beq	.L285
1993:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
1994:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xResult = -pdFREERTOS_ERRNO_ECANCELED;
 4359              		.loc 3 1994 0
 4360 00da 6FF08B03 		mvn	r3, #139
 4361 00de FB60     		str	r3, [r7, #12]
 4362              	.L285:
1995:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
1996:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
1997:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
1998:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
1999:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 4363              		.loc 3 1999 0
 4364 00e0 FB68     		ldr	r3, [r7, #12]
2000:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 4365              		.loc 3 2000 0
 4366 00e2 1846     		mov	r0, r3
ARM GAS  /tmp/ccrA3BdH.s 			page 124


 4367 00e4 1037     		adds	r7, r7, #16
 4368              	.LCFI208:
 4369              		.cfi_def_cfa_offset 8
 4370 00e6 BD46     		mov	sp, r7
 4371              	.LCFI209:
 4372              		.cfi_def_cfa_register 13
 4373              		@ sp needed
 4374 00e8 80BD     		pop	{r7, pc}
 4375              		.cfi_endproc
 4376              	.LFE55:
 4378 00ea 00BF     		.section	.text.FreeRTOS_connect,"ax",%progbits
 4379              		.align	2
 4380              		.global	FreeRTOS_connect
 4381              		.thumb
 4382              		.thumb_func
 4384              	FreeRTOS_connect:
 4385              	.LFB56:
2001:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2002:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2003:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2004:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2005:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2006:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2007:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2008:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * FreeRTOS_connect: socket wants to connect to a remote port
2009:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2010:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_connect( Socket_t xClientSocket, struct freertos_sockaddr *pxAddress, socklen_
2011:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 4386              		.loc 3 2011 0
 4387              		.cfi_startproc
 4388              		@ args = 0, pretend = 0, frame = 40
 4389              		@ frame_needed = 1, uses_anonymous_args = 0
 4390 0000 80B5     		push	{r7, lr}
 4391              	.LCFI210:
 4392              		.cfi_def_cfa_offset 8
 4393              		.cfi_offset 7, -8
 4394              		.cfi_offset 14, -4
 4395 0002 8CB0     		sub	sp, sp, #48
 4396              	.LCFI211:
 4397              		.cfi_def_cfa_offset 56
 4398 0004 02AF     		add	r7, sp, #8
 4399              	.LCFI212:
 4400              		.cfi_def_cfa 7, 48
 4401 0006 F860     		str	r0, [r7, #12]
 4402 0008 B960     		str	r1, [r7, #8]
 4403 000a 7A60     		str	r2, [r7, #4]
2012:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t* ) xClientSocket;
 4404              		.loc 3 2012 0
 4405 000c FB68     		ldr	r3, [r7, #12]
 4406 000e FB61     		str	r3, [r7, #28]
2013:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xRemainingTime;
2014:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xTimed = pdFALSE;
 4407              		.loc 3 2014 0
 4408 0010 0023     		movs	r3, #0
 4409 0012 7B62     		str	r3, [r7, #36]
2015:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult;
2016:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TimeOut_t xTimeOut;
ARM GAS  /tmp/ccrA3BdH.s 			page 125


2017:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2018:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		( void ) xAddressLength;
2019:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2020:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xResult = prvTCPConnectStart( pxSocket, pxAddress );
 4410              		.loc 3 2020 0
 4411 0014 F869     		ldr	r0, [r7, #28]
 4412 0016 B968     		ldr	r1, [r7, #8]
 4413 0018 FFF7FEFF 		bl	prvTCPConnectStart
 4414 001c 3862     		str	r0, [r7, #32]
2021:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2022:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xResult == 0 )
 4415              		.loc 3 2022 0
 4416 001e 3B6A     		ldr	r3, [r7, #32]
 4417 0020 002B     		cmp	r3, #0
 4418 0022 3BD1     		bne	.L288
 4419              	.L294:
2023:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2024:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* And wait for the result */
2025:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			for( ;; )
2026:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2027:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTimed == pdFALSE )
 4420              		.loc 3 2027 0
 4421 0024 7B6A     		ldr	r3, [r7, #36]
 4422 0026 002B     		cmp	r3, #0
 4423 0028 10D1     		bne	.L289
2028:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2029:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Only in the first round, check for non-blocking */
2030:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xRemainingTime = pxSocket->xReceiveBlockTime;
 4424              		.loc 3 2030 0
 4425 002a FB69     		ldr	r3, [r7, #28]
 4426 002c DB69     		ldr	r3, [r3, #28]
 4427 002e BB61     		str	r3, [r7, #24]
2031:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xRemainingTime == ( TickType_t )0 )
 4428              		.loc 3 2031 0
 4429 0030 BB69     		ldr	r3, [r7, #24]
 4430 0032 002B     		cmp	r3, #0
 4431 0034 03D1     		bne	.L290
2032:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2033:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Not yet connected, correct state, non-blocking. */
2034:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xResult = -pdFREERTOS_ERRNO_EWOULDBLOCK;
 4432              		.loc 3 2034 0
 4433 0036 6FF00A03 		mvn	r3, #10
 4434 003a 3B62     		str	r3, [r7, #32]
2035:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 4435              		.loc 3 2035 0
 4436 003c 2EE0     		b	.L288
 4437              	.L290:
2036:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2037:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2038:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Don't get here a second time. */
2039:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xTimed = pdTRUE;
 4438              		.loc 3 2039 0
 4439 003e 0123     		movs	r3, #1
 4440 0040 7B62     		str	r3, [r7, #36]
2040:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2041:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Fetch the current time */
2042:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vTaskSetTimeOutState( &xTimeOut );
ARM GAS  /tmp/ccrA3BdH.s 			page 126


 4441              		.loc 3 2042 0
 4442 0042 07F11003 		add	r3, r7, #16
 4443 0046 1846     		mov	r0, r3
 4444 0048 FFF7FEFF 		bl	vTaskSetTimeOutState
 4445              	.L289:
2043:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2044:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2045:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Did it get connected while sleeping ? */
2046:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xResult = FreeRTOS_issocketconnected( pxSocket );
 4446              		.loc 3 2046 0
 4447 004c F869     		ldr	r0, [r7, #28]
 4448 004e FFF7FEFF 		bl	FreeRTOS_issocketconnected
 4449 0052 3862     		str	r0, [r7, #32]
2047:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2048:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Returns positive when connected, negative means an error */
2049:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xResult < 0 )
 4450              		.loc 3 2049 0
 4451 0054 3B6A     		ldr	r3, [r7, #32]
 4452 0056 002B     		cmp	r3, #0
 4453 0058 00DA     		bge	.L291
2050:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2051:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Return the error */
2052:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4454              		.loc 3 2052 0
 4455 005a 1FE0     		b	.L288
 4456              	.L291:
2053:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2054:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2055:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xResult > 0 )
 4457              		.loc 3 2055 0
 4458 005c 3B6A     		ldr	r3, [r7, #32]
 4459 005e 002B     		cmp	r3, #0
 4460 0060 02DD     		ble	.L292
2056:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2057:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Socket now connected, return a zero */
2058:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xResult = 0;
 4461              		.loc 3 2058 0
 4462 0062 0023     		movs	r3, #0
 4463 0064 3B62     		str	r3, [r7, #32]
2059:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4464              		.loc 3 2059 0
 4465 0066 19E0     		b	.L288
 4466              	.L292:
2060:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2061:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2062:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Is it allowed to sleep more? */
2063:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xRemainingTime ) )
 4467              		.loc 3 2063 0
 4468 0068 07F11002 		add	r2, r7, #16
 4469 006c 07F11803 		add	r3, r7, #24
 4470 0070 1046     		mov	r0, r2
 4471 0072 1946     		mov	r1, r3
 4472 0074 FFF7FEFF 		bl	xTaskCheckForTimeOut
 4473 0078 0346     		mov	r3, r0
 4474 007a 002B     		cmp	r3, #0
 4475 007c 03D0     		beq	.L293
2064:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
ARM GAS  /tmp/ccrA3BdH.s 			page 127


2065:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xResult = -pdFREERTOS_ERRNO_ETIMEDOUT;
 4476              		.loc 3 2065 0
 4477 007e 6FF07303 		mvn	r3, #115
 4478 0082 3B62     		str	r3, [r7, #32]
2066:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4479              		.loc 3 2066 0
 4480 0084 0AE0     		b	.L288
 4481              	.L293:
2067:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2068:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2069:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Go sleeping until we get any down-stream event */
2070:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_CONNECT, pdTRUE /*xClearOnExit*/, pdFALSE /
 4482              		.loc 3 2070 0
 4483 0086 FB69     		ldr	r3, [r7, #28]
 4484 0088 5A68     		ldr	r2, [r3, #4]
 4485 008a BB69     		ldr	r3, [r7, #24]
 4486 008c 0093     		str	r3, [sp]
 4487 008e 1046     		mov	r0, r2
 4488 0090 0821     		movs	r1, #8
 4489 0092 0122     		movs	r2, #1
 4490 0094 0023     		movs	r3, #0
 4491 0096 FFF7FEFF 		bl	xEventGroupWaitBits
2071:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 4492              		.loc 3 2071 0
 4493 009a C3E7     		b	.L294
 4494              	.L288:
2072:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2073:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2074:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 4495              		.loc 3 2074 0
 4496 009c 3B6A     		ldr	r3, [r7, #32]
2075:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 4497              		.loc 3 2075 0
 4498 009e 1846     		mov	r0, r3
 4499 00a0 2837     		adds	r7, r7, #40
 4500              	.LCFI213:
 4501              		.cfi_def_cfa_offset 8
 4502 00a2 BD46     		mov	sp, r7
 4503              	.LCFI214:
 4504              		.cfi_def_cfa_register 13
 4505              		@ sp needed
 4506 00a4 80BD     		pop	{r7, pc}
 4507              		.cfi_endproc
 4508              	.LFE56:
 4510 00a6 00BF     		.section	.text.FreeRTOS_accept,"ax",%progbits
 4511              		.align	2
 4512              		.global	FreeRTOS_accept
 4513              		.thumb
 4514              		.thumb_func
 4516              	FreeRTOS_accept:
 4517              	.LFB57:
2076:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2077:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2078:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2079:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2080:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2081:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
ARM GAS  /tmp/ccrA3BdH.s 			page 128


2082:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * FreeRTOS_accept: can return a new connected socket
2083:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * if the server socket is in listen mode and receives a connection request
2084:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * The new socket will be bound already to the same port number as the listing
2085:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * socket.
2086:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2087:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	Socket_t FreeRTOS_accept( Socket_t xServerSocket, struct freertos_sockaddr *pxAddress, socklen_t *
2088:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 4518              		.loc 3 2088 0
 4519              		.cfi_startproc
 4520              		@ args = 0, pretend = 0, frame = 56
 4521              		@ frame_needed = 1, uses_anonymous_args = 0
 4522 0000 80B5     		push	{r7, lr}
 4523              	.LCFI215:
 4524              		.cfi_def_cfa_offset 8
 4525              		.cfi_offset 7, -8
 4526              		.cfi_offset 14, -4
 4527 0002 90B0     		sub	sp, sp, #64
 4528              	.LCFI216:
 4529              		.cfi_def_cfa_offset 72
 4530 0004 02AF     		add	r7, sp, #8
 4531              	.LCFI217:
 4532              		.cfi_def_cfa 7, 64
 4533 0006 F860     		str	r0, [r7, #12]
 4534 0008 B960     		str	r1, [r7, #8]
 4535 000a 7A60     		str	r2, [r7, #4]
2089:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xServerSocket;
 4536              		.loc 3 2089 0
 4537 000c FB68     		ldr	r3, [r7, #12]
 4538 000e BB62     		str	r3, [r7, #40]
2090:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxClientSocket = NULL;
 4539              		.loc 3 2090 0
 4540 0010 0023     		movs	r3, #0
 4541 0012 7B63     		str	r3, [r7, #52]
2091:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xRemainingTime;
2092:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xTimed = pdFALSE, xAsk = pdFALSE;
 4542              		.loc 3 2092 0
 4543 0014 0023     		movs	r3, #0
 4544 0016 3B63     		str	r3, [r7, #48]
 4545 0018 0023     		movs	r3, #0
 4546 001a FB62     		str	r3, [r7, #44]
2093:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TimeOut_t xTimeOut;
2094:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	IPStackEvent_t xAskEvent;
2095:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2096:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_TCP, pdTRUE ) == pdFALSE )
 4547              		.loc 3 2096 0
 4548 001c B86A     		ldr	r0, [r7, #40]
 4549 001e 0621     		movs	r1, #6
 4550 0020 0122     		movs	r2, #1
 4551 0022 FFF7FEFF 		bl	prvValidSocket
 4552 0026 0346     		mov	r3, r0
 4553 0028 002B     		cmp	r3, #0
 4554 002a 03D1     		bne	.L297
2097:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2098:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Not a valid socket or wrong type */
2099:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxClientSocket = ( FreeRTOS_Socket_t * ) FREERTOS_INVALID_SOCKET;
 4555              		.loc 3 2099 0
 4556 002c 4FF0FF33 		mov	r3, #-1
ARM GAS  /tmp/ccrA3BdH.s 			page 129


 4557 0030 7B63     		str	r3, [r7, #52]
 4558 0032 ADE0     		b	.L298
 4559              	.L297:
2100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( ( pxSocket->u.xTCP.bits.bReuseSocket == pdFALSE_UNSIGNED ) &&
 4560              		.loc 3 2101 0
 4561 0034 BB6A     		ldr	r3, [r7, #40]
 4562 0036 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4563 003a 03F00803 		and	r3, r3, #8
 4564 003e DBB2     		uxtb	r3, r3
 4565 0040 002B     		cmp	r3, #0
 4566 0042 08D1     		bne	.L299
2102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 ( pxSocket->u.xTCP.ucTCPState != eTCP_LISTEN ) )
 4567              		.loc 3 2102 0 discriminator 1
 4568 0044 BB6A     		ldr	r3, [r7, #40]
 4569 0046 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
2101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 ( pxSocket->u.xTCP.ucTCPState != eTCP_LISTEN ) )
 4570              		.loc 3 2101 0 discriminator 1
 4571 004a 012B     		cmp	r3, #1
 4572 004c 03D0     		beq	.L299
2103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Parent socket is not in listening mode */
2105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxClientSocket = ( FreeRTOS_Socket_t * ) FREERTOS_INVALID_SOCKET;
 4573              		.loc 3 2105 0
 4574 004e 4FF0FF33 		mov	r3, #-1
 4575 0052 7B63     		str	r3, [r7, #52]
 4576 0054 9CE0     		b	.L298
 4577              	.L299:
2106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Loop will stop with breaks. */
2110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			for( ; ; )
2111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Is there a new client? */
2113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				vTaskSuspendAll();
 4578              		.loc 3 2113 0
 4579 0056 FFF7FEFF 		bl	vTaskSuspendAll
2114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->u.xTCP.bits.bReuseSocket == pdFALSE_UNSIGNED )
 4580              		.loc 3 2115 0
 4581 005a BB6A     		ldr	r3, [r7, #40]
 4582 005c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4583 0060 03F00803 		and	r3, r3, #8
 4584 0064 DBB2     		uxtb	r3, r3
 4585 0066 002B     		cmp	r3, #0
 4586 0068 03D1     		bne	.L300
2116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxClientSocket = pxSocket->u.xTCP.pxPeerSocket;
 4587              		.loc 3 2117 0
 4588 006a BB6A     		ldr	r3, [r7, #40]
 4589 006c 5B6D     		ldr	r3, [r3, #84]
 4590 006e 7B63     		str	r3, [r7, #52]
 4591 0070 01E0     		b	.L301
 4592              	.L300:
2118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
ARM GAS  /tmp/ccrA3BdH.s 			page 130


2120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxClientSocket = pxSocket;
 4593              		.loc 3 2121 0
 4594 0072 BB6A     		ldr	r3, [r7, #40]
 4595 0074 7B63     		str	r3, [r7, #52]
 4596              	.L301:
2122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxClientSocket != NULL )
 4597              		.loc 3 2123 0
 4598 0076 7B6B     		ldr	r3, [r7, #52]
 4599 0078 002B     		cmp	r3, #0
 4600 007a 14D0     		beq	.L302
2124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.pxPeerSocket = NULL;
 4601              		.loc 3 2125 0
 4602 007c BB6A     		ldr	r3, [r7, #40]
 4603 007e 0022     		movs	r2, #0
 4604 0080 5A65     		str	r2, [r3, #84]
2126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Is it still not taken ? */
2128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( pxClientSocket->u.xTCP.bits.bPassAccept != pdFALSE_UNSIGNED )
 4605              		.loc 3 2128 0
 4606 0082 7B6B     		ldr	r3, [r7, #52]
 4607 0084 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4608 0088 03F00203 		and	r3, r3, #2
 4609 008c DBB2     		uxtb	r3, r3
 4610 008e 002B     		cmp	r3, #0
 4611 0090 07D0     		beq	.L303
2129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
2130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxClientSocket->u.xTCP.bits.bPassAccept = pdFALSE_UNSIGNED;
 4612              		.loc 3 2130 0
 4613 0092 7A6B     		ldr	r2, [r7, #52]
 4614 0094 92F84030 		ldrb	r3, [r2, #64]
 4615 0098 6FF34103 		bfc	r3, #1, #1
 4616 009c 82F84030 		strb	r3, [r2, #64]
 4617 00a0 01E0     		b	.L302
 4618              	.L303:
2131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
2132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						else
2133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
2134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxClientSocket = NULL;
 4619              		.loc 3 2134 0
 4620 00a2 0023     		movs	r3, #0
 4621 00a4 7B63     		str	r3, [r7, #52]
 4622              	.L302:
2135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
2136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xTaskResumeAll();
 4623              		.loc 3 2138 0
 4624 00a6 FFF7FEFF 		bl	xTaskResumeAll
2139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxClientSocket != NULL )
 4625              		.loc 3 2140 0
 4626 00aa 7B6B     		ldr	r3, [r7, #52]
 4627 00ac 002B     		cmp	r3, #0
 4628 00ae 35D0     		beq	.L304
ARM GAS  /tmp/ccrA3BdH.s 			page 131


2141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxAddress != NULL )
 4629              		.loc 3 2142 0
 4630 00b0 BB68     		ldr	r3, [r7, #8]
 4631 00b2 002B     		cmp	r3, #0
 4632 00b4 22D0     		beq	.L305
2143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* IP address of remote machine. */
2145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxAddress->sin_addr = FreeRTOS_ntohl( pxClientSocket->u.xTCP.ulRemoteIP );
 4633              		.loc 3 2145 0
 4634 00b6 7B6B     		ldr	r3, [r7, #52]
 4635 00b8 9B6B     		ldr	r3, [r3, #56]
 4636 00ba 1A06     		lsls	r2, r3, #24
 4637 00bc 7B6B     		ldr	r3, [r7, #52]
 4638 00be 9B6B     		ldr	r3, [r3, #56]
 4639 00c0 03F47F43 		and	r3, r3, #65280
 4640 00c4 1B02     		lsls	r3, r3, #8
 4641 00c6 1A43     		orrs	r2, r2, r3
 4642 00c8 7B6B     		ldr	r3, [r7, #52]
 4643 00ca 9B6B     		ldr	r3, [r3, #56]
 4644 00cc 03F47F03 		and	r3, r3, #16711680
 4645 00d0 1B0A     		lsrs	r3, r3, #8
 4646 00d2 1A43     		orrs	r2, r2, r3
 4647 00d4 7B6B     		ldr	r3, [r7, #52]
 4648 00d6 9B6B     		ldr	r3, [r3, #56]
 4649 00d8 1B0E     		lsrs	r3, r3, #24
 4650 00da 1A43     		orrs	r2, r2, r3
 4651 00dc BB68     		ldr	r3, [r7, #8]
 4652 00de 5A60     		str	r2, [r3, #4]
2146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Port on remote machine. */
2148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxAddress->sin_port = FreeRTOS_ntohs( pxClientSocket->u.xTCP.usRemotePort );
 4653              		.loc 3 2148 0
 4654 00e0 7B6B     		ldr	r3, [r7, #52]
 4655 00e2 9B8F     		ldrh	r3, [r3, #60]
 4656 00e4 1B02     		lsls	r3, r3, #8
 4657 00e6 9AB2     		uxth	r2, r3
 4658 00e8 7B6B     		ldr	r3, [r7, #52]
 4659 00ea 9B8F     		ldrh	r3, [r3, #60]
 4660 00ec 1B0A     		lsrs	r3, r3, #8
 4661 00ee 9BB2     		uxth	r3, r3
 4662 00f0 9BB2     		uxth	r3, r3
 4663 00f2 1343     		orrs	r3, r3, r2
 4664 00f4 9BB2     		uxth	r3, r3
 4665 00f6 9AB2     		uxth	r2, r3
 4666 00f8 BB68     		ldr	r3, [r7, #8]
 4667 00fa 5A80     		strh	r2, [r3, #2]	@ movhi
 4668              	.L305:
2149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxAddressLength != NULL )
 4669              		.loc 3 2150 0
 4670 00fc 7B68     		ldr	r3, [r7, #4]
 4671 00fe 002B     		cmp	r3, #0
 4672 0100 02D0     		beq	.L306
2151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						*pxAddressLength = sizeof( *pxAddress );
 4673              		.loc 3 2152 0
ARM GAS  /tmp/ccrA3BdH.s 			page 132


 4674 0102 7B68     		ldr	r3, [r7, #4]
 4675 0104 0822     		movs	r2, #8
 4676 0106 1A60     		str	r2, [r3]
 4677              	.L306:
2153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->u.xTCP.bits.bReuseSocket == pdFALSE_UNSIGNED )
 4678              		.loc 3 2155 0
 4679 0108 BB6A     		ldr	r3, [r7, #40]
 4680 010a 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 4681 010e 03F00803 		and	r3, r3, #8
 4682 0112 DBB2     		uxtb	r3, r3
 4683 0114 002B     		cmp	r3, #0
 4684 0116 01D1     		bne	.L304
2156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xAsk = pdTRUE;
 4685              		.loc 3 2157 0
 4686 0118 0123     		movs	r3, #1
 4687 011a FB62     		str	r3, [r7, #44]
 4688              	.L304:
2158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xAsk != pdFALSE )
 4689              		.loc 3 2161 0
 4690 011c FB6A     		ldr	r3, [r7, #44]
 4691 011e 002B     		cmp	r3, #0
 4692 0120 0AD0     		beq	.L307
2162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Ask to set an event in 'xEventGroup' as soon as a new
2164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					client gets connected for this listening socket. */
2165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xAskEvent.eEventType = eTCPAcceptEvent;
 4693              		.loc 3 2165 0
 4694 0122 0623     		movs	r3, #6
 4695 0124 3B75     		strb	r3, [r7, #20]
2166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xAskEvent.pvData = ( void * ) pxSocket;
 4696              		.loc 3 2166 0
 4697 0126 BB6A     		ldr	r3, [r7, #40]
 4698 0128 BB61     		str	r3, [r7, #24]
2167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xSendEventStructToIPTask( &xAskEvent, portMAX_DELAY );
 4699              		.loc 3 2167 0
 4700 012a 07F11403 		add	r3, r7, #20
 4701 012e 1846     		mov	r0, r3
 4702 0130 4FF0FF31 		mov	r1, #-1
 4703 0134 FFF7FEFF 		bl	xSendEventStructToIPTask
 4704              	.L307:
2168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxClientSocket != NULL )
 4705              		.loc 3 2170 0
 4706 0138 7B6B     		ldr	r3, [r7, #52]
 4707 013a 002B     		cmp	r3, #0
 4708 013c 00D0     		beq	.L308
2171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4709              		.loc 3 2172 0
 4710 013e 27E0     		b	.L298
ARM GAS  /tmp/ccrA3BdH.s 			page 133


 4711              	.L308:
2173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTimed == pdFALSE )
 4712              		.loc 3 2175 0
 4713 0140 3B6B     		ldr	r3, [r7, #48]
 4714 0142 002B     		cmp	r3, #0
 4715 0144 0DD1     		bne	.L309
2176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Only in the first round, check for non-blocking */
2178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xRemainingTime = pxSocket->xReceiveBlockTime;
 4716              		.loc 3 2178 0
 4717 0146 BB6A     		ldr	r3, [r7, #40]
 4718 0148 DB69     		ldr	r3, [r3, #28]
 4719 014a 7B62     		str	r3, [r7, #36]
2179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xRemainingTime == ( TickType_t ) 0 )
 4720              		.loc 3 2179 0
 4721 014c 7B6A     		ldr	r3, [r7, #36]
 4722 014e 002B     		cmp	r3, #0
 4723 0150 00D1     		bne	.L310
2180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 4724              		.loc 3 2181 0
 4725 0152 1DE0     		b	.L298
 4726              	.L310:
2182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Don't get here a second time */
2185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xTimed = pdTRUE;
 4727              		.loc 3 2185 0
 4728 0154 0123     		movs	r3, #1
 4729 0156 3B63     		str	r3, [r7, #48]
2186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Fetch the current time */
2188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vTaskSetTimeOutState( &xTimeOut );
 4730              		.loc 3 2188 0
 4731 0158 07F11C03 		add	r3, r7, #28
 4732 015c 1846     		mov	r0, r3
 4733 015e FFF7FEFF 		bl	vTaskSetTimeOutState
 4734              	.L309:
2189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Has the timeout been reached? */
2192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xRemainingTime ) != pdFALSE )
 4735              		.loc 3 2192 0
 4736 0162 07F11C02 		add	r2, r7, #28
 4737 0166 07F12403 		add	r3, r7, #36
 4738 016a 1046     		mov	r0, r2
 4739 016c 1946     		mov	r1, r3
 4740 016e FFF7FEFF 		bl	xTaskCheckForTimeOut
 4741 0172 0346     		mov	r3, r0
 4742 0174 002B     		cmp	r3, #0
 4743 0176 00D0     		beq	.L311
2193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4744              		.loc 3 2194 0
 4745 0178 0AE0     		b	.L298
ARM GAS  /tmp/ccrA3BdH.s 			page 134


 4746              	.L311:
2195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Go sleeping until we get any down-stream event */
2198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_ACCEPT, pdTRUE /*xClearOnExit*/, pdFALSE /*
 4747              		.loc 3 2198 0
 4748 017a BB6A     		ldr	r3, [r7, #40]
 4749 017c 5A68     		ldr	r2, [r3, #4]
 4750 017e 7B6A     		ldr	r3, [r7, #36]
 4751 0180 0093     		str	r3, [sp]
 4752 0182 1046     		mov	r0, r2
 4753 0184 0421     		movs	r1, #4
 4754 0186 0122     		movs	r2, #1
 4755 0188 0023     		movs	r3, #0
 4756 018a FFF7FEFF 		bl	xEventGroupWaitBits
2199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
 4757              		.loc 3 2199 0
 4758 018e 62E7     		b	.L299
 4759              	.L298:
2200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return ( Socket_t ) pxClientSocket;
 4760              		.loc 3 2202 0
 4761 0190 7B6B     		ldr	r3, [r7, #52]
2203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 4762              		.loc 3 2203 0
 4763 0192 1846     		mov	r0, r3
 4764 0194 3837     		adds	r7, r7, #56
 4765              	.LCFI218:
 4766              		.cfi_def_cfa_offset 8
 4767 0196 BD46     		mov	sp, r7
 4768              	.LCFI219:
 4769              		.cfi_def_cfa_register 13
 4770              		@ sp needed
 4771 0198 80BD     		pop	{r7, pc}
 4772              		.cfi_endproc
 4773              	.LFE57:
 4775 019a 00BF     		.section	.text.FreeRTOS_recv,"ax",%progbits
 4776              		.align	2
 4777              		.global	FreeRTOS_recv
 4778              		.thumb
 4779              		.thumb_func
 4781              	FreeRTOS_recv:
 4782              	.LFB58:
2204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Read incoming data from a TCP socket
2211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Only after the last byte has been read, a close error might be returned
2212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_recv( Socket_t xSocket, void *pvBuffer, size_t xBufferLength, BaseType_t xFlag
2214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 4783              		.loc 3 2214 0
 4784              		.cfi_startproc
ARM GAS  /tmp/ccrA3BdH.s 			page 135


 4785              		@ args = 0, pretend = 0, frame = 48
 4786              		@ frame_needed = 1, uses_anonymous_args = 0
 4787 0000 80B5     		push	{r7, lr}
 4788              	.LCFI220:
 4789              		.cfi_def_cfa_offset 8
 4790              		.cfi_offset 7, -8
 4791              		.cfi_offset 14, -4
 4792 0002 8EB0     		sub	sp, sp, #56
 4793              	.LCFI221:
 4794              		.cfi_def_cfa_offset 64
 4795 0004 02AF     		add	r7, sp, #8
 4796              	.LCFI222:
 4797              		.cfi_def_cfa 7, 56
 4798 0006 F860     		str	r0, [r7, #12]
 4799 0008 B960     		str	r1, [r7, #8]
 4800 000a 7A60     		str	r2, [r7, #4]
 4801 000c 3B60     		str	r3, [r7]
2215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xByteCount;
2216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 4802              		.loc 3 2216 0
 4803 000e FB68     		ldr	r3, [r7, #12]
 4804 0010 3B62     		str	r3, [r7, #32]
2217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xRemainingTime;
2218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xTimed = pdFALSE;
 4805              		.loc 3 2218 0
 4806 0012 0023     		movs	r3, #0
 4807 0014 BB62     		str	r3, [r7, #40]
2219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TimeOut_t xTimeOut;
2220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	EventBits_t xEventBits = ( EventBits_t ) 0;
 4808              		.loc 3 2220 0
 4809 0016 0023     		movs	r3, #0
 4810 0018 7B62     		str	r3, [r7, #36]
2221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Check if the socket is valid, has type TCP and if it is bound to a
2223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		port. */
2224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_TCP, pdTRUE ) == pdFALSE )
 4811              		.loc 3 2224 0
 4812 001a 386A     		ldr	r0, [r7, #32]
 4813 001c 0621     		movs	r1, #6
 4814 001e 0122     		movs	r2, #1
 4815 0020 FFF7FEFF 		bl	prvValidSocket
 4816 0024 0346     		mov	r3, r0
 4817 0026 002B     		cmp	r3, #0
 4818 0028 03D1     		bne	.L314
2225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xByteCount = -pdFREERTOS_ERRNO_EINVAL;
 4819              		.loc 3 2226 0
 4820 002a 6FF01503 		mvn	r3, #21
 4821 002e FB62     		str	r3, [r7, #44]
 4822 0030 DEE0     		b	.L315
 4823              	.L314:
2227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.rxStream != NULL )
 4824              		.loc 3 2230 0
 4825 0032 3B6A     		ldr	r3, [r7, #32]
ARM GAS  /tmp/ccrA3BdH.s 			page 136


 4826 0034 5B6F     		ldr	r3, [r3, #116]
 4827 0036 002B     		cmp	r3, #0
 4828 0038 07D0     		beq	.L316
2231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xByteCount = ( BaseType_t )uxStreamBufferGetSize ( pxSocket->u.xTCP.rxStream );
 4829              		.loc 3 2232 0
 4830 003a 3B6A     		ldr	r3, [r7, #32]
 4831 003c 5B6F     		ldr	r3, [r3, #116]
 4832 003e 1846     		mov	r0, r3
 4833 0040 FFF7FEFF 		bl	uxStreamBufferGetSize
 4834 0044 0346     		mov	r3, r0
 4835 0046 FB62     		str	r3, [r7, #44]
 4836 0048 01E0     		b	.L317
 4837              	.L316:
2233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
2235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xByteCount = 0;
 4838              		.loc 3 2236 0
 4839 004a 0023     		movs	r3, #0
 4840 004c FB62     		str	r3, [r7, #44]
 4841              	.L317:
2237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			while( xByteCount == 0 )
 4842              		.loc 3 2239 0
 4843 004e 67E0     		b	.L318
 4844              	.L330:
2240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				switch( pxSocket->u.xTCP.ucTCPState )
 4845              		.loc 3 2241 0
 4846 0050 3B6A     		ldr	r3, [r7, #32]
 4847 0052 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 4848 0056 002B     		cmp	r3, #0
 4849 0058 04D0     		beq	.L320
 4850 005a 002B     		cmp	r3, #0
 4851 005c 12DB     		blt	.L337
 4852 005e 083B     		subs	r3, r3, #8
 4853 0060 012B     		cmp	r3, #1
 4854 0062 0FD8     		bhi	.L337
 4855              	.L320:
2242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case eCLOSED:
2244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case eCLOSE_WAIT:	/* (server + client) waiting for a connection termination request from the lo
2245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				case eCLOSING:		/* (server + client) waiting for a connection termination request acknowledgeme
2246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->u.xTCP.bits.bMallocError != pdFALSE_UNSIGNED )
 4856              		.loc 3 2246 0
 4857 0064 3B6A     		ldr	r3, [r7, #32]
 4858 0066 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 4859 006a 03F00803 		and	r3, r3, #8
 4860 006e DBB2     		uxtb	r3, r3
 4861 0070 002B     		cmp	r3, #0
 4862 0072 03D0     		beq	.L321
2247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* The no-memory error has priority above the non-connected error.
2249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						Both are fatal and will elad to closing the socket. */
2250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xByteCount = -pdFREERTOS_ERRNO_ENOMEM;
ARM GAS  /tmp/ccrA3BdH.s 			page 137


 4863              		.loc 3 2250 0
 4864 0074 6FF00B03 		mvn	r3, #11
 4865 0078 FB62     		str	r3, [r7, #44]
 4866 007a 02E0     		b	.L322
 4867              	.L321:
2251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
2253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xByteCount = -pdFREERTOS_ERRNO_ENOTCONN;
 4868              		.loc 3 2254 0
 4869 007c 6FF07F03 		mvn	r3, #127
 4870 0080 FB62     		str	r3, [r7, #44]
 4871              	.L322:
2255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Call continue to break out of the switch and also the while
2257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					loop. */
2258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					continue;
 4872              		.loc 3 2258 0
 4873 0082 4DE0     		b	.L318
 4874              	.L337:
2259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				default:
2260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4875              		.loc 3 2260 0
 4876 0084 00BF     		nop
2261:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2262:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTimed == pdFALSE )
 4877              		.loc 3 2263 0
 4878 0086 BB6A     		ldr	r3, [r7, #40]
 4879 0088 002B     		cmp	r3, #0
 4880 008a 1ED1     		bne	.L323
2264:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2265:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Only in the first round, check for non-blocking. */
2266:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xRemainingTime = pxSocket->xReceiveBlockTime;
 4881              		.loc 3 2266 0
 4882 008c 3B6A     		ldr	r3, [r7, #32]
 4883 008e DB69     		ldr	r3, [r3, #28]
 4884 0090 BB61     		str	r3, [r7, #24]
2267:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2268:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xRemainingTime == ( TickType_t ) 0 )
 4885              		.loc 3 2268 0
 4886 0092 BB69     		ldr	r3, [r7, #24]
 4887 0094 002B     		cmp	r3, #0
 4888 0096 0BD1     		bne	.L324
2269:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2270:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#if( ipconfigSUPPORT_SIGNALS != 0 )
2271:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
2272:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							/* Just check for the interrupt flag. */
2273:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							xEventBits = xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_INTR,
 4889              		.loc 3 2273 0
 4890 0098 3B6A     		ldr	r3, [r7, #32]
 4891 009a 5A68     		ldr	r2, [r3, #4]
 4892 009c 0023     		movs	r3, #0
 4893 009e 0093     		str	r3, [sp]
 4894 00a0 1046     		mov	r0, r2
 4895 00a2 4021     		movs	r1, #64
 4896 00a4 0122     		movs	r2, #1
ARM GAS  /tmp/ccrA3BdH.s 			page 138


 4897 00a6 0023     		movs	r3, #0
 4898 00a8 FFF7FEFF 		bl	xEventGroupWaitBits
 4899 00ac 7862     		str	r0, [r7, #36]
2274:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								pdTRUE /*xClearOnExit*/, pdFALSE /*xWaitAllBits*/, socketDONT_BLOCK );
2275:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
2276:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						#endif /* ipconfigSUPPORT_SIGNALS */
2277:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 4900              		.loc 3 2277 0
 4901 00ae 3AE0     		b	.L325
 4902              	.L324:
2278:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2279:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2280:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( xFlags & FREERTOS_MSG_DONTWAIT ) != 0 )
 4903              		.loc 3 2280 0
 4904 00b0 3B68     		ldr	r3, [r7]
 4905 00b2 03F01003 		and	r3, r3, #16
 4906 00b6 002B     		cmp	r3, #0
 4907 00b8 00D0     		beq	.L326
2281:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2282:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 4908              		.loc 3 2282 0
 4909 00ba 34E0     		b	.L325
 4910              	.L326:
2283:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2284:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2285:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Don't get here a second time. */
2286:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xTimed = pdTRUE;
 4911              		.loc 3 2286 0
 4912 00bc 0123     		movs	r3, #1
 4913 00be BB62     		str	r3, [r7, #40]
2287:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2288:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Fetch the current time. */
2289:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vTaskSetTimeOutState( &xTimeOut );
 4914              		.loc 3 2289 0
 4915 00c0 07F11003 		add	r3, r7, #16
 4916 00c4 1846     		mov	r0, r3
 4917 00c6 FFF7FEFF 		bl	vTaskSetTimeOutState
 4918              	.L323:
2290:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2291:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2292:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Has the timeout been reached? */
2293:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTaskCheckForTimeOut( &xTimeOut, &xRemainingTime ) != pdFALSE )
 4919              		.loc 3 2293 0
 4920 00ca 07F11002 		add	r2, r7, #16
 4921 00ce 07F11803 		add	r3, r7, #24
 4922 00d2 1046     		mov	r0, r2
 4923 00d4 1946     		mov	r1, r3
 4924 00d6 FFF7FEFF 		bl	xTaskCheckForTimeOut
 4925 00da 0346     		mov	r3, r0
 4926 00dc 002B     		cmp	r3, #0
 4927 00de 00D0     		beq	.L327
2294:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2295:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 4928              		.loc 3 2295 0
 4929 00e0 21E0     		b	.L325
 4930              	.L327:
2296:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
ARM GAS  /tmp/ccrA3BdH.s 			page 139


2297:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2298:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Block until there is a down-stream event. */
2299:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xEventBits = xEventGroupWaitBits( pxSocket->xEventGroup,
 4931              		.loc 3 2299 0
 4932 00e2 3B6A     		ldr	r3, [r7, #32]
 4933 00e4 5A68     		ldr	r2, [r3, #4]
 4934 00e6 BB69     		ldr	r3, [r7, #24]
 4935 00e8 0093     		str	r3, [sp]
 4936 00ea 1046     		mov	r0, r2
 4937 00ec 6121     		movs	r1, #97
 4938 00ee 0122     		movs	r2, #1
 4939 00f0 0023     		movs	r3, #0
 4940 00f2 FFF7FEFF 		bl	xEventGroupWaitBits
 4941 00f6 7862     		str	r0, [r7, #36]
2300:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					eSOCKET_RECEIVE | eSOCKET_CLOSED | eSOCKET_INTR,
2301:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pdTRUE /*xClearOnExit*/, pdFALSE /*xWaitAllBits*/, xRemainingTime );
2302:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigSUPPORT_SIGNALS != 0 )
2303:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2304:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( xEventBits & eSOCKET_INTR ) != 0u )
 4942              		.loc 3 2304 0
 4943 00f8 7B6A     		ldr	r3, [r7, #36]
 4944 00fa 03F04003 		and	r3, r3, #64
 4945 00fe 002B     		cmp	r3, #0
 4946 0100 00D0     		beq	.L328
2305:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 4947              		.loc 3 2306 0
 4948 0102 10E0     		b	.L325
 4949              	.L328:
2307:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2309:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#else
2310:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					( void ) xEventBits;
2312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2313:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif /* ipconfigSUPPORT_SIGNALS */
2314:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2315:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.rxStream != NULL )
 4950              		.loc 3 2315 0
 4951 0104 3B6A     		ldr	r3, [r7, #32]
 4952 0106 5B6F     		ldr	r3, [r3, #116]
 4953 0108 002B     		cmp	r3, #0
 4954 010a 07D0     		beq	.L329
2316:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2317:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = ( BaseType_t ) uxStreamBufferGetSize ( pxSocket->u.xTCP.rxStream );
 4955              		.loc 3 2317 0
 4956 010c 3B6A     		ldr	r3, [r7, #32]
 4957 010e 5B6F     		ldr	r3, [r3, #116]
 4958 0110 1846     		mov	r0, r3
 4959 0112 FFF7FEFF 		bl	uxStreamBufferGetSize
 4960 0116 0346     		mov	r3, r0
 4961 0118 FB62     		str	r3, [r7, #44]
 4962 011a 01E0     		b	.L318
 4963              	.L329:
2318:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2319:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else
2320:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
ARM GAS  /tmp/ccrA3BdH.s 			page 140


2321:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = 0;
 4964              		.loc 3 2321 0
 4965 011c 0023     		movs	r3, #0
 4966 011e FB62     		str	r3, [r7, #44]
 4967              	.L318:
2239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 4968              		.loc 3 2239 0
 4969 0120 FB6A     		ldr	r3, [r7, #44]
 4970 0122 002B     		cmp	r3, #0
 4971 0124 94D0     		beq	.L330
 4972              	.L325:
2322:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2323:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2324:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2325:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigSUPPORT_SIGNALS != 0 )
2326:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( xEventBits & eSOCKET_INTR ) != 0 )
 4973              		.loc 3 2326 0
 4974 0126 7B6A     		ldr	r3, [r7, #36]
 4975 0128 03F04003 		and	r3, r3, #64
 4976 012c 002B     		cmp	r3, #0
 4977 012e 12D0     		beq	.L331
2327:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2328:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( ( xEventBits & ( eSOCKET_RECEIVE | eSOCKET_CLOSED ) ) != 0 )
 4978              		.loc 3 2328 0
 4979 0130 7B6A     		ldr	r3, [r7, #36]
 4980 0132 03F02103 		and	r3, r3, #33
 4981 0136 002B     		cmp	r3, #0
 4982 0138 09D0     		beq	.L332
2329:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2330:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Shouldn't have cleared other flags. */
2331:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xEventBits &= ~eSOCKET_INTR;
 4983              		.loc 3 2331 0
 4984 013a 7B6A     		ldr	r3, [r7, #36]
 4985 013c 23F04003 		bic	r3, r3, #64
 4986 0140 7B62     		str	r3, [r7, #36]
2332:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xEventGroupSetBits( pxSocket->xEventGroup, xEventBits );
 4987              		.loc 3 2332 0
 4988 0142 3B6A     		ldr	r3, [r7, #32]
 4989 0144 5B68     		ldr	r3, [r3, #4]
 4990 0146 1846     		mov	r0, r3
 4991 0148 796A     		ldr	r1, [r7, #36]
 4992 014a FFF7FEFF 		bl	xEventGroupSetBits
 4993              	.L332:
2333:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2334:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xByteCount = -pdFREERTOS_ERRNO_EINTR;
 4994              		.loc 3 2334 0
 4995 014e 6FF00303 		mvn	r3, #3
 4996 0152 FB62     		str	r3, [r7, #44]
 4997 0154 4CE0     		b	.L315
 4998              	.L331:
2335:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2336:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
2337:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigSUPPORT_SIGNALS */
2338:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xByteCount > 0 )
 4999              		.loc 3 2338 0
 5000 0156 FB6A     		ldr	r3, [r7, #44]
 5001 0158 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 141


 5002 015a 49DD     		ble	.L315
2339:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2340:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( ( xFlags & FREERTOS_ZERO_COPY ) == 0 )
 5003              		.loc 3 2340 0
 5004 015c 3B68     		ldr	r3, [r7]
 5005 015e 03F00103 		and	r3, r3, #1
 5006 0162 002B     		cmp	r3, #0
 5007 0164 3CD1     		bne	.L333
2341:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2342:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = ( BaseType_t ) uxStreamBufferGet( pxSocket->u.xTCP.rxStream, 0ul, ( uint8_t * ) p
 5008              		.loc 3 2342 0
 5009 0166 3B6A     		ldr	r3, [r7, #32]
 5010 0168 5A6F     		ldr	r2, [r3, #116]
 5011 016a 3B68     		ldr	r3, [r7]
 5012 016c 03F00403 		and	r3, r3, #4
 5013 0170 002B     		cmp	r3, #0
 5014 0172 14BF     		ite	ne
 5015 0174 0123     		movne	r3, #1
 5016 0176 0023     		moveq	r3, #0
 5017 0178 DBB2     		uxtb	r3, r3
 5018 017a 0093     		str	r3, [sp]
 5019 017c 1046     		mov	r0, r2
 5020 017e 0021     		movs	r1, #0
 5021 0180 BA68     		ldr	r2, [r7, #8]
 5022 0182 7B68     		ldr	r3, [r7, #4]
 5023 0184 FFF7FEFF 		bl	uxStreamBufferGet
 5024 0188 0346     		mov	r3, r0
 5025 018a FB62     		str	r3, [r7, #44]
2343:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->u.xTCP.bits.bLowWater != pdFALSE_UNSIGNED )
 5026              		.loc 3 2343 0
 5027 018c 3B6A     		ldr	r3, [r7, #32]
 5028 018e 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 5029 0192 23F07F03 		bic	r3, r3, #127
 5030 0196 DBB2     		uxtb	r3, r3
 5031 0198 002B     		cmp	r3, #0
 5032 019a 20D0     		beq	.L334
 5033              	.LBB79:
2344:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2345:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* We had reached the low-water mark, now see if the flag
2346:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						can be cleared */
2347:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						size_t uxFrontSpace = uxStreamBufferFrontSpace( pxSocket->u.xTCP.rxStream );
 5034              		.loc 3 2347 0
 5035 019c 3B6A     		ldr	r3, [r7, #32]
 5036 019e 5B6F     		ldr	r3, [r3, #116]
 5037 01a0 1846     		mov	r0, r3
 5038 01a2 FFF7FEFF 		bl	uxStreamBufferFrontSpace
 5039 01a6 F861     		str	r0, [r7, #28]
2348:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2349:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( uxFrontSpace >= pxSocket->u.xTCP.uxEnoughSpace )
 5040              		.loc 3 2349 0
 5041 01a8 3B6A     		ldr	r3, [r7, #32]
 5042 01aa 9A6E     		ldr	r2, [r3, #104]
 5043 01ac FB69     		ldr	r3, [r7, #28]
 5044 01ae 9A42     		cmp	r2, r3
 5045 01b0 15D8     		bhi	.L334
2350:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
2351:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xTCP.bits.bLowWater = pdFALSE_UNSIGNED;
ARM GAS  /tmp/ccrA3BdH.s 			page 142


 5046              		.loc 3 2351 0
 5047 01b2 3A6A     		ldr	r2, [r7, #32]
 5048 01b4 92F84030 		ldrb	r3, [r2, #64]
 5049 01b8 6FF3C713 		bfc	r3, #7, #1
 5050 01bc 82F84030 		strb	r3, [r2, #64]
2352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xTCP.bits.bWinChange = pdTRUE_UNSIGNED;
 5051              		.loc 3 2352 0
 5052 01c0 3A6A     		ldr	r2, [r7, #32]
 5053 01c2 92F84130 		ldrb	r3, [r2, #65]
 5054 01c6 43F00103 		orr	r3, r3, #1
 5055 01ca 82F84130 		strb	r3, [r2, #65]
2353:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xTCP.usTimeout = 1u; /* because bLowWater is cleared. */
 5056              		.loc 3 2353 0
 5057 01ce 3B6A     		ldr	r3, [r7, #32]
 5058 01d0 0122     		movs	r2, #1
 5059 01d2 A3F84820 		strh	r2, [r3, #72]	@ movhi
2354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							xSendEventToIPTask( eTCPTimerEvent );
 5060              		.loc 3 2354 0
 5061 01d6 0520     		movs	r0, #5
 5062 01d8 FFF7FEFF 		bl	xSendEventToIPTask
 5063              	.LBE79:
 5064 01dc 08E0     		b	.L315
 5065              	.L334:
 5066 01de 07E0     		b	.L315
 5067              	.L333:
2355:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
2356:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2357:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2358:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else
2359:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2360:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Zero-copy reception of data: pvBuffer is a pointer to a pointer. */
2361:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = ( BaseType_t ) uxStreamBufferGetPtr( pxSocket->u.xTCP.rxStream, (uint8_t **)pvBuf
 5068              		.loc 3 2361 0
 5069 01e0 3B6A     		ldr	r3, [r7, #32]
 5070 01e2 5B6F     		ldr	r3, [r3, #116]
 5071 01e4 1846     		mov	r0, r3
 5072 01e6 B968     		ldr	r1, [r7, #8]
 5073 01e8 FFF7FEFF 		bl	uxStreamBufferGetPtr
 5074 01ec 0346     		mov	r3, r0
 5075 01ee FB62     		str	r3, [r7, #44]
 5076              	.L315:
2362:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2363:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2364:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		} /* prvValidSocket() */
2365:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2366:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xByteCount;
 5077              		.loc 3 2366 0
 5078 01f0 FB6A     		ldr	r3, [r7, #44]
2367:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5079              		.loc 3 2367 0
 5080 01f2 1846     		mov	r0, r3
 5081 01f4 3037     		adds	r7, r7, #48
 5082              	.LCFI223:
 5083              		.cfi_def_cfa_offset 8
 5084 01f6 BD46     		mov	sp, r7
 5085              	.LCFI224:
 5086              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccrA3BdH.s 			page 143


 5087              		@ sp needed
 5088 01f8 80BD     		pop	{r7, pc}
 5089              		.cfi_endproc
 5090              	.LFE58:
 5092              		.section	.text.prvTCPSendCheck,"ax",%progbits
 5093              		.align	2
 5094              		.thumb
 5095              		.thumb_func
 5097              	prvTCPSendCheck:
 5098              	.LFB59:
2368:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2369:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2371:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2372:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2373:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2374:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static int32_t prvTCPSendCheck( FreeRTOS_Socket_t *pxSocket, size_t xDataLength )
2375:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5099              		.loc 3 2375 0
 5100              		.cfi_startproc
 5101              		@ args = 0, pretend = 0, frame = 16
 5102              		@ frame_needed = 1, uses_anonymous_args = 0
 5103 0000 80B5     		push	{r7, lr}
 5104              	.LCFI225:
 5105              		.cfi_def_cfa_offset 8
 5106              		.cfi_offset 7, -8
 5107              		.cfi_offset 14, -4
 5108 0002 84B0     		sub	sp, sp, #16
 5109              	.LCFI226:
 5110              		.cfi_def_cfa_offset 24
 5111 0004 00AF     		add	r7, sp, #0
 5112              	.LCFI227:
 5113              		.cfi_def_cfa_register 7
 5114 0006 7860     		str	r0, [r7, #4]
 5115 0008 3960     		str	r1, [r7]
2376:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	int32_t xResult = 1;
 5116              		.loc 3 2376 0
 5117 000a 0123     		movs	r3, #1
 5118 000c FB60     		str	r3, [r7, #12]
2377:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2378:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Is this a socket of type TCP and is it already bound to a port number ? */
2379:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_TCP, pdTRUE ) == pdFALSE )
 5119              		.loc 3 2379 0
 5120 000e 7868     		ldr	r0, [r7, #4]
 5121 0010 0621     		movs	r1, #6
 5122 0012 0122     		movs	r2, #1
 5123 0014 FFF7FEFF 		bl	prvValidSocket
 5124 0018 0346     		mov	r3, r0
 5125 001a 002B     		cmp	r3, #0
 5126 001c 03D1     		bne	.L339
2380:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2381:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EINVAL;
 5127              		.loc 3 2381 0
 5128 001e 6FF01503 		mvn	r3, #21
 5129 0022 FB60     		str	r3, [r7, #12]
 5130 0024 34E0     		b	.L340
 5131              	.L339:
ARM GAS  /tmp/ccrA3BdH.s 			page 144


2382:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2383:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.bits.bMallocError != pdFALSE_UNSIGNED )
 5132              		.loc 3 2383 0
 5133 0026 7B68     		ldr	r3, [r7, #4]
 5134 0028 93F84230 		ldrb	r3, [r3, #66]	@ zero_extendqisi2
 5135 002c 03F00803 		and	r3, r3, #8
 5136 0030 DBB2     		uxtb	r3, r3
 5137 0032 002B     		cmp	r3, #0
 5138 0034 03D0     		beq	.L341
2384:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2385:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_ENOMEM;
 5139              		.loc 3 2385 0
 5140 0036 6FF00B03 		mvn	r3, #11
 5141 003a FB60     		str	r3, [r7, #12]
 5142 003c 28E0     		b	.L340
 5143              	.L341:
2386:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2387:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.ucTCPState == eCLOSED )
 5144              		.loc 3 2387 0
 5145 003e 7B68     		ldr	r3, [r7, #4]
 5146 0040 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 5147 0044 002B     		cmp	r3, #0
 5148 0046 03D1     		bne	.L342
2388:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2389:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_ENOTCONN;
 5149              		.loc 3 2389 0
 5150 0048 6FF07F03 		mvn	r3, #127
 5151 004c FB60     		str	r3, [r7, #12]
 5152 004e 1FE0     		b	.L340
 5153              	.L342:
2390:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.bits.bFinSent != pdFALSE_UNSIGNED )
 5154              		.loc 3 2391 0
 5155 0050 7B68     		ldr	r3, [r7, #4]
 5156 0052 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 5157 0056 03F04003 		and	r3, r3, #64
 5158 005a DBB2     		uxtb	r3, r3
 5159 005c 002B     		cmp	r3, #0
 5160 005e 02D0     		beq	.L343
2392:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* This TCP connection is closing already, the FIN flag has been sent.
2394:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			Maybe it is still delivering or receiving data.
2395:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			Return OK in order not to get closed/deleted too quickly */
2396:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = 0;
 5161              		.loc 3 2396 0
 5162 0060 0023     		movs	r3, #0
 5163 0062 FB60     		str	r3, [r7, #12]
 5164 0064 14E0     		b	.L340
 5165              	.L343:
2397:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2398:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( xDataLength == 0ul )
 5166              		.loc 3 2398 0
 5167 0066 3B68     		ldr	r3, [r7]
 5168 0068 002B     		cmp	r3, #0
 5169 006a 02D1     		bne	.L344
2399:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2400:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* send() is being called to send zero bytes */
ARM GAS  /tmp/ccrA3BdH.s 			page 145


2401:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = 0;
 5170              		.loc 3 2401 0
 5171 006c 0023     		movs	r3, #0
 5172 006e FB60     		str	r3, [r7, #12]
 5173 0070 0EE0     		b	.L340
 5174              	.L344:
2402:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2403:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.txStream == NULL )
 5175              		.loc 3 2403 0
 5176 0072 7B68     		ldr	r3, [r7, #4]
 5177 0074 9B6F     		ldr	r3, [r3, #120]
 5178 0076 002B     		cmp	r3, #0
 5179 0078 0AD1     		bne	.L340
2404:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2405:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Create the outgoing stream only when it is needed */
2406:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			prvTCPCreateStream( pxSocket, pdFALSE );
 5180              		.loc 3 2406 0
 5181 007a 7868     		ldr	r0, [r7, #4]
 5182 007c 0021     		movs	r1, #0
 5183 007e FFF7FEFF 		bl	prvTCPCreateStream
2407:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.txStream == NULL )
 5184              		.loc 3 2408 0
 5185 0082 7B68     		ldr	r3, [r7, #4]
 5186 0084 9B6F     		ldr	r3, [r3, #120]
 5187 0086 002B     		cmp	r3, #0
 5188 0088 02D1     		bne	.L340
2409:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2410:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xResult = -pdFREERTOS_ERRNO_ENOMEM;
 5189              		.loc 3 2410 0
 5190 008a 6FF00B03 		mvn	r3, #11
 5191 008e FB60     		str	r3, [r7, #12]
 5192              	.L340:
2411:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2412:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2413:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2414:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 5193              		.loc 3 2414 0
 5194 0090 FB68     		ldr	r3, [r7, #12]
2415:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5195              		.loc 3 2415 0
 5196 0092 1846     		mov	r0, r3
 5197 0094 1037     		adds	r7, r7, #16
 5198              	.LCFI228:
 5199              		.cfi_def_cfa_offset 8
 5200 0096 BD46     		mov	sp, r7
 5201              	.LCFI229:
 5202              		.cfi_def_cfa_register 13
 5203              		@ sp needed
 5204 0098 80BD     		pop	{r7, pc}
 5205              		.cfi_endproc
 5206              	.LFE59:
 5208 009a 00BF     		.section	.text.FreeRTOS_get_tx_head,"ax",%progbits
 5209              		.align	2
 5210              		.global	FreeRTOS_get_tx_head
 5211              		.thumb
 5212              		.thumb_func
ARM GAS  /tmp/ccrA3BdH.s 			page 146


 5214              	FreeRTOS_get_tx_head:
 5215              	.LFB60:
2416:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2417:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2418:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2419:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2420:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2421:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2422:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Get a direct pointer to the circular transmit buffer.
2423:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	'*pxLength' will contain the number of bytes that may be written. */
2424:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	uint8_t *FreeRTOS_get_tx_head( Socket_t xSocket, BaseType_t *pxLength )
2425:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5216              		.loc 3 2425 0
 5217              		.cfi_startproc
 5218              		@ args = 0, pretend = 0, frame = 32
 5219              		@ frame_needed = 1, uses_anonymous_args = 0
 5220 0000 80B5     		push	{r7, lr}
 5221              	.LCFI230:
 5222              		.cfi_def_cfa_offset 8
 5223              		.cfi_offset 7, -8
 5224              		.cfi_offset 14, -4
 5225 0002 88B0     		sub	sp, sp, #32
 5226              	.LCFI231:
 5227              		.cfi_def_cfa_offset 40
 5228 0004 00AF     		add	r7, sp, #0
 5229              	.LCFI232:
 5230              		.cfi_def_cfa_register 7
 5231 0006 7860     		str	r0, [r7, #4]
 5232 0008 3960     		str	r1, [r7]
2426:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	uint8_t *pucReturn;
2427:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 5233              		.loc 3 2427 0
 5234 000a 7B68     		ldr	r3, [r7, #4]
 5235 000c BB61     		str	r3, [r7, #24]
2428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	StreamBuffer_t *pxBuffer = pxSocket->u.xTCP.txStream;
 5236              		.loc 3 2428 0
 5237 000e BB69     		ldr	r3, [r7, #24]
 5238 0010 9B6F     		ldr	r3, [r3, #120]
 5239 0012 7B61     		str	r3, [r7, #20]
2429:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2430:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxBuffer != NULL )
 5240              		.loc 3 2430 0
 5241 0014 7B69     		ldr	r3, [r7, #20]
 5242 0016 002B     		cmp	r3, #0
 5243 0018 19D0     		beq	.L347
 5244              	.LBB80:
2431:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2432:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		BaseType_t xSpace = ( BaseType_t ) uxStreamBufferGetSpace( pxBuffer );
 5245              		.loc 3 2432 0
 5246 001a 7869     		ldr	r0, [r7, #20]
 5247 001c FFF7FEFF 		bl	uxStreamBufferGetSpace
 5248 0020 0346     		mov	r3, r0
 5249 0022 3B61     		str	r3, [r7, #16]
2433:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		BaseType_t xRemain = ( BaseType_t ) ( pxBuffer->LENGTH - pxBuffer->uxHead );
 5250              		.loc 3 2433 0
 5251 0024 7B69     		ldr	r3, [r7, #20]
 5252 0026 1A69     		ldr	r2, [r3, #16]
ARM GAS  /tmp/ccrA3BdH.s 			page 147


 5253 0028 7B69     		ldr	r3, [r7, #20]
 5254 002a 9B68     		ldr	r3, [r3, #8]
 5255 002c D31A     		subs	r3, r2, r3
 5256 002e FB60     		str	r3, [r7, #12]
2434:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2435:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			*pxLength = FreeRTOS_min_BaseType( xSpace, xRemain );
 5257              		.loc 3 2435 0
 5258 0030 3869     		ldr	r0, [r7, #16]
 5259 0032 F968     		ldr	r1, [r7, #12]
 5260 0034 FFF7FEFF 		bl	FreeRTOS_min_BaseType
 5261 0038 0246     		mov	r2, r0
 5262 003a 3B68     		ldr	r3, [r7]
 5263 003c 1A60     		str	r2, [r3]
2436:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pucReturn = pxBuffer->ucArray + pxBuffer->uxHead;
 5264              		.loc 3 2436 0
 5265 003e 7B69     		ldr	r3, [r7, #20]
 5266 0040 9B68     		ldr	r3, [r3, #8]
 5267 0042 1033     		adds	r3, r3, #16
 5268 0044 7A69     		ldr	r2, [r7, #20]
 5269 0046 1344     		add	r3, r3, r2
 5270 0048 0433     		adds	r3, r3, #4
 5271 004a FB61     		str	r3, [r7, #28]
 5272              	.LBE80:
 5273 004c 04E0     		b	.L348
 5274              	.L347:
2437:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2438:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2439:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2440:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			*pxLength = 0;
 5275              		.loc 3 2440 0
 5276 004e 3B68     		ldr	r3, [r7]
 5277 0050 0022     		movs	r2, #0
 5278 0052 1A60     		str	r2, [r3]
2441:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pucReturn = NULL;
 5279              		.loc 3 2441 0
 5280 0054 0023     		movs	r3, #0
 5281 0056 FB61     		str	r3, [r7, #28]
 5282              	.L348:
2442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2443:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return pucReturn;
 5283              		.loc 3 2444 0
 5284 0058 FB69     		ldr	r3, [r7, #28]
2445:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5285              		.loc 3 2445 0
 5286 005a 1846     		mov	r0, r3
 5287 005c 2037     		adds	r7, r7, #32
 5288              	.LCFI233:
 5289              		.cfi_def_cfa_offset 8
 5290 005e BD46     		mov	sp, r7
 5291              	.LCFI234:
 5292              		.cfi_def_cfa_register 13
 5293              		@ sp needed
 5294 0060 80BD     		pop	{r7, pc}
 5295              		.cfi_endproc
 5296              	.LFE60:
 5298 0062 00BF     		.section	.text.FreeRTOS_send,"ax",%progbits
ARM GAS  /tmp/ccrA3BdH.s 			page 148


 5299              		.align	2
 5300              		.global	FreeRTOS_send
 5301              		.thumb
 5302              		.thumb_func
 5304              	FreeRTOS_send:
 5305              	.LFB61:
2446:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2447:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2448:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2449:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2450:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2451:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Send data using a TCP socket.  It is not necessary to have the socket
2452:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * connected already.  Outgoing data will be stored and delivered as soon as
2453:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * the socket gets connected.
2454:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2455:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_send( Socket_t xSocket, const void *pvBuffer, size_t uxDataLength, BaseType_t 
2456:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5306              		.loc 3 2456 0
 5307              		.cfi_startproc
 5308              		@ args = 0, pretend = 0, frame = 48
 5309              		@ frame_needed = 1, uses_anonymous_args = 0
 5310 0000 80B5     		push	{r7, lr}
 5311              	.LCFI235:
 5312              		.cfi_def_cfa_offset 8
 5313              		.cfi_offset 7, -8
 5314              		.cfi_offset 14, -4
 5315 0002 8EB0     		sub	sp, sp, #56
 5316              	.LCFI236:
 5317              		.cfi_def_cfa_offset 64
 5318 0004 02AF     		add	r7, sp, #8
 5319              	.LCFI237:
 5320              		.cfi_def_cfa 7, 56
 5321 0006 F860     		str	r0, [r7, #12]
 5322 0008 B960     		str	r1, [r7, #8]
 5323 000a 7A60     		str	r2, [r7, #4]
 5324 000c 3B60     		str	r3, [r7]
2457:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xByteCount;
2458:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xBytesLeft;
2459:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 5325              		.loc 3 2459 0
 5326 000e FB68     		ldr	r3, [r7, #12]
 5327 0010 FB61     		str	r3, [r7, #28]
2460:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xRemainingTime;
2461:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xTimed = pdFALSE;
 5328              		.loc 3 2461 0
 5329 0012 0023     		movs	r3, #0
 5330 0014 7B62     		str	r3, [r7, #36]
2462:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TimeOut_t xTimeOut;
2463:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xCloseAfterSend;
2464:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2465:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Prevent compiler warnings about unused parameters.  The parameter
2466:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		may be used in future versions. */
2467:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		( void ) xFlags;
2468:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2469:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xByteCount = ( BaseType_t ) prvTCPSendCheck( pxSocket, uxDataLength );
 5331              		.loc 3 2469 0
 5332 0016 F869     		ldr	r0, [r7, #28]
ARM GAS  /tmp/ccrA3BdH.s 			page 149


 5333 0018 7968     		ldr	r1, [r7, #4]
 5334 001a FFF7FEFF 		bl	prvTCPSendCheck
 5335 001e F862     		str	r0, [r7, #44]
2470:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2471:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xByteCount > 0 )
 5336              		.loc 3 2471 0
 5337 0020 FB6A     		ldr	r3, [r7, #44]
 5338 0022 002B     		cmp	r3, #0
 5339 0024 40F3A680 		ble	.L351
2472:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2473:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* xBytesLeft is number of bytes to send, will count to zero. */
2474:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xBytesLeft = ( BaseType_t ) uxDataLength;
 5340              		.loc 3 2474 0
 5341 0028 7B68     		ldr	r3, [r7, #4]
 5342 002a BB62     		str	r3, [r7, #40]
2475:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2476:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* xByteCount is number of bytes that can be sent now. */
2477:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xByteCount = ( BaseType_t ) uxStreamBufferGetSpace( pxSocket->u.xTCP.txStream );
 5343              		.loc 3 2477 0
 5344 002c FB69     		ldr	r3, [r7, #28]
 5345 002e 9B6F     		ldr	r3, [r3, #120]
 5346 0030 1846     		mov	r0, r3
 5347 0032 FFF7FEFF 		bl	uxStreamBufferGetSpace
 5348 0036 0346     		mov	r3, r0
 5349 0038 FB62     		str	r3, [r7, #44]
2478:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2479:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* While there are still bytes to be sent. */
2480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			while( xBytesLeft > 0 )
 5350              		.loc 3 2480 0
 5351 003a 81E0     		b	.L352
 5352              	.L366:
2481:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2482:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* If txStream has space. */
2483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xByteCount > 0 )
 5353              		.loc 3 2483 0
 5354 003c FB6A     		ldr	r3, [r7, #44]
 5355 003e 002B     		cmp	r3, #0
 5356 0040 49DD     		ble	.L353
2484:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2485:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Don't send more than necessary. */
2486:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xByteCount > xBytesLeft )
 5357              		.loc 3 2486 0
 5358 0042 FA6A     		ldr	r2, [r7, #44]
 5359 0044 BB6A     		ldr	r3, [r7, #40]
 5360 0046 9A42     		cmp	r2, r3
 5361 0048 01DD     		ble	.L354
2487:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2488:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xByteCount = xBytesLeft;
 5362              		.loc 3 2488 0
 5363 004a BB6A     		ldr	r3, [r7, #40]
 5364 004c FB62     		str	r3, [r7, #44]
 5365              	.L354:
2489:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2490:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2491:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Is the close-after-send flag set and is this really the
2492:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					last transmission? */
2493:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( pxSocket->u.xTCP.bits.bCloseAfterSend != pdFALSE_UNSIGNED ) && ( xByteCount == xBytesLef
ARM GAS  /tmp/ccrA3BdH.s 			page 150


 5366              		.loc 3 2493 0
 5367 004e FB69     		ldr	r3, [r7, #28]
 5368 0050 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 5369 0054 03F01003 		and	r3, r3, #16
 5370 0058 DBB2     		uxtb	r3, r3
 5371 005a 002B     		cmp	r3, #0
 5372 005c 06D0     		beq	.L355
 5373              		.loc 3 2493 0 is_stmt 0 discriminator 1
 5374 005e FA6A     		ldr	r2, [r7, #44]
 5375 0060 BB6A     		ldr	r3, [r7, #40]
 5376 0062 9A42     		cmp	r2, r3
 5377 0064 02D1     		bne	.L355
2494:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2495:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xCloseAfterSend = pdTRUE;
 5378              		.loc 3 2495 0 is_stmt 1
 5379 0066 0123     		movs	r3, #1
 5380 0068 3B62     		str	r3, [r7, #32]
 5381 006a 01E0     		b	.L356
 5382              	.L355:
2496:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2497:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
2498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xCloseAfterSend = pdFALSE;
 5383              		.loc 3 2499 0
 5384 006c 0023     		movs	r3, #0
 5385 006e 3B62     		str	r3, [r7, #32]
 5386              	.L356:
2500:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2501:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2502:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* The flag 'bCloseAfterSend' can be set before sending data
2503:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					using setsockopt()
2504:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2505:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					When the last data packet is being sent out, a FIN flag will
2506:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					be included to let the peer know that no more data is to be
2507:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					expected.  The use of 'bCloseAfterSend' is not mandatory, it
2508:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					is just a faster way of transferring files (e.g. when using
2509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					FTP). */
2510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xCloseAfterSend != pdFALSE )
 5387              		.loc 3 2510 0
 5388 0070 3B6A     		ldr	r3, [r7, #32]
 5389 0072 002B     		cmp	r3, #0
 5390 0074 08D0     		beq	.L357
2511:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2512:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Now suspend the scheduler: sending the last data	and
2513:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						setting bCloseRequested must be done together */
2514:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						vTaskSuspendAll();
 5391              		.loc 3 2514 0
 5392 0076 FFF7FEFF 		bl	vTaskSuspendAll
2515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bCloseRequested = pdTRUE_UNSIGNED;
 5393              		.loc 3 2515 0
 5394 007a FA69     		ldr	r2, [r7, #28]
 5395 007c 92F84030 		ldrb	r3, [r2, #64]
 5396 0080 43F04003 		orr	r3, r3, #64
 5397 0084 82F84030 		strb	r3, [r2, #64]
 5398              	.L357:
2516:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2517:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 151


2518:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = ( BaseType_t ) uxStreamBufferAdd( pxSocket->u.xTCP.txStream, 0ul, ( const uint8_t
 5399              		.loc 3 2518 0
 5400 0088 FB69     		ldr	r3, [r7, #28]
 5401 008a 9A6F     		ldr	r2, [r3, #120]
 5402 008c FB6A     		ldr	r3, [r7, #44]
 5403 008e 1046     		mov	r0, r2
 5404 0090 0021     		movs	r1, #0
 5405 0092 BA68     		ldr	r2, [r7, #8]
 5406 0094 FFF7FEFF 		bl	uxStreamBufferAdd
 5407 0098 0346     		mov	r3, r0
 5408 009a FB62     		str	r3, [r7, #44]
2519:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2520:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xCloseAfterSend != pdFALSE )
 5409              		.loc 3 2520 0
 5410 009c 3B6A     		ldr	r3, [r7, #32]
 5411 009e 002B     		cmp	r3, #0
 5412 00a0 01D0     		beq	.L358
2521:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2522:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Now when the IP-task transmits the data, it will also
2523:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						see	that bCloseRequested is true and include the FIN
2524:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						flag to start closure of the connection. */
2525:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xTaskResumeAll();
 5413              		.loc 3 2525 0
 5414 00a2 FFF7FEFF 		bl	xTaskResumeAll
 5415              	.L358:
2526:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2527:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Send a message to the IP-task so it can work on this
2529:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					socket.  Data is sent, let the IP-task work on it. */
2530:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.usTimeout = 1u;
 5416              		.loc 3 2530 0
 5417 00a6 FB69     		ldr	r3, [r7, #28]
 5418 00a8 0122     		movs	r2, #1
 5419 00aa A3F84820 		strh	r2, [r3, #72]	@ movhi
2531:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2532:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xIsCallingFromIPTask() == pdFALSE )
 5420              		.loc 3 2532 0
 5421 00ae FFF7FEFF 		bl	xIsCallingFromIPTask
 5422 00b2 0346     		mov	r3, r0
 5423 00b4 002B     		cmp	r3, #0
 5424 00b6 02D1     		bne	.L359
2533:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2534:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Only send a TCP timer event when not called from the
2535:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						IP-task. */
2536:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xSendEventToIPTask( eTCPTimerEvent );
 5425              		.loc 3 2536 0
 5426 00b8 0520     		movs	r0, #5
 5427 00ba FFF7FEFF 		bl	xSendEventToIPTask
 5428              	.L359:
2537:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2538:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2539:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xBytesLeft -= xByteCount;
 5429              		.loc 3 2539 0
 5430 00be BA6A     		ldr	r2, [r7, #40]
 5431 00c0 FB6A     		ldr	r3, [r7, #44]
 5432 00c2 D31A     		subs	r3, r2, r3
 5433 00c4 BB62     		str	r3, [r7, #40]
ARM GAS  /tmp/ccrA3BdH.s 			page 152


2540:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2541:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xBytesLeft == 0 )
 5434              		.loc 3 2541 0
 5435 00c6 BB6A     		ldr	r3, [r7, #40]
 5436 00c8 002B     		cmp	r3, #0
 5437 00ca 00D1     		bne	.L360
2542:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2543:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 5438              		.loc 3 2543 0
 5439 00cc 3CE0     		b	.L361
 5440              	.L360:
2544:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2545:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2546:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* As there are still bytes left to be sent, increase the
2547:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					data pointer. */
2548:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pvBuffer = ( void * ) ( ( ( const uint8_t * ) pvBuffer) + xByteCount );
 5441              		.loc 3 2548 0
 5442 00ce FB6A     		ldr	r3, [r7, #44]
 5443 00d0 BA68     		ldr	r2, [r7, #8]
 5444 00d2 1344     		add	r3, r3, r2
 5445 00d4 BB60     		str	r3, [r7, #8]
 5446              	.L353:
2549:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2550:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2551:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Not all bytes have been sent. In case the socket is marked as
2552:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				blocking sleep for a while. */
2553:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTimed == pdFALSE )
 5447              		.loc 3 2553 0
 5448 00d6 7B6A     		ldr	r3, [r7, #36]
 5449 00d8 002B     		cmp	r3, #0
 5450 00da 14D1     		bne	.L362
2554:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2555:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Only in the first round, check for non-blocking. */
2556:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xRemainingTime = pxSocket->xSendBlockTime;
 5451              		.loc 3 2556 0
 5452 00dc FB69     		ldr	r3, [r7, #28]
 5453 00de 1B6A     		ldr	r3, [r3, #32]
 5454 00e0 BB61     		str	r3, [r7, #24]
2557:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2558:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#if( ipconfigUSE_CALLBACKS != 0 )
2559:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2560:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( xIsCallingFromIPTask() != pdFALSE )
2561:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
2562:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							/* If this send function is called from within a
2563:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							call-back handler it may not block, otherwise
2564:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							chances would be big to get a deadlock: the IP-task
2565:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							waiting for	itself. */
2566:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							xRemainingTime = ( TickType_t ) 0;
2567:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
2568:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2569:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					#endif /* ipconfigUSE_CALLBACKS */
2570:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2571:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xRemainingTime == ( TickType_t ) 0 )
 5455              		.loc 3 2571 0
 5456 00e2 BB69     		ldr	r3, [r7, #24]
 5457 00e4 002B     		cmp	r3, #0
 5458 00e6 00D1     		bne	.L363
ARM GAS  /tmp/ccrA3BdH.s 			page 153


2572:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2573:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 5459              		.loc 3 2573 0
 5460 00e8 2EE0     		b	.L361
 5461              	.L363:
2574:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2575:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2576:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( xFlags & FREERTOS_MSG_DONTWAIT ) != 0 )
 5462              		.loc 3 2576 0
 5463 00ea 3B68     		ldr	r3, [r7]
 5464 00ec 03F01003 		and	r3, r3, #16
 5465 00f0 002B     		cmp	r3, #0
 5466 00f2 00D0     		beq	.L364
2577:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2578:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 5467              		.loc 3 2578 0
 5468 00f4 28E0     		b	.L361
 5469              	.L364:
2579:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2580:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2581:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Don't get here a second time. */
2582:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xTimed = pdTRUE;
 5470              		.loc 3 2582 0
 5471 00f6 0123     		movs	r3, #1
 5472 00f8 7B62     		str	r3, [r7, #36]
2583:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2584:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Fetch the current time. */
2585:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vTaskSetTimeOutState( &xTimeOut );
 5473              		.loc 3 2585 0
 5474 00fa 07F11003 		add	r3, r7, #16
 5475 00fe 1846     		mov	r0, r3
 5476 0100 FFF7FEFF 		bl	vTaskSetTimeOutState
 5477 0104 0BE0     		b	.L365
 5478              	.L362:
2586:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2587:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else
2588:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2589:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Has the timeout been reached? */
2590:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( xTaskCheckForTimeOut( &xTimeOut, &xRemainingTime ) != pdFALSE )
 5479              		.loc 3 2590 0
 5480 0106 07F11002 		add	r2, r7, #16
 5481 010a 07F11803 		add	r3, r7, #24
 5482 010e 1046     		mov	r0, r2
 5483 0110 1946     		mov	r1, r3
 5484 0112 FFF7FEFF 		bl	xTaskCheckForTimeOut
 5485 0116 0346     		mov	r3, r0
 5486 0118 002B     		cmp	r3, #0
 5487 011a 00D0     		beq	.L365
2591:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2592:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						break;
 5488              		.loc 3 2592 0
 5489 011c 14E0     		b	.L361
 5490              	.L365:
2593:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2594:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2595:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2596:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Go sleeping until down-stream events are received. */
ARM GAS  /tmp/ccrA3BdH.s 			page 154


2597:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xEventGroupWaitBits( pxSocket->xEventGroup, eSOCKET_SEND | eSOCKET_CLOSED,
 5491              		.loc 3 2597 0
 5492 011e FB69     		ldr	r3, [r7, #28]
 5493 0120 5A68     		ldr	r2, [r3, #4]
 5494 0122 BB69     		ldr	r3, [r7, #24]
 5495 0124 0093     		str	r3, [sp]
 5496 0126 1046     		mov	r0, r2
 5497 0128 2221     		movs	r1, #34
 5498 012a 0122     		movs	r2, #1
 5499 012c 0023     		movs	r3, #0
 5500 012e FFF7FEFF 		bl	xEventGroupWaitBits
2598:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pdTRUE /*xClearOnExit*/, pdFALSE /*xWaitAllBits*/, xRemainingTime );
2599:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2600:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xByteCount = ( BaseType_t ) uxStreamBufferGetSpace( pxSocket->u.xTCP.txStream );
 5501              		.loc 3 2600 0
 5502 0132 FB69     		ldr	r3, [r7, #28]
 5503 0134 9B6F     		ldr	r3, [r3, #120]
 5504 0136 1846     		mov	r0, r3
 5505 0138 FFF7FEFF 		bl	uxStreamBufferGetSpace
 5506 013c 0346     		mov	r3, r0
 5507 013e FB62     		str	r3, [r7, #44]
 5508              	.L352:
2480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 5509              		.loc 3 2480 0
 5510 0140 BB6A     		ldr	r3, [r7, #40]
 5511 0142 002B     		cmp	r3, #0
 5512 0144 3FF77AAF 		bgt	.L366
 5513              	.L361:
2601:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2602:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2603:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* How much was actually sent? */
2604:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xByteCount = ( ( BaseType_t ) uxDataLength ) - xBytesLeft;
 5514              		.loc 3 2604 0
 5515 0148 7A68     		ldr	r2, [r7, #4]
 5516 014a BB6A     		ldr	r3, [r7, #40]
 5517 014c D31A     		subs	r3, r2, r3
 5518 014e FB62     		str	r3, [r7, #44]
2605:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xByteCount == 0 )
 5519              		.loc 3 2606 0
 5520 0150 FB6A     		ldr	r3, [r7, #44]
 5521 0152 002B     		cmp	r3, #0
 5522 0154 0ED1     		bne	.L351
2607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2608:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.ucTCPState > eESTABLISHED )
 5523              		.loc 3 2608 0
 5524 0156 FB69     		ldr	r3, [r7, #28]
 5525 0158 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 5526 015c 052B     		cmp	r3, #5
 5527 015e 03D9     		bls	.L367
2609:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2610:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = ( BaseType_t ) -pdFREERTOS_ERRNO_ENOTCONN;
 5528              		.loc 3 2610 0
 5529 0160 6FF07F03 		mvn	r3, #127
 5530 0164 FB62     		str	r3, [r7, #44]
 5531 0166 05E0     		b	.L351
 5532              	.L367:
ARM GAS  /tmp/ccrA3BdH.s 			page 155


2611:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2612:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else
2613:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2614:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ipconfigTCP_MAY_LOG_PORT( pxSocket->usLocalPort ) != pdFALSE )
 5533              		.loc 3 2614 0
 5534 0168 FB69     		ldr	r3, [r7, #28]
 5535 016a 9B8C     		ldrh	r3, [r3, #36]
 5536 016c 172B     		cmp	r3, #23
2615:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
2616:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						FreeRTOS_debug_printf( ( "FreeRTOS_send: %u -> %lxip:%d: no space\n",
2617:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->usLocalPort,
2618:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xTCP.ulRemoteIP,
2619:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pxSocket->u.xTCP.usRemotePort ) );
2620:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
2621:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2622:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xByteCount = ( BaseType_t ) -pdFREERTOS_ERRNO_ENOSPC;
 5537              		.loc 3 2622 0
 5538 016e 6FF01B03 		mvn	r3, #27
 5539 0172 FB62     		str	r3, [r7, #44]
 5540              	.L351:
2623:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2624:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2625:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2626:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2627:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xByteCount;
 5541              		.loc 3 2627 0
 5542 0174 FB6A     		ldr	r3, [r7, #44]
2628:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5543              		.loc 3 2628 0
 5544 0176 1846     		mov	r0, r3
 5545 0178 3037     		adds	r7, r7, #48
 5546              	.LCFI238:
 5547              		.cfi_def_cfa_offset 8
 5548 017a BD46     		mov	sp, r7
 5549              	.LCFI239:
 5550              		.cfi_def_cfa_register 13
 5551              		@ sp needed
 5552 017c 80BD     		pop	{r7, pc}
 5553              		.cfi_endproc
 5554              	.LFE61:
 5556 017e 00BF     		.section	.text.FreeRTOS_listen,"ax",%progbits
 5557              		.align	2
 5558              		.global	FreeRTOS_listen
 5559              		.thumb
 5560              		.thumb_func
 5562              	FreeRTOS_listen:
 5563              	.LFB62:
2629:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2630:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2631:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2632:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2633:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2634:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2635:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2636:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Request to put a socket in listen mode
2637:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2638:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_listen( Socket_t xSocket, BaseType_t xBacklog )
ARM GAS  /tmp/ccrA3BdH.s 			page 156


2639:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5564              		.loc 3 2639 0
 5565              		.cfi_startproc
 5566              		@ args = 0, pretend = 0, frame = 16
 5567              		@ frame_needed = 1, uses_anonymous_args = 0
 5568 0000 80B5     		push	{r7, lr}
 5569              	.LCFI240:
 5570              		.cfi_def_cfa_offset 8
 5571              		.cfi_offset 7, -8
 5572              		.cfi_offset 14, -4
 5573 0002 84B0     		sub	sp, sp, #16
 5574              	.LCFI241:
 5575              		.cfi_def_cfa_offset 24
 5576 0004 00AF     		add	r7, sp, #0
 5577              	.LCFI242:
 5578              		.cfi_def_cfa_register 7
 5579 0006 7860     		str	r0, [r7, #4]
 5580 0008 3960     		str	r1, [r7]
2640:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket;
2641:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult = 0;
 5581              		.loc 3 2641 0
 5582 000a 0023     		movs	r3, #0
 5583 000c FB60     		str	r3, [r7, #12]
2642:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2643:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 5584              		.loc 3 2643 0
 5585 000e 7B68     		ldr	r3, [r7, #4]
 5586 0010 BB60     		str	r3, [r7, #8]
2644:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2645:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* listen() is allowed for a valid TCP socket in Closed state and already
2646:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		bound. */
2647:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_TCP, pdTRUE ) == pdFALSE )
 5587              		.loc 3 2647 0
 5588 0012 B868     		ldr	r0, [r7, #8]
 5589 0014 0621     		movs	r1, #6
 5590 0016 0122     		movs	r2, #1
 5591 0018 FFF7FEFF 		bl	prvValidSocket
 5592 001c 0346     		mov	r3, r0
 5593 001e 002B     		cmp	r3, #0
 5594 0020 03D1     		bne	.L373
2648:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2649:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EOPNOTSUPP;
 5595              		.loc 3 2649 0
 5596 0022 6FF05E03 		mvn	r3, #94
 5597 0026 FB60     		str	r3, [r7, #12]
 5598 0028 51E0     		b	.L374
 5599              	.L373:
2650:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2651:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( ( pxSocket->u.xTCP.ucTCPState != eCLOSED ) && ( pxSocket->u.xTCP.ucTCPState != eCLOSE_WA
 5600              		.loc 3 2651 0
 5601 002a BB68     		ldr	r3, [r7, #8]
 5602 002c 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 5603 0030 002B     		cmp	r3, #0
 5604 0032 08D0     		beq	.L375
 5605              		.loc 3 2651 0 is_stmt 0 discriminator 1
 5606 0034 BB68     		ldr	r3, [r7, #8]
 5607 0036 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
ARM GAS  /tmp/ccrA3BdH.s 			page 157


 5608 003a 082B     		cmp	r3, #8
 5609 003c 03D0     		beq	.L375
2652:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2653:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Socket is in a wrong state. */
2654:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EOPNOTSUPP;
 5610              		.loc 3 2654 0 is_stmt 1
 5611 003e 6FF05E03 		mvn	r3, #94
 5612 0042 FB60     		str	r3, [r7, #12]
 5613 0044 43E0     		b	.L374
 5614              	.L375:
2655:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2656:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2657:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2658:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Backlog is interpreted here as "the maximum number of child
2659:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			sockets. */
2660:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->u.xTCP.usBacklog = ( uint16_t )FreeRTOS_min_int32( ( int32_t ) 0xffff, ( int32_t ) xBa
 5615              		.loc 3 2660 0
 5616 0046 4FF6FF70 		movw	r0, #65535
 5617 004a 3968     		ldr	r1, [r7]
 5618 004c FFF7FEFF 		bl	FreeRTOS_min_int32
 5619 0050 0346     		mov	r3, r0
 5620 0052 9AB2     		uxth	r2, r3
 5621 0054 BB68     		ldr	r3, [r7, #8]
 5622 0056 A3F85020 		strh	r2, [r3, #80]	@ movhi
2661:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2662:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* This cleaning is necessary only if a listening socket is being
2663:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			reused as it might have had a previous connection. */
2664:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.bits.bReuseSocket )
 5623              		.loc 3 2664 0
 5624 005a BB68     		ldr	r3, [r7, #8]
 5625 005c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 5626 0060 03F00803 		and	r3, r3, #8
 5627 0064 DBB2     		uxtb	r3, r3
 5628 0066 002B     		cmp	r3, #0
 5629 0068 2DD0     		beq	.L376
2665:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2666:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.rxStream != NULL )
 5630              		.loc 3 2666 0
 5631 006a BB68     		ldr	r3, [r7, #8]
 5632 006c 5B6F     		ldr	r3, [r3, #116]
 5633 006e 002B     		cmp	r3, #0
 5634 0070 04D0     		beq	.L377
2667:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2668:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vStreamBufferClear( pxSocket->u.xTCP.rxStream );
 5635              		.loc 3 2668 0
 5636 0072 BB68     		ldr	r3, [r7, #8]
 5637 0074 5B6F     		ldr	r3, [r3, #116]
 5638 0076 1846     		mov	r0, r3
 5639 0078 FFF7FEFF 		bl	vStreamBufferClear
 5640              	.L377:
2669:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2670:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2671:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.txStream != NULL )
 5641              		.loc 3 2671 0
 5642 007c BB68     		ldr	r3, [r7, #8]
 5643 007e 9B6F     		ldr	r3, [r3, #120]
 5644 0080 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 158


 5645 0082 04D0     		beq	.L378
2672:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2673:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vStreamBufferClear( pxSocket->u.xTCP.txStream );
 5646              		.loc 3 2673 0
 5647 0084 BB68     		ldr	r3, [r7, #8]
 5648 0086 9B6F     		ldr	r3, [r3, #120]
 5649 0088 1846     		mov	r0, r3
 5650 008a FFF7FEFF 		bl	vStreamBufferClear
 5651              	.L378:
2674:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2675:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2676:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				memset( pxSocket->u.xTCP.xPacket.u.ucLastPacket, '\0', sizeof( pxSocket->u.xTCP.xPacket.u.ucLas
 5652              		.loc 3 2676 0
 5653 008e BB68     		ldr	r3, [r7, #8]
 5654 0090 8233     		adds	r3, r3, #130
 5655 0092 1846     		mov	r0, r3
 5656 0094 0021     		movs	r1, #0
 5657 0096 4622     		movs	r2, #70
 5658 0098 FFF7FEFF 		bl	memset
2677:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				memset( &pxSocket->u.xTCP.xTCPWindow, '\0', sizeof( pxSocket->u.xTCP.xTCPWindow ) );
 5659              		.loc 3 2677 0
 5660 009c BB68     		ldr	r3, [r7, #8]
 5661 009e DC33     		adds	r3, r3, #220
 5662 00a0 1846     		mov	r0, r3
 5663 00a2 0021     		movs	r1, #0
 5664 00a4 C022     		movs	r2, #192
 5665 00a6 FFF7FEFF 		bl	memset
2678:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				memset( &pxSocket->u.xTCP.bits, '\0', sizeof( pxSocket->u.xTCP.bits ) );
 5666              		.loc 3 2678 0
 5667 00aa BB68     		ldr	r3, [r7, #8]
 5668 00ac 4033     		adds	r3, r3, #64
 5669 00ae 1846     		mov	r0, r3
 5670 00b0 0021     		movs	r1, #0
 5671 00b2 0422     		movs	r2, #4
 5672 00b4 FFF7FEFF 		bl	memset
2679:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2680:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Now set the bReuseSocket flag again, because the bits have
2681:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				just been cleared. */
2682:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.bits.bReuseSocket = pdTRUE_UNSIGNED;
 5673              		.loc 3 2682 0
 5674 00b8 BA68     		ldr	r2, [r7, #8]
 5675 00ba 92F84030 		ldrb	r3, [r2, #64]
 5676 00be 43F00803 		orr	r3, r3, #8
 5677 00c2 82F84030 		strb	r3, [r2, #64]
 5678              	.L376:
2683:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2684:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2685:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vTCPStateChange( pxSocket, eTCP_LISTEN );
 5679              		.loc 3 2685 0
 5680 00c6 B868     		ldr	r0, [r7, #8]
 5681 00c8 0121     		movs	r1, #1
 5682 00ca FFF7FEFF 		bl	vTCPStateChange
 5683              	.L374:
2686:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2687:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2688:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 5684              		.loc 3 2688 0
ARM GAS  /tmp/ccrA3BdH.s 			page 159


 5685 00ce FB68     		ldr	r3, [r7, #12]
2689:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5686              		.loc 3 2689 0
 5687 00d0 1846     		mov	r0, r3
 5688 00d2 1037     		adds	r7, r7, #16
 5689              	.LCFI243:
 5690              		.cfi_def_cfa_offset 8
 5691 00d4 BD46     		mov	sp, r7
 5692              	.LCFI244:
 5693              		.cfi_def_cfa_register 13
 5694              		@ sp needed
 5695 00d6 80BD     		pop	{r7, pc}
 5696              		.cfi_endproc
 5697              	.LFE62:
 5699              		.section	.text.FreeRTOS_shutdown,"ax",%progbits
 5700              		.align	2
 5701              		.global	FreeRTOS_shutdown
 5702              		.thumb
 5703              		.thumb_func
 5705              	FreeRTOS_shutdown:
 5706              	.LFB63:
2690:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2691:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2692:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2693:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2694:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2695:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2696:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* shutdown - shut down part of a full-duplex connection */
2697:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_shutdown( Socket_t xSocket, BaseType_t xHow )
2698:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5707              		.loc 3 2698 0
 5708              		.cfi_startproc
 5709              		@ args = 0, pretend = 0, frame = 16
 5710              		@ frame_needed = 1, uses_anonymous_args = 0
 5711 0000 80B5     		push	{r7, lr}
 5712              	.LCFI245:
 5713              		.cfi_def_cfa_offset 8
 5714              		.cfi_offset 7, -8
 5715              		.cfi_offset 14, -4
 5716 0002 84B0     		sub	sp, sp, #16
 5717              	.LCFI246:
 5718              		.cfi_def_cfa_offset 24
 5719 0004 00AF     		add	r7, sp, #0
 5720              	.LCFI247:
 5721              		.cfi_def_cfa_register 7
 5722 0006 7860     		str	r0, [r7, #4]
 5723 0008 3960     		str	r1, [r7]
2699:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 5724              		.loc 3 2699 0
 5725 000a 7B68     		ldr	r3, [r7, #4]
 5726 000c BB60     		str	r3, [r7, #8]
2700:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult;
2701:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2702:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( prvValidSocket( pxSocket, FREERTOS_IPPROTO_TCP, pdTRUE ) == pdFALSE )
 5727              		.loc 3 2702 0
 5728 000e B868     		ldr	r0, [r7, #8]
 5729 0010 0621     		movs	r1, #6
ARM GAS  /tmp/ccrA3BdH.s 			page 160


 5730 0012 0122     		movs	r2, #1
 5731 0014 FFF7FEFF 		bl	prvValidSocket
 5732 0018 0346     		mov	r3, r0
 5733 001a 002B     		cmp	r3, #0
 5734 001c 03D1     		bne	.L381
2703:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2704:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/*_RB_ Is this comment correct?  The socket is not of a type that
2705:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			supports the listen() operation. */
2706:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EOPNOTSUPP;
 5735              		.loc 3 2706 0
 5736 001e 6FF05E03 		mvn	r3, #94
 5737 0022 FB60     		str	r3, [r7, #12]
 5738 0024 18E0     		b	.L382
 5739              	.L381:
2707:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2708:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if ( pxSocket->u.xTCP.ucTCPState != eESTABLISHED )
 5740              		.loc 3 2708 0
 5741 0026 BB68     		ldr	r3, [r7, #8]
 5742 0028 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 5743 002c 052B     		cmp	r3, #5
 5744 002e 03D0     		beq	.L383
2709:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2710:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/*_RB_ Is this comment correct?  The socket is not of a type that
2711:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			supports the listen() operation. */
2712:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EOPNOTSUPP;
 5745              		.loc 3 2712 0
 5746 0030 6FF05E03 		mvn	r3, #94
 5747 0034 FB60     		str	r3, [r7, #12]
 5748 0036 0FE0     		b	.L382
 5749              	.L383:
2713:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2714:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2715:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2716:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->u.xTCP.bits.bUserShutdown = pdTRUE_UNSIGNED;
 5750              		.loc 3 2716 0
 5751 0038 BA68     		ldr	r2, [r7, #8]
 5752 003a 92F84030 		ldrb	r3, [r2, #64]
 5753 003e 43F02003 		orr	r3, r3, #32
 5754 0042 82F84030 		strb	r3, [r2, #64]
2717:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2718:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Let the IP-task perform the shutdown of the connection. */
2719:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->u.xTCP.usTimeout = 1u;
 5755              		.loc 3 2719 0
 5756 0046 BB68     		ldr	r3, [r7, #8]
 5757 0048 0122     		movs	r2, #1
 5758 004a A3F84820 		strh	r2, [r3, #72]	@ movhi
2720:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xSendEventToIPTask( eTCPTimerEvent );
 5759              		.loc 3 2720 0
 5760 004e 0520     		movs	r0, #5
 5761 0050 FFF7FEFF 		bl	xSendEventToIPTask
2721:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = 0;
 5762              		.loc 3 2721 0
 5763 0054 0023     		movs	r3, #0
 5764 0056 FB60     		str	r3, [r7, #12]
 5765              	.L382:
2722:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2723:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		(void) xHow;
ARM GAS  /tmp/ccrA3BdH.s 			page 161


2724:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2725:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 5766              		.loc 3 2725 0
 5767 0058 FB68     		ldr	r3, [r7, #12]
2726:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5768              		.loc 3 2726 0
 5769 005a 1846     		mov	r0, r3
 5770 005c 1037     		adds	r7, r7, #16
 5771              	.LCFI248:
 5772              		.cfi_def_cfa_offset 8
 5773 005e BD46     		mov	sp, r7
 5774              	.LCFI249:
 5775              		.cfi_def_cfa_register 13
 5776              		@ sp needed
 5777 0060 80BD     		pop	{r7, pc}
 5778              		.cfi_endproc
 5779              	.LFE63:
 5781 0062 00BF     		.section	.text.xTCPTimerCheck,"ax",%progbits
 5782              		.align	2
 5783              		.global	xTCPTimerCheck
 5784              		.thumb
 5785              		.thumb_func
 5787              	xTCPTimerCheck:
 5788              	.LFB64:
2727:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2728:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2729:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2730:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2731:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2732:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2733:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2734:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * A TCP timer has expired, now check all TCP sockets for:
2735:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * - Active connect
2736:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * - Send a delayed ACK
2737:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * - Send new data
2738:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * - Send a keep-alive packet
2739:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * - Check for timeout (in non-connected states only)
2740:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2741:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xTCPTimerCheck( BaseType_t xWillSleep )
2742:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5789              		.loc 3 2742 0
 5790              		.cfi_startproc
 5791              		@ args = 0, pretend = 0, frame = 32
 5792              		@ frame_needed = 1, uses_anonymous_args = 0
 5793 0000 80B5     		push	{r7, lr}
 5794              	.LCFI250:
 5795              		.cfi_def_cfa_offset 8
 5796              		.cfi_offset 7, -8
 5797              		.cfi_offset 14, -4
 5798 0002 88B0     		sub	sp, sp, #32
 5799              	.LCFI251:
 5800              		.cfi_def_cfa_offset 40
 5801 0004 00AF     		add	r7, sp, #0
 5802              	.LCFI252:
 5803              		.cfi_def_cfa_register 7
 5804 0006 7860     		str	r0, [r7, #4]
2743:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket;
ARM GAS  /tmp/ccrA3BdH.s 			page 162


2744:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xShortest = pdMS_TO_TICKS( ( TickType_t ) ipTCP_TIMER_PERIOD_MS );
 5805              		.loc 3 2744 0
 5806 0008 4FF47A73 		mov	r3, #1000
 5807 000c FB61     		str	r3, [r7, #28]
2745:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xNow = xTaskGetTickCount();
 5808              		.loc 3 2745 0
 5809 000e FFF7FEFF 		bl	xTaskGetTickCount
 5810 0012 3861     		str	r0, [r7, #16]
2746:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static TickType_t xLastTime = 0u;
2747:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	TickType_t xDelta = xNow - xLastTime;
 5811              		.loc 3 2747 0
 5812 0014 304B     		ldr	r3, .L395
 5813 0016 1B68     		ldr	r3, [r3]
 5814 0018 3A69     		ldr	r2, [r7, #16]
 5815 001a D31A     		subs	r3, r2, r3
 5816 001c BB61     		str	r3, [r7, #24]
2748:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ListItem_t* pxEnd = ( ListItem_t * ) listGET_END_MARKER( &xBoundTCPSocketsList );
 5817              		.loc 3 2748 0
 5818 001e 2F4B     		ldr	r3, .L395+4
 5819 0020 FB60     		str	r3, [r7, #12]
2749:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ListItem_t *pxIterator = ( ListItem_t * ) listGET_HEAD_ENTRY( &xBoundTCPSocketsList );
 5820              		.loc 3 2749 0
 5821 0022 2F4B     		ldr	r3, .L395+8
 5822 0024 DB68     		ldr	r3, [r3, #12]
 5823 0026 7B61     		str	r3, [r7, #20]
2750:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2751:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xLastTime = xNow;
 5824              		.loc 3 2751 0
 5825 0028 2B4A     		ldr	r2, .L395
 5826 002a 3B69     		ldr	r3, [r7, #16]
 5827 002c 1360     		str	r3, [r2]
2752:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2753:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xDelta == 0u )
 5828              		.loc 3 2753 0
 5829 002e BB69     		ldr	r3, [r7, #24]
 5830 0030 002B     		cmp	r3, #0
 5831 0032 01D1     		bne	.L386
2754:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2755:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xDelta = 1u;
 5832              		.loc 3 2755 0
 5833 0034 0123     		movs	r3, #1
 5834 0036 BB61     		str	r3, [r7, #24]
 5835              	.L386:
2756:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2757:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2758:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		while( pxIterator != pxEnd )
 5836              		.loc 3 2758 0
 5837 0038 45E0     		b	.L387
 5838              	.L393:
2759:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2760:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket = ( FreeRTOS_Socket_t * )listGET_LIST_ITEM_OWNER( pxIterator );
 5839              		.loc 3 2760 0
 5840 003a 7B69     		ldr	r3, [r7, #20]
 5841 003c DB68     		ldr	r3, [r3, #12]
 5842 003e BB60     		str	r3, [r7, #8]
2761:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxIterator = ( ListItem_t * ) listGET_NEXT( pxIterator );
 5843              		.loc 3 2761 0
ARM GAS  /tmp/ccrA3BdH.s 			page 163


 5844 0040 7B69     		ldr	r3, [r7, #20]
 5845 0042 5B68     		ldr	r3, [r3, #4]
 5846 0044 7B61     		str	r3, [r7, #20]
2762:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2763:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Sockets with 'tmout == 0' do not need any regular attention. */
2764:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.usTimeout == 0u )
 5847              		.loc 3 2764 0
 5848 0046 BB68     		ldr	r3, [r7, #8]
 5849 0048 B3F84830 		ldrh	r3, [r3, #72]
 5850 004c 002B     		cmp	r3, #0
 5851 004e 00D1     		bne	.L388
2765:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2766:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				continue;
 5852              		.loc 3 2766 0
 5853 0050 39E0     		b	.L387
 5854              	.L388:
2767:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2768:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2769:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xDelta < ( TickType_t ) pxSocket->u.xTCP.usTimeout )
 5855              		.loc 3 2769 0
 5856 0052 BB68     		ldr	r3, [r7, #8]
 5857 0054 B3F84830 		ldrh	r3, [r3, #72]
 5858 0058 1A46     		mov	r2, r3
 5859 005a BB69     		ldr	r3, [r7, #24]
 5860 005c 9A42     		cmp	r2, r3
 5861 005e 0AD9     		bls	.L389
2770:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2771:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.usTimeout = ( uint16_t ) ( ( ( TickType_t ) pxSocket->u.xTCP.usTimeout ) - xDe
 5862              		.loc 3 2771 0
 5863 0060 BB68     		ldr	r3, [r7, #8]
 5864 0062 B3F84820 		ldrh	r2, [r3, #72]
 5865 0066 BB69     		ldr	r3, [r7, #24]
 5866 0068 9BB2     		uxth	r3, r3
 5867 006a D31A     		subs	r3, r2, r3
 5868 006c 9AB2     		uxth	r2, r3
 5869 006e BB68     		ldr	r3, [r7, #8]
 5870 0070 A3F84820 		strh	r2, [r3, #72]	@ movhi
 5871 0074 0AE0     		b	.L390
 5872              	.L389:
2772:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2773:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
2774:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2775:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.usTimeout = 0u;
 5873              		.loc 3 2775 0
 5874 0076 BB68     		ldr	r3, [r7, #8]
 5875 0078 0022     		movs	r2, #0
 5876 007a A3F84820 		strh	r2, [r3, #72]	@ movhi
2776:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2777:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Within this function, the socket might want to send a delayed
2778:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				ack or send out data or whatever it needs to do. */
2779:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xTCPSocketCheck( pxSocket ) < 0 )
 5877              		.loc 3 2779 0
 5878 007e B868     		ldr	r0, [r7, #8]
 5879 0080 FFF7FEFF 		bl	xTCPSocketCheck
 5880 0084 0346     		mov	r3, r0
 5881 0086 002B     		cmp	r3, #0
 5882 0088 00DA     		bge	.L390
ARM GAS  /tmp/ccrA3BdH.s 			page 164


2780:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2781:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Continue because the socket was deleted. */
2782:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					continue;
 5883              		.loc 3 2782 0
 5884 008a 1CE0     		b	.L387
 5885              	.L390:
2783:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2784:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2785:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2786:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* In xEventBits the driver may indicate that the socket has
2787:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			important events for the user.  These are only done just before the
2788:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			IP-task goes to sleep. */
2789:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->xEventBits != 0u )
 5886              		.loc 3 2789 0
 5887 008c BB68     		ldr	r3, [r7, #8]
 5888 008e 1B68     		ldr	r3, [r3]
 5889 0090 002B     		cmp	r3, #0
 5890 0092 08D0     		beq	.L391
2790:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2791:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( xWillSleep != pdFALSE )
 5891              		.loc 3 2791 0
 5892 0094 7B68     		ldr	r3, [r7, #4]
 5893 0096 002B     		cmp	r3, #0
 5894 0098 03D0     		beq	.L392
2792:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2793:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* The IP-task is about to go to sleep, so messages can be
2794:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					sent to the socket owners. */
2795:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					vSocketWakeUpUser( pxSocket );
 5895              		.loc 3 2795 0
 5896 009a B868     		ldr	r0, [r7, #8]
 5897 009c FFF7FEFF 		bl	vSocketWakeUpUser
 5898 00a0 01E0     		b	.L391
 5899              	.L392:
2796:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2797:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else
2798:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2799:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Or else make sure this will be called again to wake-up
2800:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					the sockets' owner. */
2801:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xShortest = ( TickType_t ) 0;
 5900              		.loc 3 2801 0
 5901 00a2 0023     		movs	r3, #0
 5902 00a4 FB61     		str	r3, [r7, #28]
 5903              	.L391:
2802:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2803:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2804:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2805:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( pxSocket->u.xTCP.usTimeout != 0u ) && ( xShortest > ( TickType_t ) pxSocket->u.xTCP.usTime
 5904              		.loc 3 2805 0
 5905 00a6 BB68     		ldr	r3, [r7, #8]
 5906 00a8 B3F84830 		ldrh	r3, [r3, #72]
 5907 00ac 002B     		cmp	r3, #0
 5908 00ae 0AD0     		beq	.L387
 5909              		.loc 3 2805 0 is_stmt 0 discriminator 1
 5910 00b0 BB68     		ldr	r3, [r7, #8]
 5911 00b2 B3F84830 		ldrh	r3, [r3, #72]
 5912 00b6 1A46     		mov	r2, r3
 5913 00b8 FB69     		ldr	r3, [r7, #28]
ARM GAS  /tmp/ccrA3BdH.s 			page 165


 5914 00ba 9A42     		cmp	r2, r3
 5915 00bc 03D2     		bcs	.L387
2806:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2807:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xShortest = ( TickType_t ) pxSocket->u.xTCP.usTimeout;
 5916              		.loc 3 2807 0 is_stmt 1
 5917 00be BB68     		ldr	r3, [r7, #8]
 5918 00c0 B3F84830 		ldrh	r3, [r3, #72]
 5919 00c4 FB61     		str	r3, [r7, #28]
 5920              	.L387:
2758:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 5921              		.loc 3 2758 0
 5922 00c6 7A69     		ldr	r2, [r7, #20]
 5923 00c8 FB68     		ldr	r3, [r7, #12]
 5924 00ca 9A42     		cmp	r2, r3
 5925 00cc B5D1     		bne	.L393
2808:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2809:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2810:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2811:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xShortest;
 5926              		.loc 3 2811 0
 5927 00ce FB69     		ldr	r3, [r7, #28]
2812:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 5928              		.loc 3 2812 0
 5929 00d0 1846     		mov	r0, r3
 5930 00d2 2037     		adds	r7, r7, #32
 5931              	.LCFI253:
 5932              		.cfi_def_cfa_offset 8
 5933 00d4 BD46     		mov	sp, r7
 5934              	.LCFI254:
 5935              		.cfi_def_cfa_register 13
 5936              		@ sp needed
 5937 00d6 80BD     		pop	{r7, pc}
 5938              	.L396:
 5939              		.align	2
 5940              	.L395:
 5941 00d8 00000000 		.word	xLastTime.6999
 5942 00dc 08000000 		.word	xBoundTCPSocketsList+8
 5943 00e0 00000000 		.word	xBoundTCPSocketsList
 5944              		.cfi_endproc
 5945              	.LFE64:
 5947              		.section	.text.pxTCPSocketLookup,"ax",%progbits
 5948              		.align	2
 5949              		.global	pxTCPSocketLookup
 5950              		.thumb
 5951              		.thumb_func
 5953              	pxTCPSocketLookup:
 5954              	.LFB65:
2813:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2814:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2815:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2816:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2817:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2818:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2819:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2820:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * TCP: as multiple sockets may be bound to the same local port number
2821:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * looking up a socket is a little more complex:
2822:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Both a local port, and a remote port and IP address are being used
ARM GAS  /tmp/ccrA3BdH.s 			page 166


2823:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * For a socket in listening mode, the remote port and IP address are both 0
2824:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2825:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxTCPSocketLookup( uint32_t ulLocalIP, UBaseType_t uxLocalPort, uint32_t ulRemo
2826:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 5955              		.loc 3 2826 0
 5956              		.cfi_startproc
 5957              		@ args = 0, pretend = 0, frame = 40
 5958              		@ frame_needed = 1, uses_anonymous_args = 0
 5959              		@ link register save eliminated.
 5960 0000 80B4     		push	{r7}
 5961              	.LCFI255:
 5962              		.cfi_def_cfa_offset 4
 5963              		.cfi_offset 7, -4
 5964 0002 8BB0     		sub	sp, sp, #44
 5965              	.LCFI256:
 5966              		.cfi_def_cfa_offset 48
 5967 0004 00AF     		add	r7, sp, #0
 5968              	.LCFI257:
 5969              		.cfi_def_cfa_register 7
 5970 0006 F860     		str	r0, [r7, #12]
 5971 0008 B960     		str	r1, [r7, #8]
 5972 000a 7A60     		str	r2, [r7, #4]
 5973 000c 3B60     		str	r3, [r7]
2827:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ListItem_t *pxIterator;
2828:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxResult = NULL, *pxListenSocket = NULL;
 5974              		.loc 3 2828 0
 5975 000e 0023     		movs	r3, #0
 5976 0010 3B62     		str	r3, [r7, #32]
 5977 0012 0023     		movs	r3, #0
 5978 0014 FB61     		str	r3, [r7, #28]
2829:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	MiniListItem_t *pxEnd = ( MiniListItem_t* )listGET_END_MARKER( &xBoundTCPSocketsList );
 5979              		.loc 3 2829 0
 5980 0016 1C4B     		ldr	r3, .L405
 5981 0018 BB61     		str	r3, [r7, #24]
2830:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2831:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Parameter not yet supported. */
2832:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		( void ) ulLocalIP;
2833:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2834:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		for( pxIterator  = ( ListItem_t * ) listGET_NEXT( pxEnd );
 5982              		.loc 3 2834 0
 5983 001a BB69     		ldr	r3, [r7, #24]
 5984 001c 5B68     		ldr	r3, [r3, #4]
 5985 001e 7B62     		str	r3, [r7, #36]
 5986 0020 21E0     		b	.L398
 5987              	.L402:
 5988              	.LBB81:
2835:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator != ( ListItem_t * ) pxEnd;
2836:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator  = ( ListItem_t * ) listGET_NEXT( pxIterator ) )
2837:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2838:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 5989              		.loc 3 2838 0
 5990 0022 7B6A     		ldr	r3, [r7, #36]
 5991 0024 DB68     		ldr	r3, [r3, #12]
 5992 0026 7B61     		str	r3, [r7, #20]
2839:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2840:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->usLocalPort == ( uint16_t ) uxLocalPort )
 5993              		.loc 3 2840 0
ARM GAS  /tmp/ccrA3BdH.s 			page 167


 5994 0028 7B69     		ldr	r3, [r7, #20]
 5995 002a 9A8C     		ldrh	r2, [r3, #36]
 5996 002c BB68     		ldr	r3, [r7, #8]
 5997 002e 9BB2     		uxth	r3, r3
 5998 0030 9A42     		cmp	r2, r3
 5999 0032 15D1     		bne	.L399
2841:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2842:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.ucTCPState == eTCP_LISTEN )
 6000              		.loc 3 2842 0
 6001 0034 7B69     		ldr	r3, [r7, #20]
 6002 0036 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6003 003a 012B     		cmp	r3, #1
 6004 003c 02D1     		bne	.L400
2843:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2844:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* If this is a socket listening to uxLocalPort, remember it
2845:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					in case there is no perfect match. */
2846:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxListenSocket = pxSocket;
 6005              		.loc 3 2846 0
 6006 003e 7B69     		ldr	r3, [r7, #20]
 6007 0040 FB61     		str	r3, [r7, #28]
 6008 0042 0DE0     		b	.L399
 6009              	.L400:
2847:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2848:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				else if( ( pxSocket->u.xTCP.usRemotePort == ( uint16_t ) uxRemotePort ) && ( pxSocket->u.xTCP.u
 6010              		.loc 3 2848 0
 6011 0044 7B69     		ldr	r3, [r7, #20]
 6012 0046 9A8F     		ldrh	r2, [r3, #60]
 6013 0048 3B68     		ldr	r3, [r7]
 6014 004a 9BB2     		uxth	r3, r3
 6015 004c 9A42     		cmp	r2, r3
 6016 004e 07D1     		bne	.L399
 6017              		.loc 3 2848 0 is_stmt 0 discriminator 1
 6018 0050 7B69     		ldr	r3, [r7, #20]
 6019 0052 9A6B     		ldr	r2, [r3, #56]
 6020 0054 7B68     		ldr	r3, [r7, #4]
 6021 0056 9A42     		cmp	r2, r3
 6022 0058 02D1     		bne	.L399
2849:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
2850:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* For sockets not in listening mode, find a match with
2851:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xLocalPort, ulRemoteIP AND xRemotePort. */
2852:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxResult = pxSocket;
 6023              		.loc 3 2852 0 is_stmt 1
 6024 005a 7B69     		ldr	r3, [r7, #20]
 6025 005c 3B62     		str	r3, [r7, #32]
2853:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					break;
 6026              		.loc 3 2853 0
 6027 005e 06E0     		b	.L401
 6028              	.L399:
 6029              	.LBE81:
2836:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 6030              		.loc 3 2836 0
 6031 0060 7B6A     		ldr	r3, [r7, #36]
 6032 0062 5B68     		ldr	r3, [r3, #4]
 6033 0064 7B62     		str	r3, [r7, #36]
 6034              	.L398:
2834:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			 pxIterator != ( ListItem_t * ) pxEnd;
 6035              		.loc 3 2834 0 discriminator 1
ARM GAS  /tmp/ccrA3BdH.s 			page 168


 6036 0066 7A6A     		ldr	r2, [r7, #36]
 6037 0068 BB69     		ldr	r3, [r7, #24]
 6038 006a 9A42     		cmp	r2, r3
 6039 006c D9D1     		bne	.L402
 6040              	.L401:
2854:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
2855:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2856:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2857:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxResult == NULL )
 6041              		.loc 3 2857 0
 6042 006e 3B6A     		ldr	r3, [r7, #32]
 6043 0070 002B     		cmp	r3, #0
 6044 0072 01D1     		bne	.L403
2858:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2859:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* An exact match was not found, maybe a listening socket was
2860:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			found. */
2861:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxResult = pxListenSocket;
 6045              		.loc 3 2861 0
 6046 0074 FB69     		ldr	r3, [r7, #28]
 6047 0076 3B62     		str	r3, [r7, #32]
 6048              	.L403:
2862:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2863:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2864:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return pxResult;
 6049              		.loc 3 2864 0
 6050 0078 3B6A     		ldr	r3, [r7, #32]
2865:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6051              		.loc 3 2865 0
 6052 007a 1846     		mov	r0, r3
 6053 007c 2C37     		adds	r7, r7, #44
 6054              	.LCFI258:
 6055              		.cfi_def_cfa_offset 4
 6056 007e BD46     		mov	sp, r7
 6057              	.LCFI259:
 6058              		.cfi_def_cfa_register 13
 6059              		@ sp needed
 6060 0080 5DF8047B 		ldr	r7, [sp], #4
 6061              	.LCFI260:
 6062              		.cfi_restore 7
 6063              		.cfi_def_cfa_offset 0
 6064 0084 7047     		bx	lr
 6065              	.L406:
 6066 0086 00BF     		.align	2
 6067              	.L405:
 6068 0088 08000000 		.word	xBoundTCPSocketsList+8
 6069              		.cfi_endproc
 6070              	.LFE65:
 6072              		.section	.text.FreeRTOS_get_rx_buf,"ax",%progbits
 6073              		.align	2
 6074              		.global	FreeRTOS_get_rx_buf
 6075              		.thumb
 6076              		.thumb_func
 6078              	FreeRTOS_get_rx_buf:
 6079              	.LFB66:
2866:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2867:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2868:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/ccrA3BdH.s 			page 169


2869:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2870:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2871:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2872:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	const struct xSTREAM_BUFFER *FreeRTOS_get_rx_buf( Socket_t xSocket )
2873:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6080              		.loc 3 2873 0
 6081              		.cfi_startproc
 6082              		@ args = 0, pretend = 0, frame = 16
 6083              		@ frame_needed = 1, uses_anonymous_args = 0
 6084              		@ link register save eliminated.
 6085 0000 80B4     		push	{r7}
 6086              	.LCFI261:
 6087              		.cfi_def_cfa_offset 4
 6088              		.cfi_offset 7, -4
 6089 0002 85B0     		sub	sp, sp, #20
 6090              	.LCFI262:
 6091              		.cfi_def_cfa_offset 24
 6092 0004 00AF     		add	r7, sp, #0
 6093              	.LCFI263:
 6094              		.cfi_def_cfa_register 7
 6095 0006 7860     		str	r0, [r7, #4]
2874:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = (FreeRTOS_Socket_t *)xSocket;
 6096              		.loc 3 2874 0
 6097 0008 7B68     		ldr	r3, [r7, #4]
 6098 000a FB60     		str	r3, [r7, #12]
2875:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2876:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return pxSocket->u.xTCP.rxStream;
 6099              		.loc 3 2876 0
 6100 000c FB68     		ldr	r3, [r7, #12]
 6101 000e 5B6F     		ldr	r3, [r3, #116]
2877:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6102              		.loc 3 2877 0
 6103 0010 1846     		mov	r0, r3
 6104 0012 1437     		adds	r7, r7, #20
 6105              	.LCFI264:
 6106              		.cfi_def_cfa_offset 4
 6107 0014 BD46     		mov	sp, r7
 6108              	.LCFI265:
 6109              		.cfi_def_cfa_register 13
 6110              		@ sp needed
 6111 0016 5DF8047B 		ldr	r7, [sp], #4
 6112              	.LCFI266:
 6113              		.cfi_restore 7
 6114              		.cfi_def_cfa_offset 0
 6115 001a 7047     		bx	lr
 6116              		.cfi_endproc
 6117              	.LFE66:
 6119              		.section	.text.prvTCPCreateStream,"ax",%progbits
 6120              		.align	2
 6121              		.thumb
 6122              		.thumb_func
 6124              	prvTCPCreateStream:
 6125              	.LFB67:
2878:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2879:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2880:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2881:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 170


2882:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2883:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2884:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	static StreamBuffer_t *prvTCPCreateStream ( FreeRTOS_Socket_t *pxSocket, BaseType_t xIsInputStream
2885:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6126              		.loc 3 2885 0
 6127              		.cfi_startproc
 6128              		@ args = 0, pretend = 0, frame = 24
 6129              		@ frame_needed = 1, uses_anonymous_args = 0
 6130 0000 80B5     		push	{r7, lr}
 6131              	.LCFI267:
 6132              		.cfi_def_cfa_offset 8
 6133              		.cfi_offset 7, -8
 6134              		.cfi_offset 14, -4
 6135 0002 86B0     		sub	sp, sp, #24
 6136              	.LCFI268:
 6137              		.cfi_def_cfa_offset 32
 6138 0004 00AF     		add	r7, sp, #0
 6139              	.LCFI269:
 6140              		.cfi_def_cfa_register 7
 6141 0006 7860     		str	r0, [r7, #4]
 6142 0008 3960     		str	r1, [r7]
2886:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	StreamBuffer_t *pxBuffer;
2887:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	size_t uxLength;
2888:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	size_t uxSize;
2889:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2890:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Now that a stream is created, the maximum size is fixed before
2891:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		creation, it could still be changed with setsockopt(). */
2892:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xIsInputStream != pdFALSE )
 6143              		.loc 3 2892 0
 6144 000a 3B68     		ldr	r3, [r7]
 6145 000c 002B     		cmp	r3, #0
 6146 000e 1CD0     		beq	.L410
2893:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2894:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			uxLength = pxSocket->u.xTCP.uxRxStreamSize;
 6147              		.loc 3 2894 0
 6148 0010 7B68     		ldr	r3, [r7, #4]
 6149 0012 DB6E     		ldr	r3, [r3, #108]
 6150 0014 7B61     		str	r3, [r7, #20]
2895:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2896:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.uxLittleSpace == 0ul )
 6151              		.loc 3 2896 0
 6152 0016 7B68     		ldr	r3, [r7, #4]
 6153 0018 5B6E     		ldr	r3, [r3, #100]
 6154 001a 002B     		cmp	r3, #0
 6155 001c 07D1     		bne	.L411
2897:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2898:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.uxLittleSpace  = ( 1ul * pxSocket->u.xTCP.uxRxStreamSize ) / 5u; /*_RB_ Why di
 6156              		.loc 3 2898 0
 6157 001e 7B68     		ldr	r3, [r7, #4]
 6158 0020 DB6E     		ldr	r3, [r3, #108]
 6159 0022 254A     		ldr	r2, .L418
 6160 0024 A2FB0323 		umull	r2, r3, r2, r3
 6161 0028 9A08     		lsrs	r2, r3, #2
 6162 002a 7B68     		ldr	r3, [r7, #4]
 6163 002c 5A66     		str	r2, [r3, #100]
 6164              	.L411:
2899:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
ARM GAS  /tmp/ccrA3BdH.s 			page 171


2900:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2901:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.uxEnoughSpace == 0ul )
 6165              		.loc 3 2901 0
 6166 002e 7B68     		ldr	r3, [r7, #4]
 6167 0030 9B6E     		ldr	r3, [r3, #104]
 6168 0032 002B     		cmp	r3, #0
 6169 0034 0CD1     		bne	.L413
2902:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2903:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.uxEnoughSpace = ( 4ul * pxSocket->u.xTCP.uxRxStreamSize ) / 5u; /*_RB_ Why mul
 6170              		.loc 3 2903 0
 6171 0036 7B68     		ldr	r3, [r7, #4]
 6172 0038 DB6E     		ldr	r3, [r3, #108]
 6173 003a 9B00     		lsls	r3, r3, #2
 6174 003c 1E4A     		ldr	r2, .L418
 6175 003e A2FB0323 		umull	r2, r3, r2, r3
 6176 0042 9A08     		lsrs	r2, r3, #2
 6177 0044 7B68     		ldr	r3, [r7, #4]
 6178 0046 9A66     		str	r2, [r3, #104]
 6179 0048 02E0     		b	.L413
 6180              	.L410:
2904:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2905:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2906:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2907:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2908:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			uxLength = pxSocket->u.xTCP.uxTxStreamSize;
 6181              		.loc 3 2908 0
 6182 004a 7B68     		ldr	r3, [r7, #4]
 6183 004c 1B6F     		ldr	r3, [r3, #112]
 6184 004e 7B61     		str	r3, [r7, #20]
 6185              	.L413:
2909:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2910:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2911:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Add an extra 4 (or 8) bytes. */
2912:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		uxLength += sizeof( size_t );
 6186              		.loc 3 2912 0
 6187 0050 7B69     		ldr	r3, [r7, #20]
 6188 0052 0433     		adds	r3, r3, #4
 6189 0054 7B61     		str	r3, [r7, #20]
2913:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2914:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* And make the length a multiple of sizeof( size_t ). */
2915:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		uxLength &= ~( sizeof( size_t ) - 1u );
 6190              		.loc 3 2915 0
 6191 0056 7B69     		ldr	r3, [r7, #20]
 6192 0058 23F00303 		bic	r3, r3, #3
 6193 005c 7B61     		str	r3, [r7, #20]
2916:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2917:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		uxSize = sizeof( *pxBuffer ) - sizeof( pxBuffer->ucArray ) + uxLength;
 6194              		.loc 3 2917 0
 6195 005e 7B69     		ldr	r3, [r7, #20]
 6196 0060 1433     		adds	r3, r3, #20
 6197 0062 3B61     		str	r3, [r7, #16]
2918:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2919:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxBuffer = ( StreamBuffer_t * )pvPortMallocLarge( uxSize );
 6198              		.loc 3 2919 0
 6199 0064 3869     		ldr	r0, [r7, #16]
 6200 0066 FFF7FEFF 		bl	pvPortMalloc
 6201 006a F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccrA3BdH.s 			page 172


2920:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2921:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxBuffer == NULL )
 6202              		.loc 3 2921 0
 6203 006c FB68     		ldr	r3, [r7, #12]
 6204 006e 002B     		cmp	r3, #0
 6205 0070 0BD1     		bne	.L414
2922:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2923:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_debug_printf( ( "prvTCPCreateStream: malloc failed\n" ) );
2924:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxSocket->u.xTCP.bits.bMallocError = pdTRUE_UNSIGNED;
 6206              		.loc 3 2924 0
 6207 0072 7A68     		ldr	r2, [r7, #4]
 6208 0074 92F84230 		ldrb	r3, [r2, #66]
 6209 0078 43F00803 		orr	r3, r3, #8
 6210 007c 82F84230 		strb	r3, [r2, #66]
2925:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			vTCPStateChange( pxSocket, eCLOSE_WAIT );
 6211              		.loc 3 2925 0
 6212 0080 7868     		ldr	r0, [r7, #4]
 6213 0082 0821     		movs	r1, #8
 6214 0084 FFF7FEFF 		bl	vTCPStateChange
 6215 0088 11E0     		b	.L415
 6216              	.L414:
2926:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2927:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
2928:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2929:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Clear the markers of the stream */
2930:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			memset( pxBuffer, '\0', sizeof( *pxBuffer ) - sizeof( pxBuffer->ucArray ) );
 6217              		.loc 3 2930 0
 6218 008a F868     		ldr	r0, [r7, #12]
 6219 008c 0021     		movs	r1, #0
 6220 008e 1422     		movs	r2, #20
 6221 0090 FFF7FEFF 		bl	memset
2931:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxBuffer->LENGTH = ( size_t ) uxLength ;
 6222              		.loc 3 2931 0
 6223 0094 FB68     		ldr	r3, [r7, #12]
 6224 0096 7A69     		ldr	r2, [r7, #20]
 6225 0098 1A61     		str	r2, [r3, #16]
2932:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2933:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xTCPWindowLoggingLevel != 0 )
2934:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2935:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_debug_printf( ( "prvTCPCreateStream: %cxStream created %lu bytes (total %lu)\n", xIsIn
2936:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2937:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2938:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xIsInputStream != 0 )
 6226              		.loc 3 2938 0
 6227 009a 3B68     		ldr	r3, [r7]
 6228 009c 002B     		cmp	r3, #0
 6229 009e 03D0     		beq	.L416
2939:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2940:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.rxStream = pxBuffer;
 6230              		.loc 3 2940 0
 6231 00a0 7B68     		ldr	r3, [r7, #4]
 6232 00a2 FA68     		ldr	r2, [r7, #12]
 6233 00a4 5A67     		str	r2, [r3, #116]
 6234 00a6 02E0     		b	.L415
 6235              	.L416:
2941:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2942:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
ARM GAS  /tmp/ccrA3BdH.s 			page 173


2943:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2944:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->u.xTCP.txStream = pxBuffer;
 6236              		.loc 3 2944 0
 6237 00a8 7B68     		ldr	r3, [r7, #4]
 6238 00aa FA68     		ldr	r2, [r7, #12]
 6239 00ac 9A67     		str	r2, [r3, #120]
 6240              	.L415:
2945:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2946:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2947:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2948:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return pxBuffer;
 6241              		.loc 3 2948 0
 6242 00ae FB68     		ldr	r3, [r7, #12]
2949:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6243              		.loc 3 2949 0
 6244 00b0 1846     		mov	r0, r3
 6245 00b2 1837     		adds	r7, r7, #24
 6246              	.LCFI270:
 6247              		.cfi_def_cfa_offset 8
 6248 00b4 BD46     		mov	sp, r7
 6249              	.LCFI271:
 6250              		.cfi_def_cfa_register 13
 6251              		@ sp needed
 6252 00b6 80BD     		pop	{r7, pc}
 6253              	.L419:
 6254              		.align	2
 6255              	.L418:
 6256 00b8 CDCCCCCC 		.word	-858993459
 6257              		.cfi_endproc
 6258              	.LFE67:
 6260              		.section	.text.lTCPAddRxdata,"ax",%progbits
 6261              		.align	2
 6262              		.global	lTCPAddRxdata
 6263              		.thumb
 6264              		.thumb_func
 6266              	lTCPAddRxdata:
 6267              	.LFB68:
2950:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2951:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
2952:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
2953:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2954:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
2955:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2956:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
2957:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Add data to the RxStream.  When uxOffset > 0, data has come in out-of-order
2958:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * and will be put in front of the head so it can not be popped by the user.
2959:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
2960:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	int32_t lTCPAddRxdata( FreeRTOS_Socket_t *pxSocket, size_t uxOffset, const uint8_t *pcData, uint32
2961:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6268              		.loc 3 2961 0
 6269              		.cfi_startproc
 6270              		@ args = 0, pretend = 0, frame = 32
 6271              		@ frame_needed = 1, uses_anonymous_args = 0
 6272 0000 80B5     		push	{r7, lr}
 6273              	.LCFI272:
 6274              		.cfi_def_cfa_offset 8
 6275              		.cfi_offset 7, -8
ARM GAS  /tmp/ccrA3BdH.s 			page 174


 6276              		.cfi_offset 14, -4
 6277 0002 88B0     		sub	sp, sp, #32
 6278              	.LCFI273:
 6279              		.cfi_def_cfa_offset 40
 6280 0004 00AF     		add	r7, sp, #0
 6281              	.LCFI274:
 6282              		.cfi_def_cfa_register 7
 6283 0006 F860     		str	r0, [r7, #12]
 6284 0008 B960     		str	r1, [r7, #8]
 6285 000a 7A60     		str	r2, [r7, #4]
 6286 000c 3B60     		str	r3, [r7]
2962:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	StreamBuffer_t *pxStream = pxSocket->u.xTCP.rxStream;
 6287              		.loc 3 2962 0
 6288 000e FB68     		ldr	r3, [r7, #12]
 6289 0010 5B6F     		ldr	r3, [r3, #116]
 6290 0012 FB61     		str	r3, [r7, #28]
2963:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	int32_t xResult;
2964:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigUSE_CALLBACKS == 1 )
2965:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		BaseType_t bHasHandler = ipconfigIS_VALID_PROG_ADDRESS( pxSocket->u.xTCP.pxHandleReceive );
2966:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		const uint8_t *pucBuffer = NULL;
2967:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif /* ipconfigUSE_CALLBACKS */
2968:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2969:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* int32_t uxStreamBufferAdd( pxBuffer, uxOffset, pucData, aCount )
2970:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pucData != NULL ) copy data the the buffer
2971:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pucData == NULL ) no copying, just advance rxHead
2972:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( uxOffset != 0 ) Just store data which has come out-of-order
2973:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( uxOffset == 0 ) Also advance rxHead */
2974:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxStream == NULL )
 6291              		.loc 3 2974 0
 6292 0014 FB69     		ldr	r3, [r7, #28]
 6293 0016 002B     		cmp	r3, #0
 6294 0018 0AD1     		bne	.L421
2975:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2976:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxStream = prvTCPCreateStream( pxSocket, pdTRUE );
 6295              		.loc 3 2976 0
 6296 001a F868     		ldr	r0, [r7, #12]
 6297 001c 0121     		movs	r1, #1
 6298 001e FFF7FEFF 		bl	prvTCPCreateStream
 6299 0022 F861     		str	r0, [r7, #28]
2977:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxStream == NULL )
 6300              		.loc 3 2977 0
 6301 0024 FB69     		ldr	r3, [r7, #28]
 6302 0026 002B     		cmp	r3, #0
 6303 0028 02D1     		bne	.L421
2978:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
2979:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				return -1;
 6304              		.loc 3 2979 0
 6305 002a 4FF0FF33 		mov	r3, #-1
 6306 002e 45E0     		b	.L422
 6307              	.L421:
2980:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2981:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2982:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2983:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigUSE_CALLBACKS == 1 )
2984:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
2985:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( bHasHandler != pdFALSE ) && ( uxStreamBufferGetSize( pxStream ) == 0u ) && ( uxOffset == 0
2986:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
ARM GAS  /tmp/ccrA3BdH.s 			page 175


2987:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Data can be passed directly to the user */
2988:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pucBuffer = pcData;
2989:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2990:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Zero-copy for call-back: no need to add the bytes to the
2991:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				stream, only the pointer will be advanced by uxStreamBufferAdd(). */
2992:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pcData = NULL;
2993:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
2994:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
2995:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigUSE_CALLBACKS */
2996:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2997:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xResult = ( int32_t ) uxStreamBufferAdd( pxStream, uxOffset, pcData, ( size_t ) ulByteCount );
 6308              		.loc 3 2997 0
 6309 0030 F869     		ldr	r0, [r7, #28]
 6310 0032 B968     		ldr	r1, [r7, #8]
 6311 0034 7A68     		ldr	r2, [r7, #4]
 6312 0036 3B68     		ldr	r3, [r7]
 6313 0038 FFF7FEFF 		bl	uxStreamBufferAdd
 6314 003c 0346     		mov	r3, r0
 6315 003e BB61     		str	r3, [r7, #24]
2998:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
2999:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigHAS_DEBUG_PRINTF != 0 )
3000:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3001:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xResult != ( int32_t ) ulByteCount )
3002:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3003:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_debug_printf( ( "lTCPAddRxdata: at %ld: %ld/%lu bytes (tail %lu head %lu space %lu fro
3004:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					uxOffset, xResult, ulByteCount,
3005:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxStream->uxTail,
3006:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxStream->uxHead,
3007:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					uxStreamBufferFrontSpace( pxStream ),
3008:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxStream->uxFront ) );
3009:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3010:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3011:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigHAS_DEBUG_PRINTF */
3012:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3013:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( uxOffset == 0u )
 6316              		.loc 3 3013 0
 6317 0040 BB68     		ldr	r3, [r7, #8]
 6318 0042 002B     		cmp	r3, #0
 6319 0044 39D1     		bne	.L423
3014:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3015:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Data is being added to rxStream at the head (offs = 0) */
3016:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#if( ipconfigUSE_CALLBACKS == 1 )
3017:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( bHasHandler != pdFALSE )
3018:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3019:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* The socket owner has installed an OnReceive handler. Pass the
3020:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					Rx data, without copying from the rxStream, to the user. */
3021:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					for (;;)
3022:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
3023:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						uint8_t *ucReadPtr = NULL;
3024:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						uint32_t ulCount;
3025:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( pucBuffer != NULL )
3026:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3027:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							ucReadPtr = ( uint8_t * )pucBuffer;
3028:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							ulCount = ulByteCount;
3029:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							pucBuffer = NULL;
3030:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3031:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						else
ARM GAS  /tmp/ccrA3BdH.s 			page 176


3032:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3033:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							ulCount = ( uint32_t ) uxStreamBufferGetPtr( pxStream, &( ucReadPtr ) );
3034:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3035:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3036:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( ulCount == 0ul )
3037:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3038:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							break;
3039:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3040:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3041:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.pxHandleReceive( (Socket_t *)pxSocket, ( void* )ucReadPtr, ( size_t ) ulCoun
3042:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						uxStreamBufferGet( pxStream, 0ul, NULL, ( size_t ) ulCount, pdFALSE );
3043:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
3044:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				} else
3045:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			#endif /* ipconfigUSE_CALLBACKS */
3046:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3047:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* See if running out of space. */
3048:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.bits.bLowWater == pdFALSE_UNSIGNED )
 6320              		.loc 3 3048 0
 6321 0046 FB68     		ldr	r3, [r7, #12]
 6322 0048 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 6323 004c 23F07F03 		bic	r3, r3, #127
 6324 0050 DBB2     		uxtb	r3, r3
 6325 0052 002B     		cmp	r3, #0
 6326 0054 1FD1     		bne	.L424
 6327              	.LBB82:
3049:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3050:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					size_t uxFrontSpace = uxStreamBufferFrontSpace( pxSocket->u.xTCP.rxStream );
 6328              		.loc 3 3050 0
 6329 0056 FB68     		ldr	r3, [r7, #12]
 6330 0058 5B6F     		ldr	r3, [r3, #116]
 6331 005a 1846     		mov	r0, r3
 6332 005c FFF7FEFF 		bl	uxStreamBufferFrontSpace
 6333 0060 7861     		str	r0, [r7, #20]
3051:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( uxFrontSpace <= pxSocket->u.xTCP.uxLittleSpace  )
 6334              		.loc 3 3051 0
 6335 0062 FB68     		ldr	r3, [r7, #12]
 6336 0064 5A6E     		ldr	r2, [r3, #100]
 6337 0066 7B69     		ldr	r3, [r7, #20]
 6338 0068 9A42     		cmp	r2, r3
 6339 006a 14D3     		bcc	.L424
3052:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
3053:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bLowWater = pdTRUE_UNSIGNED;
 6340              		.loc 3 3053 0
 6341 006c FA68     		ldr	r2, [r7, #12]
 6342 006e 92F84030 		ldrb	r3, [r2, #64]
 6343 0072 43F08003 		orr	r3, r3, #128
 6344 0076 82F84030 		strb	r3, [r2, #64]
3054:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.bits.bWinChange = pdTRUE_UNSIGNED;
 6345              		.loc 3 3054 0
 6346 007a FA68     		ldr	r2, [r7, #12]
 6347 007c 92F84130 		ldrb	r3, [r2, #65]
 6348 0080 43F00103 		orr	r3, r3, #1
 6349 0084 82F84130 		strb	r3, [r2, #65]
3055:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3056:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* bLowWater was reached, send the changed window size. */
3057:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.usTimeout = 1u;
 6350              		.loc 3 3057 0
ARM GAS  /tmp/ccrA3BdH.s 			page 177


 6351 0088 FB68     		ldr	r3, [r7, #12]
 6352 008a 0122     		movs	r2, #1
 6353 008c A3F84820 		strh	r2, [r3, #72]	@ movhi
3058:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xSendEventToIPTask( eTCPTimerEvent );
 6354              		.loc 3 3058 0
 6355 0090 0520     		movs	r0, #5
 6356 0092 FFF7FEFF 		bl	xSendEventToIPTask
 6357              	.L424:
 6358              	.LBE82:
3059:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
3060:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
3061:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3062:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* New incoming data is available, wake up the user.   User's
3063:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				semaphores will be set just before the IP-task goes asleep. */
3064:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->xEventBits |= eSOCKET_RECEIVE;
 6359              		.loc 3 3064 0
 6360 0096 FB68     		ldr	r3, [r7, #12]
 6361 0098 1B68     		ldr	r3, [r3]
 6362 009a 43F00102 		orr	r2, r3, #1
 6363 009e FB68     		ldr	r3, [r7, #12]
 6364 00a0 1A60     		str	r2, [r3]
3065:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3066:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if ipconfigSUPPORT_SELECT_FUNCTION == 1
3067:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3068:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( pxSocket->xSelectBits & eSELECT_READ ) != 0 )
 6365              		.loc 3 3068 0
 6366 00a2 FB68     		ldr	r3, [r7, #12]
 6367 00a4 DB6A     		ldr	r3, [r3, #44]
 6368 00a6 03F00103 		and	r3, r3, #1
 6369 00aa 002B     		cmp	r3, #0
 6370 00ac 05D0     		beq	.L423
3069:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
3070:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->xEventBits |= ( eSELECT_READ << SOCKET_EVENT_BIT_COUNT );
 6371              		.loc 3 3070 0
 6372 00ae FB68     		ldr	r3, [r7, #12]
 6373 00b0 1B68     		ldr	r3, [r3]
 6374 00b2 43F48072 		orr	r2, r3, #256
 6375 00b6 FB68     		ldr	r3, [r7, #12]
 6376 00b8 1A60     		str	r2, [r3]
 6377              	.L423:
3071:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
3072:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
3073:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif
3074:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3075:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3076:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3077:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 6378              		.loc 3 3077 0
 6379 00ba BB69     		ldr	r3, [r7, #24]
 6380              	.L422:
3078:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6381              		.loc 3 3078 0
 6382 00bc 1846     		mov	r0, r3
 6383 00be 2037     		adds	r7, r7, #32
 6384              	.LCFI275:
 6385              		.cfi_def_cfa_offset 8
 6386 00c0 BD46     		mov	sp, r7
ARM GAS  /tmp/ccrA3BdH.s 			page 178


 6387              	.LCFI276:
 6388              		.cfi_def_cfa_register 13
 6389              		@ sp needed
 6390 00c2 80BD     		pop	{r7, pc}
 6391              		.cfi_endproc
 6392              	.LFE68:
 6394              		.section	.text.FreeRTOS_GetRemoteAddress,"ax",%progbits
 6395              		.align	2
 6396              		.global	FreeRTOS_GetRemoteAddress
 6397              		.thumb
 6398              		.thumb_func
 6400              	FreeRTOS_GetRemoteAddress:
 6401              	.LFB69:
3079:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3080:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3081:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3082:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3083:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3084:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3085:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Function to get the remote address and IP port */
3086:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_GetRemoteAddress( Socket_t xSocket, struct freertos_sockaddr *pxAddress )
3087:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6402              		.loc 3 3087 0
 6403              		.cfi_startproc
 6404              		@ args = 0, pretend = 0, frame = 16
 6405              		@ frame_needed = 1, uses_anonymous_args = 0
 6406              		@ link register save eliminated.
 6407 0000 80B4     		push	{r7}
 6408              	.LCFI277:
 6409              		.cfi_def_cfa_offset 4
 6410              		.cfi_offset 7, -4
 6411 0002 85B0     		sub	sp, sp, #20
 6412              	.LCFI278:
 6413              		.cfi_def_cfa_offset 24
 6414 0004 00AF     		add	r7, sp, #0
 6415              	.LCFI279:
 6416              		.cfi_def_cfa_register 7
 6417 0006 7860     		str	r0, [r7, #4]
 6418 0008 3960     		str	r1, [r7]
3088:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6419              		.loc 3 3088 0
 6420 000a 7B68     		ldr	r3, [r7, #4]
 6421 000c BB60     		str	r3, [r7, #8]
3089:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult;
3090:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3091:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6422              		.loc 3 3091 0
 6423 000e BB68     		ldr	r3, [r7, #8]
 6424 0010 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6425 0014 062B     		cmp	r3, #6
 6426 0016 03D0     		beq	.L426
3092:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3093:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EINVAL;
 6427              		.loc 3 3093 0
 6428 0018 6FF01503 		mvn	r3, #21
 6429 001c FB60     		str	r3, [r7, #12]
 6430 001e 24E0     		b	.L427
ARM GAS  /tmp/ccrA3BdH.s 			page 179


 6431              	.L426:
3094:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3095:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3096:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3097:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* BSD style sockets communicate IP and port addresses in network
3098:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			byte order.
3099:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3100:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			IP address of remote machine. */
3101:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxAddress->sin_addr = FreeRTOS_htonl ( pxSocket->u.xTCP.ulRemoteIP );
 6432              		.loc 3 3101 0
 6433 0020 BB68     		ldr	r3, [r7, #8]
 6434 0022 9B6B     		ldr	r3, [r3, #56]
 6435 0024 1A06     		lsls	r2, r3, #24
 6436 0026 BB68     		ldr	r3, [r7, #8]
 6437 0028 9B6B     		ldr	r3, [r3, #56]
 6438 002a 03F47F43 		and	r3, r3, #65280
 6439 002e 1B02     		lsls	r3, r3, #8
 6440 0030 1A43     		orrs	r2, r2, r3
 6441 0032 BB68     		ldr	r3, [r7, #8]
 6442 0034 9B6B     		ldr	r3, [r3, #56]
 6443 0036 03F47F03 		and	r3, r3, #16711680
 6444 003a 1B0A     		lsrs	r3, r3, #8
 6445 003c 1A43     		orrs	r2, r2, r3
 6446 003e BB68     		ldr	r3, [r7, #8]
 6447 0040 9B6B     		ldr	r3, [r3, #56]
 6448 0042 1B0E     		lsrs	r3, r3, #24
 6449 0044 1A43     		orrs	r2, r2, r3
 6450 0046 3B68     		ldr	r3, [r7]
 6451 0048 5A60     		str	r2, [r3, #4]
3102:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3103:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Port on remote machine. */
3104:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			pxAddress->sin_port = FreeRTOS_htons ( pxSocket->u.xTCP.usRemotePort );
 6452              		.loc 3 3104 0
 6453 004a BB68     		ldr	r3, [r7, #8]
 6454 004c 9B8F     		ldrh	r3, [r3, #60]
 6455 004e 1B02     		lsls	r3, r3, #8
 6456 0050 9AB2     		uxth	r2, r3
 6457 0052 BB68     		ldr	r3, [r7, #8]
 6458 0054 9B8F     		ldrh	r3, [r3, #60]
 6459 0056 1B0A     		lsrs	r3, r3, #8
 6460 0058 9BB2     		uxth	r3, r3
 6461 005a 9BB2     		uxth	r3, r3
 6462 005c 1343     		orrs	r3, r3, r2
 6463 005e 9BB2     		uxth	r3, r3
 6464 0060 9AB2     		uxth	r2, r3
 6465 0062 3B68     		ldr	r3, [r7]
 6466 0064 5A80     		strh	r2, [r3, #2]	@ movhi
3105:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3106:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = ( BaseType_t ) sizeof( ( *pxAddress ) );
 6467              		.loc 3 3106 0
 6468 0066 0823     		movs	r3, #8
 6469 0068 FB60     		str	r3, [r7, #12]
 6470              	.L427:
3107:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3108:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3109:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 6471              		.loc 3 3109 0
ARM GAS  /tmp/ccrA3BdH.s 			page 180


 6472 006a FB68     		ldr	r3, [r7, #12]
3110:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6473              		.loc 3 3110 0
 6474 006c 1846     		mov	r0, r3
 6475 006e 1437     		adds	r7, r7, #20
 6476              	.LCFI280:
 6477              		.cfi_def_cfa_offset 4
 6478 0070 BD46     		mov	sp, r7
 6479              	.LCFI281:
 6480              		.cfi_def_cfa_register 13
 6481              		@ sp needed
 6482 0072 5DF8047B 		ldr	r7, [sp], #4
 6483              	.LCFI282:
 6484              		.cfi_restore 7
 6485              		.cfi_def_cfa_offset 0
 6486 0076 7047     		bx	lr
 6487              		.cfi_endproc
 6488              	.LFE69:
 6490              		.section	.text.FreeRTOS_maywrite,"ax",%progbits
 6491              		.align	2
 6492              		.global	FreeRTOS_maywrite
 6493              		.thumb
 6494              		.thumb_func
 6496              	FreeRTOS_maywrite:
 6497              	.LFB70:
3111:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3112:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3113:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3114:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3115:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3116:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3117:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3118:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Returns the number of bytes that may be added to txStream */
3119:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_maywrite( Socket_t xSocket )
3120:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6498              		.loc 3 3120 0
 6499              		.cfi_startproc
 6500              		@ args = 0, pretend = 0, frame = 16
 6501              		@ frame_needed = 1, uses_anonymous_args = 0
 6502 0000 80B5     		push	{r7, lr}
 6503              	.LCFI283:
 6504              		.cfi_def_cfa_offset 8
 6505              		.cfi_offset 7, -8
 6506              		.cfi_offset 14, -4
 6507 0002 84B0     		sub	sp, sp, #16
 6508              	.LCFI284:
 6509              		.cfi_def_cfa_offset 24
 6510 0004 00AF     		add	r7, sp, #0
 6511              	.LCFI285:
 6512              		.cfi_def_cfa_register 7
 6513 0006 7860     		str	r0, [r7, #4]
3121:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6514              		.loc 3 3121 0
 6515 0008 7B68     		ldr	r3, [r7, #4]
 6516 000a BB60     		str	r3, [r7, #8]
3122:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xResult;
3123:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 181


3124:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6517              		.loc 3 3124 0
 6518 000c BB68     		ldr	r3, [r7, #8]
 6519 000e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6520 0012 062B     		cmp	r3, #6
 6521 0014 03D0     		beq	.L430
3125:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3126:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = -pdFREERTOS_ERRNO_EINVAL;
 6522              		.loc 3 3126 0
 6523 0016 6FF01503 		mvn	r3, #21
 6524 001a FB60     		str	r3, [r7, #12]
 6525 001c 24E0     		b	.L431
 6526              	.L430:
3127:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3128:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.ucTCPState != eESTABLISHED )
 6527              		.loc 3 3128 0
 6528 001e BB68     		ldr	r3, [r7, #8]
 6529 0020 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6530 0024 052B     		cmp	r3, #5
 6531 0026 10D0     		beq	.L432
3129:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3130:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( ( pxSocket->u.xTCP.ucTCPState < eCONNECT_SYN ) || ( pxSocket->u.xTCP.ucTCPState > eESTABLISH
 6532              		.loc 3 3130 0
 6533 0028 BB68     		ldr	r3, [r7, #8]
 6534 002a 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6535 002e 012B     		cmp	r3, #1
 6536 0030 04D9     		bls	.L433
 6537              		.loc 3 3130 0 is_stmt 0 discriminator 1
 6538 0032 BB68     		ldr	r3, [r7, #8]
 6539 0034 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6540 0038 052B     		cmp	r3, #5
 6541 003a 03D9     		bls	.L434
 6542              	.L433:
3131:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3132:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xResult = -1;
 6543              		.loc 3 3132 0 is_stmt 1
 6544 003c 4FF0FF33 		mov	r3, #-1
 6545 0040 FB60     		str	r3, [r7, #12]
 6546 0042 11E0     		b	.L431
 6547              	.L434:
3133:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3134:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
3135:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3136:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xResult = 0;
 6548              		.loc 3 3136 0
 6549 0044 0023     		movs	r3, #0
 6550 0046 FB60     		str	r3, [r7, #12]
 6551 0048 0EE0     		b	.L431
 6552              	.L432:
3137:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3138:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3139:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.txStream == NULL )
 6553              		.loc 3 3139 0
 6554 004a BB68     		ldr	r3, [r7, #8]
 6555 004c 9B6F     		ldr	r3, [r3, #120]
 6556 004e 002B     		cmp	r3, #0
 6557 0050 03D1     		bne	.L436
ARM GAS  /tmp/ccrA3BdH.s 			page 182


3140:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3141:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = ( BaseType_t ) pxSocket->u.xTCP.uxTxStreamSize;
 6558              		.loc 3 3141 0
 6559 0052 BB68     		ldr	r3, [r7, #8]
 6560 0054 1B6F     		ldr	r3, [r3, #112]
 6561 0056 FB60     		str	r3, [r7, #12]
 6562 0058 06E0     		b	.L431
 6563              	.L436:
3142:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3143:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3144:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3145:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xResult = ( BaseType_t ) uxStreamBufferGetSpace( pxSocket->u.xTCP.txStream );
 6564              		.loc 3 3145 0
 6565 005a BB68     		ldr	r3, [r7, #8]
 6566 005c 9B6F     		ldr	r3, [r3, #120]
 6567 005e 1846     		mov	r0, r3
 6568 0060 FFF7FEFF 		bl	uxStreamBufferGetSpace
 6569 0064 0346     		mov	r3, r0
 6570 0066 FB60     		str	r3, [r7, #12]
 6571              	.L431:
3146:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3147:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3148:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xResult;
 6572              		.loc 3 3148 0
 6573 0068 FB68     		ldr	r3, [r7, #12]
3149:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6574              		.loc 3 3149 0
 6575 006a 1846     		mov	r0, r3
 6576 006c 1037     		adds	r7, r7, #16
 6577              	.LCFI286:
 6578              		.cfi_def_cfa_offset 8
 6579 006e BD46     		mov	sp, r7
 6580              	.LCFI287:
 6581              		.cfi_def_cfa_register 13
 6582              		@ sp needed
 6583 0070 80BD     		pop	{r7, pc}
 6584              		.cfi_endproc
 6585              	.LFE70:
 6587 0072 00BF     		.section	.text.FreeRTOS_tx_space,"ax",%progbits
 6588              		.align	2
 6589              		.global	FreeRTOS_tx_space
 6590              		.thumb
 6591              		.thumb_func
 6593              	FreeRTOS_tx_space:
 6594              	.LFB71:
3150:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3151:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3152:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3153:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3154:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP ==1 )
3155:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3156:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_tx_space( Socket_t xSocket )
3157:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6595              		.loc 3 3157 0
 6596              		.cfi_startproc
 6597              		@ args = 0, pretend = 0, frame = 16
 6598              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/ccrA3BdH.s 			page 183


 6599 0000 80B5     		push	{r7, lr}
 6600              	.LCFI288:
 6601              		.cfi_def_cfa_offset 8
 6602              		.cfi_offset 7, -8
 6603              		.cfi_offset 14, -4
 6604 0002 84B0     		sub	sp, sp, #16
 6605              	.LCFI289:
 6606              		.cfi_def_cfa_offset 24
 6607 0004 00AF     		add	r7, sp, #0
 6608              	.LCFI290:
 6609              		.cfi_def_cfa_register 7
 6610 0006 7860     		str	r0, [r7, #4]
3158:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6611              		.loc 3 3158 0
 6612 0008 7B68     		ldr	r3, [r7, #4]
 6613 000a BB60     		str	r3, [r7, #8]
3159:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3160:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3161:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6614              		.loc 3 3161 0
 6615 000c BB68     		ldr	r3, [r7, #8]
 6616 000e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6617 0012 062B     		cmp	r3, #6
 6618 0014 03D0     		beq	.L439
3162:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3163:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 6619              		.loc 3 3163 0
 6620 0016 6FF01503 		mvn	r3, #21
 6621 001a FB60     		str	r3, [r7, #12]
 6622 001c 0EE0     		b	.L440
 6623              	.L439:
3164:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3165:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3166:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3167:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.txStream != NULL )
 6624              		.loc 3 3167 0
 6625 001e BB68     		ldr	r3, [r7, #8]
 6626 0020 9B6F     		ldr	r3, [r3, #120]
 6627 0022 002B     		cmp	r3, #0
 6628 0024 07D0     		beq	.L441
3168:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3169:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = ( BaseType_t ) uxStreamBufferGetSpace ( pxSocket->u.xTCP.txStream );
 6629              		.loc 3 3169 0
 6630 0026 BB68     		ldr	r3, [r7, #8]
 6631 0028 9B6F     		ldr	r3, [r3, #120]
 6632 002a 1846     		mov	r0, r3
 6633 002c FFF7FEFF 		bl	uxStreamBufferGetSpace
 6634 0030 0346     		mov	r3, r0
 6635 0032 FB60     		str	r3, [r7, #12]
 6636 0034 02E0     		b	.L440
 6637              	.L441:
3170:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3171:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
3172:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3173:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = ( BaseType_t ) pxSocket->u.xTCP.uxTxStreamSize;
 6638              		.loc 3 3173 0
 6639 0036 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccrA3BdH.s 			page 184


 6640 0038 1B6F     		ldr	r3, [r3, #112]
 6641 003a FB60     		str	r3, [r7, #12]
 6642              	.L440:
3174:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3175:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3176:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3177:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 6643              		.loc 3 3177 0
 6644 003c FB68     		ldr	r3, [r7, #12]
3178:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6645              		.loc 3 3178 0
 6646 003e 1846     		mov	r0, r3
 6647 0040 1037     		adds	r7, r7, #16
 6648              	.LCFI291:
 6649              		.cfi_def_cfa_offset 8
 6650 0042 BD46     		mov	sp, r7
 6651              	.LCFI292:
 6652              		.cfi_def_cfa_register 13
 6653              		@ sp needed
 6654 0044 80BD     		pop	{r7, pc}
 6655              		.cfi_endproc
 6656              	.LFE71:
 6658              		.section	.text.FreeRTOS_tx_size,"ax",%progbits
 6659              		.align	2
 6660              		.global	FreeRTOS_tx_size
 6661              		.thumb
 6662              		.thumb_func
 6664              	FreeRTOS_tx_size:
 6665              	.LFB72:
3179:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3180:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3181:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3182:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3183:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3184:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3185:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_tx_size( Socket_t xSocket )
3186:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6666              		.loc 3 3186 0
 6667              		.cfi_startproc
 6668              		@ args = 0, pretend = 0, frame = 16
 6669              		@ frame_needed = 1, uses_anonymous_args = 0
 6670 0000 80B5     		push	{r7, lr}
 6671              	.LCFI293:
 6672              		.cfi_def_cfa_offset 8
 6673              		.cfi_offset 7, -8
 6674              		.cfi_offset 14, -4
 6675 0002 84B0     		sub	sp, sp, #16
 6676              	.LCFI294:
 6677              		.cfi_def_cfa_offset 24
 6678 0004 00AF     		add	r7, sp, #0
 6679              	.LCFI295:
 6680              		.cfi_def_cfa_register 7
 6681 0006 7860     		str	r0, [r7, #4]
3187:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6682              		.loc 3 3187 0
 6683 0008 7B68     		ldr	r3, [r7, #4]
 6684 000a BB60     		str	r3, [r7, #8]
ARM GAS  /tmp/ccrA3BdH.s 			page 185


3188:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3189:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3190:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6685              		.loc 3 3190 0
 6686 000c BB68     		ldr	r3, [r7, #8]
 6687 000e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6688 0012 062B     		cmp	r3, #6
 6689 0014 03D0     		beq	.L444
3191:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3192:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 6690              		.loc 3 3192 0
 6691 0016 6FF01503 		mvn	r3, #21
 6692 001a FB60     		str	r3, [r7, #12]
 6693 001c 0DE0     		b	.L445
 6694              	.L444:
3193:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3194:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3195:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3196:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.txStream != NULL )
 6695              		.loc 3 3196 0
 6696 001e BB68     		ldr	r3, [r7, #8]
 6697 0020 9B6F     		ldr	r3, [r3, #120]
 6698 0022 002B     		cmp	r3, #0
 6699 0024 07D0     		beq	.L446
3197:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3198:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = ( BaseType_t ) uxStreamBufferGetSize ( pxSocket->u.xTCP.txStream );
 6700              		.loc 3 3198 0
 6701 0026 BB68     		ldr	r3, [r7, #8]
 6702 0028 9B6F     		ldr	r3, [r3, #120]
 6703 002a 1846     		mov	r0, r3
 6704 002c FFF7FEFF 		bl	uxStreamBufferGetSize
 6705 0030 0346     		mov	r3, r0
 6706 0032 FB60     		str	r3, [r7, #12]
 6707 0034 01E0     		b	.L445
 6708              	.L446:
3199:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3200:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
3201:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3202:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xReturn = 0;
 6709              		.loc 3 3202 0
 6710 0036 0023     		movs	r3, #0
 6711 0038 FB60     		str	r3, [r7, #12]
 6712              	.L445:
3203:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3204:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3205:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3206:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 6713              		.loc 3 3206 0
 6714 003a FB68     		ldr	r3, [r7, #12]
3207:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6715              		.loc 3 3207 0
 6716 003c 1846     		mov	r0, r3
 6717 003e 1037     		adds	r7, r7, #16
 6718              	.LCFI296:
 6719              		.cfi_def_cfa_offset 8
 6720 0040 BD46     		mov	sp, r7
 6721              	.LCFI297:
ARM GAS  /tmp/ccrA3BdH.s 			page 186


 6722              		.cfi_def_cfa_register 13
 6723              		@ sp needed
 6724 0042 80BD     		pop	{r7, pc}
 6725              		.cfi_endproc
 6726              	.LFE72:
 6728              		.section	.text.FreeRTOS_issocketconnected,"ax",%progbits
 6729              		.align	2
 6730              		.global	FreeRTOS_issocketconnected
 6731              		.thumb
 6732              		.thumb_func
 6734              	FreeRTOS_issocketconnected:
 6735              	.LFB73:
3208:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3209:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3210:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3211:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3212:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3213:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3214:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Returns pdTRUE if TCP socket is connected. */
3215:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_issocketconnected( Socket_t xSocket )
3216:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6736              		.loc 3 3216 0
 6737              		.cfi_startproc
 6738              		@ args = 0, pretend = 0, frame = 16
 6739              		@ frame_needed = 1, uses_anonymous_args = 0
 6740              		@ link register save eliminated.
 6741 0000 80B4     		push	{r7}
 6742              	.LCFI298:
 6743              		.cfi_def_cfa_offset 4
 6744              		.cfi_offset 7, -4
 6745 0002 85B0     		sub	sp, sp, #20
 6746              	.LCFI299:
 6747              		.cfi_def_cfa_offset 24
 6748 0004 00AF     		add	r7, sp, #0
 6749              	.LCFI300:
 6750              		.cfi_def_cfa_register 7
 6751 0006 7860     		str	r0, [r7, #4]
3217:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6752              		.loc 3 3217 0
 6753 0008 7B68     		ldr	r3, [r7, #4]
 6754 000a BB60     		str	r3, [r7, #8]
3218:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn = pdFALSE;
 6755              		.loc 3 3218 0
 6756 000c 0023     		movs	r3, #0
 6757 000e FB60     		str	r3, [r7, #12]
3219:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3220:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6758              		.loc 3 3220 0
 6759 0010 BB68     		ldr	r3, [r7, #8]
 6760 0012 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6761 0016 062B     		cmp	r3, #6
 6762 0018 03D0     		beq	.L449
3221:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3222:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 6763              		.loc 3 3222 0
 6764 001a 6FF01503 		mvn	r3, #21
 6765 001e FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccrA3BdH.s 			page 187


 6766 0020 0BE0     		b	.L450
 6767              	.L449:
3223:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3224:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3225:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3226:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED )
 6768              		.loc 3 3226 0
 6769 0022 BB68     		ldr	r3, [r7, #8]
 6770 0024 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6771 0028 042B     		cmp	r3, #4
 6772 002a 06D9     		bls	.L450
3227:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3228:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->u.xTCP.ucTCPState < eCLOSE_WAIT )
 6773              		.loc 3 3228 0
 6774 002c BB68     		ldr	r3, [r7, #8]
 6775 002e 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6776 0032 072B     		cmp	r3, #7
 6777 0034 01D8     		bhi	.L450
3229:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3230:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					xReturn = pdTRUE;
 6778              		.loc 3 3230 0
 6779 0036 0123     		movs	r3, #1
 6780 0038 FB60     		str	r3, [r7, #12]
 6781              	.L450:
3231:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
3232:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3233:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3234:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3235:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 6782              		.loc 3 3235 0
 6783 003a FB68     		ldr	r3, [r7, #12]
3236:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6784              		.loc 3 3236 0
 6785 003c 1846     		mov	r0, r3
 6786 003e 1437     		adds	r7, r7, #20
 6787              	.LCFI301:
 6788              		.cfi_def_cfa_offset 4
 6789 0040 BD46     		mov	sp, r7
 6790              	.LCFI302:
 6791              		.cfi_def_cfa_register 13
 6792              		@ sp needed
 6793 0042 5DF8047B 		ldr	r7, [sp], #4
 6794              	.LCFI303:
 6795              		.cfi_restore 7
 6796              		.cfi_def_cfa_offset 0
 6797 0046 7047     		bx	lr
 6798              		.cfi_endproc
 6799              	.LFE73:
 6801              		.section	.text.FreeRTOS_mss,"ax",%progbits
 6802              		.align	2
 6803              		.global	FreeRTOS_mss
 6804              		.thumb
 6805              		.thumb_func
 6807              	FreeRTOS_mss:
 6808              	.LFB74:
3237:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3238:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
ARM GAS  /tmp/ccrA3BdH.s 			page 188


3239:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3240:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3241:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3242:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3243:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* returns the actual size of MSS being used */
3244:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_mss( Socket_t xSocket )
3245:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6809              		.loc 3 3245 0
 6810              		.cfi_startproc
 6811              		@ args = 0, pretend = 0, frame = 16
 6812              		@ frame_needed = 1, uses_anonymous_args = 0
 6813              		@ link register save eliminated.
 6814 0000 80B4     		push	{r7}
 6815              	.LCFI304:
 6816              		.cfi_def_cfa_offset 4
 6817              		.cfi_offset 7, -4
 6818 0002 85B0     		sub	sp, sp, #20
 6819              	.LCFI305:
 6820              		.cfi_def_cfa_offset 24
 6821 0004 00AF     		add	r7, sp, #0
 6822              	.LCFI306:
 6823              		.cfi_def_cfa_register 7
 6824 0006 7860     		str	r0, [r7, #4]
3246:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6825              		.loc 3 3246 0
 6826 0008 7B68     		ldr	r3, [r7, #4]
 6827 000a BB60     		str	r3, [r7, #8]
3247:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3248:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3249:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6828              		.loc 3 3249 0
 6829 000c BB68     		ldr	r3, [r7, #8]
 6830 000e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6831 0012 062B     		cmp	r3, #6
 6832 0014 03D0     		beq	.L453
3250:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3251:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 6833              		.loc 3 3251 0
 6834 0016 6FF01503 		mvn	r3, #21
 6835 001a FB60     		str	r3, [r7, #12]
 6836 001c 03E0     		b	.L454
 6837              	.L453:
3252:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3253:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3254:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3255:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* usCurMSS is declared as uint16_t to save space.  FreeRTOS_mss()
3256:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			will often be used in signed native-size expressions cast it to
3257:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			BaseType_t. */
3258:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = ( BaseType_t ) ( pxSocket->u.xTCP.usCurMSS );
 6838              		.loc 3 3258 0
 6839 001e BB68     		ldr	r3, [r7, #8]
 6840 0020 B3F84A30 		ldrh	r3, [r3, #74]
 6841 0024 FB60     		str	r3, [r7, #12]
 6842              	.L454:
3259:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3260:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3261:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
ARM GAS  /tmp/ccrA3BdH.s 			page 189


 6843              		.loc 3 3261 0
 6844 0026 FB68     		ldr	r3, [r7, #12]
3262:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6845              		.loc 3 3262 0
 6846 0028 1846     		mov	r0, r3
 6847 002a 1437     		adds	r7, r7, #20
 6848              	.LCFI307:
 6849              		.cfi_def_cfa_offset 4
 6850 002c BD46     		mov	sp, r7
 6851              	.LCFI308:
 6852              		.cfi_def_cfa_register 13
 6853              		@ sp needed
 6854 002e 5DF8047B 		ldr	r7, [sp], #4
 6855              	.LCFI309:
 6856              		.cfi_restore 7
 6857              		.cfi_def_cfa_offset 0
 6858 0032 7047     		bx	lr
 6859              		.cfi_endproc
 6860              	.LFE74:
 6862              		.section	.text.FreeRTOS_connstatus,"ax",%progbits
 6863              		.align	2
 6864              		.global	FreeRTOS_connstatus
 6865              		.thumb
 6866              		.thumb_func
 6868              	FreeRTOS_connstatus:
 6869              	.LFB75:
3263:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3264:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3265:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3266:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3267:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3268:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3269:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* HT: for internal use only: return the connection status */
3270:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_connstatus( Socket_t xSocket )
3271:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6870              		.loc 3 3271 0
 6871              		.cfi_startproc
 6872              		@ args = 0, pretend = 0, frame = 16
 6873              		@ frame_needed = 1, uses_anonymous_args = 0
 6874              		@ link register save eliminated.
 6875 0000 80B4     		push	{r7}
 6876              	.LCFI310:
 6877              		.cfi_def_cfa_offset 4
 6878              		.cfi_offset 7, -4
 6879 0002 85B0     		sub	sp, sp, #20
 6880              	.LCFI311:
 6881              		.cfi_def_cfa_offset 24
 6882 0004 00AF     		add	r7, sp, #0
 6883              	.LCFI312:
 6884              		.cfi_def_cfa_register 7
 6885 0006 7860     		str	r0, [r7, #4]
3272:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6886              		.loc 3 3272 0
 6887 0008 7B68     		ldr	r3, [r7, #4]
 6888 000a BB60     		str	r3, [r7, #8]
3273:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3274:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 190


3275:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6889              		.loc 3 3275 0
 6890 000c BB68     		ldr	r3, [r7, #8]
 6891 000e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6892 0012 062B     		cmp	r3, #6
 6893 0014 03D0     		beq	.L457
3276:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3277:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 6894              		.loc 3 3277 0
 6895 0016 6FF01503 		mvn	r3, #21
 6896 001a FB60     		str	r3, [r7, #12]
 6897 001c 03E0     		b	.L458
 6898              	.L457:
3278:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3279:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3280:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3281:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Cast it to BaseType_t */
3282:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = ( BaseType_t ) ( pxSocket->u.xTCP.ucTCPState );
 6899              		.loc 3 3282 0
 6900 001e BB68     		ldr	r3, [r7, #8]
 6901 0020 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 6902 0024 FB60     		str	r3, [r7, #12]
 6903              	.L458:
3283:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3284:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3285:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 6904              		.loc 3 3285 0
 6905 0026 FB68     		ldr	r3, [r7, #12]
3286:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6906              		.loc 3 3286 0
 6907 0028 1846     		mov	r0, r3
 6908 002a 1437     		adds	r7, r7, #20
 6909              	.LCFI313:
 6910              		.cfi_def_cfa_offset 4
 6911 002c BD46     		mov	sp, r7
 6912              	.LCFI314:
 6913              		.cfi_def_cfa_register 13
 6914              		@ sp needed
 6915 002e 5DF8047B 		ldr	r7, [sp], #4
 6916              	.LCFI315:
 6917              		.cfi_restore 7
 6918              		.cfi_def_cfa_offset 0
 6919 0032 7047     		bx	lr
 6920              		.cfi_endproc
 6921              	.LFE75:
 6923              		.section	.text.FreeRTOS_rx_size,"ax",%progbits
 6924              		.align	2
 6925              		.global	FreeRTOS_rx_size
 6926              		.thumb
 6927              		.thumb_func
 6929              	FreeRTOS_rx_size:
 6930              	.LFB76:
3287:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3288:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3289:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3290:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3291:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
ARM GAS  /tmp/ccrA3BdH.s 			page 191


3292:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3293:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/*
3294:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 * Returns the number of bytes which can be read.
3295:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	 */
3296:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_rx_size( Socket_t xSocket )
3297:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 6931              		.loc 3 3297 0
 6932              		.cfi_startproc
 6933              		@ args = 0, pretend = 0, frame = 16
 6934              		@ frame_needed = 1, uses_anonymous_args = 0
 6935 0000 80B5     		push	{r7, lr}
 6936              	.LCFI316:
 6937              		.cfi_def_cfa_offset 8
 6938              		.cfi_offset 7, -8
 6939              		.cfi_offset 14, -4
 6940 0002 84B0     		sub	sp, sp, #16
 6941              	.LCFI317:
 6942              		.cfi_def_cfa_offset 24
 6943 0004 00AF     		add	r7, sp, #0
 6944              	.LCFI318:
 6945              		.cfi_def_cfa_register 7
 6946 0006 7860     		str	r0, [r7, #4]
3298:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 6947              		.loc 3 3298 0
 6948 0008 7B68     		ldr	r3, [r7, #4]
 6949 000a BB60     		str	r3, [r7, #8]
3299:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3300:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3301:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->ucProtocol != ( uint8_t ) FREERTOS_IPPROTO_TCP )
 6950              		.loc 3 3301 0
 6951 000c BB68     		ldr	r3, [r7, #8]
 6952 000e 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 6953 0012 062B     		cmp	r3, #6
 6954 0014 03D0     		beq	.L461
3302:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3303:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 6955              		.loc 3 3303 0
 6956 0016 6FF01503 		mvn	r3, #21
 6957 001a FB60     		str	r3, [r7, #12]
 6958 001c 0DE0     		b	.L462
 6959              	.L461:
3304:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3305:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else if( pxSocket->u.xTCP.rxStream != NULL )
 6960              		.loc 3 3305 0
 6961 001e BB68     		ldr	r3, [r7, #8]
 6962 0020 5B6F     		ldr	r3, [r3, #116]
 6963 0022 002B     		cmp	r3, #0
 6964 0024 07D0     		beq	.L463
3306:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3307:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = ( BaseType_t ) uxStreamBufferGetSize( pxSocket->u.xTCP.rxStream );
 6965              		.loc 3 3307 0
 6966 0026 BB68     		ldr	r3, [r7, #8]
 6967 0028 5B6F     		ldr	r3, [r3, #116]
 6968 002a 1846     		mov	r0, r3
 6969 002c FFF7FEFF 		bl	uxStreamBufferGetSize
 6970 0030 0346     		mov	r3, r0
 6971 0032 FB60     		str	r3, [r7, #12]
ARM GAS  /tmp/ccrA3BdH.s 			page 192


 6972 0034 01E0     		b	.L462
 6973              	.L463:
3308:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3309:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3310:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3311:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
 6974              		.loc 3 3311 0
 6975 0036 0023     		movs	r3, #0
 6976 0038 FB60     		str	r3, [r7, #12]
 6977              	.L462:
3312:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3313:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3314:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 6978              		.loc 3 3314 0
 6979 003a FB68     		ldr	r3, [r7, #12]
3315:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 6980              		.loc 3 3315 0
 6981 003c 1846     		mov	r0, r3
 6982 003e 1037     		adds	r7, r7, #16
 6983              	.LCFI319:
 6984              		.cfi_def_cfa_offset 8
 6985 0040 BD46     		mov	sp, r7
 6986              	.LCFI320:
 6987              		.cfi_def_cfa_register 13
 6988              		@ sp needed
 6989 0042 80BD     		pop	{r7, pc}
 6990              		.cfi_endproc
 6991              	.LFE76:
 6993              		.section	.text.FreeRTOS_netstat,"ax",%progbits
 6994              		.align	2
 6995              		.global	FreeRTOS_netstat
 6996              		.thumb
 6997              		.thumb_func
 6999              	FreeRTOS_netstat:
 7000              	.LFB77:
3316:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3317:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3318:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3319:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3320:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigUSE_TCP == 1 )
3321:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3322:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	void FreeRTOS_netstat( void )
3323:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 7001              		.loc 3 3323 0
 7002              		.cfi_startproc
 7003              		@ args = 0, pretend = 0, frame = 8
 7004              		@ frame_needed = 1, uses_anonymous_args = 0
 7005 0000 80B5     		push	{r7, lr}
 7006              	.LCFI321:
 7007              		.cfi_def_cfa_offset 8
 7008              		.cfi_offset 7, -8
 7009              		.cfi_offset 14, -4
 7010 0002 82B0     		sub	sp, sp, #8
 7011              	.LCFI322:
 7012              		.cfi_def_cfa_offset 16
 7013 0004 00AF     		add	r7, sp, #0
 7014              	.LCFI323:
ARM GAS  /tmp/ccrA3BdH.s 			page 193


 7015              		.cfi_def_cfa_register 7
3324:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	IPStackEvent_t xAskEvent;
3325:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3326:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Ask the IP-task to call vTCPNetStat()
3327:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		 * to avoid accessing xBoundTCPSocketsList
3328:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		 */
3329:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xAskEvent.eEventType = eTCPNetStat;
 7016              		.loc 3 3329 0
 7017 0006 0723     		movs	r3, #7
 7018 0008 3B70     		strb	r3, [r7]
3330:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xAskEvent.pvData = ( void * ) NULL;
 7019              		.loc 3 3330 0
 7020 000a 0023     		movs	r3, #0
 7021 000c 7B60     		str	r3, [r7, #4]
3331:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xSendEventStructToIPTask( &xAskEvent, 1000u );
 7022              		.loc 3 3331 0
 7023 000e 3B46     		mov	r3, r7
 7024 0010 1846     		mov	r0, r3
 7025 0012 4FF47A71 		mov	r1, #1000
 7026 0016 FFF7FEFF 		bl	xSendEventStructToIPTask
3332:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 7027              		.loc 3 3332 0
 7028 001a 0837     		adds	r7, r7, #8
 7029              	.LCFI324:
 7030              		.cfi_def_cfa_offset 8
 7031 001c BD46     		mov	sp, r7
 7032              	.LCFI325:
 7033              		.cfi_def_cfa_register 13
 7034              		@ sp needed
 7035 001e 80BD     		pop	{r7, pc}
 7036              		.cfi_endproc
 7037              	.LFE77:
 7039              		.section	.rodata
 7040              		.align	2
 7041              	.LC0:
 7042 0000 504C5553 		.ascii	"PLUS-TCP not initialized\012\000"
 7042      2D544350 
 7042      206E6F74 
 7042      20696E69 
 7042      7469616C 
 7043 001a 0000     		.align	2
 7044              	.LC1:
 7045 001c 50726F74 		.ascii	"Prot Port IP-Remote       : Port  R/T Status       "
 7045      20506F72 
 7045      74204950 
 7045      2D52656D 
 7045      6F746520 
 7046 004f 416C6976 		.ascii	"Alive  tmout Child\012\000"
 7046      65202074 
 7046      6D6F7574 
 7046      20436869 
 7046      6C640A00 
 7047 0063 00       		.align	2
 7048              	.LC2:
 7049 0064 2025642F 		.ascii	" %d/%d\000"
 7049      256400
 7050 006b 00       		.align	2
ARM GAS  /tmp/ccrA3BdH.s 			page 194


 7051              	.LC3:
 7052 006c 54435020 		.ascii	"TCP %5d %-16lxip:%5d %d/%d %-13.13s %6lu %6u%s\012\000"
 7052      25356420 
 7052      252D3136 
 7052      6C786970 
 7052      3A253564 
 7053              		.align	2
 7054              	.LC4:
 7055 009c 55445020 		.ascii	"UDP Port %5u\012\000"
 7055      506F7274 
 7055      20253575 
 7055      0A00
 7056 00aa 0000     		.align	2
 7057              	.LC5:
 7058 00ac 46726565 		.ascii	"FreeRTOS_netstat: %lu sockets %lu < %lu < %d buffer"
 7058      52544F53 
 7058      5F6E6574 
 7058      73746174 
 7058      3A20256C 
 7059 00df 73206672 		.ascii	"s free\012\000"
 7059      65650A00 
 7060              		.section	.text.vTCPNetStat,"ax",%progbits
 7061              		.align	2
 7062              		.global	vTCPNetStat
 7063              		.thumb
 7064              		.thumb_func
 7066              	vTCPNetStat:
 7067              	.LFB78:
3333:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3334:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigUSE_TCP */
3335:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3336:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3337:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ( ipconfigHAS_PRINTF != 0 ) && ( ipconfigUSE_TCP == 1 ) )
3338:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3339:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	void vTCPNetStat( void )
3340:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 7068              		.loc 3 3340 0
 7069              		.cfi_startproc
 7070              		@ args = 0, pretend = 0, frame = 40
 7071              		@ frame_needed = 1, uses_anonymous_args = 0
 7072 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 7073              	.LCFI326:
 7074              		.cfi_def_cfa_offset 28
 7075              		.cfi_offset 4, -28
 7076              		.cfi_offset 5, -24
 7077              		.cfi_offset 6, -20
 7078              		.cfi_offset 7, -16
 7079              		.cfi_offset 8, -12
 7080              		.cfi_offset 9, -8
 7081              		.cfi_offset 14, -4
 7082 0004 91B0     		sub	sp, sp, #68
 7083              	.LCFI327:
 7084              		.cfi_def_cfa_offset 96
 7085 0006 06AF     		add	r7, sp, #24
 7086              	.LCFI328:
 7087              		.cfi_def_cfa 7, 72
3341:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Show a simple listing of all created sockets and their connections */
ARM GAS  /tmp/ccrA3BdH.s 			page 195


3342:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	ListItem_t *pxIterator;
3343:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t count = 0;
 7088              		.loc 3 3343 0
 7089 0008 0023     		movs	r3, #0
 7090 000a 3B62     		str	r3, [r7, #32]
3344:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3345:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( listLIST_IS_INITIALISED( &xBoundTCPSocketsList ) == pdFALSE )
 7091              		.loc 3 3345 0
 7092 000c 564B     		ldr	r3, .L475
 7093 000e 9B68     		ldr	r3, [r3, #8]
 7094 0010 B3F1FF3F 		cmp	r3, #-1
 7095 0014 03D0     		beq	.L467
3346:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3347:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_printf( ( "PLUS-TCP not initialized\n" ) );
 7096              		.loc 3 3347 0
 7097 0016 5548     		ldr	r0, .L475+4
 7098 0018 FFF7FEFF 		bl	lUDPLoggingPrintf
 7099 001c A0E0     		b	.L466
 7100              	.L467:
3348:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3349:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3350:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3351:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_printf( ( "Prot Port IP-Remote       : Port  R/T Status       Alive  tmout Child\n" ) )
 7101              		.loc 3 3351 0
 7102 001e 5448     		ldr	r0, .L475+8
 7103 0020 FFF7FEFF 		bl	lUDPLoggingPrintf
3352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			for( pxIterator  = ( ListItem_t * ) listGET_HEAD_ENTRY( &xBoundTCPSocketsList );
 7104              		.loc 3 3352 0
 7105 0024 504B     		ldr	r3, .L475
 7106 0026 DB68     		ldr	r3, [r3, #12]
 7107 0028 7B62     		str	r3, [r7, #36]
 7108 002a 6AE0     		b	.L469
 7109              	.L472:
 7110              	.LBB83:
3353:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator != ( ListItem_t * ) listGET_END_MARKER( &xBoundTCPSocketsList );
3354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator  = ( ListItem_t * ) listGET_NEXT( pxIterator ) )
3355:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3356:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 7111              		.loc 3 3356 0
 7112 002c 7B6A     		ldr	r3, [r7, #36]
 7113 002e DB68     		ldr	r3, [r3, #12]
 7114 0030 BB61     		str	r3, [r7, #24]
3357:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigTCP_KEEP_ALIVE == 1 )
3358:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					TickType_t age = xTaskGetTickCount() - pxSocket->u.xTCP.xLastAliveTime;
 7115              		.loc 3 3358 0
 7116 0032 FFF7FEFF 		bl	xTaskGetTickCount
 7117 0036 0246     		mov	r2, r0
 7118 0038 BB69     		ldr	r3, [r7, #24]
 7119 003a DB6D     		ldr	r3, [r3, #92]
 7120 003c D31A     		subs	r3, r2, r3
 7121 003e FB61     		str	r3, [r7, #28]
3359:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#else
3360:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					TickType_t age = 0u;
3361:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif
3362:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigUSE_CALLBACKS == 1 )
3363:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					void *pxHandleReceive = (void*)pxSocket->u.xTCP.pxHandleReceive;
3364:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#else
ARM GAS  /tmp/ccrA3BdH.s 			page 196


3365:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					void *pxHandleReceive = (void*)NULL;
 7122              		.loc 3 3365 0
 7123 0040 0023     		movs	r3, #0
 7124 0042 7B61     		str	r3, [r7, #20]
3366:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif
3367:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				char ucChildText[16] = "";
 7125              		.loc 3 3367 0
 7126 0044 0023     		movs	r3, #0
 7127 0046 7B60     		str	r3, [r7, #4]
 7128 0048 07F10803 		add	r3, r7, #8
 7129 004c 0022     		movs	r2, #0
 7130 004e 1A60     		str	r2, [r3]
 7131 0050 0433     		adds	r3, r3, #4
 7132 0052 0022     		movs	r2, #0
 7133 0054 1A60     		str	r2, [r3]
 7134 0056 0433     		adds	r3, r3, #4
 7135 0058 0022     		movs	r2, #0
 7136 005a 1A60     		str	r2, [r3]
 7137 005c 0433     		adds	r3, r3, #4
3368:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if (pxSocket->u.xTCP.ucTCPState == eTCP_LISTEN)
 7138              		.loc 3 3368 0
 7139 005e BB69     		ldr	r3, [r7, #24]
 7140 0060 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 7141 0064 012B     		cmp	r3, #1
 7142 0066 0FD1     		bne	.L470
3369:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					snprintf( ucChildText, sizeof( ucChildText ), " %d/%d",
3371:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.usChildCount,
 7143              		.loc 3 3371 0
 7144 0068 BB69     		ldr	r3, [r7, #24]
 7145 006a B3F84E30 		ldrh	r3, [r3, #78]
3370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.usChildCount,
 7146              		.loc 3 3370 0
 7147 006e 1C46     		mov	r4, r3
3372:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.usBacklog);
 7148              		.loc 3 3372 0
 7149 0070 BB69     		ldr	r3, [r7, #24]
 7150 0072 B3F85030 		ldrh	r3, [r3, #80]
3370:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						pxSocket->u.xTCP.usChildCount,
 7151              		.loc 3 3370 0
 7152 0076 1A46     		mov	r2, r3
 7153 0078 3B1D     		adds	r3, r7, #4
 7154 007a 0092     		str	r2, [sp]
 7155 007c 1846     		mov	r0, r3
 7156 007e 1021     		movs	r1, #16
 7157 0080 3C4A     		ldr	r2, .L475+12
 7158 0082 2346     		mov	r3, r4
 7159 0084 FFF7FEFF 		bl	snprintf
 7160              	.L470:
3373:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
3374:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( age > 999999 )
 7161              		.loc 3 3374 0
 7162 0088 FB69     		ldr	r3, [r7, #28]
 7163 008a 3B4A     		ldr	r2, .L475+16
 7164 008c 9342     		cmp	r3, r2
 7165 008e 01D9     		bls	.L471
3375:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					age = 999999;
ARM GAS  /tmp/ccrA3BdH.s 			page 197


 7166              		.loc 3 3375 0
 7167 0090 394B     		ldr	r3, .L475+16
 7168 0092 FB61     		str	r3, [r7, #28]
 7169              	.L471:
3376:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_printf( ( "TCP %5d %-16lxip:%5d %d/%d %-13.13s %6lu %6u%s\n",
 7170              		.loc 3 3376 0
 7171 0094 BB69     		ldr	r3, [r7, #24]
 7172 0096 9B8C     		ldrh	r3, [r3, #36]
 7173 0098 9946     		mov	r9, r3
 7174 009a BB69     		ldr	r3, [r7, #24]
 7175 009c 9C6B     		ldr	r4, [r3, #56]
 7176 009e BB69     		ldr	r3, [r7, #24]
 7177 00a0 9B8F     		ldrh	r3, [r3, #60]
 7178 00a2 9846     		mov	r8, r3
 7179 00a4 BB69     		ldr	r3, [r7, #24]
 7180 00a6 5B6F     		ldr	r3, [r3, #116]
 7181 00a8 002B     		cmp	r3, #0
 7182 00aa 14BF     		ite	ne
 7183 00ac 0123     		movne	r3, #1
 7184 00ae 0023     		moveq	r3, #0
 7185 00b0 DBB2     		uxtb	r3, r3
 7186 00b2 1E46     		mov	r6, r3
 7187 00b4 BB69     		ldr	r3, [r7, #24]
 7188 00b6 9B6F     		ldr	r3, [r3, #120]
 7189 00b8 002B     		cmp	r3, #0
 7190 00ba 14BF     		ite	ne
 7191 00bc 0123     		movne	r3, #1
 7192 00be 0023     		moveq	r3, #0
 7193 00c0 DBB2     		uxtb	r3, r3
 7194 00c2 1D46     		mov	r5, r3
 7195 00c4 BB69     		ldr	r3, [r7, #24]
 7196 00c6 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 7197 00ca 1846     		mov	r0, r3
 7198 00cc FFF7FEFF 		bl	FreeRTOS_GetTCPStateName
 7199 00d0 0146     		mov	r1, r0
 7200 00d2 BB69     		ldr	r3, [r7, #24]
 7201 00d4 B3F84830 		ldrh	r3, [r3, #72]
 7202 00d8 1A46     		mov	r2, r3
 7203 00da 0096     		str	r6, [sp]
 7204 00dc 0195     		str	r5, [sp, #4]
 7205 00de 0291     		str	r1, [sp, #8]
 7206 00e0 FB69     		ldr	r3, [r7, #28]
 7207 00e2 0393     		str	r3, [sp, #12]
 7208 00e4 0492     		str	r2, [sp, #16]
 7209 00e6 3B1D     		adds	r3, r7, #4
 7210 00e8 0593     		str	r3, [sp, #20]
 7211 00ea 2448     		ldr	r0, .L475+20
 7212 00ec 4946     		mov	r1, r9
 7213 00ee 2246     		mov	r2, r4
 7214 00f0 4346     		mov	r3, r8
 7215 00f2 FFF7FEFF 		bl	lUDPLoggingPrintf
3377:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->usLocalPort,		/* Local port on this machine */
3378:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.ulRemoteIP,	/* IP address of remote machine */
3379:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.usRemotePort,	/* Port on remote machine */
3380:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.rxStream != NULL,
3381:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.txStream != NULL,
3382:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					FreeRTOS_GetTCPStateName( pxSocket->u.xTCP.ucTCPState ),
ARM GAS  /tmp/ccrA3BdH.s 			page 198


3383:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					age,
3384:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					pxSocket->u.xTCP.usTimeout,
3385:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					ucChildText ) );
3386:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Remove compiler warnings if FreeRTOS_debug_printf() is not defined. */
3387:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					( void ) pxHandleReceive;
3388:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				count++;
 7216              		.loc 3 3388 0
 7217 00f6 3B6A     		ldr	r3, [r7, #32]
 7218 00f8 0133     		adds	r3, r3, #1
 7219 00fa 3B62     		str	r3, [r7, #32]
 7220              	.LBE83:
3354:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 7221              		.loc 3 3354 0
 7222 00fc 7B6A     		ldr	r3, [r7, #36]
 7223 00fe 5B68     		ldr	r3, [r3, #4]
 7224 0100 7B62     		str	r3, [r7, #36]
 7225              	.L469:
3352:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator != ( ListItem_t * ) listGET_END_MARKER( &xBoundTCPSocketsList );
 7226              		.loc 3 3352 0 discriminator 1
 7227 0102 7B6A     		ldr	r3, [r7, #36]
 7228 0104 1E4A     		ldr	r2, .L475+24
 7229 0106 9342     		cmp	r3, r2
 7230 0108 90D1     		bne	.L472
3389:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3390:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			for( pxIterator  = ( ListItem_t * ) listGET_HEAD_ENTRY( &xBoundUDPSocketsList );
 7231              		.loc 3 3391 0
 7232 010a 1E4B     		ldr	r3, .L475+28
 7233 010c DB68     		ldr	r3, [r3, #12]
 7234 010e 7B62     		str	r3, [r7, #36]
 7235 0110 14E0     		b	.L473
 7236              	.L474:
3392:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator != ( ListItem_t * ) listGET_END_MARKER( &xBoundUDPSocketsList );
3393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator  = ( ListItem_t * ) listGET_NEXT( pxIterator ) )
3394:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3395:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Local port on this machine */
3396:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_printf( ( "UDP Port %5u\n",
 7237              		.loc 3 3396 0
 7238 0112 7B6A     		ldr	r3, [r7, #36]
 7239 0114 1B68     		ldr	r3, [r3]
 7240 0116 9BB2     		uxth	r3, r3
 7241 0118 1B02     		lsls	r3, r3, #8
 7242 011a 9AB2     		uxth	r2, r3
 7243 011c 7B6A     		ldr	r3, [r7, #36]
 7244 011e 1B68     		ldr	r3, [r3]
 7245 0120 1B0A     		lsrs	r3, r3, #8
 7246 0122 9BB2     		uxth	r3, r3
 7247 0124 1343     		orrs	r3, r3, r2
 7248 0126 9BB2     		uxth	r3, r3
 7249 0128 1748     		ldr	r0, .L475+32
 7250 012a 1946     		mov	r1, r3
 7251 012c FFF7FEFF 		bl	lUDPLoggingPrintf
3397:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					FreeRTOS_ntohs( listGET_LIST_ITEM_VALUE( pxIterator ) ) ) );
3398:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				count++;
 7252              		.loc 3 3398 0
 7253 0130 3B6A     		ldr	r3, [r7, #32]
 7254 0132 0133     		adds	r3, r3, #1
ARM GAS  /tmp/ccrA3BdH.s 			page 199


 7255 0134 3B62     		str	r3, [r7, #32]
3393:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 7256              		.loc 3 3393 0
 7257 0136 7B6A     		ldr	r3, [r7, #36]
 7258 0138 5B68     		ldr	r3, [r3, #4]
 7259 013a 7B62     		str	r3, [r7, #36]
 7260              	.L473:
3391:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator != ( ListItem_t * ) listGET_END_MARKER( &xBoundUDPSocketsList );
 7261              		.loc 3 3391 0 discriminator 1
 7262 013c 7B6A     		ldr	r3, [r7, #36]
 7263 013e 134A     		ldr	r2, .L475+36
 7264 0140 9342     		cmp	r3, r2
 7265 0142 E6D1     		bne	.L474
3399:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3400:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3401:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			FreeRTOS_printf( ( "FreeRTOS_netstat: %lu sockets %lu < %lu < %d buffers free\n",
 7266              		.loc 3 3401 0
 7267 0144 FFF7FEFF 		bl	uxGetMinimumFreeNetworkBuffers
 7268 0148 0546     		mov	r5, r0
 7269 014a FFF7FEFF 		bl	uxGetNumberOfFreeNetworkBuffers
 7270 014e 0446     		mov	r4, r0
 7271 0150 1F23     		movs	r3, #31
 7272 0152 0093     		str	r3, [sp]
 7273 0154 0E48     		ldr	r0, .L475+40
 7274 0156 396A     		ldr	r1, [r7, #32]
 7275 0158 2A46     		mov	r2, r5
 7276 015a 2346     		mov	r3, r4
 7277 015c FFF7FEFF 		bl	lUDPLoggingPrintf
 7278              	.L466:
3402:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				count,
3403:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				uxGetMinimumFreeNetworkBuffers( ),
3404:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				uxGetNumberOfFreeNetworkBuffers( ),
3405:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				ipconfigNUM_NETWORK_BUFFER_DESCRIPTORS ) );
3406:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3407:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 7279              		.loc 3 3407 0
 7280 0160 2C37     		adds	r7, r7, #44
 7281              	.LCFI329:
 7282              		.cfi_def_cfa_offset 28
 7283 0162 BD46     		mov	sp, r7
 7284              	.LCFI330:
 7285              		.cfi_def_cfa_register 13
 7286              		@ sp needed
 7287 0164 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 7288              	.L476:
 7289              		.align	2
 7290              	.L475:
 7291 0168 00000000 		.word	xBoundTCPSocketsList
 7292 016c 00000000 		.word	.LC0
 7293 0170 1C000000 		.word	.LC1
 7294 0174 64000000 		.word	.LC2
 7295 0178 3F420F00 		.word	999999
 7296 017c 6C000000 		.word	.LC3
 7297 0180 08000000 		.word	xBoundTCPSocketsList+8
 7298 0184 00000000 		.word	xBoundUDPSocketsList
 7299 0188 9C000000 		.word	.LC4
 7300 018c 08000000 		.word	xBoundUDPSocketsList+8
ARM GAS  /tmp/ccrA3BdH.s 			page 200


 7301 0190 AC000000 		.word	.LC5
 7302              		.cfi_endproc
 7303              	.LFE78:
 7305              		.section	.text.vSocketSelect,"ax",%progbits
 7306              		.align	2
 7307              		.global	vSocketSelect
 7308              		.thumb
 7309              		.thumb_func
 7311              	vSocketSelect:
 7312              	.LFB79:
3408:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3409:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ( ( ipconfigHAS_PRINTF != 0 ) && ( ipconfigUSE_TCP == 1 ) ) */
3410:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3411:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3412:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
3413:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3414:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	void vSocketSelect( SocketSelect_t *pxSocketSet )
3415:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 7313              		.loc 3 3415 0
 7314              		.cfi_startproc
 7315              		@ args = 0, pretend = 0, frame = 48
 7316              		@ frame_needed = 1, uses_anonymous_args = 0
 7317 0000 80B5     		push	{r7, lr}
 7318              	.LCFI331:
 7319              		.cfi_def_cfa_offset 8
 7320              		.cfi_offset 7, -8
 7321              		.cfi_offset 14, -4
 7322 0002 8CB0     		sub	sp, sp, #48
 7323              	.LCFI332:
 7324              		.cfi_def_cfa_offset 56
 7325 0004 00AF     		add	r7, sp, #0
 7326              	.LCFI333:
 7327              		.cfi_def_cfa_register 7
 7328 0006 7860     		str	r0, [r7, #4]
3416:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xRound;
3417:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	EventBits_t xSocketBits, xBitsToClear;
3418:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if ipconfigUSE_TCP == 1
3419:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		BaseType_t xLastRound = 1;
 7329              		.loc 3 3419 0
 7330 0008 0123     		movs	r3, #1
 7331 000a 3B61     		str	r3, [r7, #16]
3420:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#else
3421:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		BaseType_t xLastRound = 0;
3422:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif
3423:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3424:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* These flags will be switched on after checking the socket status. */
3425:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		EventBits_t xGroupBits = 0;
 7332              		.loc 3 3425 0
 7333 000c 0023     		movs	r3, #0
 7334 000e 7B62     		str	r3, [r7, #36]
3426:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		pxSocketSet->pxSocket = NULL;
 7335              		.loc 3 3426 0
 7336 0010 7B68     		ldr	r3, [r7, #4]
 7337 0012 0022     		movs	r2, #0
 7338 0014 9A60     		str	r2, [r3, #8]
3427:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		for( xRound = 0; xRound <= xLastRound; xRound++ )
ARM GAS  /tmp/ccrA3BdH.s 			page 201


 7339              		.loc 3 3428 0
 7340 0016 0023     		movs	r3, #0
 7341 0018 FB62     		str	r3, [r7, #44]
 7342 001a CBE0     		b	.L478
 7343              	.L496:
 7344              	.LBB84:
3429:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3430:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			const ListItem_t *pxIterator;
3431:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			const MiniListItem_t *pxEnd;
3432:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			if( xRound == 0 )
 7345              		.loc 3 3432 0
 7346 001c FB6A     		ldr	r3, [r7, #44]
 7347 001e 002B     		cmp	r3, #0
 7348 0020 02D1     		bne	.L479
3433:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3434:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxEnd = ( const MiniListItem_t* )listGET_END_MARKER( &xBoundUDPSocketsList );
 7349              		.loc 3 3434 0
 7350 0022 7A4B     		ldr	r3, .L498
 7351 0024 FB61     		str	r3, [r7, #28]
 7352 0026 01E0     		b	.L480
 7353              	.L479:
3435:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3436:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if ipconfigUSE_TCP == 1
3437:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			else
3438:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3439:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxEnd = ( const MiniListItem_t* )listGET_END_MARKER( &xBoundTCPSocketsList );
 7354              		.loc 3 3439 0
 7355 0028 794B     		ldr	r3, .L498+4
 7356 002a FB61     		str	r3, [r7, #28]
 7357              	.L480:
3440:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}
3441:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigUSE_TCP == 1 */
3442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			for( pxIterator = ( const ListItem_t * ) ( listGET_NEXT( pxEnd ) );
 7358              		.loc 3 3442 0
 7359 002c FB69     		ldr	r3, [r7, #28]
 7360 002e 5B68     		ldr	r3, [r3, #4]
 7361 0030 3B62     		str	r3, [r7, #32]
 7362 0032 B7E0     		b	.L481
 7363              	.L495:
 7364              	.LBB85:
3443:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator != ( const ListItem_t * ) pxEnd;
3444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator = ( const ListItem_t * ) listGET_NEXT( pxIterator ) )
3445:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
3446:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) listGET_LIST_ITEM_OWNER( pxIterator );
 7365              		.loc 3 3446 0
 7366 0034 3B6A     		ldr	r3, [r7, #32]
 7367 0036 DB68     		ldr	r3, [r3, #12]
 7368 0038 FB60     		str	r3, [r7, #12]
3447:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				if( pxSocket->pxSocketSet != pxSocketSet )
 7369              		.loc 3 3447 0
 7370 003a FB68     		ldr	r3, [r7, #12]
 7371 003c 9A6A     		ldr	r2, [r3, #40]
 7372 003e 7B68     		ldr	r3, [r7, #4]
 7373 0040 9A42     		cmp	r2, r3
 7374 0042 00D0     		beq	.L482
3448:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3449:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Socket does not belong to this select group. */
ARM GAS  /tmp/ccrA3BdH.s 			page 202


3450:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					continue;
 7375              		.loc 3 3450 0
 7376 0044 ABE0     		b	.L483
 7377              	.L482:
3451:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}
3452:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xSocketBits = 0;
 7378              		.loc 3 3452 0
 7379 0046 0023     		movs	r3, #0
 7380 0048 BB62     		str	r3, [r7, #40]
3453:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3454:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#if( ipconfigUSE_TCP == 1 )
3455:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( pxSocket->ucProtocol == FREERTOS_IPPROTO_TCP )
 7381              		.loc 3 3455 0
 7382 004a FB68     		ldr	r3, [r7, #12]
 7383 004c 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 7384 0050 062B     		cmp	r3, #6
 7385 0052 40F08F80 		bne	.L484
 7386              	.LBB86:
3456:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
3457:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Check if the socket has already been accepted by the
3458:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						owner.  If not, it is useless to return it from a
3459:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						select(). */
3460:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						BaseType_t bAccepted = pdFALSE;
 7387              		.loc 3 3460 0
 7388 0056 0023     		movs	r3, #0
 7389 0058 BB61     		str	r3, [r7, #24]
3461:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3462:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( pxSocket->u.xTCP.bits.bPassQueued == pdFALSE_UNSIGNED )
 7390              		.loc 3 3462 0
 7391 005a FB68     		ldr	r3, [r7, #12]
 7392 005c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 7393 0060 03F00403 		and	r3, r3, #4
 7394 0064 DBB2     		uxtb	r3, r3
 7395 0066 002B     		cmp	r3, #0
 7396 0068 09D1     		bne	.L485
3463:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3464:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( pxSocket->u.xTCP.bits.bPassAccept == pdFALSE_UNSIGNED )
 7397              		.loc 3 3464 0
 7398 006a FB68     		ldr	r3, [r7, #12]
 7399 006c 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 7400 0070 03F00203 		and	r3, r3, #2
 7401 0074 DBB2     		uxtb	r3, r3
 7402 0076 002B     		cmp	r3, #0
 7403 0078 01D1     		bne	.L485
3465:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3466:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								bAccepted = pdTRUE;
 7404              		.loc 3 3466 0
 7405 007a 0123     		movs	r3, #1
 7406 007c BB61     		str	r3, [r7, #24]
 7407              	.L485:
3467:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3468:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3469:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3470:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Is the set owner interested in READ events? */
3471:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( ( pxSocket->xSelectBits & eSELECT_READ ) != 0 )
 7408              		.loc 3 3471 0
 7409 007e FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccrA3BdH.s 			page 203


 7410 0080 DB6A     		ldr	r3, [r3, #44]
 7411 0082 03F00103 		and	r3, r3, #1
 7412 0086 002B     		cmp	r3, #0
 7413 0088 23D0     		beq	.L486
3472:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3473:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( pxSocket->u.xTCP.ucTCPState == eTCP_LISTEN )
 7414              		.loc 3 3473 0
 7415 008a FB68     		ldr	r3, [r7, #12]
 7416 008c 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 7417 0090 012B     		cmp	r3, #1
 7418 0092 11D1     		bne	.L487
3474:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3475:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								if( ( pxSocket->u.xTCP.pxPeerSocket != NULL ) && ( pxSocket->u.xTCP.pxPeerSocket->u.xTCP.bi
 7419              		.loc 3 3475 0
 7420 0094 FB68     		ldr	r3, [r7, #12]
 7421 0096 5B6D     		ldr	r3, [r3, #84]
 7422 0098 002B     		cmp	r3, #0
 7423 009a 1AD0     		beq	.L486
 7424              		.loc 3 3475 0 is_stmt 0 discriminator 1
 7425 009c FB68     		ldr	r3, [r7, #12]
 7426 009e 5B6D     		ldr	r3, [r3, #84]
 7427 00a0 93F84030 		ldrb	r3, [r3, #64]	@ zero_extendqisi2
 7428 00a4 03F00203 		and	r3, r3, #2
 7429 00a8 DBB2     		uxtb	r3, r3
 7430 00aa 002B     		cmp	r3, #0
 7431 00ac 11D0     		beq	.L486
3476:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								{
3477:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									xSocketBits |= eSELECT_READ;
 7432              		.loc 3 3477 0 is_stmt 1
 7433 00ae BB6A     		ldr	r3, [r7, #40]
 7434 00b0 43F00103 		orr	r3, r3, #1
 7435 00b4 BB62     		str	r3, [r7, #40]
 7436 00b6 0CE0     		b	.L486
 7437              	.L487:
3478:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								}
3479:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3480:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							else if( ( bAccepted != 0 ) && ( FreeRTOS_recvcount( pxSocket ) > 0 ) )
 7438              		.loc 3 3480 0
 7439 00b8 BB69     		ldr	r3, [r7, #24]
 7440 00ba 002B     		cmp	r3, #0
 7441 00bc 09D0     		beq	.L486
 7442              		.loc 3 3480 0 is_stmt 0 discriminator 1
 7443 00be F868     		ldr	r0, [r7, #12]
 7444 00c0 FFF7FEFF 		bl	FreeRTOS_rx_size
 7445 00c4 0346     		mov	r3, r0
 7446 00c6 002B     		cmp	r3, #0
 7447 00c8 03DD     		ble	.L486
3481:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3482:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								xSocketBits |= eSELECT_READ;
 7448              		.loc 3 3482 0 is_stmt 1
 7449 00ca BB6A     		ldr	r3, [r7, #40]
 7450 00cc 43F00103 		orr	r3, r3, #1
 7451 00d0 BB62     		str	r3, [r7, #40]
 7452              	.L486:
3483:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3484:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3485:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Is the set owner interested in EXCEPTION events? */
ARM GAS  /tmp/ccrA3BdH.s 			page 204


3486:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( ( pxSocket->xSelectBits & eSELECT_EXCEPT ) != 0 )
 7453              		.loc 3 3486 0
 7454 00d2 FB68     		ldr	r3, [r7, #12]
 7455 00d4 DB6A     		ldr	r3, [r3, #44]
 7456 00d6 03F00403 		and	r3, r3, #4
 7457 00da 002B     		cmp	r3, #0
 7458 00dc 0DD0     		beq	.L489
3487:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3488:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( ( pxSocket->u.xTCP.ucTCPState == eCLOSE_WAIT ) || ( pxSocket->u.xTCP.ucTCPState == eCLOS
 7459              		.loc 3 3488 0
 7460 00de FB68     		ldr	r3, [r7, #12]
 7461 00e0 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 7462 00e4 082B     		cmp	r3, #8
 7463 00e6 04D0     		beq	.L490
 7464              		.loc 3 3488 0 is_stmt 0 discriminator 1
 7465 00e8 FB68     		ldr	r3, [r7, #12]
 7466 00ea 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 7467 00ee 002B     		cmp	r3, #0
 7468 00f0 03D1     		bne	.L489
 7469              	.L490:
3489:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3490:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								xSocketBits |= eSELECT_EXCEPT;
 7470              		.loc 3 3490 0 is_stmt 1
 7471 00f2 BB6A     		ldr	r3, [r7, #40]
 7472 00f4 43F00403 		orr	r3, r3, #4
 7473 00f8 BB62     		str	r3, [r7, #40]
 7474              	.L489:
3491:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3492:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3493:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3494:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						/* Is the set owner interested in WRITE events? */
3495:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						if( ( pxSocket->xSelectBits & eSELECT_WRITE ) != 0 )
 7475              		.loc 3 3495 0
 7476 00fa FB68     		ldr	r3, [r7, #12]
 7477 00fc DB6A     		ldr	r3, [r3, #44]
 7478 00fe 03F00203 		and	r3, r3, #2
 7479 0102 002B     		cmp	r3, #0
 7480 0104 35D0     		beq	.L491
 7481              	.LBB87:
3496:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						{
3497:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							BaseType_t bMatch = pdFALSE;
 7482              		.loc 3 3497 0
 7483 0106 0023     		movs	r3, #0
 7484 0108 7B61     		str	r3, [r7, #20]
3498:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3499:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( bAccepted != 0 )
 7485              		.loc 3 3499 0
 7486 010a BB69     		ldr	r3, [r7, #24]
 7487 010c 002B     		cmp	r3, #0
 7488 010e 07D0     		beq	.L492
3500:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3501:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								if( FreeRTOS_tx_space( pxSocket ) > 0 )
 7489              		.loc 3 3501 0
 7490 0110 F868     		ldr	r0, [r7, #12]
 7491 0112 FFF7FEFF 		bl	FreeRTOS_tx_space
 7492 0116 0346     		mov	r3, r0
 7493 0118 002B     		cmp	r3, #0
ARM GAS  /tmp/ccrA3BdH.s 			page 205


 7494 011a 01DD     		ble	.L492
3502:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								{
3503:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									bMatch = pdTRUE;
 7495              		.loc 3 3503 0
 7496 011c 0123     		movs	r3, #1
 7497 011e 7B61     		str	r3, [r7, #20]
 7498              	.L492:
3504:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								}
3505:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3506:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3507:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( bMatch == pdFALSE )
 7499              		.loc 3 3507 0
 7500 0120 7B69     		ldr	r3, [r7, #20]
 7501 0122 002B     		cmp	r3, #0
 7502 0124 1DD1     		bne	.L493
3508:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								if( ( pxSocket->u.xTCP.bits.bConnPrepared != pdFALSE_UNSIGNED ) &&
 7503              		.loc 3 3509 0
 7504 0126 FB68     		ldr	r3, [r7, #12]
 7505 0128 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 7506 012c 03F00803 		and	r3, r3, #8
 7507 0130 DBB2     		uxtb	r3, r3
 7508 0132 002B     		cmp	r3, #0
 7509 0134 15D0     		beq	.L493
3510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED ) &&
 7510              		.loc 3 3510 0 discriminator 1
 7511 0136 FB68     		ldr	r3, [r7, #12]
 7512 0138 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
3509:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED ) &&
 7513              		.loc 3 3509 0 discriminator 1
 7514 013c 042B     		cmp	r3, #4
 7515 013e 10D9     		bls	.L493
3511:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									( pxSocket->u.xTCP.bits.bConnPassed == pdFALSE_UNSIGNED ) )
 7516              		.loc 3 3511 0
 7517 0140 FB68     		ldr	r3, [r7, #12]
 7518 0142 93F84130 		ldrb	r3, [r3, #65]	@ zero_extendqisi2
 7519 0146 03F01003 		and	r3, r3, #16
 7520 014a DBB2     		uxtb	r3, r3
3510:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									( pxSocket->u.xTCP.ucTCPState >= eESTABLISHED ) &&
 7521              		.loc 3 3510 0
 7522 014c 002B     		cmp	r3, #0
 7523 014e 08D1     		bne	.L493
3512:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								{
3513:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									pxSocket->u.xTCP.bits.bConnPassed = pdTRUE_UNSIGNED;
 7524              		.loc 3 3513 0
 7525 0150 FA68     		ldr	r2, [r7, #12]
 7526 0152 92F84130 		ldrb	r3, [r2, #65]
 7527 0156 43F01003 		orr	r3, r3, #16
 7528 015a 82F84130 		strb	r3, [r2, #65]
3514:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 									bMatch = pdTRUE;
 7529              		.loc 3 3514 0
 7530 015e 0123     		movs	r3, #1
 7531 0160 7B61     		str	r3, [r7, #20]
 7532              	.L493:
3515:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								}
3516:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3517:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 206


3518:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							if( bMatch != pdFALSE )
 7533              		.loc 3 3518 0
 7534 0162 7B69     		ldr	r3, [r7, #20]
 7535 0164 002B     		cmp	r3, #0
 7536 0166 04D0     		beq	.L491
3519:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							{
3520:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 								xSocketBits |= eSELECT_WRITE;
 7537              		.loc 3 3520 0
 7538 0168 BB6A     		ldr	r3, [r7, #40]
 7539 016a 43F00203 		orr	r3, r3, #2
 7540 016e BB62     		str	r3, [r7, #40]
 7541              	.LBE87:
 7542              	.LBE86:
 7543 0170 0EE0     		b	.L494
 7544              	.L491:
 7545 0172 0DE0     		b	.L494
 7546              	.L484:
3521:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 							}
3522:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						}
3523:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
3524:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					else
3525:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				#endif /* ipconfigUSE_TCP == 1 */
3526:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				{
3527:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* Select events for UDP are simpler. */
3528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					if( ( ( pxSocket->xSelectBits & eSELECT_READ ) != 0 ) &&
 7547              		.loc 3 3528 0
 7548 0174 FB68     		ldr	r3, [r7, #12]
 7549 0176 DB6A     		ldr	r3, [r3, #44]
 7550 0178 03F00103 		and	r3, r3, #1
 7551 017c 002B     		cmp	r3, #0
 7552 017e 07D0     		beq	.L494
3529:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( listCURRENT_LIST_LENGTH( &( pxSocket->u.xUDP.xWaitingPacketsList ) ) > 0U ) )
 7553              		.loc 3 3529 0 discriminator 1
 7554 0180 FB68     		ldr	r3, [r7, #12]
 7555 0182 9B6B     		ldr	r3, [r3, #56]
3528:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						( listCURRENT_LIST_LENGTH( &( pxSocket->u.xUDP.xWaitingPacketsList ) ) > 0U ) )
 7556              		.loc 3 3528 0 discriminator 1
 7557 0184 002B     		cmp	r3, #0
 7558 0186 03D0     		beq	.L494
3530:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					{
3531:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 						xSocketBits |= eSELECT_READ;
 7559              		.loc 3 3531 0
 7560 0188 BB6A     		ldr	r3, [r7, #40]
 7561 018a 43F00103 		orr	r3, r3, #1
 7562 018e BB62     		str	r3, [r7, #40]
 7563              	.L494:
3532:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					}
3533:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 					/* The WRITE and EXCEPT bits are not used for UDP */
3534:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				}	/* if( pxSocket->ucProtocol == FREERTOS_IPPROTO_TCP ) */
3535:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3536:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* Each socket keeps its own event flags, which are looked-up
3537:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				by FreeRTOS_FD_ISSSET() */
3538:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				pxSocket->xSocketBits = xSocketBits;
 7564              		.loc 3 3538 0
 7565 0190 FB68     		ldr	r3, [r7, #12]
 7566 0192 BA6A     		ldr	r2, [r7, #40]
 7567 0194 1A63     		str	r2, [r3, #48]
ARM GAS  /tmp/ccrA3BdH.s 			page 207


3539:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3540:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				/* The ORed value will be used to set the bits in the event
3541:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				group. */
3542:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				xGroupBits |= xSocketBits;
 7568              		.loc 3 3542 0
 7569 0196 7A6A     		ldr	r2, [r7, #36]
 7570 0198 BB6A     		ldr	r3, [r7, #40]
 7571 019a 1343     		orrs	r3, r3, r2
 7572 019c 7B62     		str	r3, [r7, #36]
 7573              	.L483:
 7574              	.LBE85:
3444:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			{
 7575              		.loc 3 3444 0
 7576 019e 3B6A     		ldr	r3, [r7, #32]
 7577 01a0 5B68     		ldr	r3, [r3, #4]
 7578 01a2 3B62     		str	r3, [r7, #32]
 7579              	.L481:
3442:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 				 pxIterator != ( const ListItem_t * ) pxEnd;
 7580              		.loc 3 3442 0 discriminator 1
 7581 01a4 3A6A     		ldr	r2, [r7, #32]
 7582 01a6 FB69     		ldr	r3, [r7, #28]
 7583 01a8 9A42     		cmp	r2, r3
 7584 01aa 7FF443AF 		bne	.L495
 7585              	.LBE84:
3428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 7586              		.loc 3 3428 0 discriminator 2
 7587 01ae FB6A     		ldr	r3, [r7, #44]
 7588 01b0 0133     		adds	r3, r3, #1
 7589 01b2 FB62     		str	r3, [r7, #44]
 7590              	.L478:
3428:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
 7591              		.loc 3 3428 0 is_stmt 0 discriminator 1
 7592 01b4 FA6A     		ldr	r2, [r7, #44]
 7593 01b6 3B69     		ldr	r3, [r7, #16]
 7594 01b8 9A42     		cmp	r2, r3
 7595 01ba 7FF72FAF 		ble	.L496
3543:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3544:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			}	/* for( pxIterator ... ) */
3545:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}	/* for( xRound = 0; xRound <= xLastRound; xRound++ ) */
3546:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3547:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xBitsToClear = xEventGroupGetBits( pxSocketSet->xSelectGroup );
 7596              		.loc 3 3547 0 is_stmt 1
 7597 01be 7B68     		ldr	r3, [r7, #4]
 7598 01c0 1B68     		ldr	r3, [r3]
 7599 01c2 1846     		mov	r0, r3
 7600 01c4 0021     		movs	r1, #0
 7601 01c6 FFF7FEFF 		bl	xEventGroupClearBits
 7602 01ca B860     		str	r0, [r7, #8]
3548:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3549:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Now set the necessary bits. */
3550:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xBitsToClear = ( xBitsToClear & ~xGroupBits ) & eSELECT_ALL;
 7603              		.loc 3 3550 0
 7604 01cc 7B6A     		ldr	r3, [r7, #36]
 7605 01ce DA43     		mvns	r2, r3
 7606 01d0 BB68     		ldr	r3, [r7, #8]
 7607 01d2 1340     		ands	r3, r3, r2
 7608 01d4 03F00F03 		and	r3, r3, #15
ARM GAS  /tmp/ccrA3BdH.s 			page 208


 7609 01d8 BB60     		str	r3, [r7, #8]
3551:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3552:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#if( ipconfigSUPPORT_SIGNALS != 0 )
3553:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3554:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			/* Maybe the socketset was signalled, but don't
3555:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			clear the 'eSELECT_INTR' bit here, as it will be used
3556:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			and cleared in FreeRTOS_select(). */
3557:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xBitsToClear &= ( EventBits_t ) ~eSELECT_INTR;
 7610              		.loc 3 3557 0
 7611 01da BB68     		ldr	r3, [r7, #8]
 7612 01dc 23F00803 		bic	r3, r3, #8
 7613 01e0 BB60     		str	r3, [r7, #8]
3558:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3559:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		#endif /* ipconfigSUPPORT_SIGNALS */
3560:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3561:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( xBitsToClear != 0 )
 7614              		.loc 3 3561 0
 7615 01e2 BB68     		ldr	r3, [r7, #8]
 7616 01e4 002B     		cmp	r3, #0
 7617 01e6 05D0     		beq	.L497
3562:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3563:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xEventGroupClearBits( pxSocketSet->xSelectGroup, xBitsToClear );
 7618              		.loc 3 3563 0
 7619 01e8 7B68     		ldr	r3, [r7, #4]
 7620 01ea 1B68     		ldr	r3, [r3]
 7621 01ec 1846     		mov	r0, r3
 7622 01ee B968     		ldr	r1, [r7, #8]
 7623 01f0 FFF7FEFF 		bl	xEventGroupClearBits
 7624              	.L497:
3564:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3565:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3566:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* Now include eSELECT_CALL_IP to wakeup the caller. */
3567:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xEventGroupSetBits( pxSocketSet->xSelectGroup, xGroupBits | eSELECT_CALL_IP );
 7625              		.loc 3 3567 0
 7626 01f4 7B68     		ldr	r3, [r7, #4]
 7627 01f6 1A68     		ldr	r2, [r3]
 7628 01f8 7B6A     		ldr	r3, [r7, #36]
 7629 01fa 43F01003 		orr	r3, r3, #16
 7630 01fe 1046     		mov	r0, r2
 7631 0200 1946     		mov	r1, r3
 7632 0202 FFF7FEFF 		bl	xEventGroupSetBits
3568:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 7633              		.loc 3 3568 0
 7634 0206 3037     		adds	r7, r7, #48
 7635              	.LCFI334:
 7636              		.cfi_def_cfa_offset 8
 7637 0208 BD46     		mov	sp, r7
 7638              	.LCFI335:
 7639              		.cfi_def_cfa_register 13
 7640              		@ sp needed
 7641 020a 80BD     		pop	{r7, pc}
 7642              	.L499:
 7643              		.align	2
 7644              	.L498:
 7645 020c 08000000 		.word	xBoundUDPSocketsList+8
 7646 0210 08000000 		.word	xBoundTCPSocketsList+8
 7647              		.cfi_endproc
ARM GAS  /tmp/ccrA3BdH.s 			page 209


 7648              	.LFE79:
 7650              		.section	.text.FreeRTOS_SignalSocket,"ax",%progbits
 7651              		.align	2
 7652              		.global	FreeRTOS_SignalSocket
 7653              		.thumb
 7654              		.thumb_func
 7656              	FreeRTOS_SignalSocket:
 7657              	.LFB80:
3569:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3570:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SELECT_FUNCTION == 1 */
3571:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3572:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3573:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SIGNALS != 0 )
3574:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3575:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Send a signal to the task which reads from this socket. */
3576:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_SignalSocket( Socket_t xSocket )
3577:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 7658              		.loc 3 3577 0
 7659              		.cfi_startproc
 7660              		@ args = 0, pretend = 0, frame = 16
 7661              		@ frame_needed = 1, uses_anonymous_args = 0
 7662 0000 80B5     		push	{r7, lr}
 7663              	.LCFI336:
 7664              		.cfi_def_cfa_offset 8
 7665              		.cfi_offset 7, -8
 7666              		.cfi_offset 14, -4
 7667 0002 84B0     		sub	sp, sp, #16
 7668              	.LCFI337:
 7669              		.cfi_def_cfa_offset 24
 7670 0004 00AF     		add	r7, sp, #0
 7671              	.LCFI338:
 7672              		.cfi_def_cfa_register 7
 7673 0006 7860     		str	r0, [r7, #4]
3578:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 7674              		.loc 3 3578 0
 7675 0008 7B68     		ldr	r3, [r7, #4]
 7676 000a BB60     		str	r3, [r7, #8]
3579:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3580:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3581:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket == NULL )
 7677              		.loc 3 3581 0
 7678 000c BB68     		ldr	r3, [r7, #8]
 7679 000e 002B     		cmp	r3, #0
 7680 0010 03D1     		bne	.L501
3582:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3583:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 7681              		.loc 3 3583 0
 7682 0012 6FF01503 		mvn	r3, #21
 7683 0016 FB60     		str	r3, [r7, #12]
 7684 0018 22E0     		b	.L502
 7685              	.L501:
3584:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3585:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3586:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#if( ipconfigSUPPORT_SELECT_FUNCTION == 1 )
3587:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( ( pxSocket->pxSocketSet != NULL ) && ( pxSocket->pxSocketSet->xSelectGroup != NULL ) )
 7686              		.loc 3 3587 0
 7687 001a BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccrA3BdH.s 			page 210


 7688 001c 9B6A     		ldr	r3, [r3, #40]
 7689 001e 002B     		cmp	r3, #0
 7690 0020 0ED0     		beq	.L503
 7691              		.loc 3 3587 0 is_stmt 0 discriminator 1
 7692 0022 BB68     		ldr	r3, [r7, #8]
 7693 0024 9B6A     		ldr	r3, [r3, #40]
 7694 0026 1B68     		ldr	r3, [r3]
 7695 0028 002B     		cmp	r3, #0
 7696 002a 09D0     		beq	.L503
3588:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3589:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xEventGroupSetBits( pxSocket->pxSocketSet->xSelectGroup, eSELECT_INTR );
 7697              		.loc 3 3589 0 is_stmt 1
 7698 002c BB68     		ldr	r3, [r7, #8]
 7699 002e 9B6A     		ldr	r3, [r3, #40]
 7700 0030 1B68     		ldr	r3, [r3]
 7701 0032 1846     		mov	r0, r3
 7702 0034 0821     		movs	r1, #8
 7703 0036 FFF7FEFF 		bl	xEventGroupSetBits
3590:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
 7704              		.loc 3 3590 0
 7705 003a 0023     		movs	r3, #0
 7706 003c FB60     		str	r3, [r7, #12]
 7707 003e 0FE0     		b	.L502
 7708              	.L503:
3591:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3592:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3593:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	#endif /* ipconfigSUPPORT_SELECT_FUNCTION */
3594:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		if( pxSocket->xEventGroup != NULL )
 7709              		.loc 3 3594 0
 7710 0040 BB68     		ldr	r3, [r7, #8]
 7711 0042 5B68     		ldr	r3, [r3, #4]
 7712 0044 002B     		cmp	r3, #0
 7713 0046 08D0     		beq	.L504
3595:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3596:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xEventGroupSetBits( pxSocket->xEventGroup, eSOCKET_INTR );
 7714              		.loc 3 3596 0
 7715 0048 BB68     		ldr	r3, [r7, #8]
 7716 004a 5B68     		ldr	r3, [r3, #4]
 7717 004c 1846     		mov	r0, r3
 7718 004e 4021     		movs	r1, #64
 7719 0050 FFF7FEFF 		bl	xEventGroupSetBits
3597:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = 0;
 7720              		.loc 3 3597 0
 7721 0054 0023     		movs	r3, #0
 7722 0056 FB60     		str	r3, [r7, #12]
 7723 0058 02E0     		b	.L502
 7724              	.L504:
3598:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3599:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		else
3600:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		{
3601:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 			xReturn = -pdFREERTOS_ERRNO_EINVAL;
 7725              		.loc 3 3601 0
 7726 005a 6FF01503 		mvn	r3, #21
 7727 005e FB60     		str	r3, [r7, #12]
 7728              	.L502:
3602:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		}
3603:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 211


3604:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 7729              		.loc 3 3604 0
 7730 0060 FB68     		ldr	r3, [r7, #12]
3605:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 7731              		.loc 3 3605 0
 7732 0062 1846     		mov	r0, r3
 7733 0064 1037     		adds	r7, r7, #16
 7734              	.LCFI339:
 7735              		.cfi_def_cfa_offset 8
 7736 0066 BD46     		mov	sp, r7
 7737              	.LCFI340:
 7738              		.cfi_def_cfa_register 13
 7739              		@ sp needed
 7740 0068 80BD     		pop	{r7, pc}
 7741              		.cfi_endproc
 7742              	.LFE80:
 7744 006a 00BF     		.section	.text.FreeRTOS_SignalSocketFromISR,"ax",%progbits
 7745              		.align	2
 7746              		.global	FreeRTOS_SignalSocketFromISR
 7747              		.thumb
 7748              		.thumb_func
 7750              	FreeRTOS_SignalSocketFromISR:
 7751              	.LFB81:
3606:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3607:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #endif /* ipconfigSUPPORT_SIGNALS */
3608:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** /*-----------------------------------------------------------*/
3609:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3610:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** #if( ipconfigSUPPORT_SIGNALS != 0 )
3611:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3612:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	/* Send a signal to the task which reads from this socket (FromISR version). */
3613:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t FreeRTOS_SignalSocketFromISR( Socket_t xSocket, BaseType_t *pxHigherPriorityTaskWoken )
3614:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	{
 7752              		.loc 3 3614 0
 7753              		.cfi_startproc
 7754              		@ args = 0, pretend = 0, frame = 40
 7755              		@ frame_needed = 1, uses_anonymous_args = 0
 7756 0000 80B5     		push	{r7, lr}
 7757              	.LCFI341:
 7758              		.cfi_def_cfa_offset 8
 7759              		.cfi_offset 7, -8
 7760              		.cfi_offset 14, -4
 7761 0002 8AB0     		sub	sp, sp, #40
 7762              	.LCFI342:
 7763              		.cfi_def_cfa_offset 48
 7764 0004 00AF     		add	r7, sp, #0
 7765              	.LCFI343:
 7766              		.cfi_def_cfa_register 7
 7767 0006 7860     		str	r0, [r7, #4]
 7768 0008 3960     		str	r1, [r7]
3615:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	FreeRTOS_Socket_t *pxSocket = ( FreeRTOS_Socket_t * ) xSocket;
 7769              		.loc 3 3615 0
 7770 000a 7B68     		ldr	r3, [r7, #4]
 7771 000c 7B62     		str	r3, [r7, #36]
3616:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	BaseType_t xReturn;
3617:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	IPStackEvent_t xEvent;
3618:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	extern QueueHandle_t xNetworkEventQueue;
3619:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
ARM GAS  /tmp/ccrA3BdH.s 			page 212


3620:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket != NULL );
 7772              		.loc 3 3620 0
 7773 000e 7B6A     		ldr	r3, [r7, #36]
 7774 0010 002B     		cmp	r3, #0
 7775 0012 09D1     		bne	.L507
 7776              	.LBB88:
 7777              	.LBB89:
 7778              		.loc 4 237 0 discriminator 1
 7779              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7780 0014 4FF05003 			mov r3, #80												
 7781 0018 83F31188 		msr basepri, r3											
 7782 001c BFF36F8F 		isb														
 7783 0020 BFF34F8F 		dsb														
 7784              	
 7785              	@ 0 "" 2
 7786              		.thumb
 7787 0024 FB61     		str	r3, [r7, #28]
 7788              	.L508:
 7789              	.LBE89:
 7790              	.LBE88:
 7791              		.loc 3 3620 0 discriminator 1
 7792 0026 FEE7     		b	.L508
 7793              	.L507:
3621:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket->ucProtocol == FREERTOS_IPPROTO_TCP );
 7794              		.loc 3 3621 0
 7795 0028 7B6A     		ldr	r3, [r7, #36]
 7796 002a 93F82730 		ldrb	r3, [r3, #39]	@ zero_extendqisi2
 7797 002e 062B     		cmp	r3, #6
 7798 0030 09D0     		beq	.L509
 7799              	.LBB90:
 7800              	.LBB91:
 7801              		.loc 4 237 0 discriminator 1
 7802              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 7803 0032 4FF05003 			mov r3, #80												
 7804 0036 83F31188 		msr basepri, r3											
 7805 003a BFF36F8F 		isb														
 7806 003e BFF34F8F 		dsb														
 7807              	
 7808              	@ 0 "" 2
 7809              		.thumb
 7810 0042 BB61     		str	r3, [r7, #24]
 7811              	.L510:
 7812              	.LBE91:
 7813              	.LBE90:
 7814              		.loc 3 3621 0 discriminator 2
 7815 0044 FEE7     		b	.L510
 7816              	.L509:
3622:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		configASSERT( pxSocket->xEventGroup );
 7817              		.loc 3 3622 0
 7818 0046 7B6A     		ldr	r3, [r7, #36]
 7819 0048 5B68     		ldr	r3, [r3, #4]
 7820 004a 002B     		cmp	r3, #0
 7821 004c 09D1     		bne	.L511
 7822              	.LBB92:
 7823              	.LBB93:
 7824              		.loc 4 237 0 discriminator 1
 7825              	@ 237 "../../../FreeRTOS_9_0/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  /tmp/ccrA3BdH.s 			page 213


 7826 004e 4FF05003 			mov r3, #80												
 7827 0052 83F31188 		msr basepri, r3											
 7828 0056 BFF36F8F 		isb														
 7829 005a BFF34F8F 		dsb														
 7830              	
 7831              	@ 0 "" 2
 7832              		.thumb
 7833 005e 7B61     		str	r3, [r7, #20]
 7834              	.L512:
 7835              	.LBE93:
 7836              	.LBE92:
 7837              		.loc 3 3622 0 discriminator 3
 7838 0060 FEE7     		b	.L512
 7839              	.L511:
3623:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3624:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xEvent.eEventType = eSocketSignalEvent;
 7840              		.loc 3 3624 0
 7841 0062 0B23     		movs	r3, #11
 7842 0064 3B73     		strb	r3, [r7, #12]
3625:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xEvent.pvData = ( void * )pxSocket;
 7843              		.loc 3 3625 0
 7844 0066 7B6A     		ldr	r3, [r7, #36]
 7845 0068 3B61     		str	r3, [r7, #16]
3626:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3627:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		/* The IP-task will call FreeRTOS_SignalSocket for this socket. */
3628:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		xReturn = xQueueSendToBackFromISR( xNetworkEventQueue, &xEvent, pxHigherPriorityTaskWoken );
 7846              		.loc 3 3628 0
 7847 006a 084B     		ldr	r3, .L514
 7848 006c 1A68     		ldr	r2, [r3]
 7849 006e 07F10C03 		add	r3, r7, #12
 7850 0072 1046     		mov	r0, r2
 7851 0074 1946     		mov	r1, r3
 7852 0076 3A68     		ldr	r2, [r7]
 7853 0078 0023     		movs	r3, #0
 7854 007a FFF7FEFF 		bl	xQueueGenericSendFromISR
 7855 007e 3862     		str	r0, [r7, #32]
3629:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 
3630:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 		return xReturn;
 7856              		.loc 3 3630 0
 7857 0080 3B6A     		ldr	r3, [r7, #32]
3631:../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/FreeRTOS_Sockets.c **** 	}
 7858              		.loc 3 3631 0
 7859 0082 1846     		mov	r0, r3
 7860 0084 2837     		adds	r7, r7, #40
 7861              	.LCFI344:
 7862              		.cfi_def_cfa_offset 8
 7863 0086 BD46     		mov	sp, r7
 7864              	.LCFI345:
 7865              		.cfi_def_cfa_register 13
 7866              		@ sp needed
 7867 0088 80BD     		pop	{r7, pc}
 7868              	.L515:
 7869 008a 00BF     		.align	2
 7870              	.L514:
 7871 008c 00000000 		.word	xNetworkEventQueue
 7872              		.cfi_endproc
 7873              	.LFE81:
ARM GAS  /tmp/ccrA3BdH.s 			page 214


 7875              		.section	.bss.xLastTime.6999,"aw",%nobits
 7876              		.align	2
 7879              	xLastTime.6999:
 7880 0000 00000000 		.space	4
 7881              		.text
 7882              	.Letext0:
 7883              		.file 5 "/usr/arm-none-eabi/include/machine/_default_types.h"
 7884              		.file 6 "/usr/arm-none-eabi/include/sys/_stdint.h"
 7885              		.file 7 "/usr/lib/gcc/arm-none-eabi/4.9.3/include/stddef.h"
 7886              		.file 8 "../../../FreeRTOS_9_0/Source/include/list.h"
 7887              		.file 9 "../../../FreeRTOS_9_0/Source/include/task.h"
 7888              		.file 10 "../../../FreeRTOS_9_0/Source/include/queue.h"
 7889              		.file 11 "../../../FreeRTOS_9_0/Source/include/event_groups.h"
 7890              		.file 12 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_Sockets.h"
 7891              		.file 13 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_TCP_WIN.h"
 7892              		.file 14 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_TCP_IP.h"
 7893              		.file 15 "../../../FreeRTOS-Plus/Source/FreeRTOS-Plus-TCP/include/FreeRTOS_IP_Private.h"
ARM GAS  /tmp/ccrA3BdH.s 			page 215


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FreeRTOS_Sockets.c
     /tmp/ccrA3BdH.s:21     .text.FreeRTOS_max_uint32:0000000000000000 $t
     /tmp/ccrA3BdH.s:25     .text.FreeRTOS_max_uint32:0000000000000000 FreeRTOS_max_uint32
     /tmp/ccrA3BdH.s:68     .text.FreeRTOS_min_int32:0000000000000000 $t
     /tmp/ccrA3BdH.s:72     .text.FreeRTOS_min_int32:0000000000000000 FreeRTOS_min_int32
     /tmp/ccrA3BdH.s:114    .text.FreeRTOS_min_uint32:0000000000000000 $t
     /tmp/ccrA3BdH.s:118    .text.FreeRTOS_min_uint32:0000000000000000 FreeRTOS_min_uint32
     /tmp/ccrA3BdH.s:160    .text.FreeRTOS_round_up:0000000000000000 $t
     /tmp/ccrA3BdH.s:164    .text.FreeRTOS_round_up:0000000000000000 FreeRTOS_round_up
     /tmp/ccrA3BdH.s:209    .text.FreeRTOS_min_BaseType:0000000000000000 $t
     /tmp/ccrA3BdH.s:213    .text.FreeRTOS_min_BaseType:0000000000000000 FreeRTOS_min_BaseType
     /tmp/ccrA3BdH.s:255    .text.vStreamBufferClear:0000000000000000 $t
     /tmp/ccrA3BdH.s:259    .text.vStreamBufferClear:0000000000000000 vStreamBufferClear
     /tmp/ccrA3BdH.s:311    .text.uxStreamBufferSpace:0000000000000000 $t
     /tmp/ccrA3BdH.s:315    .text.uxStreamBufferSpace:0000000000000000 uxStreamBufferSpace
     /tmp/ccrA3BdH.s:377    .text.uxStreamBufferDistance:0000000000000000 $t
     /tmp/ccrA3BdH.s:381    .text.uxStreamBufferDistance:0000000000000000 uxStreamBufferDistance
     /tmp/ccrA3BdH.s:442    .text.uxStreamBufferGetSpace:0000000000000000 $t
     /tmp/ccrA3BdH.s:446    .text.uxStreamBufferGetSpace:0000000000000000 uxStreamBufferGetSpace
     /tmp/ccrA3BdH.s:492    .text.uxStreamBufferFrontSpace:0000000000000000 $t
     /tmp/ccrA3BdH.s:496    .text.uxStreamBufferFrontSpace:0000000000000000 uxStreamBufferFrontSpace
     /tmp/ccrA3BdH.s:542    .text.uxStreamBufferGetSize:0000000000000000 $t
     /tmp/ccrA3BdH.s:546    .text.uxStreamBufferGetSize:0000000000000000 uxStreamBufferGetSize
     /tmp/ccrA3BdH.s:592    .text.uxStreamBufferGetPtr:0000000000000000 $t
     /tmp/ccrA3BdH.s:596    .text.uxStreamBufferGetPtr:0000000000000000 uxStreamBufferGetPtr
                            *COM*:0000000000000014 xBoundUDPSocketsList
                            *COM*:0000000000000014 xBoundTCPSocketsList
     /tmp/ccrA3BdH.s:656    .bss.usNextPortToUse:0000000000000000 $d
     /tmp/ccrA3BdH.s:659    .bss.usNextPortToUse:0000000000000000 usNextPortToUse
     /tmp/ccrA3BdH.s:662    .text.prvValidSocket:0000000000000000 $t
     /tmp/ccrA3BdH.s:666    .text.prvValidSocket:0000000000000000 prvValidSocket
     /tmp/ccrA3BdH.s:749    .text.vNetworkSocketsInit:0000000000000000 $t
     /tmp/ccrA3BdH.s:754    .text.vNetworkSocketsInit:0000000000000000 vNetworkSocketsInit
     /tmp/ccrA3BdH.s:837    .text.vNetworkSocketsInit:0000000000000078 $d
     /tmp/ccrA3BdH.s:845    .text.prvDetermineSocketSize:0000000000000000 $t
     /tmp/ccrA3BdH.s:849    .text.prvDetermineSocketSize:0000000000000000 prvDetermineSocketSize
     /tmp/ccrA3BdH.s:1007   .text.prvDetermineSocketSize:00000000000000b8 $d
     /tmp/ccrA3BdH.s:1013   .text.FreeRTOS_socket:0000000000000000 $t
     /tmp/ccrA3BdH.s:1018   .text.FreeRTOS_socket:0000000000000000 FreeRTOS_socket
     /tmp/ccrA3BdH.s:1195   .text.FreeRTOS_socket:0000000000000130 $d
     /tmp/ccrA3BdH.s:1200   .text.FreeRTOS_CreateSocketSet:0000000000000000 $t
     /tmp/ccrA3BdH.s:1205   .text.FreeRTOS_CreateSocketSet:0000000000000000 FreeRTOS_CreateSocketSet
     /tmp/ccrA3BdH.s:1268   .text.FreeRTOS_DeleteSocketSet:0000000000000000 $t
     /tmp/ccrA3BdH.s:1273   .text.FreeRTOS_DeleteSocketSet:0000000000000000 FreeRTOS_DeleteSocketSet
     /tmp/ccrA3BdH.s:1315   .text.FreeRTOS_FD_SET:0000000000000000 $t
     /tmp/ccrA3BdH.s:1320   .text.FreeRTOS_FD_SET:0000000000000000 FreeRTOS_FD_SET
     /tmp/ccrA3BdH.s:1792   .text.prvFindSelectedSocket:0000000000000000 prvFindSelectedSocket
     /tmp/ccrA3BdH.s:1429   .text.FreeRTOS_FD_CLR:0000000000000000 $t
     /tmp/ccrA3BdH.s:1434   .text.FreeRTOS_FD_CLR:0000000000000000 FreeRTOS_FD_CLR
     /tmp/ccrA3BdH.s:1544   .text.FreeRTOS_FD_ISSET:0000000000000000 $t
     /tmp/ccrA3BdH.s:1549   .text.FreeRTOS_FD_ISSET:0000000000000000 FreeRTOS_FD_ISSET
     /tmp/ccrA3BdH.s:1652   .text.FreeRTOS_select:0000000000000000 $t
     /tmp/ccrA3BdH.s:1657   .text.FreeRTOS_select:0000000000000000 FreeRTOS_select
     /tmp/ccrA3BdH.s:1788   .text.prvFindSelectedSocket:0000000000000000 $t
     /tmp/ccrA3BdH.s:1866   .text.FreeRTOS_recvfrom:0000000000000000 $t
     /tmp/ccrA3BdH.s:1871   .text.FreeRTOS_recvfrom:0000000000000000 FreeRTOS_recvfrom
ARM GAS  /tmp/ccrA3BdH.s 			page 216


     /tmp/ccrA3BdH.s:2142   .text.FreeRTOS_sendto:0000000000000000 $t
     /tmp/ccrA3BdH.s:2147   .text.FreeRTOS_sendto:0000000000000000 FreeRTOS_sendto
     /tmp/ccrA3BdH.s:2359   .text.FreeRTOS_bind:0000000000000000 FreeRTOS_bind
     /tmp/ccrA3BdH.s:2354   .text.FreeRTOS_bind:0000000000000000 $t
     /tmp/ccrA3BdH.s:2499   .text.vSocketBind:0000000000000000 $t
     /tmp/ccrA3BdH.s:2504   .text.vSocketBind:0000000000000000 vSocketBind
     /tmp/ccrA3BdH.s:3530   .text.prvGetPrivatePortNumber:0000000000000000 prvGetPrivatePortNumber
     /tmp/ccrA3BdH.s:3644   .text.pxListFindListItemWithValue:0000000000000000 pxListFindListItemWithValue
     /tmp/ccrA3BdH.s:2712   .text.vSocketBind:0000000000000118 $d
     /tmp/ccrA3BdH.s:2718   .text.FreeRTOS_closesocket:0000000000000000 $t
     /tmp/ccrA3BdH.s:2723   .text.FreeRTOS_closesocket:0000000000000000 FreeRTOS_closesocket
     /tmp/ccrA3BdH.s:2794   .text.vSocketClose:0000000000000000 $t
     /tmp/ccrA3BdH.s:2799   .text.vSocketClose:0000000000000000 vSocketClose
     /tmp/ccrA3BdH.s:2946   .text.prvTCPSetSocketCount:0000000000000000 prvTCPSetSocketCount
     /tmp/ccrA3BdH.s:2942   .text.prvTCPSetSocketCount:0000000000000000 $t
     /tmp/ccrA3BdH.s:3036   .text.prvTCPSetSocketCount:0000000000000068 $d
     /tmp/ccrA3BdH.s:3041   .text.FreeRTOS_setsockopt:0000000000000000 $t
     /tmp/ccrA3BdH.s:3046   .text.FreeRTOS_setsockopt:0000000000000000 FreeRTOS_setsockopt
     /tmp/ccrA3BdH.s:3104   .text.FreeRTOS_setsockopt:0000000000000040 $d
     /tmp/ccrA3BdH.s:3120   .text.FreeRTOS_setsockopt:0000000000000080 $t
     /tmp/ccrA3BdH.s:6664   .text.FreeRTOS_tx_size:0000000000000000 FreeRTOS_tx_size
     /tmp/ccrA3BdH.s:3526   .text.prvGetPrivatePortNumber:0000000000000000 $t
     /tmp/ccrA3BdH.s:3633   .text.prvGetPrivatePortNumber:0000000000000090 $d
     /tmp/ccrA3BdH.s:3640   .text.pxListFindListItemWithValue:0000000000000000 $t
     /tmp/ccrA3BdH.s:3726   .text.pxUDPSocketLookup:0000000000000000 $t
     /tmp/ccrA3BdH.s:3731   .text.pxUDPSocketLookup:0000000000000000 pxUDPSocketLookup
     /tmp/ccrA3BdH.s:3802   .text.pxUDPSocketLookup:0000000000000048 $d
     /tmp/ccrA3BdH.s:3807   .text.FreeRTOS_inet_addr:0000000000000000 $t
     /tmp/ccrA3BdH.s:3812   .text.FreeRTOS_inet_addr:0000000000000000 FreeRTOS_inet_addr
     /tmp/ccrA3BdH.s:3998   .text.FreeRTOS_GetLocalAddress:0000000000000000 $t
     /tmp/ccrA3BdH.s:4003   .text.FreeRTOS_GetLocalAddress:0000000000000000 FreeRTOS_GetLocalAddress
     /tmp/ccrA3BdH.s:4064   .text.FreeRTOS_GetLocalAddress:0000000000000040 $d
     /tmp/ccrA3BdH.s:4069   .text.vSocketWakeUpUser:0000000000000000 $t
     /tmp/ccrA3BdH.s:4074   .text.vSocketWakeUpUser:0000000000000000 vSocketWakeUpUser
     /tmp/ccrA3BdH.s:4166   .text.bMayConnect:0000000000000000 $t
     /tmp/ccrA3BdH.s:4170   .text.bMayConnect:0000000000000000 bMayConnect
     /tmp/ccrA3BdH.s:4227   .text.prvTCPConnectStart:0000000000000000 $t
     /tmp/ccrA3BdH.s:4231   .text.prvTCPConnectStart:0000000000000000 prvTCPConnectStart
     /tmp/ccrA3BdH.s:6734   .text.FreeRTOS_issocketconnected:0000000000000000 FreeRTOS_issocketconnected
     /tmp/ccrA3BdH.s:4379   .text.FreeRTOS_connect:0000000000000000 $t
     /tmp/ccrA3BdH.s:4384   .text.FreeRTOS_connect:0000000000000000 FreeRTOS_connect
     /tmp/ccrA3BdH.s:4511   .text.FreeRTOS_accept:0000000000000000 $t
     /tmp/ccrA3BdH.s:4516   .text.FreeRTOS_accept:0000000000000000 FreeRTOS_accept
     /tmp/ccrA3BdH.s:4776   .text.FreeRTOS_recv:0000000000000000 $t
     /tmp/ccrA3BdH.s:4781   .text.FreeRTOS_recv:0000000000000000 FreeRTOS_recv
     /tmp/ccrA3BdH.s:5093   .text.prvTCPSendCheck:0000000000000000 $t
     /tmp/ccrA3BdH.s:5097   .text.prvTCPSendCheck:0000000000000000 prvTCPSendCheck
     /tmp/ccrA3BdH.s:6124   .text.prvTCPCreateStream:0000000000000000 prvTCPCreateStream
     /tmp/ccrA3BdH.s:5209   .text.FreeRTOS_get_tx_head:0000000000000000 $t
     /tmp/ccrA3BdH.s:5214   .text.FreeRTOS_get_tx_head:0000000000000000 FreeRTOS_get_tx_head
     /tmp/ccrA3BdH.s:5299   .text.FreeRTOS_send:0000000000000000 $t
     /tmp/ccrA3BdH.s:5304   .text.FreeRTOS_send:0000000000000000 FreeRTOS_send
     /tmp/ccrA3BdH.s:5557   .text.FreeRTOS_listen:0000000000000000 $t
     /tmp/ccrA3BdH.s:5562   .text.FreeRTOS_listen:0000000000000000 FreeRTOS_listen
     /tmp/ccrA3BdH.s:5700   .text.FreeRTOS_shutdown:0000000000000000 $t
     /tmp/ccrA3BdH.s:5705   .text.FreeRTOS_shutdown:0000000000000000 FreeRTOS_shutdown
     /tmp/ccrA3BdH.s:5782   .text.xTCPTimerCheck:0000000000000000 $t
ARM GAS  /tmp/ccrA3BdH.s 			page 217


     /tmp/ccrA3BdH.s:5787   .text.xTCPTimerCheck:0000000000000000 xTCPTimerCheck
     /tmp/ccrA3BdH.s:5941   .text.xTCPTimerCheck:00000000000000d8 $d
     /tmp/ccrA3BdH.s:7879   .bss.xLastTime.6999:0000000000000000 xLastTime.6999
     /tmp/ccrA3BdH.s:5948   .text.pxTCPSocketLookup:0000000000000000 $t
     /tmp/ccrA3BdH.s:5953   .text.pxTCPSocketLookup:0000000000000000 pxTCPSocketLookup
     /tmp/ccrA3BdH.s:6068   .text.pxTCPSocketLookup:0000000000000088 $d
     /tmp/ccrA3BdH.s:6073   .text.FreeRTOS_get_rx_buf:0000000000000000 $t
     /tmp/ccrA3BdH.s:6078   .text.FreeRTOS_get_rx_buf:0000000000000000 FreeRTOS_get_rx_buf
     /tmp/ccrA3BdH.s:6120   .text.prvTCPCreateStream:0000000000000000 $t
     /tmp/ccrA3BdH.s:6256   .text.prvTCPCreateStream:00000000000000b8 $d
     /tmp/ccrA3BdH.s:6261   .text.lTCPAddRxdata:0000000000000000 $t
     /tmp/ccrA3BdH.s:6266   .text.lTCPAddRxdata:0000000000000000 lTCPAddRxdata
     /tmp/ccrA3BdH.s:6395   .text.FreeRTOS_GetRemoteAddress:0000000000000000 $t
     /tmp/ccrA3BdH.s:6400   .text.FreeRTOS_GetRemoteAddress:0000000000000000 FreeRTOS_GetRemoteAddress
     /tmp/ccrA3BdH.s:6491   .text.FreeRTOS_maywrite:0000000000000000 $t
     /tmp/ccrA3BdH.s:6496   .text.FreeRTOS_maywrite:0000000000000000 FreeRTOS_maywrite
     /tmp/ccrA3BdH.s:6588   .text.FreeRTOS_tx_space:0000000000000000 $t
     /tmp/ccrA3BdH.s:6593   .text.FreeRTOS_tx_space:0000000000000000 FreeRTOS_tx_space
     /tmp/ccrA3BdH.s:6659   .text.FreeRTOS_tx_size:0000000000000000 $t
     /tmp/ccrA3BdH.s:6729   .text.FreeRTOS_issocketconnected:0000000000000000 $t
     /tmp/ccrA3BdH.s:6802   .text.FreeRTOS_mss:0000000000000000 $t
     /tmp/ccrA3BdH.s:6807   .text.FreeRTOS_mss:0000000000000000 FreeRTOS_mss
     /tmp/ccrA3BdH.s:6863   .text.FreeRTOS_connstatus:0000000000000000 $t
     /tmp/ccrA3BdH.s:6868   .text.FreeRTOS_connstatus:0000000000000000 FreeRTOS_connstatus
     /tmp/ccrA3BdH.s:6924   .text.FreeRTOS_rx_size:0000000000000000 $t
     /tmp/ccrA3BdH.s:6929   .text.FreeRTOS_rx_size:0000000000000000 FreeRTOS_rx_size
     /tmp/ccrA3BdH.s:6994   .text.FreeRTOS_netstat:0000000000000000 $t
     /tmp/ccrA3BdH.s:6999   .text.FreeRTOS_netstat:0000000000000000 FreeRTOS_netstat
     /tmp/ccrA3BdH.s:7040   .rodata:0000000000000000 $d
     /tmp/ccrA3BdH.s:7061   .text.vTCPNetStat:0000000000000000 $t
     /tmp/ccrA3BdH.s:7066   .text.vTCPNetStat:0000000000000000 vTCPNetStat
     /tmp/ccrA3BdH.s:7291   .text.vTCPNetStat:0000000000000168 $d
     /tmp/ccrA3BdH.s:7306   .text.vSocketSelect:0000000000000000 $t
     /tmp/ccrA3BdH.s:7311   .text.vSocketSelect:0000000000000000 vSocketSelect
     /tmp/ccrA3BdH.s:7645   .text.vSocketSelect:000000000000020c $d
     /tmp/ccrA3BdH.s:7651   .text.FreeRTOS_SignalSocket:0000000000000000 $t
     /tmp/ccrA3BdH.s:7656   .text.FreeRTOS_SignalSocket:0000000000000000 FreeRTOS_SignalSocket
     /tmp/ccrA3BdH.s:7745   .text.FreeRTOS_SignalSocketFromISR:0000000000000000 $t
     /tmp/ccrA3BdH.s:7750   .text.FreeRTOS_SignalSocketFromISR:0000000000000000 FreeRTOS_SignalSocketFromISR
     /tmp/ccrA3BdH.s:7871   .text.FreeRTOS_SignalSocketFromISR:000000000000008c $d
     /tmp/ccrA3BdH.s:7876   .bss.xLastTime.6999:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
vListInitialise
uxRand
ulNextInitialSequenceNumber
xIPIsNetworkTaskReady
pvPortMalloc
xEventGroupCreate
vPortFree
memset
vListInitialiseItem
vEventGroupDelete
vTaskSetTimeOutState
xEventGroupWaitBits
xEventGroupClearBits
ARM GAS  /tmp/ccrA3BdH.s 			page 218


xTaskCheckForTimeOut
xSendEventStructToIPTask
xEventGroupSetBits
vPortEnterCritical
uxListRemove
vPortExitCritical
memcpy
vReleaseNetworkBufferAndDescriptor
pxGetNetworkBufferWithDescriptor
pxUDPPayloadBuffer_to_NetworkBuffer
vListInsertEnd
vTCPWindowDestroy
xSendEventToIPTask
xDefaultPartUDPPacketHeader
vTCPStateChange
vTaskSuspendAll
xTaskResumeAll
uxStreamBufferGet
uxStreamBufferAdd
xIsCallingFromIPTask
xTaskGetTickCount
xTCPSocketCheck
lUDPLoggingPrintf
snprintf
FreeRTOS_GetTCPStateName
uxGetMinimumFreeNetworkBuffers
uxGetNumberOfFreeNetworkBuffers
xQueueGenericSendFromISR
xNetworkEventQueue
