ARM GAS  /tmp/cc0mfAYF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m7
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv5-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f7xx_hal_flash.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.comm	pFlash,28,4
  21              		.section	.text.HAL_FLASH_Program,"ax",%progbits
  22              		.align	2
  23              		.global	HAL_FLASH_Program
  24              		.thumb
  25              		.thumb_func
  27              	HAL_FLASH_Program:
  28              	.LFB135:
  29              		.file 1 "../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c"
   1:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
   2:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ******************************************************************************
   3:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @file    stm32f7xx_hal_flash.c
   4:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @author  MCD Application Team
   5:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @version V1.1.2
   6:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @date    23-September-2016 
   7:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   8:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *          This file provides firmware functions to manage the following 
   9:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
  10:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *           + Program operations functions
  11:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *           + Memory Control functions 
  12:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *           + Peripheral Errors functions
  13:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         
  14:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   @verbatim
  15:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ==============================================================================
  16:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  17:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ==============================================================================
  18:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            
  19:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses 
  20:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations 
  21:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        and the read and write protection mechanisms.
  22:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
  23:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  24:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        prefetch and cache lines. 
  25:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
  26:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   [..] The FLASH main features are:
  27:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Flash memory read operations
  28:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Flash memory program/erase operations
  29:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Read / write protections
ARM GAS  /tmp/cc0mfAYF.s 			page 2


  30:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) Prefetch on I-Code
  31:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) 64 cache lines of 128 bits on I-Code
  32:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (+) 8 cache lines of 128 bits on D-Code
  33:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
  34:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                      ##### How to use this driver #####
  35:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ==============================================================================
  36:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]                             
  37:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH 
  38:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       memory of all STM32F7xx devices.
  39:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
  40:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (#) FLASH Memory IO Programming functions: 
  41:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and 
  42:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  43:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Program functions: byte, half word, word and double word
  44:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) There Two modes of programming :
  45:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  46:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  47:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
  48:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       (#) Interrupts and flags management functions : 
  49:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  50:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Wait for last FLASH operation according to its status
  51:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****            (++) Get error flag status by calling HAL_SetErrorCode()          
  52:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..] 
  53:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  54:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       to handle the following operations:
  55:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Set the latency
  56:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  57:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  58:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  59:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Enable/Disable the FLASH interrupts
  60:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****        (+) Monitor the FLASH flags status
  61:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]	   
  62:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	(@) For any Flash memory program operation (erase or program), the CPU clock frequency
  63:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         (HCLK) must be at least 1MHz. 
  64:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	(@) The contents of the Flash memory are not guaranteed if a device reset occurs during 
  65:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	    a Flash memory operation.
  66:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     (@) Any attempt to read the Flash memory while it is being written or erased, causes the 
  67:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 	    bus to stall. Read operations are processed correctly once the program operation has 
  68:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 		completed. This means that code or data fetches cannot be performed while a write/erase 
  69:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 		operation is ongoing.
  70:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           
  71:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   @endverbatim
  72:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ******************************************************************************
  73:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @attention
  74:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
  75:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  76:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
  77:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * Redistribution and use in source and binary forms, with or without modification,
  78:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * are permitted provided that the following conditions are met:
  79:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  80:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *      this list of conditions and the following disclaimer.
  81:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  82:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *      this list of conditions and the following disclaimer in the documentation
  83:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *      and/or other materials provided with the distribution.
  84:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  85:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *      may be used to endorse or promote products derived from this software
  86:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *      without specific prior written permission.
ARM GAS  /tmp/cc0mfAYF.s 			page 3


  87:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
  88:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  89:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  90:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  91:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  92:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  93:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  94:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  95:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  96:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  97:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  98:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
  99:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   ******************************************************************************
 100:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */ 
 101:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 102:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
 103:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #include "stm32f7xx_hal.h"
 104:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 105:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup STM32F7xx_HAL_Driver
 106:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 107:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 108:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 109:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH FLASH
 110:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief FLASH HAL module driver
 111:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 112:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 113:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 114:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 115:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 116:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 117:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private define ------------------------------------------------------------*/
 118:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Constants
 119:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 120:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 121:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07U)
 122:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** #define FLASH_TIMEOUT_VALUE       ((uint32_t)50000U)/* 50 s */
 123:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 124:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 125:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */         
 126:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private macro -------------------------------------------------------------*/
 127:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 128:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Variables
 129:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 130:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 131:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Variable used for Erase sectors under interruption */
 132:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash;
 133:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 134:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 135:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 136:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 137:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 138:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 139:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 140:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 141:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Program operations */
 142:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 143:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_Word(uint32_t Address, uint32_t Data);
ARM GAS  /tmp/cc0mfAYF.s 			page 4


 144:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_HalfWord(uint32_t Address, uint16_t Data);
 145:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_Program_Byte(uint32_t Address, uint8_t Data);
 146:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void   FLASH_SetErrorCode(void);
 147:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 148:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout);
 149:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 150:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 151:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 152:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 153:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 154:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 155:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 156:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 157:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 158:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions 
 159:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *  @brief   Programming operation functions 
 160:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *
 161:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @verbatim   
 162:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================
 163:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                   ##### Programming operation functions #####
 164:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================  
 165:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]
 166:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH 
 167:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     program operations.
 168:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 169:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @endverbatim
 170:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 171:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 172:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 173:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 174:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program byte, halfword, word or double word at a specified address
 175:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  TypeProgram:  Indicate the way to program at a specified address.
 176:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 177:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address:  specifies the address to be programmed.
 178:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed
 179:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * 
 180:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 181:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 182:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 183:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
  30              		.loc 1 183 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 24
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42 0004 00AF     		add	r7, sp, #0
  43              	.LCFI2:
  44              		.cfi_def_cfa_register 7
  45 0006 F860     		str	r0, [r7, #12]
  46 0008 B960     		str	r1, [r7, #8]
ARM GAS  /tmp/cc0mfAYF.s 			page 5


  47 000a C7E90023 		strd	r2, [r7]
 184:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  48              		.loc 1 184 0
  49 000e 0123     		movs	r3, #1
  50 0010 FB75     		strb	r3, [r7, #23]
 185:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 186:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Process Locked */
 187:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
  51              		.loc 1 187 0
  52 0012 274B     		ldr	r3, .L13
  53 0014 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  54 0016 012B     		cmp	r3, #1
  55 0018 01D1     		bne	.L2
  56              		.loc 1 187 0 is_stmt 0 discriminator 1
  57 001a 0223     		movs	r3, #2
  58 001c 43E0     		b	.L3
  59              	.L2:
  60              		.loc 1 187 0 discriminator 2
  61 001e 244B     		ldr	r3, .L13
  62 0020 0122     		movs	r2, #1
  63 0022 1A75     		strb	r2, [r3, #20]
 188:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 189:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 190:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 191:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 192:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 193:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  64              		.loc 1 193 0 is_stmt 1 discriminator 2
  65 0024 4CF25030 		movw	r0, #50000
  66 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  67 002c 0346     		mov	r3, r0
  68 002e FB75     		strb	r3, [r7, #23]
 194:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 195:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(status == HAL_OK)
  69              		.loc 1 195 0 discriminator 2
  70 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  71 0032 002B     		cmp	r3, #0
  72 0034 33D1     		bne	.L4
 196:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 197:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     switch(TypeProgram)
  73              		.loc 1 197 0
  74 0036 FB68     		ldr	r3, [r7, #12]
  75 0038 032B     		cmp	r3, #3
  76 003a 23D8     		bhi	.L12
  77 003c 01A2     		adr	r2, .L7
  78 003e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  79 0042 00BF     		.p2align 2
  80              	.L7:
  81 0044 55000000 		.word	.L6+1
  82 0048 61000000 		.word	.L8+1
  83 004c 6D000000 		.word	.L9+1
  84 0050 79000000 		.word	.L10+1
  85              		.p2align 1
  86              	.L6:
 198:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 199:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_BYTE :
 200:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
ARM GAS  /tmp/cc0mfAYF.s 			page 6


 201:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program byte (8-bit) at a specified address.*/
 202:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_Byte(Address, (uint8_t) Data);
  87              		.loc 1 202 0
  88 0054 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  89 0056 B868     		ldr	r0, [r7, #8]
  90 0058 1946     		mov	r1, r3
  91 005a FFF7FEFF 		bl	FLASH_Program_Byte
 203:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
  92              		.loc 1 203 0
  93 005e 12E0     		b	.L11
  94              	.L8:
 204:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 205:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
 206:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_HALFWORD :
 207:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 208:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program halfword (16-bit) at a specified address.*/
 209:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_HalfWord(Address, (uint16_t) Data);
  95              		.loc 1 209 0
  96 0060 3B88     		ldrh	r3, [r7]
  97 0062 B868     		ldr	r0, [r7, #8]
  98 0064 1946     		mov	r1, r3
  99 0066 FFF7FEFF 		bl	FLASH_Program_HalfWord
 210:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 100              		.loc 1 210 0
 101 006a 0CE0     		b	.L11
 102              	.L9:
 211:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 212:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
 213:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_WORD :
 214:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 215:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program word (32-bit) at a specified address.*/
 216:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_Word(Address, (uint32_t) Data);
 103              		.loc 1 216 0
 104 006c 3B68     		ldr	r3, [r7]
 105 006e B868     		ldr	r0, [r7, #8]
 106 0070 1946     		mov	r1, r3
 107 0072 FFF7FEFF 		bl	FLASH_Program_Word
 217:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 108              		.loc 1 217 0
 109 0076 06E0     		b	.L11
 110              	.L10:
 218:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 219:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       
 220:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_TYPEPROGRAM_DOUBLEWORD :
 221:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 222:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program double word (64-bit) at a specified address.*/
 223:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         FLASH_Program_DoubleWord(Address, Data);
 111              		.loc 1 223 0
 112 0078 B868     		ldr	r0, [r7, #8]
 113 007a D7E90023 		ldrd	r2, [r7]
 114 007e FFF7FEFF 		bl	FLASH_Program_DoubleWord
 224:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 115              		.loc 1 224 0
 116 0082 00E0     		b	.L11
 117              	.L12:
 225:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 226:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       default :
ARM GAS  /tmp/cc0mfAYF.s 			page 7


 227:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 118              		.loc 1 227 0
 119 0084 00BF     		nop
 120              	.L11:
 228:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 229:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Wait for last operation to be completed */
 230:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 121              		.loc 1 230 0
 122 0086 4CF25030 		movw	r0, #50000
 123 008a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 124 008e 0346     		mov	r3, r0
 125 0090 FB75     		strb	r3, [r7, #23]
 231:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 232:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* If the program operation is completed, disable the PG Bit */
 233:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 126              		.loc 1 233 0
 127 0092 084A     		ldr	r2, .L13+4
 128 0094 074B     		ldr	r3, .L13+4
 129 0096 1B69     		ldr	r3, [r3, #16]
 130 0098 23F00103 		bic	r3, r3, #1
 131 009c 1361     		str	r3, [r2, #16]
 132              	.L4:
 234:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 235:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 236:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Process Unlocked */
 237:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 133              		.loc 1 237 0
 134 009e 044B     		ldr	r3, .L13
 135 00a0 0022     		movs	r2, #0
 136 00a2 1A75     		strb	r2, [r3, #20]
 238:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 239:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return status;
 137              		.loc 1 239 0
 138 00a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 139              	.L3:
 240:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 140              		.loc 1 240 0
 141 00a6 1846     		mov	r0, r3
 142 00a8 1837     		adds	r7, r7, #24
 143              	.LCFI3:
 144              		.cfi_def_cfa_offset 8
 145 00aa BD46     		mov	sp, r7
 146              	.LCFI4:
 147              		.cfi_def_cfa_register 13
 148              		@ sp needed
 149 00ac 80BD     		pop	{r7, pc}
 150              	.L14:
 151 00ae 00BF     		.align	2
 152              	.L13:
 153 00b0 00000000 		.word	pFlash
 154 00b4 003C0240 		.word	1073888256
 155              		.cfi_endproc
 156              	.LFE135:
 158              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 159              		.align	2
 160              		.global	HAL_FLASH_Program_IT
 161              		.thumb
ARM GAS  /tmp/cc0mfAYF.s 			page 8


 162              		.thumb_func
 164              	HAL_FLASH_Program_IT:
 165              	.LFB136:
 241:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 242:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 243:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief   Program byte, halfword, word or double word at a specified address  with interrupt ena
 244:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  TypeProgram:  Indicate the way to program at a specified address.
 245:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 246:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address:  specifies the address to be programmed.
 247:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed
 248:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * 
 249:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 250:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 251:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 252:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 166              		.loc 1 252 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 24
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              	.LCFI5:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 7, -8
 174              		.cfi_offset 14, -4
 175 0002 86B0     		sub	sp, sp, #24
 176              	.LCFI6:
 177              		.cfi_def_cfa_offset 32
 178 0004 00AF     		add	r7, sp, #0
 179              	.LCFI7:
 180              		.cfi_def_cfa_register 7
 181 0006 F860     		str	r0, [r7, #12]
 182 0008 B960     		str	r1, [r7, #8]
 183 000a C7E90023 		strd	r2, [r7]
 253:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 184              		.loc 1 253 0
 185 000e 0023     		movs	r3, #0
 186 0010 FB75     		strb	r3, [r7, #23]
 254:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 255:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Process Locked */
 256:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 187              		.loc 1 256 0
 188 0012 254B     		ldr	r3, .L26
 189 0014 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 190 0016 012B     		cmp	r3, #1
 191 0018 01D1     		bne	.L16
 192              		.loc 1 256 0 is_stmt 0 discriminator 1
 193 001a 0223     		movs	r3, #2
 194 001c 40E0     		b	.L17
 195              	.L16:
 196              		.loc 1 256 0 discriminator 2
 197 001e 224B     		ldr	r3, .L26
 198 0020 0122     		movs	r2, #1
 199 0022 1A75     		strb	r2, [r3, #20]
 257:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 258:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 259:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 260:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
ARM GAS  /tmp/cc0mfAYF.s 			page 9


 261:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Enable End of FLASH Operation interrupt */
 262:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP);
 200              		.loc 1 262 0 is_stmt 1 discriminator 2
 201 0024 214A     		ldr	r2, .L26+4
 202 0026 214B     		ldr	r3, .L26+4
 203 0028 1B69     		ldr	r3, [r3, #16]
 204 002a 43F08073 		orr	r3, r3, #16777216
 205 002e 1361     		str	r3, [r2, #16]
 263:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 264:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Enable Error source interrupt */
 265:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_ERR);
 206              		.loc 1 265 0 discriminator 2
 207 0030 1E4A     		ldr	r2, .L26+4
 208 0032 1E4B     		ldr	r3, .L26+4
 209 0034 1B69     		ldr	r3, [r3, #16]
 210 0036 43F00073 		orr	r3, r3, #33554432
 211 003a 1361     		str	r3, [r2, #16]
 266:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 267:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Clear pending flags (if any) */  
 268:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP    | FLASH_FLAG_OPERR | FLASH_FLAG_WRPERR |\
 212              		.loc 1 268 0 discriminator 2
 213 003c 1B4B     		ldr	r3, .L26+4
 214 003e F322     		movs	r2, #243
 215 0040 DA60     		str	r2, [r3, #12]
 269:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                          FLASH_FLAG_PGAERR | FLASH_FLAG_PGPERR| FLASH_FLAG_ERSERR);  
 270:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 271:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM;
 216              		.loc 1 271 0 discriminator 2
 217 0042 194B     		ldr	r3, .L26
 218 0044 0322     		movs	r2, #3
 219 0046 1A70     		strb	r2, [r3]
 272:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   pFlash.Address = Address;
 220              		.loc 1 272 0 discriminator 2
 221 0048 174A     		ldr	r2, .L26
 222 004a BB68     		ldr	r3, [r7, #8]
 223 004c 1361     		str	r3, [r2, #16]
 273:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 274:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   switch(TypeProgram)
 224              		.loc 1 274 0 discriminator 2
 225 004e FB68     		ldr	r3, [r7, #12]
 226 0050 032B     		cmp	r3, #3
 227 0052 23D8     		bhi	.L25
 228 0054 01A2     		adr	r2, .L20
 229 0056 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 230 005a 00BF     		.p2align 2
 231              	.L20:
 232 005c 6D000000 		.word	.L19+1
 233 0060 79000000 		.word	.L21+1
 234 0064 85000000 		.word	.L22+1
 235 0068 91000000 		.word	.L23+1
 236              		.p2align 1
 237              	.L19:
 275:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 276:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_BYTE :
 277:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 278:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program byte (8-bit) at a specified address.*/
 279:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_Byte(Address, (uint8_t) Data);
ARM GAS  /tmp/cc0mfAYF.s 			page 10


 238              		.loc 1 279 0
 239 006c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 240 006e B868     		ldr	r0, [r7, #8]
 241 0070 1946     		mov	r1, r3
 242 0072 FFF7FEFF 		bl	FLASH_Program_Byte
 280:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 243              		.loc 1 280 0
 244 0076 12E0     		b	.L24
 245              	.L21:
 281:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 282:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 283:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_HALFWORD :
 284:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 285:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program halfword (16-bit) at a specified address.*/
 286:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_HalfWord(Address, (uint16_t) Data);
 246              		.loc 1 286 0
 247 0078 3B88     		ldrh	r3, [r7]
 248 007a B868     		ldr	r0, [r7, #8]
 249 007c 1946     		mov	r1, r3
 250 007e FFF7FEFF 		bl	FLASH_Program_HalfWord
 287:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 251              		.loc 1 287 0
 252 0082 0CE0     		b	.L24
 253              	.L22:
 288:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 289:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 290:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_WORD :
 291:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 292:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program word (32-bit) at a specified address.*/
 293:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_Word(Address, (uint32_t) Data);
 254              		.loc 1 293 0
 255 0084 3B68     		ldr	r3, [r7]
 256 0086 B868     		ldr	r0, [r7, #8]
 257 0088 1946     		mov	r1, r3
 258 008a FFF7FEFF 		bl	FLASH_Program_Word
 294:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 259              		.loc 1 294 0
 260 008e 06E0     		b	.L24
 261              	.L23:
 295:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 296:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 297:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     case FLASH_TYPEPROGRAM_DOUBLEWORD :
 298:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 299:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       /*Program double word (64-bit) at a specified address.*/
 300:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 262              		.loc 1 300 0
 263 0090 B868     		ldr	r0, [r7, #8]
 264 0092 D7E90023 		ldrd	r2, [r7]
 265 0096 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 301:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 266              		.loc 1 301 0
 267 009a 00E0     		b	.L24
 268              	.L25:
 302:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 303:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     default :
 304:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 269              		.loc 1 304 0
ARM GAS  /tmp/cc0mfAYF.s 			page 11


 270 009c 00BF     		nop
 271              	.L24:
 305:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 306:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return status;
 272              		.loc 1 306 0
 273 009e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 274              	.L17:
 307:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 275              		.loc 1 307 0
 276 00a0 1846     		mov	r0, r3
 277 00a2 1837     		adds	r7, r7, #24
 278              	.LCFI8:
 279              		.cfi_def_cfa_offset 8
 280 00a4 BD46     		mov	sp, r7
 281              	.LCFI9:
 282              		.cfi_def_cfa_register 13
 283              		@ sp needed
 284 00a6 80BD     		pop	{r7, pc}
 285              	.L27:
 286              		.align	2
 287              	.L26:
 288 00a8 00000000 		.word	pFlash
 289 00ac 003C0240 		.word	1073888256
 290              		.cfi_endproc
 291              	.LFE136:
 293              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 294              		.align	2
 295              		.global	HAL_FLASH_IRQHandler
 296              		.thumb
 297              		.thumb_func
 299              	HAL_FLASH_IRQHandler:
 300              	.LFB137:
 308:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 309:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 310:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief This function handles FLASH interrupt request.
 311:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 312:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 313:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 314:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 301              		.loc 1 314 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              	.LCFI10:
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 7, -8
 309              		.cfi_offset 14, -4
 310 0002 82B0     		sub	sp, sp, #8
 311              	.LCFI11:
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              	.LCFI12:
 315              		.cfi_def_cfa_register 7
 315:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   uint32_t temp = 0;
 316              		.loc 1 315 0
 317 0006 0023     		movs	r3, #0
ARM GAS  /tmp/cc0mfAYF.s 			page 12


 318 0008 7B60     		str	r3, [r7, #4]
 316:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 317:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the program operation is completed, disable the PG Bit */
 318:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_PG);
 319              		.loc 1 318 0
 320 000a 514A     		ldr	r2, .L43
 321 000c 504B     		ldr	r3, .L43
 322 000e 1B69     		ldr	r3, [r3, #16]
 323 0010 23F00103 		bic	r3, r3, #1
 324 0014 1361     		str	r3, [r2, #16]
 319:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 320:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the erase operation is completed, disable the SER Bit */
 321:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= (~FLASH_CR_SER);
 325              		.loc 1 321 0
 326 0016 4E4A     		ldr	r2, .L43
 327 0018 4D4B     		ldr	r3, .L43
 328 001a 1B69     		ldr	r3, [r3, #16]
 329 001c 23F00203 		bic	r3, r3, #2
 330 0020 1361     		str	r3, [r2, #16]
 322:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= SECTOR_MASK; 
 331              		.loc 1 322 0
 332 0022 4B4A     		ldr	r2, .L43
 333 0024 4A4B     		ldr	r3, .L43
 334 0026 1B69     		ldr	r3, [r3, #16]
 335 0028 23F0F803 		bic	r3, r3, #248
 336 002c 1361     		str	r3, [r2, #16]
 323:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 324:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* if the erase operation is completed, disable the MER Bit */
 325:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= (~FLASH_MER_BIT);
 337              		.loc 1 325 0
 338 002e 4849     		ldr	r1, .L43
 339 0030 474B     		ldr	r3, .L43
 340 0032 1A69     		ldr	r2, [r3, #16]
 341 0034 474B     		ldr	r3, .L43+4
 342 0036 1340     		ands	r3, r3, r2
 343 0038 0B61     		str	r3, [r1, #16]
 326:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 327:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 328:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 344              		.loc 1 328 0
 345 003a 454B     		ldr	r3, .L43
 346 003c DB68     		ldr	r3, [r3, #12]
 347 003e 03F00103 		and	r3, r3, #1
 348 0042 002B     		cmp	r3, #0
 349 0044 46D0     		beq	.L29
 329:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 330:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 331:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 350              		.loc 1 331 0
 351 0046 424B     		ldr	r3, .L43
 352 0048 0122     		movs	r2, #1
 353 004a DA60     		str	r2, [r3, #12]
 332:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 333:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     switch (pFlash.ProcedureOnGoing)
 354              		.loc 1 333 0
 355 004c 424B     		ldr	r3, .L43+8
 356 004e 1B78     		ldrb	r3, [r3]
ARM GAS  /tmp/cc0mfAYF.s 			page 13


 357 0050 DBB2     		uxtb	r3, r3
 358 0052 022B     		cmp	r3, #2
 359 0054 2ED0     		beq	.L31
 360 0056 032B     		cmp	r3, #3
 361 0058 33D0     		beq	.L32
 362 005a 012B     		cmp	r3, #1
 363 005c 00D0     		beq	.L33
 334:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 335:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_SECTERASE :
 336:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 337:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Nb of sector to erased can be decreased */
 338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.NbSectorsToErase--;
 339:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 340:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Check if there are still sectors to erase */
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         if(pFlash.NbSectorsToErase != 0)
 342:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           temp = pFlash.Sector;
 344:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Indicate user which sector has been erased */
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           HAL_FLASH_EndOfOperationCallback(temp);
 346:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 347:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Increment sector number */
 348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           temp = ++pFlash.Sector;
 349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 350:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 351:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         else
 352:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 353:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* No more sectors to Erase, user callback can be called.*/
 354:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Reset Sector and stop Erase sectors procedure */
 355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           pFlash.Sector = temp = 0xFFFFFFFFU;
 356:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* FLASH EOP interrupt user callback */
 357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           HAL_FLASH_EndOfOperationCallback(temp);
 358:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Sector Erase procedure is completed */
 359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 360:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 362:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 363:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     
 364:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_MASSERASE :
 365:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 366:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* MassErase ended. Return the selected bank : in this product we don't have Banks */
 367:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(0);
 369:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* MAss Erase procedure is completed */
 370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 372:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 373:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 374:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_PROGRAM :
 375:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 376:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*Program ended. Return the selected address*/
 377:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 379:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Programming procedure is completed */
 380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 382:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 383:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       default :
ARM GAS  /tmp/cc0mfAYF.s 			page 14


 384:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 364              		.loc 1 384 0
 365 005e 39E0     		b	.L29
 366              	.L33:
 338:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 367              		.loc 1 338 0
 368 0060 3D4B     		ldr	r3, .L43+8
 369 0062 5B68     		ldr	r3, [r3, #4]
 370 0064 013B     		subs	r3, r3, #1
 371 0066 3C4A     		ldr	r2, .L43+8
 372 0068 5360     		str	r3, [r2, #4]
 341:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         {
 373              		.loc 1 341 0
 374 006a 3B4B     		ldr	r3, .L43+8
 375 006c 5B68     		ldr	r3, [r3, #4]
 376 006e 002B     		cmp	r3, #0
 377 0070 13D0     		beq	.L34
 343:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Indicate user which sector has been erased */
 378              		.loc 1 343 0
 379 0072 394B     		ldr	r3, .L43+8
 380 0074 DB68     		ldr	r3, [r3, #12]
 381 0076 7B60     		str	r3, [r7, #4]
 345:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 382              		.loc 1 345 0
 383 0078 7868     		ldr	r0, [r7, #4]
 384 007a FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 348:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           FLASH_Erase_Sector(temp, pFlash.VoltageForErase);
 385              		.loc 1 348 0
 386 007e 364B     		ldr	r3, .L43+8
 387 0080 DB68     		ldr	r3, [r3, #12]
 388 0082 0133     		adds	r3, r3, #1
 389 0084 344A     		ldr	r2, .L43+8
 390 0086 D360     		str	r3, [r2, #12]
 391 0088 7B60     		str	r3, [r7, #4]
 349:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 392              		.loc 1 349 0
 393 008a 334B     		ldr	r3, .L43+8
 394 008c 1B7A     		ldrb	r3, [r3, #8]
 395 008e DBB2     		uxtb	r3, r3
 396 0090 7868     		ldr	r0, [r7, #4]
 397 0092 1946     		mov	r1, r3
 398 0094 FFF7FEFF 		bl	FLASH_Erase_Sector
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 399              		.loc 1 361 0
 400 0098 1CE0     		b	.L29
 401              	.L34:
 355:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* FLASH EOP interrupt user callback */
 402              		.loc 1 355 0
 403 009a 4FF0FF33 		mov	r3, #-1
 404 009e 7B60     		str	r3, [r7, #4]
 405 00a0 2D4A     		ldr	r2, .L43+8
 406 00a2 7B68     		ldr	r3, [r7, #4]
 407 00a4 D360     		str	r3, [r2, #12]
 357:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****           /* Sector Erase procedure is completed */
 408              		.loc 1 357 0
 409 00a6 7868     		ldr	r0, [r7, #4]
 410 00a8 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
ARM GAS  /tmp/cc0mfAYF.s 			page 15


 359:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         }
 411              		.loc 1 359 0
 412 00ac 2A4B     		ldr	r3, .L43+8
 413 00ae 0022     		movs	r2, #0
 414 00b0 1A70     		strb	r2, [r3]
 361:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 415              		.loc 1 361 0
 416 00b2 0FE0     		b	.L29
 417              	.L31:
 368:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* MAss Erase procedure is completed */
 418              		.loc 1 368 0
 419 00b4 0020     		movs	r0, #0
 420 00b6 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 370:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 421              		.loc 1 370 0
 422 00ba 274B     		ldr	r3, .L43+8
 423 00bc 0022     		movs	r2, #0
 424 00be 1A70     		strb	r2, [r3]
 371:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 425              		.loc 1 371 0
 426 00c0 08E0     		b	.L29
 427              	.L32:
 378:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* Programming procedure is completed */
 428              		.loc 1 378 0
 429 00c2 254B     		ldr	r3, .L43+8
 430 00c4 1B69     		ldr	r3, [r3, #16]
 431 00c6 1846     		mov	r0, r3
 432 00c8 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 380:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 433              		.loc 1 380 0
 434 00cc 224B     		ldr	r3, .L43+8
 435 00ce 0022     		movs	r2, #0
 436 00d0 1A70     		strb	r2, [r3]
 381:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 437              		.loc 1 381 0
 438 00d2 00BF     		nop
 439              	.L29:
 385:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 386:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 387:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 388:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check FLASH operation error flags */
 389:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_ALL_ERRORS) != RESET)
 440              		.loc 1 389 0
 441 00d4 1E4B     		ldr	r3, .L43
 442 00d6 DB68     		ldr	r3, [r3, #12]
 443 00d8 03F0F203 		and	r3, r3, #242
 444 00dc 002B     		cmp	r3, #0
 445 00de 20D0     		beq	.L36
 390:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 391:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     switch (pFlash.ProcedureOnGoing)
 446              		.loc 1 391 0
 447 00e0 1D4B     		ldr	r3, .L43+8
 448 00e2 1B78     		ldrb	r3, [r3]
 449 00e4 DBB2     		uxtb	r3, r3
 450 00e6 022B     		cmp	r3, #2
 451 00e8 0CD0     		beq	.L38
 452 00ea 032B     		cmp	r3, #3
ARM GAS  /tmp/cc0mfAYF.s 			page 16


 453 00ec 0DD0     		beq	.L39
 454 00ee 012B     		cmp	r3, #1
 455 00f0 00D0     		beq	.L40
 392:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 393:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_SECTERASE :
 394:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 395:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* return the faulty sector */
 396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         temp = pFlash.Sector;
 397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 399:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 400:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_MASSERASE :
 401:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 402:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /* No return in case of Mass Erase */
 403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         temp = 0;
 404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 405:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 406:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       case FLASH_PROC_PROGRAM :
 407:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 408:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         /*return the faulty address*/
 409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         temp = pFlash.Address;
 410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 411:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 412:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     default :
 413:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       break;
 456              		.loc 1 413 0
 457 00f2 0EE0     		b	.L41
 458              	.L40:
 396:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         pFlash.Sector = 0xFFFFFFFFU;
 459              		.loc 1 396 0
 460 00f4 184B     		ldr	r3, .L43+8
 461 00f6 DB68     		ldr	r3, [r3, #12]
 462 00f8 7B60     		str	r3, [r7, #4]
 397:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 463              		.loc 1 397 0
 464 00fa 174B     		ldr	r3, .L43+8
 465 00fc 4FF0FF32 		mov	r2, #-1
 466 0100 DA60     		str	r2, [r3, #12]
 398:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 467              		.loc 1 398 0
 468 0102 06E0     		b	.L41
 469              	.L38:
 403:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 470              		.loc 1 403 0
 471 0104 0023     		movs	r3, #0
 472 0106 7B60     		str	r3, [r7, #4]
 404:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 473              		.loc 1 404 0
 474 0108 03E0     		b	.L41
 475              	.L39:
 409:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         break;
 476              		.loc 1 409 0
 477 010a 134B     		ldr	r3, .L43+8
 478 010c 1B69     		ldr	r3, [r3, #16]
 479 010e 7B60     		str	r3, [r7, #4]
 410:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 480              		.loc 1 410 0
ARM GAS  /tmp/cc0mfAYF.s 			page 17


 481 0110 00BF     		nop
 482              	.L41:
 414:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     }
 415:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /*Save the Error code*/
 416:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH_SetErrorCode();
 483              		.loc 1 416 0
 484 0112 FFF7FEFF 		bl	FLASH_SetErrorCode
 417:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 418:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 419:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     HAL_FLASH_OperationErrorCallback(temp);
 485              		.loc 1 419 0
 486 0116 7868     		ldr	r0, [r7, #4]
 487 0118 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 420:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 421:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /*Stop the procedure ongoing */
 422:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 488              		.loc 1 422 0
 489 011c 0E4B     		ldr	r3, .L43+8
 490 011e 0022     		movs	r2, #0
 491 0120 1A70     		strb	r2, [r3]
 492              	.L36:
 423:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 424:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 425:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 493              		.loc 1 425 0
 494 0122 0D4B     		ldr	r3, .L43+8
 495 0124 1B78     		ldrb	r3, [r3]
 496 0126 DBB2     		uxtb	r3, r3
 497 0128 002B     		cmp	r3, #0
 498 012a 0ED1     		bne	.L28
 426:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 427:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Disable End of FLASH Operation interrupt */
 428:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP);
 499              		.loc 1 428 0
 500 012c 084A     		ldr	r2, .L43
 501 012e 084B     		ldr	r3, .L43
 502 0130 1B69     		ldr	r3, [r3, #16]
 503 0132 23F08073 		bic	r3, r3, #16777216
 504 0136 1361     		str	r3, [r2, #16]
 429:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 430:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Disable Error source interrupt */
 431:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_ERR);
 505              		.loc 1 431 0
 506 0138 054A     		ldr	r2, .L43
 507 013a 054B     		ldr	r3, .L43
 508 013c 1B69     		ldr	r3, [r3, #16]
 509 013e 23F00073 		bic	r3, r3, #33554432
 510 0142 1361     		str	r3, [r2, #16]
 432:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 433:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Process Unlocked */
 434:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 511              		.loc 1 434 0
 512 0144 044B     		ldr	r3, .L43+8
 513 0146 0022     		movs	r2, #0
 514 0148 1A75     		strb	r2, [r3, #20]
 515              	.L28:
 435:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
ARM GAS  /tmp/cc0mfAYF.s 			page 18


 436:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 437:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 516              		.loc 1 437 0
 517 014a 0837     		adds	r7, r7, #8
 518              	.LCFI13:
 519              		.cfi_def_cfa_offset 8
 520 014c BD46     		mov	sp, r7
 521              	.LCFI14:
 522              		.cfi_def_cfa_register 13
 523              		@ sp needed
 524 014e 80BD     		pop	{r7, pc}
 525              	.L44:
 526              		.align	2
 527              	.L43:
 528 0150 003C0240 		.word	1073888256
 529 0154 FB7FFFFF 		.word	-32773
 530 0158 00000000 		.word	pFlash
 531              		.cfi_endproc
 532              	.LFE137:
 534              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 535              		.align	2
 536              		.weak	HAL_FLASH_EndOfOperationCallback
 537              		.thumb
 538              		.thumb_func
 540              	HAL_FLASH_EndOfOperationCallback:
 541              	.LFB138:
 438:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 439:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 440:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback
 441:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  ReturnValue: The value saved in this parameter depends on the ongoing procedure
 442:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Sectors Erase: Sector which has been erased (if 0xFFFFFFFF, it means that 
 443:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                                  all the selected sectors have been erased)
 444:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Program      : Address which was selected for data program
 445:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Mass Erase   : No return value expected
 446:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 447:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 448:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 449:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 542              		.loc 1 449 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 8
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              	.LCFI15:
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
 552              	.LCFI16:
 553              		.cfi_def_cfa_offset 16
 554 0004 00AF     		add	r7, sp, #0
 555              	.LCFI17:
 556              		.cfi_def_cfa_register 7
 557 0006 7860     		str	r0, [r7, #4]
 450:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 451:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   UNUSED(ReturnValue);
 452:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
ARM GAS  /tmp/cc0mfAYF.s 			page 19


 453:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 454:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */ 
 455:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 558              		.loc 1 455 0
 559 0008 0C37     		adds	r7, r7, #12
 560              	.LCFI18:
 561              		.cfi_def_cfa_offset 4
 562 000a BD46     		mov	sp, r7
 563              	.LCFI19:
 564              		.cfi_def_cfa_register 13
 565              		@ sp needed
 566 000c 5DF8047B 		ldr	r7, [sp], #4
 567              	.LCFI20:
 568              		.cfi_restore 7
 569              		.cfi_def_cfa_offset 0
 570 0010 7047     		bx	lr
 571              		.cfi_endproc
 572              	.LFE138:
 574 0012 00BF     		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
 575              		.align	2
 576              		.weak	HAL_FLASH_OperationErrorCallback
 577              		.thumb
 578              		.thumb_func
 580              	HAL_FLASH_OperationErrorCallback:
 581              	.LFB139:
 456:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 457:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 458:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback
 459:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  ReturnValue: The value saved in this parameter depends on the ongoing procedure
 460:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Sectors Erase: Sector which has been erased (if 0xFFFFFFFF, it means that 
 461:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                                  all the selected sectors have been erased)
 462:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Program      : Address which was selected for data program
 463:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *                 - Mass Erase   : No return value expected
 464:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 465:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 466:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 467:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 582              		.loc 1 467 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 8
 585              		@ frame_needed = 1, uses_anonymous_args = 0
 586              		@ link register save eliminated.
 587 0000 80B4     		push	{r7}
 588              	.LCFI21:
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 7, -4
 591 0002 83B0     		sub	sp, sp, #12
 592              	.LCFI22:
 593              		.cfi_def_cfa_offset 16
 594 0004 00AF     		add	r7, sp, #0
 595              	.LCFI23:
 596              		.cfi_def_cfa_register 7
 597 0006 7860     		str	r0, [r7, #4]
 468:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 469:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   UNUSED(ReturnValue);
 470:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 471:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   the HAL_FLASH_OperationErrorCallback could be implemented in the user file
ARM GAS  /tmp/cc0mfAYF.s 			page 20


 472:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    */ 
 473:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 598              		.loc 1 473 0
 599 0008 0C37     		adds	r7, r7, #12
 600              	.LCFI24:
 601              		.cfi_def_cfa_offset 4
 602 000a BD46     		mov	sp, r7
 603              	.LCFI25:
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 000c 5DF8047B 		ldr	r7, [sp], #4
 607              	.LCFI26:
 608              		.cfi_restore 7
 609              		.cfi_def_cfa_offset 0
 610 0010 7047     		bx	lr
 611              		.cfi_endproc
 612              	.LFE139:
 614 0012 00BF     		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 615              		.align	2
 616              		.global	HAL_FLASH_Unlock
 617              		.thumb
 618              		.thumb_func
 620              	HAL_FLASH_Unlock:
 621              	.LFB140:
 474:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 475:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 476:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 477:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 478:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 479:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions 
 480:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *  @brief   management functions 
 481:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *
 482:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @verbatim   
 483:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================
 484:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 485:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================  
 486:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]
 487:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH 
 488:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     memory operations.
 489:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 490:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @endverbatim
 491:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 492:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 493:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 494:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 495:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access
 496:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 497:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 498:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 499:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 622              		.loc 1 499 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 1, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627 0000 80B4     		push	{r7}
 628              	.LCFI27:
ARM GAS  /tmp/cc0mfAYF.s 			page 21


 629              		.cfi_def_cfa_offset 4
 630              		.cfi_offset 7, -4
 631 0002 00AF     		add	r7, sp, #0
 632              	.LCFI28:
 633              		.cfi_def_cfa_register 7
 500:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 634              		.loc 1 500 0
 635 0004 084B     		ldr	r3, .L51
 636 0006 1B69     		ldr	r3, [r3, #16]
 637 0008 002B     		cmp	r3, #0
 638 000a 07DA     		bge	.L48
 501:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 502:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 503:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 639              		.loc 1 503 0
 640 000c 064B     		ldr	r3, .L51
 641 000e 074A     		ldr	r2, .L51+4
 642 0010 5A60     		str	r2, [r3, #4]
 504:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 643              		.loc 1 504 0
 644 0012 054B     		ldr	r3, .L51
 645 0014 064A     		ldr	r2, .L51+8
 646 0016 5A60     		str	r2, [r3, #4]
 505:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 506:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   else
 507:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     return HAL_ERROR;
 509:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 510:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 511:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK; 
 647              		.loc 1 511 0
 648 0018 0023     		movs	r3, #0
 649 001a 00E0     		b	.L50
 650              	.L48:
 508:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 651              		.loc 1 508 0
 652 001c 0123     		movs	r3, #1
 653              	.L50:
 512:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 654              		.loc 1 512 0
 655 001e 1846     		mov	r0, r3
 656 0020 BD46     		mov	sp, r7
 657              	.LCFI29:
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 0022 5DF8047B 		ldr	r7, [sp], #4
 661              	.LCFI30:
 662              		.cfi_restore 7
 663              		.cfi_def_cfa_offset 0
 664 0026 7047     		bx	lr
 665              	.L52:
 666              		.align	2
 667              	.L51:
 668 0028 003C0240 		.word	1073888256
 669 002c 23016745 		.word	1164378403
 670 0030 AB89EFCD 		.word	-839939669
 671              		.cfi_endproc
ARM GAS  /tmp/cc0mfAYF.s 			page 22


 672              	.LFE140:
 674              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 675              		.align	2
 676              		.global	HAL_FLASH_Lock
 677              		.thumb
 678              		.thumb_func
 680              	HAL_FLASH_Lock:
 681              	.LFB141:
 513:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 514:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 515:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Locks the FLASH control register access
 516:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 517:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 518:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 519:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 682              		.loc 1 519 0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 1, uses_anonymous_args = 0
 686              		@ link register save eliminated.
 687 0000 80B4     		push	{r7}
 688              	.LCFI31:
 689              		.cfi_def_cfa_offset 4
 690              		.cfi_offset 7, -4
 691 0002 00AF     		add	r7, sp, #0
 692              	.LCFI32:
 693              		.cfi_def_cfa_register 7
 520:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 521:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 694              		.loc 1 521 0
 695 0004 054A     		ldr	r2, .L55
 696 0006 054B     		ldr	r3, .L55
 697 0008 1B69     		ldr	r3, [r3, #16]
 698 000a 43F00043 		orr	r3, r3, #-2147483648
 699 000e 1361     		str	r3, [r2, #16]
 522:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 523:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;  
 700              		.loc 1 523 0
 701 0010 0023     		movs	r3, #0
 524:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 702              		.loc 1 524 0
 703 0012 1846     		mov	r0, r3
 704 0014 BD46     		mov	sp, r7
 705              	.LCFI33:
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
 708 0016 5DF8047B 		ldr	r7, [sp], #4
 709              	.LCFI34:
 710              		.cfi_restore 7
 711              		.cfi_def_cfa_offset 0
 712 001a 7047     		bx	lr
 713              	.L56:
 714              		.align	2
 715              	.L55:
 716 001c 003C0240 		.word	1073888256
 717              		.cfi_endproc
 718              	.LFE141:
ARM GAS  /tmp/cc0mfAYF.s 			page 23


 720              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 721              		.align	2
 722              		.global	HAL_FLASH_OB_Unlock
 723              		.thumb
 724              		.thumb_func
 726              	HAL_FLASH_OB_Unlock:
 727              	.LFB142:
 525:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 526:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 527:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Control Registers access.
 528:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 529:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 530:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 531:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 728              		.loc 1 531 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              	.LCFI35:
 735              		.cfi_def_cfa_offset 4
 736              		.cfi_offset 7, -4
 737 0002 00AF     		add	r7, sp, #0
 738              	.LCFI36:
 739              		.cfi_def_cfa_register 7
 532:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 740              		.loc 1 532 0
 741 0004 094B     		ldr	r3, .L61
 742 0006 5B69     		ldr	r3, [r3, #20]
 743 0008 03F00103 		and	r3, r3, #1
 744 000c 002B     		cmp	r3, #0
 745 000e 07D0     		beq	.L58
 533:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 534:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 535:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 746              		.loc 1 535 0
 747 0010 064B     		ldr	r3, .L61
 748 0012 074A     		ldr	r2, .L61+4
 749 0014 9A60     		str	r2, [r3, #8]
 536:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 750              		.loc 1 536 0
 751 0016 054B     		ldr	r3, .L61
 752 0018 064A     		ldr	r2, .L61+8
 753 001a 9A60     		str	r2, [r3, #8]
 537:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 538:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   else
 539:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     return HAL_ERROR;
 541:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }  
 542:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 543:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;  
 754              		.loc 1 543 0
 755 001c 0023     		movs	r3, #0
 756 001e 00E0     		b	.L60
 757              	.L58:
 540:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }  
ARM GAS  /tmp/cc0mfAYF.s 			page 24


 758              		.loc 1 540 0
 759 0020 0123     		movs	r3, #1
 760              	.L60:
 544:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 761              		.loc 1 544 0
 762 0022 1846     		mov	r0, r3
 763 0024 BD46     		mov	sp, r7
 764              	.LCFI37:
 765              		.cfi_def_cfa_register 13
 766              		@ sp needed
 767 0026 5DF8047B 		ldr	r7, [sp], #4
 768              	.LCFI38:
 769              		.cfi_restore 7
 770              		.cfi_def_cfa_offset 0
 771 002a 7047     		bx	lr
 772              	.L62:
 773              		.align	2
 774              	.L61:
 775 002c 003C0240 		.word	1073888256
 776 0030 3B2A1908 		.word	135866939
 777 0034 7F6E5D4C 		.word	1281191551
 778              		.cfi_endproc
 779              	.LFE142:
 781              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 782              		.align	2
 783              		.global	HAL_FLASH_OB_Lock
 784              		.thumb
 785              		.thumb_func
 787              	HAL_FLASH_OB_Lock:
 788              	.LFB143:
 545:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 546:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 547:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Lock the FLASH Option Control Registers access.
 548:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status 
 549:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 550:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 551:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 789              		.loc 1 551 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 0
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI39:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 00AF     		add	r7, sp, #0
 799              	.LCFI40:
 800              		.cfi_def_cfa_register 7
 552:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 553:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 801              		.loc 1 553 0
 802 0004 054A     		ldr	r2, .L65
 803 0006 054B     		ldr	r3, .L65
 804 0008 5B69     		ldr	r3, [r3, #20]
 805 000a 43F00103 		orr	r3, r3, #1
 806 000e 5361     		str	r3, [r2, #20]
ARM GAS  /tmp/cc0mfAYF.s 			page 25


 554:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 555:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;  
 807              		.loc 1 555 0
 808 0010 0023     		movs	r3, #0
 556:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 809              		.loc 1 556 0
 810 0012 1846     		mov	r0, r3
 811 0014 BD46     		mov	sp, r7
 812              	.LCFI41:
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 0016 5DF8047B 		ldr	r7, [sp], #4
 816              	.LCFI42:
 817              		.cfi_restore 7
 818              		.cfi_def_cfa_offset 0
 819 001a 7047     		bx	lr
 820              	.L66:
 821              		.align	2
 822              	.L65:
 823 001c 003C0240 		.word	1073888256
 824              		.cfi_endproc
 825              	.LFE143:
 827              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 828              		.align	2
 829              		.global	HAL_FLASH_OB_Launch
 830              		.thumb
 831              		.thumb_func
 833              	HAL_FLASH_OB_Launch:
 834              	.LFB144:
 557:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 558:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 559:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 560:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 561:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 562:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 563:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 835              		.loc 1 563 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 0
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839 0000 80B5     		push	{r7, lr}
 840              	.LCFI43:
 841              		.cfi_def_cfa_offset 8
 842              		.cfi_offset 7, -8
 843              		.cfi_offset 14, -4
 844 0002 00AF     		add	r7, sp, #0
 845              	.LCFI44:
 846              		.cfi_def_cfa_register 7
 564:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
 565:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTSTRT;
 847              		.loc 1 565 0
 848 0004 064A     		ldr	r2, .L69
 849 0006 064B     		ldr	r3, .L69
 850 0008 5B69     		ldr	r3, [r3, #20]
 851 000a 43F00203 		orr	r3, r3, #2
 852 000e 5361     		str	r3, [r2, #20]
 566:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
ARM GAS  /tmp/cc0mfAYF.s 			page 26


 567:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Wait for last operation to be completed */
 568:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE)); 
 853              		.loc 1 568 0
 854 0010 4CF25030 		movw	r0, #50000
 855 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 856 0018 0346     		mov	r3, r0
 569:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 857              		.loc 1 569 0
 858 001a 1846     		mov	r0, r3
 859 001c 80BD     		pop	{r7, pc}
 860              	.L70:
 861 001e 00BF     		.align	2
 862              	.L69:
 863 0020 003C0240 		.word	1073888256
 864              		.cfi_endproc
 865              	.LFE144:
 867              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 868              		.align	2
 869              		.global	HAL_FLASH_GetError
 870              		.thumb
 871              		.thumb_func
 873              	HAL_FLASH_GetError:
 874              	.LFB145:
 570:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 571:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 572:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 573:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 574:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 575:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions 
 576:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *  @brief   Peripheral Errors functions 
 577:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  *
 578:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @verbatim   
 579:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================
 580:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 581:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****  ===============================================================================  
 582:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     [..]
 583:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 584:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 585:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** @endverbatim
 586:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @{
 587:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 588:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 589:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 590:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 591:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval FLASH_ErrorCode: The returned value can be:
 592:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_ERS: FLASH Erasing Sequence error flag 
 593:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGP: FLASH Programming Parallelism error flag  
 594:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_PGA: FLASH Programming Alignment error flag
 595:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_WRP: FLASH Write protected error flag
 596:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *            @arg FLASH_ERROR_OPERATION: FLASH operation Error flag 
 597:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 598:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 599:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** { 
 875              		.loc 1 599 0
 876              		.cfi_startproc
 877              		@ args = 0, pretend = 0, frame = 0
 878              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  /tmp/cc0mfAYF.s 			page 27


 879              		@ link register save eliminated.
 880 0000 80B4     		push	{r7}
 881              	.LCFI45:
 882              		.cfi_def_cfa_offset 4
 883              		.cfi_offset 7, -4
 884 0002 00AF     		add	r7, sp, #0
 885              	.LCFI46:
 886              		.cfi_def_cfa_register 7
 600:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    return pFlash.ErrorCode;
 887              		.loc 1 600 0
 888 0004 034B     		ldr	r3, .L73
 889 0006 9B69     		ldr	r3, [r3, #24]
 601:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }  
 890              		.loc 1 601 0
 891 0008 1846     		mov	r0, r3
 892 000a BD46     		mov	sp, r7
 893              	.LCFI47:
 894              		.cfi_def_cfa_register 13
 895              		@ sp needed
 896 000c 5DF8047B 		ldr	r7, [sp], #4
 897              	.LCFI48:
 898              		.cfi_restore 7
 899              		.cfi_def_cfa_offset 0
 900 0010 7047     		bx	lr
 901              	.L74:
 902 0012 00BF     		.align	2
 903              	.L73:
 904 0014 00000000 		.word	pFlash
 905              		.cfi_endproc
 906              	.LFE145:
 908              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 909              		.align	2
 910              		.global	FLASH_WaitForLastOperation
 911              		.thumb
 912              		.thumb_func
 914              	FLASH_WaitForLastOperation:
 915              	.LFB146:
 602:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 603:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 604:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @}
 605:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */    
 606:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 607:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 608:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 609:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Timeout: maximum flash operationtimeout
 610:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval HAL Status
 611:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 612:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 613:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** { 
 916              		.loc 1 613 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 16
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              	.LCFI49:
 922              		.cfi_def_cfa_offset 8
 923              		.cfi_offset 7, -8
ARM GAS  /tmp/cc0mfAYF.s 			page 28


 924              		.cfi_offset 14, -4
 925 0002 84B0     		sub	sp, sp, #16
 926              	.LCFI50:
 927              		.cfi_def_cfa_offset 24
 928 0004 00AF     		add	r7, sp, #0
 929              	.LCFI51:
 930              		.cfi_def_cfa_register 7
 931 0006 7860     		str	r0, [r7, #4]
 614:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   uint32_t tickstart = 0;
 932              		.loc 1 614 0
 933 0008 0023     		movs	r3, #0
 934 000a FB60     		str	r3, [r7, #12]
 615:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 616:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Clear Error Code */
 617:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 935              		.loc 1 617 0
 936 000c 1A4B     		ldr	r3, .L82
 937 000e 0022     		movs	r2, #0
 938 0010 9A61     		str	r2, [r3, #24]
 618:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 619:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 620:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 621:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      flag will be set */
 622:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Get tick */
 623:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   tickstart = HAL_GetTick();
 939              		.loc 1 623 0
 940 0012 FFF7FEFF 		bl	HAL_GetTick
 941 0016 F860     		str	r0, [r7, #12]
 624:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY) != RESET) 
 942              		.loc 1 625 0
 943 0018 10E0     		b	.L76
 944              	.L79:
 626:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   { 
 627:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 945              		.loc 1 627 0
 946 001a 7B68     		ldr	r3, [r7, #4]
 947 001c B3F1FF3F 		cmp	r3, #-1
 948 0020 0CD0     		beq	.L76
 628:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     {
 629:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
 949              		.loc 1 629 0
 950 0022 7B68     		ldr	r3, [r7, #4]
 951 0024 002B     		cmp	r3, #0
 952 0026 07D0     		beq	.L77
 953              		.loc 1 629 0 is_stmt 0 discriminator 1
 954 0028 FFF7FEFF 		bl	HAL_GetTick
 955 002c 0246     		mov	r2, r0
 956 002e FB68     		ldr	r3, [r7, #12]
 957 0030 D21A     		subs	r2, r2, r3
 958 0032 7B68     		ldr	r3, [r7, #4]
 959 0034 9A42     		cmp	r2, r3
 960 0036 01D9     		bls	.L76
 961              	.L77:
 630:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       {
 631:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****         return HAL_TIMEOUT;
 962              		.loc 1 631 0 is_stmt 1
ARM GAS  /tmp/cc0mfAYF.s 			page 29


 963 0038 0323     		movs	r3, #3
 964 003a 19E0     		b	.L78
 965              	.L76:
 625:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   { 
 966              		.loc 1 625 0
 967 003c 0F4B     		ldr	r3, .L82+4
 968 003e DB68     		ldr	r3, [r3, #12]
 969 0040 03F48033 		and	r3, r3, #65536
 970 0044 002B     		cmp	r3, #0
 971 0046 E8D1     		bne	.L79
 632:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****       }
 633:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     } 
 634:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 635:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 636:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_ALL_ERRORS) != RESET)
 972              		.loc 1 636 0
 973 0048 0C4B     		ldr	r3, .L82+4
 974 004a DB68     		ldr	r3, [r3, #12]
 975 004c 03F0F203 		and	r3, r3, #242
 976 0050 002B     		cmp	r3, #0
 977 0052 03D0     		beq	.L80
 637:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 638:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /*Save the error code*/
 639:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     FLASH_SetErrorCode();
 978              		.loc 1 639 0
 979 0054 FFF7FEFF 		bl	FLASH_SetErrorCode
 640:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     return HAL_ERROR;
 980              		.loc 1 640 0
 981 0058 0123     		movs	r3, #1
 982 005a 09E0     		b	.L78
 983              	.L80:
 641:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 642:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 643:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 644:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != RESET)
 984              		.loc 1 644 0
 985 005c 074B     		ldr	r3, .L82+4
 986 005e DB68     		ldr	r3, [r3, #12]
 987 0060 03F00103 		and	r3, r3, #1
 988 0064 002B     		cmp	r3, #0
 989 0066 02D0     		beq	.L81
 645:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 646:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 647:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 990              		.loc 1 647 0
 991 0068 044B     		ldr	r3, .L82+4
 992 006a 0122     		movs	r2, #1
 993 006c DA60     		str	r2, [r3, #12]
 994              	.L81:
 648:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 649:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 650:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If there is an error flag set */
 651:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   return HAL_OK;
 995              		.loc 1 651 0
 996 006e 0023     		movs	r3, #0
 997              	.L78:
 652:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
ARM GAS  /tmp/cc0mfAYF.s 			page 30


 653:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }  
 998              		.loc 1 653 0
 999 0070 1846     		mov	r0, r3
 1000 0072 1037     		adds	r7, r7, #16
 1001              	.LCFI52:
 1002              		.cfi_def_cfa_offset 8
 1003 0074 BD46     		mov	sp, r7
 1004              	.LCFI53:
 1005              		.cfi_def_cfa_register 13
 1006              		@ sp needed
 1007 0076 80BD     		pop	{r7, pc}
 1008              	.L83:
 1009              		.align	2
 1010              	.L82:
 1011 0078 00000000 		.word	pFlash
 1012 007c 003C0240 		.word	1073888256
 1013              		.cfi_endproc
 1014              	.LFE146:
 1016              		.section	.text.FLASH_Program_DoubleWord,"ax",%progbits
 1017              		.align	2
 1018              		.thumb
 1019              		.thumb_func
 1021              	FLASH_Program_DoubleWord:
 1022              	.LFB147:
 654:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 655:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 656:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program a double word (64-bit) at a specified address.
 657:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 658:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.
 659:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 660:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 661:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 662:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 663:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 664:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 665:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 666:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 667:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
 668:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1023              		.loc 1 668 0
 1024              		.cfi_startproc
 1025              		@ args = 0, pretend = 0, frame = 16
 1026              		@ frame_needed = 1, uses_anonymous_args = 0
 1027              		@ link register save eliminated.
 1028 0000 80B4     		push	{r7}
 1029              	.LCFI54:
 1030              		.cfi_def_cfa_offset 4
 1031              		.cfi_offset 7, -4
 1032 0002 85B0     		sub	sp, sp, #20
 1033              	.LCFI55:
 1034              		.cfi_def_cfa_offset 24
 1035 0004 00AF     		add	r7, sp, #0
 1036              	.LCFI56:
 1037              		.cfi_def_cfa_register 7
 1038 0006 F860     		str	r0, [r7, #12]
 1039 0008 C7E90023 		strd	r2, [r7]
 669:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
ARM GAS  /tmp/cc0mfAYF.s 			page 31


 670:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 671:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 672:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 673:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1040              		.loc 1 673 0
 1041 000c 0E4A     		ldr	r2, .L85
 1042 000e 0E4B     		ldr	r3, .L85
 1043 0010 1B69     		ldr	r3, [r3, #16]
 1044 0012 23F44073 		bic	r3, r3, #768
 1045 0016 1361     		str	r3, [r2, #16]
 674:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 1046              		.loc 1 674 0
 1047 0018 0B4A     		ldr	r2, .L85
 1048 001a 0B4B     		ldr	r3, .L85
 1049 001c 1B69     		ldr	r3, [r3, #16]
 1050 001e 43F44073 		orr	r3, r3, #768
 1051 0022 1361     		str	r3, [r2, #16]
 675:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1052              		.loc 1 675 0
 1053 0024 084A     		ldr	r2, .L85
 1054 0026 084B     		ldr	r3, .L85
 1055 0028 1B69     		ldr	r3, [r3, #16]
 1056 002a 43F00103 		orr	r3, r3, #1
 1057 002e 1361     		str	r3, [r2, #16]
 676:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 677:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint64_t*)Address = Data;
 1058              		.loc 1 677 0
 1059 0030 F968     		ldr	r1, [r7, #12]
 1060 0032 D7E90023 		ldrd	r2, [r7]
 1061 0036 C1E90023 		strd	r2, [r1]
 1062              	.LBB10:
 1063              	.LBB11:
 1064              		.file 2 "../../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
ARM GAS  /tmp/cc0mfAYF.s 			page 32


  25:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cc0mfAYF.s 			page 33


  82:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
ARM GAS  /tmp/cc0mfAYF.s 			page 34


 139:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
ARM GAS  /tmp/cc0mfAYF.s 			page 35


 196:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
ARM GAS  /tmp/cc0mfAYF.s 			page 36


 253:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/cc0mfAYF.s 			page 37


 310:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  /tmp/cc0mfAYF.s 			page 38


 367:../../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 378:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:../../Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:../../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:../../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:../../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  /tmp/cc0mfAYF.s 			page 39


 424:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:../../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:../../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:../../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:../../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:../../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1065              		.loc 2 429 0
 1066              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1067 003a BFF34F8F 		dsb 0xF
 1068              	@ 0 "" 2
 1069              		.thumb
 1070              	.LBE11:
 1071              	.LBE10:
 678:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 679:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 680:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 681:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 682:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1072              		.loc 1 682 0
 1073 003e 1437     		adds	r7, r7, #20
 1074              	.LCFI57:
 1075              		.cfi_def_cfa_offset 4
 1076 0040 BD46     		mov	sp, r7
 1077              	.LCFI58:
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0042 5DF8047B 		ldr	r7, [sp], #4
 1081              	.LCFI59:
 1082              		.cfi_restore 7
 1083              		.cfi_def_cfa_offset 0
 1084 0046 7047     		bx	lr
 1085              	.L86:
 1086              		.align	2
 1087              	.L85:
 1088 0048 003C0240 		.word	1073888256
 1089              		.cfi_endproc
 1090              	.LFE147:
 1092              		.section	.text.FLASH_Program_Word,"ax",%progbits
 1093              		.align	2
 1094              		.thumb
 1095              		.thumb_func
 1097              	FLASH_Program_Word:
 1098              	.LFB148:
 683:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 684:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 685:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 686:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program word (32-bit) at a specified address.
 687:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 688:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.7V to 3.6V.
 689:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 690:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 691:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 692:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 693:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 694:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 695:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 696:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
ARM GAS  /tmp/cc0mfAYF.s 			page 40


 697:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_Word(uint32_t Address, uint32_t Data)
 698:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1099              		.loc 1 698 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 8
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103              		@ link register save eliminated.
 1104 0000 80B4     		push	{r7}
 1105              	.LCFI60:
 1106              		.cfi_def_cfa_offset 4
 1107              		.cfi_offset 7, -4
 1108 0002 83B0     		sub	sp, sp, #12
 1109              	.LCFI61:
 1110              		.cfi_def_cfa_offset 16
 1111 0004 00AF     		add	r7, sp, #0
 1112              	.LCFI62:
 1113              		.cfi_def_cfa_register 7
 1114 0006 7860     		str	r0, [r7, #4]
 1115 0008 3960     		str	r1, [r7]
 699:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 700:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 701:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 702:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 703:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1116              		.loc 1 703 0
 1117 000a 0E4A     		ldr	r2, .L88
 1118 000c 0D4B     		ldr	r3, .L88
 1119 000e 1B69     		ldr	r3, [r3, #16]
 1120 0010 23F44073 		bic	r3, r3, #768
 1121 0014 1361     		str	r3, [r2, #16]
 704:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_WORD;
 1122              		.loc 1 704 0
 1123 0016 0B4A     		ldr	r2, .L88
 1124 0018 0A4B     		ldr	r3, .L88
 1125 001a 1B69     		ldr	r3, [r3, #16]
 1126 001c 43F40073 		orr	r3, r3, #512
 1127 0020 1361     		str	r3, [r2, #16]
 705:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1128              		.loc 1 705 0
 1129 0022 084A     		ldr	r2, .L88
 1130 0024 074B     		ldr	r3, .L88
 1131 0026 1B69     		ldr	r3, [r3, #16]
 1132 0028 43F00103 		orr	r3, r3, #1
 1133 002c 1361     		str	r3, [r2, #16]
 706:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 707:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint32_t*)Address = Data;
 1134              		.loc 1 707 0
 1135 002e 7B68     		ldr	r3, [r7, #4]
 1136 0030 3A68     		ldr	r2, [r7]
 1137 0032 1A60     		str	r2, [r3]
 1138              	.LBB12:
 1139              	.LBB13:
 1140              		.loc 2 429 0
 1141              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1142 0034 BFF34F8F 		dsb 0xF
 1143              	@ 0 "" 2
 1144              		.thumb
ARM GAS  /tmp/cc0mfAYF.s 			page 41


 1145              	.LBE13:
 1146              	.LBE12:
 708:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 709:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 710:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 711:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 712:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1147              		.loc 1 712 0
 1148 0038 0C37     		adds	r7, r7, #12
 1149              	.LCFI63:
 1150              		.cfi_def_cfa_offset 4
 1151 003a BD46     		mov	sp, r7
 1152              	.LCFI64:
 1153              		.cfi_def_cfa_register 13
 1154              		@ sp needed
 1155 003c 5DF8047B 		ldr	r7, [sp], #4
 1156              	.LCFI65:
 1157              		.cfi_restore 7
 1158              		.cfi_def_cfa_offset 0
 1159 0040 7047     		bx	lr
 1160              	.L89:
 1161 0042 00BF     		.align	2
 1162              	.L88:
 1163 0044 003C0240 		.word	1073888256
 1164              		.cfi_endproc
 1165              	.LFE148:
 1167              		.section	.text.FLASH_Program_HalfWord,"ax",%progbits
 1168              		.align	2
 1169              		.thumb
 1170              		.thumb_func
 1172              	FLASH_Program_HalfWord:
 1173              	.LFB149:
 713:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 714:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 715:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program a half-word (16-bit) at a specified address.
 716:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 717:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.7V to 3.6V.
 718:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 719:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 720:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 721:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 722:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 723:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 724:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 725:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 726:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_HalfWord(uint32_t Address, uint16_t Data)
 727:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1174              		.loc 1 727 0
 1175              		.cfi_startproc
 1176              		@ args = 0, pretend = 0, frame = 8
 1177              		@ frame_needed = 1, uses_anonymous_args = 0
 1178              		@ link register save eliminated.
 1179 0000 80B4     		push	{r7}
 1180              	.LCFI66:
 1181              		.cfi_def_cfa_offset 4
 1182              		.cfi_offset 7, -4
 1183 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/cc0mfAYF.s 			page 42


 1184              	.LCFI67:
 1185              		.cfi_def_cfa_offset 16
 1186 0004 00AF     		add	r7, sp, #0
 1187              	.LCFI68:
 1188              		.cfi_def_cfa_register 7
 1189 0006 7860     		str	r0, [r7, #4]
 1190 0008 0B46     		mov	r3, r1
 1191 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 728:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 729:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 730:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 731:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 732:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1192              		.loc 1 732 0
 1193 000c 0D4A     		ldr	r2, .L91
 1194 000e 0D4B     		ldr	r3, .L91
 1195 0010 1B69     		ldr	r3, [r3, #16]
 1196 0012 23F44073 		bic	r3, r3, #768
 1197 0016 1361     		str	r3, [r2, #16]
 733:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 1198              		.loc 1 733 0
 1199 0018 0A4A     		ldr	r2, .L91
 1200 001a 0A4B     		ldr	r3, .L91
 1201 001c 1B69     		ldr	r3, [r3, #16]
 1202 001e 43F48073 		orr	r3, r3, #256
 1203 0022 1361     		str	r3, [r2, #16]
 734:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1204              		.loc 1 734 0
 1205 0024 074A     		ldr	r2, .L91
 1206 0026 074B     		ldr	r3, .L91
 1207 0028 1B69     		ldr	r3, [r3, #16]
 1208 002a 43F00103 		orr	r3, r3, #1
 1209 002e 1361     		str	r3, [r2, #16]
 735:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 736:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint16_t*)Address = Data;
 1210              		.loc 1 736 0
 1211 0030 7B68     		ldr	r3, [r7, #4]
 1212 0032 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1213 0034 1A80     		strh	r2, [r3]	@ movhi
 1214              	.LBB14:
 1215              	.LBB15:
 1216              		.loc 2 429 0
 1217              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1218 0036 BFF34F8F 		dsb 0xF
 1219              	@ 0 "" 2
 1220              		.thumb
 1221              	.LBE15:
 1222              	.LBE14:
 737:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 738:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 739:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 740:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 741:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 742:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1223              		.loc 1 742 0
 1224 003a 0C37     		adds	r7, r7, #12
 1225              	.LCFI69:
ARM GAS  /tmp/cc0mfAYF.s 			page 43


 1226              		.cfi_def_cfa_offset 4
 1227 003c BD46     		mov	sp, r7
 1228              	.LCFI70:
 1229              		.cfi_def_cfa_register 13
 1230              		@ sp needed
 1231 003e 5DF8047B 		ldr	r7, [sp], #4
 1232              	.LCFI71:
 1233              		.cfi_restore 7
 1234              		.cfi_def_cfa_offset 0
 1235 0042 7047     		bx	lr
 1236              	.L92:
 1237              		.align	2
 1238              	.L91:
 1239 0044 003C0240 		.word	1073888256
 1240              		.cfi_endproc
 1241              	.LFE149:
 1243              		.section	.text.FLASH_Program_Byte,"ax",%progbits
 1244              		.align	2
 1245              		.thumb
 1246              		.thumb_func
 1248              	FLASH_Program_Byte:
 1249              	.LFB150:
 743:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 744:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 745:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Program byte (8-bit) at a specified address.
 746:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   This function must be used when the device voltage range is from
 747:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         2.7V to 3.6V.
 748:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *
 749:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @note   If an erase and a program operations are requested simultaneously,    
 750:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *         the erase operation is performed before the program one.
 751:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *  
 752:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 753:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 754:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 755:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 756:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_Program_Byte(uint32_t Address, uint8_t Data)
 757:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1250              		.loc 1 757 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 8
 1253              		@ frame_needed = 1, uses_anonymous_args = 0
 1254              		@ link register save eliminated.
 1255 0000 80B4     		push	{r7}
 1256              	.LCFI72:
 1257              		.cfi_def_cfa_offset 4
 1258              		.cfi_offset 7, -4
 1259 0002 83B0     		sub	sp, sp, #12
 1260              	.LCFI73:
 1261              		.cfi_def_cfa_offset 16
 1262 0004 00AF     		add	r7, sp, #0
 1263              	.LCFI74:
 1264              		.cfi_def_cfa_register 7
 1265 0006 7860     		str	r0, [r7, #4]
 1266 0008 0B46     		mov	r3, r1
 1267 000a FB70     		strb	r3, [r7, #3]
 758:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Check the parameters */
 759:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
ARM GAS  /tmp/cc0mfAYF.s 			page 44


 760:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 761:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* If the previous operation is completed, proceed to program the new data */
 762:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR &= CR_PSIZE_MASK;
 1268              		.loc 1 762 0
 1269 000c 0C4A     		ldr	r2, .L94
 1270 000e 0C4B     		ldr	r3, .L94
 1271 0010 1B69     		ldr	r3, [r3, #16]
 1272 0012 23F44073 		bic	r3, r3, #768
 1273 0016 1361     		str	r3, [r2, #16]
 763:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_PSIZE_BYTE;
 1274              		.loc 1 763 0
 1275 0018 094A     		ldr	r2, .L94
 1276 001a 094B     		ldr	r3, .L94
 1277 001c 1B69     		ldr	r3, [r3, #16]
 1278 001e 1361     		str	r3, [r2, #16]
 764:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   FLASH->CR |= FLASH_CR_PG;
 1279              		.loc 1 764 0
 1280 0020 074A     		ldr	r2, .L94
 1281 0022 074B     		ldr	r3, .L94
 1282 0024 1B69     		ldr	r3, [r3, #16]
 1283 0026 43F00103 		orr	r3, r3, #1
 1284 002a 1361     		str	r3, [r2, #16]
 765:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 766:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   *(__IO uint8_t*)Address = Data;
 1285              		.loc 1 766 0
 1286 002c 7B68     		ldr	r3, [r7, #4]
 1287 002e FA78     		ldrb	r2, [r7, #3]
 1288 0030 1A70     		strb	r2, [r3]
 1289              	.LBB16:
 1290              	.LBB17:
 1291              		.loc 2 429 0
 1292              	@ 429 "../../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1293 0032 BFF34F8F 		dsb 0xF
 1294              	@ 0 "" 2
 1295              		.thumb
 1296              	.LBE17:
 1297              	.LBE16:
 767:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 768:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Data synchronous Barrier (DSB) Just after the write operation
 769:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****      This will force the CPU to respect the sequence of instruction (no optimization).*/
 770:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __DSB();
 771:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1298              		.loc 1 771 0
 1299 0036 0C37     		adds	r7, r7, #12
 1300              	.LCFI75:
 1301              		.cfi_def_cfa_offset 4
 1302 0038 BD46     		mov	sp, r7
 1303              	.LCFI76:
 1304              		.cfi_def_cfa_register 13
 1305              		@ sp needed
 1306 003a 5DF8047B 		ldr	r7, [sp], #4
 1307              	.LCFI77:
 1308              		.cfi_restore 7
 1309              		.cfi_def_cfa_offset 0
 1310 003e 7047     		bx	lr
 1311              	.L95:
 1312              		.align	2
ARM GAS  /tmp/cc0mfAYF.s 			page 45


 1313              	.L94:
 1314 0040 003C0240 		.word	1073888256
 1315              		.cfi_endproc
 1316              	.LFE150:
 1318              		.section	.text.FLASH_SetErrorCode,"ax",%progbits
 1319              		.align	2
 1320              		.thumb
 1321              		.thumb_func
 1323              	FLASH_SetErrorCode:
 1324              	.LFB151:
 772:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** 
 773:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** /**
 774:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @brief  Set the specific FLASH error flag.
 775:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   * @retval None
 776:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   */
 777:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** static void FLASH_SetErrorCode(void)
 778:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** {
 1325              		.loc 1 778 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330 0000 80B4     		push	{r7}
 1331              	.LCFI78:
 1332              		.cfi_def_cfa_offset 4
 1333              		.cfi_offset 7, -4
 1334 0002 00AF     		add	r7, sp, #0
 1335              	.LCFI79:
 1336              		.cfi_def_cfa_register 7
 779:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_OPERR) != RESET)
 1337              		.loc 1 779 0
 1338 0004 214B     		ldr	r3, .L102
 1339 0006 DB68     		ldr	r3, [r3, #12]
 1340 0008 03F00203 		and	r3, r3, #2
 1341 000c 002B     		cmp	r3, #0
 1342 000e 05D0     		beq	.L97
 780:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 781:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_OPERATION;
 1343              		.loc 1 781 0
 1344 0010 1F4B     		ldr	r3, .L102+4
 1345 0012 9B69     		ldr	r3, [r3, #24]
 1346 0014 43F02003 		orr	r3, r3, #32
 1347 0018 1D4A     		ldr	r2, .L102+4
 1348 001a 9361     		str	r3, [r2, #24]
 1349              	.L97:
 782:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 783:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 784:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_WRPERR) != RESET)
 1350              		.loc 1 784 0
 1351 001c 1B4B     		ldr	r3, .L102
 1352 001e DB68     		ldr	r3, [r3, #12]
 1353 0020 03F01003 		and	r3, r3, #16
 1354 0024 002B     		cmp	r3, #0
 1355 0026 05D0     		beq	.L98
 785:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 786:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_WRP;
 1356              		.loc 1 786 0
ARM GAS  /tmp/cc0mfAYF.s 			page 46


 1357 0028 194B     		ldr	r3, .L102+4
 1358 002a 9B69     		ldr	r3, [r3, #24]
 1359 002c 43F01003 		orr	r3, r3, #16
 1360 0030 174A     		ldr	r2, .L102+4
 1361 0032 9361     		str	r3, [r2, #24]
 1362              	.L98:
 787:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 788:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 789:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGAERR) != RESET)
 1363              		.loc 1 789 0
 1364 0034 154B     		ldr	r3, .L102
 1365 0036 DB68     		ldr	r3, [r3, #12]
 1366 0038 03F02003 		and	r3, r3, #32
 1367 003c 002B     		cmp	r3, #0
 1368 003e 05D0     		beq	.L99
 790:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 791:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****    pFlash.ErrorCode |= HAL_FLASH_ERROR_PGA;
 1369              		.loc 1 791 0
 1370 0040 134B     		ldr	r3, .L102+4
 1371 0042 9B69     		ldr	r3, [r3, #24]
 1372 0044 43F00803 		orr	r3, r3, #8
 1373 0048 114A     		ldr	r2, .L102+4
 1374 004a 9361     		str	r3, [r2, #24]
 1375              	.L99:
 792:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 793:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 794:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_PGPERR) != RESET)
 1376              		.loc 1 794 0
 1377 004c 0F4B     		ldr	r3, .L102
 1378 004e DB68     		ldr	r3, [r3, #12]
 1379 0050 03F04003 		and	r3, r3, #64
 1380 0054 002B     		cmp	r3, #0
 1381 0056 05D0     		beq	.L100
 795:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 796:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_PGP;
 1382              		.loc 1 796 0
 1383 0058 0D4B     		ldr	r3, .L102+4
 1384 005a 9B69     		ldr	r3, [r3, #24]
 1385 005c 43F00403 		orr	r3, r3, #4
 1386 0060 0B4A     		ldr	r2, .L102+4
 1387 0062 9361     		str	r3, [r2, #24]
 1388              	.L100:
 797:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 798:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 799:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_ERSERR) != RESET)
 1389              		.loc 1 799 0
 1390 0064 094B     		ldr	r3, .L102
 1391 0066 DB68     		ldr	r3, [r3, #12]
 1392 0068 03F08003 		and	r3, r3, #128
 1393 006c 002B     		cmp	r3, #0
 1394 006e 05D0     		beq	.L101
 800:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   {
 801:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****     pFlash.ErrorCode |= HAL_FLASH_ERROR_ERS;
 1395              		.loc 1 801 0
 1396 0070 074B     		ldr	r3, .L102+4
 1397 0072 9B69     		ldr	r3, [r3, #24]
 1398 0074 43F00203 		orr	r3, r3, #2
ARM GAS  /tmp/cc0mfAYF.s 			page 47


 1399 0078 054A     		ldr	r2, .L102+4
 1400 007a 9361     		str	r3, [r2, #24]
 1401              	.L101:
 802:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   }
 803:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   
 804:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   /* Clear error programming flags */
 805:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c ****   __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_ALL_ERRORS);
 1402              		.loc 1 805 0
 1403 007c 034B     		ldr	r3, .L102
 1404 007e F222     		movs	r2, #242
 1405 0080 DA60     		str	r2, [r3, #12]
 806:../../Drivers/STM32F7xx_HAL_Driver/Src/stm32f7xx_hal_flash.c **** }
 1406              		.loc 1 806 0
 1407 0082 BD46     		mov	sp, r7
 1408              	.LCFI80:
 1409              		.cfi_def_cfa_register 13
 1410              		@ sp needed
 1411 0084 5DF8047B 		ldr	r7, [sp], #4
 1412              	.LCFI81:
 1413              		.cfi_restore 7
 1414              		.cfi_def_cfa_offset 0
 1415 0088 7047     		bx	lr
 1416              	.L103:
 1417 008a 00BF     		.align	2
 1418              	.L102:
 1419 008c 003C0240 		.word	1073888256
 1420 0090 00000000 		.word	pFlash
 1421              		.cfi_endproc
 1422              	.LFE151:
 1424              		.text
 1425              	.Letext0:
 1426              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 1427              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 1428              		.file 5 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f769xx.h"
 1429              		.file 6 "../../Drivers/CMSIS/Device/ST/STM32F7xx/Include/stm32f7xx.h"
 1430              		.file 7 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_def.h"
 1431              		.file 8 "../../Drivers/STM32F7xx_HAL_Driver/Inc/stm32f7xx_hal_flash.h"
 1432              		.file 9 "../../Drivers/CMSIS/Include/core_cm7.h"
ARM GAS  /tmp/cc0mfAYF.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f7xx_hal_flash.c
                            *COM*:000000000000001c pFlash
     /tmp/cc0mfAYF.s:22     .text.HAL_FLASH_Program:0000000000000000 $t
     /tmp/cc0mfAYF.s:27     .text.HAL_FLASH_Program:0000000000000000 HAL_FLASH_Program
     /tmp/cc0mfAYF.s:914    .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/cc0mfAYF.s:81     .text.HAL_FLASH_Program:0000000000000044 $d
     /tmp/cc0mfAYF.s:85     .text.HAL_FLASH_Program:0000000000000054 $t
     /tmp/cc0mfAYF.s:1248   .text.FLASH_Program_Byte:0000000000000000 FLASH_Program_Byte
     /tmp/cc0mfAYF.s:1172   .text.FLASH_Program_HalfWord:0000000000000000 FLASH_Program_HalfWord
     /tmp/cc0mfAYF.s:1097   .text.FLASH_Program_Word:0000000000000000 FLASH_Program_Word
     /tmp/cc0mfAYF.s:1021   .text.FLASH_Program_DoubleWord:0000000000000000 FLASH_Program_DoubleWord
     /tmp/cc0mfAYF.s:153    .text.HAL_FLASH_Program:00000000000000b0 $d
     /tmp/cc0mfAYF.s:159    .text.HAL_FLASH_Program_IT:0000000000000000 $t
     /tmp/cc0mfAYF.s:164    .text.HAL_FLASH_Program_IT:0000000000000000 HAL_FLASH_Program_IT
     /tmp/cc0mfAYF.s:232    .text.HAL_FLASH_Program_IT:000000000000005c $d
     /tmp/cc0mfAYF.s:236    .text.HAL_FLASH_Program_IT:000000000000006c $t
     /tmp/cc0mfAYF.s:288    .text.HAL_FLASH_Program_IT:00000000000000a8 $d
     /tmp/cc0mfAYF.s:294    .text.HAL_FLASH_IRQHandler:0000000000000000 $t
     /tmp/cc0mfAYF.s:299    .text.HAL_FLASH_IRQHandler:0000000000000000 HAL_FLASH_IRQHandler
     /tmp/cc0mfAYF.s:540    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 HAL_FLASH_EndOfOperationCallback
     /tmp/cc0mfAYF.s:1323   .text.FLASH_SetErrorCode:0000000000000000 FLASH_SetErrorCode
     /tmp/cc0mfAYF.s:580    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 HAL_FLASH_OperationErrorCallback
     /tmp/cc0mfAYF.s:528    .text.HAL_FLASH_IRQHandler:0000000000000150 $d
     /tmp/cc0mfAYF.s:535    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 $t
     /tmp/cc0mfAYF.s:575    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 $t
     /tmp/cc0mfAYF.s:615    .text.HAL_FLASH_Unlock:0000000000000000 $t
     /tmp/cc0mfAYF.s:620    .text.HAL_FLASH_Unlock:0000000000000000 HAL_FLASH_Unlock
     /tmp/cc0mfAYF.s:668    .text.HAL_FLASH_Unlock:0000000000000028 $d
     /tmp/cc0mfAYF.s:675    .text.HAL_FLASH_Lock:0000000000000000 $t
     /tmp/cc0mfAYF.s:680    .text.HAL_FLASH_Lock:0000000000000000 HAL_FLASH_Lock
     /tmp/cc0mfAYF.s:716    .text.HAL_FLASH_Lock:000000000000001c $d
     /tmp/cc0mfAYF.s:721    .text.HAL_FLASH_OB_Unlock:0000000000000000 $t
     /tmp/cc0mfAYF.s:726    .text.HAL_FLASH_OB_Unlock:0000000000000000 HAL_FLASH_OB_Unlock
     /tmp/cc0mfAYF.s:775    .text.HAL_FLASH_OB_Unlock:000000000000002c $d
     /tmp/cc0mfAYF.s:782    .text.HAL_FLASH_OB_Lock:0000000000000000 $t
     /tmp/cc0mfAYF.s:787    .text.HAL_FLASH_OB_Lock:0000000000000000 HAL_FLASH_OB_Lock
     /tmp/cc0mfAYF.s:823    .text.HAL_FLASH_OB_Lock:000000000000001c $d
     /tmp/cc0mfAYF.s:828    .text.HAL_FLASH_OB_Launch:0000000000000000 $t
     /tmp/cc0mfAYF.s:833    .text.HAL_FLASH_OB_Launch:0000000000000000 HAL_FLASH_OB_Launch
     /tmp/cc0mfAYF.s:863    .text.HAL_FLASH_OB_Launch:0000000000000020 $d
     /tmp/cc0mfAYF.s:868    .text.HAL_FLASH_GetError:0000000000000000 $t
     /tmp/cc0mfAYF.s:873    .text.HAL_FLASH_GetError:0000000000000000 HAL_FLASH_GetError
     /tmp/cc0mfAYF.s:904    .text.HAL_FLASH_GetError:0000000000000014 $d
     /tmp/cc0mfAYF.s:909    .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/cc0mfAYF.s:1011   .text.FLASH_WaitForLastOperation:0000000000000078 $d
     /tmp/cc0mfAYF.s:1017   .text.FLASH_Program_DoubleWord:0000000000000000 $t
     /tmp/cc0mfAYF.s:1088   .text.FLASH_Program_DoubleWord:0000000000000048 $d
     /tmp/cc0mfAYF.s:1093   .text.FLASH_Program_Word:0000000000000000 $t
     /tmp/cc0mfAYF.s:1163   .text.FLASH_Program_Word:0000000000000044 $d
     /tmp/cc0mfAYF.s:1168   .text.FLASH_Program_HalfWord:0000000000000000 $t
     /tmp/cc0mfAYF.s:1239   .text.FLASH_Program_HalfWord:0000000000000044 $d
     /tmp/cc0mfAYF.s:1244   .text.FLASH_Program_Byte:0000000000000000 $t
     /tmp/cc0mfAYF.s:1314   .text.FLASH_Program_Byte:0000000000000040 $d
     /tmp/cc0mfAYF.s:1319   .text.FLASH_SetErrorCode:0000000000000000 $t
     /tmp/cc0mfAYF.s:1419   .text.FLASH_SetErrorCode:000000000000008c $d
                     .debug_frame:0000000000000010 $d
ARM GAS  /tmp/cc0mfAYF.s 			page 49



UNDEFINED SYMBOLS
FLASH_Erase_Sector
HAL_GetTick
